// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.6
// source: wallet/service/v1/wallet_event.proto

package v1

import (
	common "github.com/infigaming-com/meepo-api/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SubscriptionId string                 `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	EventData      []byte                 `protobuf:"bytes,2,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EventRequest) Reset() {
	*x = EventRequest{}
	mi := &file_wallet_service_v1_wallet_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRequest) ProtoMessage() {}

func (x *EventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRequest.ProtoReflect.Descriptor instead.
func (*EventRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_event_proto_rawDescGZIP(), []int{0}
}

func (x *EventRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *EventRequest) GetEventData() []byte {
	if x != nil {
		return x.EventData
	}
	return nil
}

type EventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventResponse) Reset() {
	*x = EventResponse{}
	mi := &file_wallet_service_v1_wallet_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResponse) ProtoMessage() {}

func (x *EventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResponse.ProtoReflect.Descriptor instead.
func (*EventResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_event_proto_rawDescGZIP(), []int{1}
}

type OperatorBalanceUpdateEvent struct {
	state              protoimpl.MessageState  `protogen:"open.v1"`
	TransactionId      int64                   `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	TransactionType    string                  `protobuf:"bytes,2,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	RealOperatorId     int64                   `protobuf:"varint,3,opt,name=real_operator_id,json=realOperatorId,proto3" json:"real_operator_id,omitempty"`
	OperatorContext    *common.OperatorContext `protobuf:"bytes,4,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	OperatorType       string                  `protobuf:"bytes,5,opt,name=operator_type,json=operatorType,proto3" json:"operator_type,omitempty"`
	SettlementCurrency string                  `protobuf:"bytes,6,opt,name=settlement_currency,json=settlementCurrency,proto3" json:"settlement_currency,omitempty"`
	BeforeBalance      string                  `protobuf:"bytes,7,opt,name=before_balance,json=beforeBalance,proto3" json:"before_balance,omitempty"`
	AfterBalance       string                  `protobuf:"bytes,8,opt,name=after_balance,json=afterBalance,proto3" json:"after_balance,omitempty"`
	Amount             string                  `protobuf:"bytes,9,opt,name=amount,proto3" json:"amount,omitempty"`
	CreatedAt          int64                   `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *OperatorBalanceUpdateEvent) Reset() {
	*x = OperatorBalanceUpdateEvent{}
	mi := &file_wallet_service_v1_wallet_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorBalanceUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorBalanceUpdateEvent) ProtoMessage() {}

func (x *OperatorBalanceUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorBalanceUpdateEvent.ProtoReflect.Descriptor instead.
func (*OperatorBalanceUpdateEvent) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_event_proto_rawDescGZIP(), []int{2}
}

func (x *OperatorBalanceUpdateEvent) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *OperatorBalanceUpdateEvent) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *OperatorBalanceUpdateEvent) GetRealOperatorId() int64 {
	if x != nil {
		return x.RealOperatorId
	}
	return 0
}

func (x *OperatorBalanceUpdateEvent) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *OperatorBalanceUpdateEvent) GetOperatorType() string {
	if x != nil {
		return x.OperatorType
	}
	return ""
}

func (x *OperatorBalanceUpdateEvent) GetSettlementCurrency() string {
	if x != nil {
		return x.SettlementCurrency
	}
	return ""
}

func (x *OperatorBalanceUpdateEvent) GetBeforeBalance() string {
	if x != nil {
		return x.BeforeBalance
	}
	return ""
}

func (x *OperatorBalanceUpdateEvent) GetAfterBalance() string {
	if x != nil {
		return x.AfterBalance
	}
	return ""
}

func (x *OperatorBalanceUpdateEvent) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *OperatorBalanceUpdateEvent) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

var File_wallet_service_v1_wallet_event_proto protoreflect.FileDescriptor

const file_wallet_service_v1_wallet_event_proto_rawDesc = "" +
	"\n" +
	"$wallet/service/v1/wallet_event.proto\x12\x15api.wallet.service.v1\x1a\x13common/common.proto\"V\n" +
	"\fEventRequest\x12'\n" +
	"\x0fsubscription_id\x18\x01 \x01(\tR\x0esubscriptionId\x12\x1d\n" +
	"\n" +
	"event_data\x18\x02 \x01(\fR\teventData\"\x0f\n" +
	"\rEventResponse\"\xb9\x03\n" +
	"\x1aOperatorBalanceUpdateEvent\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\x12)\n" +
	"\x10transaction_type\x18\x02 \x01(\tR\x0ftransactionType\x12(\n" +
	"\x10real_operator_id\x18\x03 \x01(\x03R\x0erealOperatorId\x12F\n" +
	"\x10operator_context\x18\x04 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12#\n" +
	"\roperator_type\x18\x05 \x01(\tR\foperatorType\x12/\n" +
	"\x13settlement_currency\x18\x06 \x01(\tR\x12settlementCurrency\x12%\n" +
	"\x0ebefore_balance\x18\a \x01(\tR\rbeforeBalance\x12#\n" +
	"\rafter_balance\x18\b \x01(\tR\fafterBalance\x12\x16\n" +
	"\x06amount\x18\t \x01(\tR\x06amount\x12\x1d\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\x03R\tcreatedAt2c\n" +
	"\vWalletEvent\x12T\n" +
	"\x05Event\x12#.api.wallet.service.v1.EventRequest\x1a$.api.wallet.service.v1.EventResponse\"\x00BS\n" +
	"\x15api.wallet.service.v1P\x01Z8github.com/infigaming-com/meepo-api/wallet/service/v1;v1b\x06proto3"

var (
	file_wallet_service_v1_wallet_event_proto_rawDescOnce sync.Once
	file_wallet_service_v1_wallet_event_proto_rawDescData []byte
)

func file_wallet_service_v1_wallet_event_proto_rawDescGZIP() []byte {
	file_wallet_service_v1_wallet_event_proto_rawDescOnce.Do(func() {
		file_wallet_service_v1_wallet_event_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wallet_service_v1_wallet_event_proto_rawDesc), len(file_wallet_service_v1_wallet_event_proto_rawDesc)))
	})
	return file_wallet_service_v1_wallet_event_proto_rawDescData
}

var file_wallet_service_v1_wallet_event_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_wallet_service_v1_wallet_event_proto_goTypes = []any{
	(*EventRequest)(nil),               // 0: api.wallet.service.v1.EventRequest
	(*EventResponse)(nil),              // 1: api.wallet.service.v1.EventResponse
	(*OperatorBalanceUpdateEvent)(nil), // 2: api.wallet.service.v1.OperatorBalanceUpdateEvent
	(*common.OperatorContext)(nil),     // 3: api.common.OperatorContext
}
var file_wallet_service_v1_wallet_event_proto_depIdxs = []int32{
	3, // 0: api.wallet.service.v1.OperatorBalanceUpdateEvent.operator_context:type_name -> api.common.OperatorContext
	0, // 1: api.wallet.service.v1.WalletEvent.Event:input_type -> api.wallet.service.v1.EventRequest
	1, // 2: api.wallet.service.v1.WalletEvent.Event:output_type -> api.wallet.service.v1.EventResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_wallet_service_v1_wallet_event_proto_init() }
func file_wallet_service_v1_wallet_event_proto_init() {
	if File_wallet_service_v1_wallet_event_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wallet_service_v1_wallet_event_proto_rawDesc), len(file_wallet_service_v1_wallet_event_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wallet_service_v1_wallet_event_proto_goTypes,
		DependencyIndexes: file_wallet_service_v1_wallet_event_proto_depIdxs,
		MessageInfos:      file_wallet_service_v1_wallet_event_proto_msgTypes,
	}.Build()
	File_wallet_service_v1_wallet_event_proto = out.File
	file_wallet_service_v1_wallet_event_proto_goTypes = nil
	file_wallet_service_v1_wallet_event_proto_depIdxs = nil
}
