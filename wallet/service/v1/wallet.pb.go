// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.6
// source: wallet/service/v1/wallet.proto

package v1

import (
	common "github.com/infigaming-com/meepo-api/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserBalancesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalancesRequest) Reset() {
	*x = GetUserBalancesRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalancesRequest) ProtoMessage() {}

func (x *GetUserBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalancesRequest.ProtoReflect.Descriptor instead.
func (*GetUserBalancesRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserBalancesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserBalancesResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Balances      []*GetUserBalancesResponse_Balance `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalancesResponse) Reset() {
	*x = GetUserBalancesResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalancesResponse) ProtoMessage() {}

func (x *GetUserBalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalancesResponse.ProtoReflect.Descriptor instead.
func (*GetUserBalancesResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserBalancesResponse) GetBalances() []*GetUserBalancesResponse_Balance {
	if x != nil {
		return x.Balances
	}
	return nil
}

type GetUserBalanceRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	UserId   int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	// optional target currency
	SettlementCurrency string `protobuf:"bytes,3,opt,name=settlement_currency,json=settlementCurrency,proto3" json:"settlement_currency,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetUserBalanceRequest) Reset() {
	*x = GetUserBalanceRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceRequest) ProtoMessage() {}

func (x *GetUserBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetUserBalanceRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserBalanceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetUserBalanceRequest) GetSettlementCurrency() string {
	if x != nil {
		return x.SettlementCurrency
	}
	return ""
}

type GetUserBalanceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// optional exchange rate between currency and target currency
	ExchangeRate  string `protobuf:"bytes,1,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`
	Cash          string `protobuf:"bytes,2,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorBonus string `protobuf:"bytes,3,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	ProviderBonus string `protobuf:"bytes,4,opt,name=provider_bonus,json=providerBonus,proto3" json:"provider_bonus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalanceResponse) Reset() {
	*x = GetUserBalanceResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceResponse) ProtoMessage() {}

func (x *GetUserBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetUserBalanceResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserBalanceResponse) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *GetUserBalanceResponse) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GetUserBalanceResponse) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

func (x *GetUserBalanceResponse) GetProviderBonus() string {
	if x != nil {
		return x.ProviderBonus
	}
	return ""
}

type CreditRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UserId            int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency          string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	ReportingCurrency string                 `protobuf:"bytes,3,opt,name=reporting_currency,json=reportingCurrency,proto3" json:"reporting_currency,omitempty"`
	// Valid credit transaction types:
	//   - "payment_deposit"    - Payment deposit transaction
	TransactionType string                  `protobuf:"bytes,4,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId   int64                   `protobuf:"varint,5,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash            string                  `protobuf:"bytes,6,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,7,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreditRequest) Reset() {
	*x = CreditRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditRequest) ProtoMessage() {}

func (x *CreditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditRequest.ProtoReflect.Descriptor instead.
func (*CreditRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *CreditRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreditRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreditRequest) GetReportingCurrency() string {
	if x != nil {
		return x.ReportingCurrency
	}
	return ""
}

func (x *CreditRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *CreditRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *CreditRequest) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *CreditRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type CreditResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditResponse) Reset() {
	*x = CreditResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditResponse) ProtoMessage() {}

func (x *CreditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditResponse.ProtoReflect.Descriptor instead.
func (*CreditResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *CreditResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

type DebitRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UserId            int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency          string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	ReportingCurrency string                 `protobuf:"bytes,3,opt,name=reporting_currency,json=reportingCurrency,proto3" json:"reporting_currency,omitempty"`
	// Valid debit transaction types:
	//   - "payment_withdraw"   - Payment withdraw transaction
	TransactionType string                  `protobuf:"bytes,4,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId   int64                   `protobuf:"varint,5,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash            string                  `protobuf:"bytes,6,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,7,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DebitRequest) Reset() {
	*x = DebitRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitRequest) ProtoMessage() {}

func (x *DebitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitRequest.ProtoReflect.Descriptor instead.
func (*DebitRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{6}
}

func (x *DebitRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DebitRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *DebitRequest) GetReportingCurrency() string {
	if x != nil {
		return x.ReportingCurrency
	}
	return ""
}

func (x *DebitRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *DebitRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *DebitRequest) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *DebitRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type DebitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitResponse) Reset() {
	*x = DebitResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitResponse) ProtoMessage() {}

func (x *DebitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitResponse.ProtoReflect.Descriptor instead.
func (*DebitResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *DebitResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

type GameDebitRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UserId             int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency           string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	SettlementCurrency string                 `protobuf:"bytes,3,opt,name=settlement_currency,json=settlementCurrency,proto3" json:"settlement_currency,omitempty"`
	ReportingCurrency  string                 `protobuf:"bytes,4,opt,name=reporting_currency,json=reportingCurrency,proto3" json:"reporting_currency,omitempty"`
	ExchangeRate       string                 `protobuf:"bytes,5,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`
	// Valid game debit transaction types:
	//   - "game_bet"          - Game bet transaction
	TransactionType string                  `protobuf:"bytes,6,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId   int64                   `protobuf:"varint,7,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Amount          string                  `protobuf:"bytes,8,opt,name=amount,proto3" json:"amount,omitempty"`
	Turnover        string                  `protobuf:"bytes,9,opt,name=turnover,proto3" json:"turnover,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,10,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	AllowOverdraft  *bool                   `protobuf:"varint,11,opt,name=allow_overdraft,json=allowOverdraft,proto3,oneof" json:"allow_overdraft,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GameDebitRequest) Reset() {
	*x = GameDebitRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameDebitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDebitRequest) ProtoMessage() {}

func (x *GameDebitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDebitRequest.ProtoReflect.Descriptor instead.
func (*GameDebitRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *GameDebitRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GameDebitRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GameDebitRequest) GetSettlementCurrency() string {
	if x != nil {
		return x.SettlementCurrency
	}
	return ""
}

func (x *GameDebitRequest) GetReportingCurrency() string {
	if x != nil {
		return x.ReportingCurrency
	}
	return ""
}

func (x *GameDebitRequest) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *GameDebitRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *GameDebitRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *GameDebitRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *GameDebitRequest) GetTurnover() string {
	if x != nil {
		return x.Turnover
	}
	return ""
}

func (x *GameDebitRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *GameDebitRequest) GetAllowOverdraft() bool {
	if x != nil && x.AllowOverdraft != nil {
		return *x.AllowOverdraft
	}
	return false
}

type GameDebitResponse struct {
	state                                protoimpl.MessageState `protogen:"open.v1"`
	TransactionId                        int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ExchangeRate                         string                 `protobuf:"bytes,2,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`
	Cash                                 string                 `protobuf:"bytes,3,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorBonus                        string                 `protobuf:"bytes,4,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	ProviderBonus                        string                 `protobuf:"bytes,5,opt,name=provider_bonus,json=providerBonus,proto3" json:"provider_bonus,omitempty"`
	CashAmount                           string                 `protobuf:"bytes,6,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	OperatorBonusAmount                  string                 `protobuf:"bytes,7,opt,name=operator_bonus_amount,json=operatorBonusAmount,proto3" json:"operator_bonus_amount,omitempty"`
	ProviderBonusAmount                  string                 `protobuf:"bytes,8,opt,name=provider_bonus_amount,json=providerBonusAmount,proto3" json:"provider_bonus_amount,omitempty"`
	CashAmountUsd                        string                 `protobuf:"bytes,9,opt,name=cash_amount_usd,json=cashAmountUsd,proto3" json:"cash_amount_usd,omitempty"`
	OperatorBonusAmountUsd               string                 `protobuf:"bytes,10,opt,name=operator_bonus_amount_usd,json=operatorBonusAmountUsd,proto3" json:"operator_bonus_amount_usd,omitempty"`
	ProviderBonusAmountUsd               string                 `protobuf:"bytes,11,opt,name=provider_bonus_amount_usd,json=providerBonusAmountUsd,proto3" json:"provider_bonus_amount_usd,omitempty"`
	CashAmountReportingCurrency          string                 `protobuf:"bytes,12,opt,name=cash_amount_reporting_currency,json=cashAmountReportingCurrency,proto3" json:"cash_amount_reporting_currency,omitempty"`
	OperatorBonusAmountReportingCurrency string                 `protobuf:"bytes,13,opt,name=operator_bonus_amount_reporting_currency,json=operatorBonusAmountReportingCurrency,proto3" json:"operator_bonus_amount_reporting_currency,omitempty"`
	ProviderBonusAmountReportingCurrency string                 `protobuf:"bytes,14,opt,name=provider_bonus_amount_reporting_currency,json=providerBonusAmountReportingCurrency,proto3" json:"provider_bonus_amount_reporting_currency,omitempty"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *GameDebitResponse) Reset() {
	*x = GameDebitResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameDebitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDebitResponse) ProtoMessage() {}

func (x *GameDebitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDebitResponse.ProtoReflect.Descriptor instead.
func (*GameDebitResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *GameDebitResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *GameDebitResponse) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *GameDebitResponse) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GameDebitResponse) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

func (x *GameDebitResponse) GetProviderBonus() string {
	if x != nil {
		return x.ProviderBonus
	}
	return ""
}

func (x *GameDebitResponse) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

func (x *GameDebitResponse) GetOperatorBonusAmount() string {
	if x != nil {
		return x.OperatorBonusAmount
	}
	return ""
}

func (x *GameDebitResponse) GetProviderBonusAmount() string {
	if x != nil {
		return x.ProviderBonusAmount
	}
	return ""
}

func (x *GameDebitResponse) GetCashAmountUsd() string {
	if x != nil {
		return x.CashAmountUsd
	}
	return ""
}

func (x *GameDebitResponse) GetOperatorBonusAmountUsd() string {
	if x != nil {
		return x.OperatorBonusAmountUsd
	}
	return ""
}

func (x *GameDebitResponse) GetProviderBonusAmountUsd() string {
	if x != nil {
		return x.ProviderBonusAmountUsd
	}
	return ""
}

func (x *GameDebitResponse) GetCashAmountReportingCurrency() string {
	if x != nil {
		return x.CashAmountReportingCurrency
	}
	return ""
}

func (x *GameDebitResponse) GetOperatorBonusAmountReportingCurrency() string {
	if x != nil {
		return x.OperatorBonusAmountReportingCurrency
	}
	return ""
}

func (x *GameDebitResponse) GetProviderBonusAmountReportingCurrency() string {
	if x != nil {
		return x.ProviderBonusAmountReportingCurrency
	}
	return ""
}

type GameCreditRequest struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	UserId                int64                   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency              string                  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	SettlementCurrency    string                  `protobuf:"bytes,3,opt,name=settlement_currency,json=settlementCurrency,proto3" json:"settlement_currency,omitempty"`
	ReportingCurrency     string                  `protobuf:"bytes,4,opt,name=reporting_currency,json=reportingCurrency,proto3" json:"reporting_currency,omitempty"`
	ExchangeRate          string                  `protobuf:"bytes,5,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`
	TransactionType       string                  `protobuf:"bytes,6,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId         int64                   `protobuf:"varint,7,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	OriginalTransactionId int64                   `protobuf:"varint,8,opt,name=original_transaction_id,json=originalTransactionId,proto3" json:"original_transaction_id,omitempty"`
	Amount                string                  `protobuf:"bytes,9,opt,name=amount,proto3" json:"amount,omitempty"`
	OperatorContext       *common.OperatorContext `protobuf:"bytes,10,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GameCreditRequest) Reset() {
	*x = GameCreditRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameCreditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCreditRequest) ProtoMessage() {}

func (x *GameCreditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCreditRequest.ProtoReflect.Descriptor instead.
func (*GameCreditRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{10}
}

func (x *GameCreditRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GameCreditRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GameCreditRequest) GetSettlementCurrency() string {
	if x != nil {
		return x.SettlementCurrency
	}
	return ""
}

func (x *GameCreditRequest) GetReportingCurrency() string {
	if x != nil {
		return x.ReportingCurrency
	}
	return ""
}

func (x *GameCreditRequest) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *GameCreditRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *GameCreditRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *GameCreditRequest) GetOriginalTransactionId() int64 {
	if x != nil {
		return x.OriginalTransactionId
	}
	return 0
}

func (x *GameCreditRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *GameCreditRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type GameCreditResponse struct {
	state                                protoimpl.MessageState `protogen:"open.v1"`
	TransactionId                        int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ExchangeRate                         string                 `protobuf:"bytes,2,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`
	Cash                                 string                 `protobuf:"bytes,3,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorBonus                        string                 `protobuf:"bytes,4,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	ProviderBonus                        string                 `protobuf:"bytes,5,opt,name=provider_bonus,json=providerBonus,proto3" json:"provider_bonus,omitempty"`
	CashAmount                           string                 `protobuf:"bytes,6,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	OperatorBonusAmount                  string                 `protobuf:"bytes,7,opt,name=operator_bonus_amount,json=operatorBonusAmount,proto3" json:"operator_bonus_amount,omitempty"`
	ProviderBonusAmount                  string                 `protobuf:"bytes,8,opt,name=provider_bonus_amount,json=providerBonusAmount,proto3" json:"provider_bonus_amount,omitempty"`
	CashAmountUsd                        string                 `protobuf:"bytes,9,opt,name=cash_amount_usd,json=cashAmountUsd,proto3" json:"cash_amount_usd,omitempty"`
	OperatorBonusAmountUsd               string                 `protobuf:"bytes,10,opt,name=operator_bonus_amount_usd,json=operatorBonusAmountUsd,proto3" json:"operator_bonus_amount_usd,omitempty"`
	ProviderBonusAmountUsd               string                 `protobuf:"bytes,11,opt,name=provider_bonus_amount_usd,json=providerBonusAmountUsd,proto3" json:"provider_bonus_amount_usd,omitempty"`
	CashAmountReportingCurrency          string                 `protobuf:"bytes,12,opt,name=cash_amount_reporting_currency,json=cashAmountReportingCurrency,proto3" json:"cash_amount_reporting_currency,omitempty"`
	OperatorBonusAmountReportingCurrency string                 `protobuf:"bytes,13,opt,name=operator_bonus_amount_reporting_currency,json=operatorBonusAmountReportingCurrency,proto3" json:"operator_bonus_amount_reporting_currency,omitempty"`
	ProviderBonusAmountReportingCurrency string                 `protobuf:"bytes,14,opt,name=provider_bonus_amount_reporting_currency,json=providerBonusAmountReportingCurrency,proto3" json:"provider_bonus_amount_reporting_currency,omitempty"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *GameCreditResponse) Reset() {
	*x = GameCreditResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameCreditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCreditResponse) ProtoMessage() {}

func (x *GameCreditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCreditResponse.ProtoReflect.Descriptor instead.
func (*GameCreditResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *GameCreditResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *GameCreditResponse) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *GameCreditResponse) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GameCreditResponse) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

func (x *GameCreditResponse) GetProviderBonus() string {
	if x != nil {
		return x.ProviderBonus
	}
	return ""
}

func (x *GameCreditResponse) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

func (x *GameCreditResponse) GetOperatorBonusAmount() string {
	if x != nil {
		return x.OperatorBonusAmount
	}
	return ""
}

func (x *GameCreditResponse) GetProviderBonusAmount() string {
	if x != nil {
		return x.ProviderBonusAmount
	}
	return ""
}

func (x *GameCreditResponse) GetCashAmountUsd() string {
	if x != nil {
		return x.CashAmountUsd
	}
	return ""
}

func (x *GameCreditResponse) GetOperatorBonusAmountUsd() string {
	if x != nil {
		return x.OperatorBonusAmountUsd
	}
	return ""
}

func (x *GameCreditResponse) GetProviderBonusAmountUsd() string {
	if x != nil {
		return x.ProviderBonusAmountUsd
	}
	return ""
}

func (x *GameCreditResponse) GetCashAmountReportingCurrency() string {
	if x != nil {
		return x.CashAmountReportingCurrency
	}
	return ""
}

func (x *GameCreditResponse) GetOperatorBonusAmountReportingCurrency() string {
	if x != nil {
		return x.OperatorBonusAmountReportingCurrency
	}
	return ""
}

func (x *GameCreditResponse) GetProviderBonusAmountReportingCurrency() string {
	if x != nil {
		return x.ProviderBonusAmountReportingCurrency
	}
	return ""
}

type ChannelInfo struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ChannelInfo) Reset() {
	*x = ChannelInfo{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChannelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelInfo) ProtoMessage() {}

func (x *ChannelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelInfo.ProtoReflect.Descriptor instead.
func (*ChannelInfo) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{12}
}

func (x *ChannelInfo) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type FreezeRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UserId            int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency          string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	ReportingCurrency string                 `protobuf:"bytes,3,opt,name=reporting_currency,json=reportingCurrency,proto3" json:"reporting_currency,omitempty"`
	// Valid freeze transaction types:
	//   - "payment_withdraw_freeze"   - Payment withdraw freeze transaction
	TransactionType string                  `protobuf:"bytes,4,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId   int64                   `protobuf:"varint,5,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash            string                  `protobuf:"bytes,6,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,7,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	ChannelInfo     *ChannelInfo            `protobuf:"bytes,8,opt,name=channel_info,json=channelInfo,proto3" json:"channel_info,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FreezeRequest) Reset() {
	*x = FreezeRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreezeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeRequest) ProtoMessage() {}

func (x *FreezeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeRequest.ProtoReflect.Descriptor instead.
func (*FreezeRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{13}
}

func (x *FreezeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FreezeRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FreezeRequest) GetReportingCurrency() string {
	if x != nil {
		return x.ReportingCurrency
	}
	return ""
}

func (x *FreezeRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *FreezeRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *FreezeRequest) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *FreezeRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *FreezeRequest) GetChannelInfo() *ChannelInfo {
	if x != nil {
		return x.ChannelInfo
	}
	return nil
}

type FreezeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreezeResponse) Reset() {
	*x = FreezeResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreezeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeResponse) ProtoMessage() {}

func (x *FreezeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeResponse.ProtoReflect.Descriptor instead.
func (*FreezeResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{14}
}

func (x *FreezeResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

type SettleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Valid settle transaction types:
	//   - "payment_withdraw_settle"   - Payment withdraw settle transaction
	TransactionType       string       `protobuf:"bytes,1,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId         int64        `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	OriginalTransactionId int64        `protobuf:"varint,3,opt,name=original_transaction_id,json=originalTransactionId,proto3" json:"original_transaction_id,omitempty"`
	ChannelInfo           *ChannelInfo `protobuf:"bytes,4,opt,name=channel_info,json=channelInfo,proto3" json:"channel_info,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SettleRequest) Reset() {
	*x = SettleRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleRequest) ProtoMessage() {}

func (x *SettleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleRequest.ProtoReflect.Descriptor instead.
func (*SettleRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{15}
}

func (x *SettleRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *SettleRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *SettleRequest) GetOriginalTransactionId() int64 {
	if x != nil {
		return x.OriginalTransactionId
	}
	return 0
}

func (x *SettleRequest) GetChannelInfo() *ChannelInfo {
	if x != nil {
		return x.ChannelInfo
	}
	return nil
}

type SettleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettleResponse) Reset() {
	*x = SettleResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleResponse) ProtoMessage() {}

func (x *SettleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleResponse.ProtoReflect.Descriptor instead.
func (*SettleResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{16}
}

func (x *SettleResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

type RollbackRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Valid rollback transaction types:
	//   - "game_bet_rollback"            - Game bet transaction rollback
	//   - "game_win_rollback"            - Game win transaction rollback
	//   - "payment_withdraw_rollback" - Payment withdraw transaction rollback
	TransactionType       string       `protobuf:"bytes,1,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId         int64        `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	OriginalTransactionId int64        `protobuf:"varint,3,opt,name=original_transaction_id,json=originalTransactionId,proto3" json:"original_transaction_id,omitempty"`
	ChannelInfo           *ChannelInfo `protobuf:"bytes,4,opt,name=channel_info,json=channelInfo,proto3" json:"channel_info,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RollbackRequest) Reset() {
	*x = RollbackRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackRequest) ProtoMessage() {}

func (x *RollbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackRequest.ProtoReflect.Descriptor instead.
func (*RollbackRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{17}
}

func (x *RollbackRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *RollbackRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *RollbackRequest) GetOriginalTransactionId() int64 {
	if x != nil {
		return x.OriginalTransactionId
	}
	return 0
}

func (x *RollbackRequest) GetChannelInfo() *ChannelInfo {
	if x != nil {
		return x.ChannelInfo
	}
	return nil
}

type RollbackResponse struct {
	state                                protoimpl.MessageState `protogen:"open.v1"`
	TransactionId                        int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash                                 string                 `protobuf:"bytes,2,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorBonus                        string                 `protobuf:"bytes,3,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	ProviderBonus                        string                 `protobuf:"bytes,4,opt,name=provider_bonus,json=providerBonus,proto3" json:"provider_bonus,omitempty"`
	CashAmount                           string                 `protobuf:"bytes,5,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	OperatorBonusAmount                  string                 `protobuf:"bytes,6,opt,name=operator_bonus_amount,json=operatorBonusAmount,proto3" json:"operator_bonus_amount,omitempty"`
	ProviderBonusAmount                  string                 `protobuf:"bytes,7,opt,name=provider_bonus_amount,json=providerBonusAmount,proto3" json:"provider_bonus_amount,omitempty"`
	CashAmountUsd                        string                 `protobuf:"bytes,8,opt,name=cash_amount_usd,json=cashAmountUsd,proto3" json:"cash_amount_usd,omitempty"`
	OperatorBonusAmountUsd               string                 `protobuf:"bytes,9,opt,name=operator_bonus_amount_usd,json=operatorBonusAmountUsd,proto3" json:"operator_bonus_amount_usd,omitempty"`
	ProviderBonusAmountUsd               string                 `protobuf:"bytes,10,opt,name=provider_bonus_amount_usd,json=providerBonusAmountUsd,proto3" json:"provider_bonus_amount_usd,omitempty"`
	CashAmountReportingCurrency          string                 `protobuf:"bytes,11,opt,name=cash_amount_reporting_currency,json=cashAmountReportingCurrency,proto3" json:"cash_amount_reporting_currency,omitempty"`
	OperatorBonusAmountReportingCurrency string                 `protobuf:"bytes,12,opt,name=operator_bonus_amount_reporting_currency,json=operatorBonusAmountReportingCurrency,proto3" json:"operator_bonus_amount_reporting_currency,omitempty"`
	ProviderBonusAmountReportingCurrency string                 `protobuf:"bytes,13,opt,name=provider_bonus_amount_reporting_currency,json=providerBonusAmountReportingCurrency,proto3" json:"provider_bonus_amount_reporting_currency,omitempty"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *RollbackResponse) Reset() {
	*x = RollbackResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackResponse) ProtoMessage() {}

func (x *RollbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackResponse.ProtoReflect.Descriptor instead.
func (*RollbackResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{18}
}

func (x *RollbackResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *RollbackResponse) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *RollbackResponse) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

func (x *RollbackResponse) GetProviderBonus() string {
	if x != nil {
		return x.ProviderBonus
	}
	return ""
}

func (x *RollbackResponse) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

func (x *RollbackResponse) GetOperatorBonusAmount() string {
	if x != nil {
		return x.OperatorBonusAmount
	}
	return ""
}

func (x *RollbackResponse) GetProviderBonusAmount() string {
	if x != nil {
		return x.ProviderBonusAmount
	}
	return ""
}

func (x *RollbackResponse) GetCashAmountUsd() string {
	if x != nil {
		return x.CashAmountUsd
	}
	return ""
}

func (x *RollbackResponse) GetOperatorBonusAmountUsd() string {
	if x != nil {
		return x.OperatorBonusAmountUsd
	}
	return ""
}

func (x *RollbackResponse) GetProviderBonusAmountUsd() string {
	if x != nil {
		return x.ProviderBonusAmountUsd
	}
	return ""
}

func (x *RollbackResponse) GetCashAmountReportingCurrency() string {
	if x != nil {
		return x.CashAmountReportingCurrency
	}
	return ""
}

func (x *RollbackResponse) GetOperatorBonusAmountReportingCurrency() string {
	if x != nil {
		return x.OperatorBonusAmountReportingCurrency
	}
	return ""
}

func (x *RollbackResponse) GetProviderBonusAmountReportingCurrency() string {
	if x != nil {
		return x.ProviderBonusAmountReportingCurrency
	}
	return ""
}

type GetWalletsRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	UserId          int64                   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currencies      []string                `protobuf:"bytes,2,rep,name=currencies,proto3" json:"currencies,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,3,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetWalletsRequest) Reset() {
	*x = GetWalletsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletsRequest) ProtoMessage() {}

func (x *GetWalletsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletsRequest.ProtoReflect.Descriptor instead.
func (*GetWalletsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{19}
}

func (x *GetWalletsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetWalletsRequest) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

func (x *GetWalletsRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type GetWalletsResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	TotalAssets   *GetWalletsResponse_TotalAssets `protobuf:"bytes,1,opt,name=total_assets,json=totalAssets,proto3" json:"total_assets,omitempty"`
	Wallets       []*GetWalletsResponse_Wallet    `protobuf:"bytes,2,rep,name=wallets,proto3" json:"wallets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletsResponse) Reset() {
	*x = GetWalletsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletsResponse) ProtoMessage() {}

func (x *GetWalletsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletsResponse.ProtoReflect.Descriptor instead.
func (*GetWalletsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{20}
}

func (x *GetWalletsResponse) GetTotalAssets() *GetWalletsResponse_TotalAssets {
	if x != nil {
		return x.TotalAssets
	}
	return nil
}

func (x *GetWalletsResponse) GetWallets() []*GetWalletsResponse_Wallet {
	if x != nil {
		return x.Wallets
	}
	return nil
}

type ListWalletBalanceTransactionsRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	UserId int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Transaction types for different operations
	// Expected values:
	// Credit operations:
	//   - "payment_deposit"    - Payment deposit transaction
	//   - "game_win"          - Game win transaction
	//
	// Debit operations:
	//   - "payment_withdraw"   - Payment withdraw transaction
	//   - "game_bet"          - Game bet transaction
	//   - "payment_withdraw_freeze" - Payment withdraw freeze transaction
	//
	// Settlement operations:
	//   - "payment_withdraw_settle" - Payment withdraw settlement
	//
	// Rollback operations:
	//   - "game_bet_rollback"            - Game bet transaction rollback
	//   - "game_win_rollback"            - Game win transaction rollback
	//   - "payment_withdraw_rollback" - Payment withdraw transaction rollback
	TransactionType *string                 `protobuf:"bytes,2,opt,name=transaction_type,json=transactionType,proto3,oneof" json:"transaction_type,omitempty"`
	Currency        *string                 `protobuf:"bytes,3,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	StartTime       *timestamppb.Timestamp  `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	EndTime         *timestamppb.Timestamp  `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	Page            *int32                  `protobuf:"varint,6,opt,name=page,proto3,oneof" json:"page,omitempty"`
	PageSize        *int32                  `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,8,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListWalletBalanceTransactionsRequest) Reset() {
	*x = ListWalletBalanceTransactionsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWalletBalanceTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWalletBalanceTransactionsRequest) ProtoMessage() {}

func (x *ListWalletBalanceTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWalletBalanceTransactionsRequest.ProtoReflect.Descriptor instead.
func (*ListWalletBalanceTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{21}
}

func (x *ListWalletBalanceTransactionsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListWalletBalanceTransactionsRequest) GetTransactionType() string {
	if x != nil && x.TransactionType != nil {
		return *x.TransactionType
	}
	return ""
}

func (x *ListWalletBalanceTransactionsRequest) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *ListWalletBalanceTransactionsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListWalletBalanceTransactionsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ListWalletBalanceTransactionsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListWalletBalanceTransactionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListWalletBalanceTransactionsRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type ListWalletBalanceTransactionsResponse struct {
	state               protoimpl.MessageState                                      `protogen:"open.v1"`
	BalanceTransactions []*ListWalletBalanceTransactionsResponse_BalanceTransaction `protobuf:"bytes,1,rep,name=balance_transactions,json=balanceTransactions,proto3" json:"balance_transactions,omitempty"`
	Total               int32                                                       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page                int32                                                       `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize            int32                                                       `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListWalletBalanceTransactionsResponse) Reset() {
	*x = ListWalletBalanceTransactionsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWalletBalanceTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWalletBalanceTransactionsResponse) ProtoMessage() {}

func (x *ListWalletBalanceTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWalletBalanceTransactionsResponse.ProtoReflect.Descriptor instead.
func (*ListWalletBalanceTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{22}
}

func (x *ListWalletBalanceTransactionsResponse) GetBalanceTransactions() []*ListWalletBalanceTransactionsResponse_BalanceTransaction {
	if x != nil {
		return x.BalanceTransactions
	}
	return nil
}

func (x *ListWalletBalanceTransactionsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListWalletBalanceTransactionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListWalletBalanceTransactionsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetWalletBalanceTransactionsByIdsRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	TransactionIds  []int64                 `protobuf:"varint,1,rep,packed,name=transaction_ids,json=transactionIds,proto3" json:"transaction_ids,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,2,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetWalletBalanceTransactionsByIdsRequest) Reset() {
	*x = GetWalletBalanceTransactionsByIdsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletBalanceTransactionsByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceTransactionsByIdsRequest) ProtoMessage() {}

func (x *GetWalletBalanceTransactionsByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceTransactionsByIdsRequest.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceTransactionsByIdsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{23}
}

func (x *GetWalletBalanceTransactionsByIdsRequest) GetTransactionIds() []int64 {
	if x != nil {
		return x.TransactionIds
	}
	return nil
}

func (x *GetWalletBalanceTransactionsByIdsRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type GetWalletBalanceTransactionsByIdsResponse struct {
	state               protoimpl.MessageState                                          `protogen:"open.v1"`
	BalanceTransactions []*GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction `protobuf:"bytes,1,rep,name=balance_transactions,json=balanceTransactions,proto3" json:"balance_transactions,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetWalletBalanceTransactionsByIdsResponse) Reset() {
	*x = GetWalletBalanceTransactionsByIdsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletBalanceTransactionsByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceTransactionsByIdsResponse) ProtoMessage() {}

func (x *GetWalletBalanceTransactionsByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceTransactionsByIdsResponse.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceTransactionsByIdsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{24}
}

func (x *GetWalletBalanceTransactionsByIdsResponse) GetBalanceTransactions() []*GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction {
	if x != nil {
		return x.BalanceTransactions
	}
	return nil
}

type GetWalletCreditTransactionsRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	CreditId        int64                   `protobuf:"varint,1,opt,name=credit_id,json=creditId,proto3" json:"credit_id,omitempty"`
	Page            *int64                  `protobuf:"varint,2,opt,name=page,proto3,oneof" json:"page,omitempty"`
	PageSize        *int64                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,4,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetWalletCreditTransactionsRequest) Reset() {
	*x = GetWalletCreditTransactionsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletCreditTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletCreditTransactionsRequest) ProtoMessage() {}

func (x *GetWalletCreditTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletCreditTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetWalletCreditTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{25}
}

func (x *GetWalletCreditTransactionsRequest) GetCreditId() int64 {
	if x != nil {
		return x.CreditId
	}
	return 0
}

func (x *GetWalletCreditTransactionsRequest) GetPage() int64 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *GetWalletCreditTransactionsRequest) GetPageSize() int64 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *GetWalletCreditTransactionsRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type GetWalletCreditTransactionsResponse struct {
	state              protoimpl.MessageState                                   `protogen:"open.v1"`
	CreditTransactions []*GetWalletCreditTransactionsResponse_CreditTransaction `protobuf:"bytes,1,rep,name=credit_transactions,json=creditTransactions,proto3" json:"credit_transactions,omitempty"`
	Page               int64                                                    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize           int64                                                    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total              int64                                                    `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetWalletCreditTransactionsResponse) Reset() {
	*x = GetWalletCreditTransactionsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletCreditTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletCreditTransactionsResponse) ProtoMessage() {}

func (x *GetWalletCreditTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletCreditTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetWalletCreditTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{26}
}

func (x *GetWalletCreditTransactionsResponse) GetCreditTransactions() []*GetWalletCreditTransactionsResponse_CreditTransaction {
	if x != nil {
		return x.CreditTransactions
	}
	return nil
}

func (x *GetWalletCreditTransactionsResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetWalletCreditTransactionsResponse) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetWalletCreditTransactionsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetExchangeRatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    []string               `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExchangeRatesRequest) Reset() {
	*x = GetExchangeRatesRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExchangeRatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangeRatesRequest) ProtoMessage() {}

func (x *GetExchangeRatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangeRatesRequest.ProtoReflect.Descriptor instead.
func (*GetExchangeRatesRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{27}
}

func (x *GetExchangeRatesRequest) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type GetExchangeRatesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// map key is currency code, value is currency exchange rate
	ExchangeRates map[string]string `protobuf:"bytes,1,rep,name=exchange_rates,json=exchangeRates,proto3" json:"exchange_rates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExchangeRatesResponse) Reset() {
	*x = GetExchangeRatesResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExchangeRatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangeRatesResponse) ProtoMessage() {}

func (x *GetExchangeRatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangeRatesResponse.ProtoReflect.Descriptor instead.
func (*GetExchangeRatesResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{28}
}

func (x *GetExchangeRatesResponse) GetExchangeRates() map[string]string {
	if x != nil {
		return x.ExchangeRates
	}
	return nil
}

type GetExchangeRatesWithBaseCurrencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    []string               `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	BaseCurrency  *string                `protobuf:"bytes,2,opt,name=base_currency,json=baseCurrency,proto3,oneof" json:"base_currency,omitempty"` // USD if not provided
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExchangeRatesWithBaseCurrencyRequest) Reset() {
	*x = GetExchangeRatesWithBaseCurrencyRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExchangeRatesWithBaseCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangeRatesWithBaseCurrencyRequest) ProtoMessage() {}

func (x *GetExchangeRatesWithBaseCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangeRatesWithBaseCurrencyRequest.ProtoReflect.Descriptor instead.
func (*GetExchangeRatesWithBaseCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{29}
}

func (x *GetExchangeRatesWithBaseCurrencyRequest) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

func (x *GetExchangeRatesWithBaseCurrencyRequest) GetBaseCurrency() string {
	if x != nil && x.BaseCurrency != nil {
		return *x.BaseCurrency
	}
	return ""
}

type GetExchangeRatesWithBaseCurrencyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// map key is currency code, value is currency exchange rate
	ExchangeRates map[string]string `protobuf:"bytes,1,rep,name=exchange_rates,json=exchangeRates,proto3" json:"exchange_rates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExchangeRatesWithBaseCurrencyResponse) Reset() {
	*x = GetExchangeRatesWithBaseCurrencyResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExchangeRatesWithBaseCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangeRatesWithBaseCurrencyResponse) ProtoMessage() {}

func (x *GetExchangeRatesWithBaseCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangeRatesWithBaseCurrencyResponse.ProtoReflect.Descriptor instead.
func (*GetExchangeRatesWithBaseCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{30}
}

func (x *GetExchangeRatesWithBaseCurrencyResponse) GetExchangeRates() map[string]string {
	if x != nil {
		return x.ExchangeRates
	}
	return nil
}

type GetUserTransactionSummaryRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	UserId          int64                   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency        *string                 `protobuf:"bytes,2,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	StartTime       *timestamppb.Timestamp  `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	EndTime         *timestamppb.Timestamp  `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,5,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetUserTransactionSummaryRequest) Reset() {
	*x = GetUserTransactionSummaryRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTransactionSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTransactionSummaryRequest) ProtoMessage() {}

func (x *GetUserTransactionSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTransactionSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetUserTransactionSummaryRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{31}
}

func (x *GetUserTransactionSummaryRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserTransactionSummaryRequest) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *GetUserTransactionSummaryRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetUserTransactionSummaryRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetUserTransactionSummaryRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type GetUserTransactionSummaryResponse struct {
	state                                 protoimpl.MessageState `protogen:"open.v1"`
	TotalDepositUsd                       string                 `protobuf:"bytes,1,opt,name=total_deposit_usd,json=totalDepositUsd,proto3" json:"total_deposit_usd,omitempty"`
	TotalWithdrawUsd                      string                 `protobuf:"bytes,2,opt,name=total_withdraw_usd,json=totalWithdrawUsd,proto3" json:"total_withdraw_usd,omitempty"`
	DepositMinusWithdrawUsd               string                 `protobuf:"bytes,3,opt,name=deposit_minus_withdraw_usd,json=depositMinusWithdrawUsd,proto3" json:"deposit_minus_withdraw_usd,omitempty"`
	TotalValidBetUsd                      string                 `protobuf:"bytes,4,opt,name=total_valid_bet_usd,json=totalValidBetUsd,proto3" json:"total_valid_bet_usd,omitempty"`
	TotalDepositReportingCurrency         string                 `protobuf:"bytes,5,opt,name=total_deposit_reporting_currency,json=totalDepositReportingCurrency,proto3" json:"total_deposit_reporting_currency,omitempty"`
	TotalWithdrawReportingCurrency        string                 `protobuf:"bytes,6,opt,name=total_withdraw_reporting_currency,json=totalWithdrawReportingCurrency,proto3" json:"total_withdraw_reporting_currency,omitempty"`
	DepositMinusWithdrawReportingCurrency string                 `protobuf:"bytes,7,opt,name=deposit_minus_withdraw_reporting_currency,json=depositMinusWithdrawReportingCurrency,proto3" json:"deposit_minus_withdraw_reporting_currency,omitempty"`
	TotalValidBetReportingCurrency        string                 `protobuf:"bytes,8,opt,name=total_valid_bet_reporting_currency,json=totalValidBetReportingCurrency,proto3" json:"total_valid_bet_reporting_currency,omitempty"`
	TotalDepositCount                     int32                  `protobuf:"varint,9,opt,name=total_deposit_count,json=totalDepositCount,proto3" json:"total_deposit_count,omitempty"`
	TotalWithdrawCount                    int32                  `protobuf:"varint,10,opt,name=total_withdraw_count,json=totalWithdrawCount,proto3" json:"total_withdraw_count,omitempty"`
	TodayWithdrawCount                    int32                  `protobuf:"varint,11,opt,name=today_withdraw_count,json=todayWithdrawCount,proto3" json:"today_withdraw_count,omitempty"`
	unknownFields                         protoimpl.UnknownFields
	sizeCache                             protoimpl.SizeCache
}

func (x *GetUserTransactionSummaryResponse) Reset() {
	*x = GetUserTransactionSummaryResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTransactionSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTransactionSummaryResponse) ProtoMessage() {}

func (x *GetUserTransactionSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTransactionSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetUserTransactionSummaryResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{32}
}

func (x *GetUserTransactionSummaryResponse) GetTotalDepositUsd() string {
	if x != nil {
		return x.TotalDepositUsd
	}
	return ""
}

func (x *GetUserTransactionSummaryResponse) GetTotalWithdrawUsd() string {
	if x != nil {
		return x.TotalWithdrawUsd
	}
	return ""
}

func (x *GetUserTransactionSummaryResponse) GetDepositMinusWithdrawUsd() string {
	if x != nil {
		return x.DepositMinusWithdrawUsd
	}
	return ""
}

func (x *GetUserTransactionSummaryResponse) GetTotalValidBetUsd() string {
	if x != nil {
		return x.TotalValidBetUsd
	}
	return ""
}

func (x *GetUserTransactionSummaryResponse) GetTotalDepositReportingCurrency() string {
	if x != nil {
		return x.TotalDepositReportingCurrency
	}
	return ""
}

func (x *GetUserTransactionSummaryResponse) GetTotalWithdrawReportingCurrency() string {
	if x != nil {
		return x.TotalWithdrawReportingCurrency
	}
	return ""
}

func (x *GetUserTransactionSummaryResponse) GetDepositMinusWithdrawReportingCurrency() string {
	if x != nil {
		return x.DepositMinusWithdrawReportingCurrency
	}
	return ""
}

func (x *GetUserTransactionSummaryResponse) GetTotalValidBetReportingCurrency() string {
	if x != nil {
		return x.TotalValidBetReportingCurrency
	}
	return ""
}

func (x *GetUserTransactionSummaryResponse) GetTotalDepositCount() int32 {
	if x != nil {
		return x.TotalDepositCount
	}
	return 0
}

func (x *GetUserTransactionSummaryResponse) GetTotalWithdrawCount() int32 {
	if x != nil {
		return x.TotalWithdrawCount
	}
	return 0
}

func (x *GetUserTransactionSummaryResponse) GetTodayWithdrawCount() int32 {
	if x != nil {
		return x.TodayWithdrawCount
	}
	return 0
}

type GetBackofficeUserOverviewFromWalletRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	UserId          int64                   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StartTime       *timestamppb.Timestamp  `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	EndTime         *timestamppb.Timestamp  `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,4,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetBackofficeUserOverviewFromWalletRequest) Reset() {
	*x = GetBackofficeUserOverviewFromWalletRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackofficeUserOverviewFromWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackofficeUserOverviewFromWalletRequest) ProtoMessage() {}

func (x *GetBackofficeUserOverviewFromWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackofficeUserOverviewFromWalletRequest.ProtoReflect.Descriptor instead.
func (*GetBackofficeUserOverviewFromWalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{33}
}

func (x *GetBackofficeUserOverviewFromWalletRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetBackofficeUserOverviewFromWalletRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetBackofficeUserOverviewFromWalletRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetBackofficeUserOverviewFromWalletRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type GetBackofficeUserOverviewFromWalletResponse struct {
	state                                 protoimpl.MessageState `protogen:"open.v1"`
	BalanceUsd                            string                 `protobuf:"bytes,1,opt,name=balance_usd,json=balanceUsd,proto3" json:"balance_usd,omitempty"`
	DepositMinusWithdrawUsd               string                 `protobuf:"bytes,2,opt,name=deposit_minus_withdraw_usd,json=depositMinusWithdrawUsd,proto3" json:"deposit_minus_withdraw_usd,omitempty"`
	TurnoverUsd                           string                 `protobuf:"bytes,3,opt,name=turnover_usd,json=turnoverUsd,proto3" json:"turnover_usd,omitempty"`
	CashTurnoverUsd                       string                 `protobuf:"bytes,4,opt,name=cash_turnover_usd,json=cashTurnoverUsd,proto3" json:"cash_turnover_usd,omitempty"`
	BonusTurnoverUsd                      string                 `protobuf:"bytes,5,opt,name=bonus_turnover_usd,json=bonusTurnoverUsd,proto3" json:"bonus_turnover_usd,omitempty"`
	DepositUsd                            string                 `protobuf:"bytes,6,opt,name=deposit_usd,json=depositUsd,proto3" json:"deposit_usd,omitempty"`
	LastDepositUsd                        string                 `protobuf:"bytes,7,opt,name=last_deposit_usd,json=lastDepositUsd,proto3" json:"last_deposit_usd,omitempty"`
	DepositCount                          int32                  `protobuf:"varint,8,opt,name=deposit_count,json=depositCount,proto3" json:"deposit_count,omitempty"`
	WithdrawUsd                           string                 `protobuf:"bytes,9,opt,name=withdraw_usd,json=withdrawUsd,proto3" json:"withdraw_usd,omitempty"`
	LastWithdrawUsd                       string                 `protobuf:"bytes,10,opt,name=last_withdraw_usd,json=lastWithdrawUsd,proto3" json:"last_withdraw_usd,omitempty"`
	WithdrawCount                         int32                  `protobuf:"varint,11,opt,name=withdraw_count,json=withdrawCount,proto3" json:"withdraw_count,omitempty"`
	BonusUsd                              string                 `protobuf:"bytes,12,opt,name=bonus_usd,json=bonusUsd,proto3" json:"bonus_usd,omitempty"`                           // Not available for now, only return 0
	ValidTurnoverUsd                      string                 `protobuf:"bytes,13,opt,name=valid_turnover_usd,json=validTurnoverUsd,proto3" json:"valid_turnover_usd,omitempty"` // Not available for now, only return 0
	AverageBetAmountUsd                   string                 `protobuf:"bytes,14,opt,name=average_bet_amount_usd,json=averageBetAmountUsd,proto3" json:"average_bet_amount_usd,omitempty"`
	GgrUsd                                string                 `protobuf:"bytes,15,opt,name=ggr_usd,json=ggrUsd,proto3" json:"ggr_usd,omitempty"`
	GgrPercentage                         string                 `protobuf:"bytes,16,opt,name=ggr_percentage,json=ggrPercentage,proto3" json:"ggr_percentage,omitempty"`                                   // Round to 2 decimal places
	ManuallyAddedBalanceUsd               string                 `protobuf:"bytes,17,opt,name=manually_added_balance_usd,json=manuallyAddedBalanceUsd,proto3" json:"manually_added_balance_usd,omitempty"` // Not available for now, only return 0
	BonusClaimedUsd                       string                 `protobuf:"bytes,18,opt,name=bonus_claimed_usd,json=bonusClaimedUsd,proto3" json:"bonus_claimed_usd,omitempty"`                           // Not available for now, only return 0
	NgrUsd                                string                 `protobuf:"bytes,19,opt,name=ngr_usd,json=ngrUsd,proto3" json:"ngr_usd,omitempty"`
	GgrToNgrPercentage                    string                 `protobuf:"bytes,20,opt,name=ggr_to_ngr_percentage,json=ggrToNgrPercentage,proto3" json:"ggr_to_ngr_percentage,omitempty"`             // Round to 2 decimal places
	TurnoverMultiplier                    string                 `protobuf:"bytes,21,opt,name=turnover_multiplier,json=turnoverMultiplier,proto3" json:"turnover_multiplier,omitempty"`                 // Round to 2 decimal places
	WithdrawToDepositRatio                string                 `protobuf:"bytes,22,opt,name=withdraw_to_deposit_ratio,json=withdrawToDepositRatio,proto3" json:"withdraw_to_deposit_ratio,omitempty"` // Round to 2 decimal places
	Rtp                                   string                 `protobuf:"bytes,23,opt,name=rtp,proto3" json:"rtp,omitempty"`                                                                         // Round to 2 decimal places
	BalanceReportingCurrency              string                 `protobuf:"bytes,24,opt,name=balance_reporting_currency,json=balanceReportingCurrency,proto3" json:"balance_reporting_currency,omitempty"`
	DepositMinusWithdrawReportingCurrency string                 `protobuf:"bytes,25,opt,name=deposit_minus_withdraw_reporting_currency,json=depositMinusWithdrawReportingCurrency,proto3" json:"deposit_minus_withdraw_reporting_currency,omitempty"`
	TurnoverReportingCurrency             string                 `protobuf:"bytes,26,opt,name=turnover_reporting_currency,json=turnoverReportingCurrency,proto3" json:"turnover_reporting_currency,omitempty"`
	CashTurnoverReportingCurrency         string                 `protobuf:"bytes,27,opt,name=cash_turnover_reporting_currency,json=cashTurnoverReportingCurrency,proto3" json:"cash_turnover_reporting_currency,omitempty"`
	BonusTurnoverReportingCurrency        string                 `protobuf:"bytes,28,opt,name=bonus_turnover_reporting_currency,json=bonusTurnoverReportingCurrency,proto3" json:"bonus_turnover_reporting_currency,omitempty"`
	DepositReportingCurrency              string                 `protobuf:"bytes,29,opt,name=deposit_reporting_currency,json=depositReportingCurrency,proto3" json:"deposit_reporting_currency,omitempty"`
	LastDepositReportingCurrency          string                 `protobuf:"bytes,30,opt,name=last_deposit_reporting_currency,json=lastDepositReportingCurrency,proto3" json:"last_deposit_reporting_currency,omitempty"`
	WithdrawReportingCurrency             string                 `protobuf:"bytes,31,opt,name=withdraw_reporting_currency,json=withdrawReportingCurrency,proto3" json:"withdraw_reporting_currency,omitempty"`
	LastWithdrawReportingCurrency         string                 `protobuf:"bytes,32,opt,name=last_withdraw_reporting_currency,json=lastWithdrawReportingCurrency,proto3" json:"last_withdraw_reporting_currency,omitempty"`
	BonusReportingCurrency                string                 `protobuf:"bytes,33,opt,name=bonus_reporting_currency,json=bonusReportingCurrency,proto3" json:"bonus_reporting_currency,omitempty"`                           // Not available for now, only return 0
	ValidTurnoverReportingCurrency        string                 `protobuf:"bytes,34,opt,name=valid_turnover_reporting_currency,json=validTurnoverReportingCurrency,proto3" json:"valid_turnover_reporting_currency,omitempty"` // Not available for now, only return 0
	AverageBetAmountReportingCurrency     string                 `protobuf:"bytes,35,opt,name=average_bet_amount_reporting_currency,json=averageBetAmountReportingCurrency,proto3" json:"average_bet_amount_reporting_currency,omitempty"`
	GgrReportingCurrency                  string                 `protobuf:"bytes,36,opt,name=ggr_reporting_currency,json=ggrReportingCurrency,proto3" json:"ggr_reporting_currency,omitempty"`
	ManuallyAddedBalanceReportingCurrency string                 `protobuf:"bytes,37,opt,name=manually_added_balance_reporting_currency,json=manuallyAddedBalanceReportingCurrency,proto3" json:"manually_added_balance_reporting_currency,omitempty"` // Not available for now, only return 0
	BonusClaimedReportingCurrency         string                 `protobuf:"bytes,38,opt,name=bonus_claimed_reporting_currency,json=bonusClaimedReportingCurrency,proto3" json:"bonus_claimed_reporting_currency,omitempty"`                           // Not available for now, only return 0
	NgrReportingCurrency                  string                 `protobuf:"bytes,39,opt,name=ngr_reporting_currency,json=ngrReportingCurrency,proto3" json:"ngr_reporting_currency,omitempty"`
	unknownFields                         protoimpl.UnknownFields
	sizeCache                             protoimpl.SizeCache
}

func (x *GetBackofficeUserOverviewFromWalletResponse) Reset() {
	*x = GetBackofficeUserOverviewFromWalletResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackofficeUserOverviewFromWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackofficeUserOverviewFromWalletResponse) ProtoMessage() {}

func (x *GetBackofficeUserOverviewFromWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackofficeUserOverviewFromWalletResponse.ProtoReflect.Descriptor instead.
func (*GetBackofficeUserOverviewFromWalletResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{34}
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetBalanceUsd() string {
	if x != nil {
		return x.BalanceUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetDepositMinusWithdrawUsd() string {
	if x != nil {
		return x.DepositMinusWithdrawUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetTurnoverUsd() string {
	if x != nil {
		return x.TurnoverUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetCashTurnoverUsd() string {
	if x != nil {
		return x.CashTurnoverUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetBonusTurnoverUsd() string {
	if x != nil {
		return x.BonusTurnoverUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetDepositUsd() string {
	if x != nil {
		return x.DepositUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetLastDepositUsd() string {
	if x != nil {
		return x.LastDepositUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetDepositCount() int32 {
	if x != nil {
		return x.DepositCount
	}
	return 0
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetWithdrawUsd() string {
	if x != nil {
		return x.WithdrawUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetLastWithdrawUsd() string {
	if x != nil {
		return x.LastWithdrawUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetWithdrawCount() int32 {
	if x != nil {
		return x.WithdrawCount
	}
	return 0
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetBonusUsd() string {
	if x != nil {
		return x.BonusUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetValidTurnoverUsd() string {
	if x != nil {
		return x.ValidTurnoverUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetAverageBetAmountUsd() string {
	if x != nil {
		return x.AverageBetAmountUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetGgrUsd() string {
	if x != nil {
		return x.GgrUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetGgrPercentage() string {
	if x != nil {
		return x.GgrPercentage
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetManuallyAddedBalanceUsd() string {
	if x != nil {
		return x.ManuallyAddedBalanceUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetBonusClaimedUsd() string {
	if x != nil {
		return x.BonusClaimedUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetNgrUsd() string {
	if x != nil {
		return x.NgrUsd
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetGgrToNgrPercentage() string {
	if x != nil {
		return x.GgrToNgrPercentage
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetTurnoverMultiplier() string {
	if x != nil {
		return x.TurnoverMultiplier
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetWithdrawToDepositRatio() string {
	if x != nil {
		return x.WithdrawToDepositRatio
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetRtp() string {
	if x != nil {
		return x.Rtp
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetBalanceReportingCurrency() string {
	if x != nil {
		return x.BalanceReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetDepositMinusWithdrawReportingCurrency() string {
	if x != nil {
		return x.DepositMinusWithdrawReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetTurnoverReportingCurrency() string {
	if x != nil {
		return x.TurnoverReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetCashTurnoverReportingCurrency() string {
	if x != nil {
		return x.CashTurnoverReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetBonusTurnoverReportingCurrency() string {
	if x != nil {
		return x.BonusTurnoverReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetDepositReportingCurrency() string {
	if x != nil {
		return x.DepositReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetLastDepositReportingCurrency() string {
	if x != nil {
		return x.LastDepositReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetWithdrawReportingCurrency() string {
	if x != nil {
		return x.WithdrawReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetLastWithdrawReportingCurrency() string {
	if x != nil {
		return x.LastWithdrawReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetBonusReportingCurrency() string {
	if x != nil {
		return x.BonusReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetValidTurnoverReportingCurrency() string {
	if x != nil {
		return x.ValidTurnoverReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetAverageBetAmountReportingCurrency() string {
	if x != nil {
		return x.AverageBetAmountReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetGgrReportingCurrency() string {
	if x != nil {
		return x.GgrReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetManuallyAddedBalanceReportingCurrency() string {
	if x != nil {
		return x.ManuallyAddedBalanceReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetBonusClaimedReportingCurrency() string {
	if x != nil {
		return x.BonusClaimedReportingCurrency
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetNgrReportingCurrency() string {
	if x != nil {
		return x.NgrReportingCurrency
	}
	return ""
}

type GetOverviewDashboardFromWalletRequest struct {
	state                  protoimpl.MessageState         `protogen:"open.v1"`
	OperatorContextFilters *common.OperatorContextFilters `protobuf:"bytes,1,opt,name=operator_context_filters,json=operatorContextFilters,proto3" json:"operator_context_filters,omitempty"`
	OperatorContext        *common.OperatorContext        `protobuf:"bytes,2,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"` // define the basic range of operators
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletRequest) Reset() {
	*x = GetOverviewDashboardFromWalletRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletRequest) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletRequest.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{35}
}

func (x *GetOverviewDashboardFromWalletRequest) GetOperatorContextFilters() *common.OperatorContextFilters {
	if x != nil {
		return x.OperatorContextFilters
	}
	return nil
}

func (x *GetOverviewDashboardFromWalletRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type GetOverviewDashboardFromWalletResponse struct {
	state                protoimpl.MessageState                                       `protogen:"open.v1"`
	Ggr                  *GetOverviewDashboardFromWalletResponse_GGR                  `protobuf:"bytes,1,opt,name=ggr,proto3" json:"ggr,omitempty"`
	Ngr                  *GetOverviewDashboardFromWalletResponse_NGR                  `protobuf:"bytes,2,opt,name=ngr,proto3" json:"ngr,omitempty"`
	Deposit              *GetOverviewDashboardFromWalletResponse_Deposit              `protobuf:"bytes,3,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Withdraw             *GetOverviewDashboardFromWalletResponse_Withdraw             `protobuf:"bytes,4,opt,name=withdraw,proto3" json:"withdraw,omitempty"`
	DepositMinusWithdraw *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw `protobuf:"bytes,5,opt,name=deposit_minus_withdraw,json=depositMinusWithdraw,proto3" json:"deposit_minus_withdraw,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletResponse) Reset() {
	*x = GetOverviewDashboardFromWalletResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletResponse) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletResponse.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{36}
}

func (x *GetOverviewDashboardFromWalletResponse) GetGgr() *GetOverviewDashboardFromWalletResponse_GGR {
	if x != nil {
		return x.Ggr
	}
	return nil
}

func (x *GetOverviewDashboardFromWalletResponse) GetNgr() *GetOverviewDashboardFromWalletResponse_NGR {
	if x != nil {
		return x.Ngr
	}
	return nil
}

func (x *GetOverviewDashboardFromWalletResponse) GetDeposit() *GetOverviewDashboardFromWalletResponse_Deposit {
	if x != nil {
		return x.Deposit
	}
	return nil
}

func (x *GetOverviewDashboardFromWalletResponse) GetWithdraw() *GetOverviewDashboardFromWalletResponse_Withdraw {
	if x != nil {
		return x.Withdraw
	}
	return nil
}

func (x *GetOverviewDashboardFromWalletResponse) GetDepositMinusWithdraw() *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw {
	if x != nil {
		return x.DepositMinusWithdraw
	}
	return nil
}

type Currency struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Enabled       bool                   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Hidden        bool                   `protobuf:"varint,3,opt,name=hidden,proto3" json:"hidden,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Symbol        string                 `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Icon          string                 `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	DecimalPlaces int32                  `protobuf:"varint,7,opt,name=decimal_places,json=decimalPlaces,proto3" json:"decimal_places,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Currency) Reset() {
	*x = Currency{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{37}
}

func (x *Currency) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Currency) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Currency) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *Currency) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Currency) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Currency) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Currency) GetDecimalPlaces() int32 {
	if x != nil {
		return x.DecimalPlaces
	}
	return 0
}

type AddCurrencyRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	Currency        *Currency               `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,2,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AddCurrencyRequest) Reset() {
	*x = AddCurrencyRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCurrencyRequest) ProtoMessage() {}

func (x *AddCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCurrencyRequest.ProtoReflect.Descriptor instead.
func (*AddCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{38}
}

func (x *AddCurrencyRequest) GetCurrency() *Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

func (x *AddCurrencyRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type AddCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCurrencyResponse) Reset() {
	*x = AddCurrencyResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCurrencyResponse) ProtoMessage() {}

func (x *AddCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCurrencyResponse.ProtoReflect.Descriptor instead.
func (*AddCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{39}
}

type UpdateCurrencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Enabled       *bool                  `protobuf:"varint,2,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	Hidden        *bool                  `protobuf:"varint,3,opt,name=hidden,proto3,oneof" json:"hidden,omitempty"`
	Type          *string                `protobuf:"bytes,4,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Symbol        *string                `protobuf:"bytes,5,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`
	Icon          *string                `protobuf:"bytes,6,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	DecimalPlaces *int32                 `protobuf:"varint,7,opt,name=decimal_places,json=decimalPlaces,proto3,oneof" json:"decimal_places,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCurrencyRequest) Reset() {
	*x = UpdateCurrencyRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCurrencyRequest) ProtoMessage() {}

func (x *UpdateCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCurrencyRequest.ProtoReflect.Descriptor instead.
func (*UpdateCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateCurrencyRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UpdateCurrencyRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *UpdateCurrencyRequest) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return false
}

func (x *UpdateCurrencyRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *UpdateCurrencyRequest) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *UpdateCurrencyRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *UpdateCurrencyRequest) GetDecimalPlaces() int32 {
	if x != nil && x.DecimalPlaces != nil {
		return *x.DecimalPlaces
	}
	return 0
}

type UpdateCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCurrencyResponse) Reset() {
	*x = UpdateCurrencyResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCurrencyResponse) ProtoMessage() {}

func (x *UpdateCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCurrencyResponse.ProtoReflect.Descriptor instead.
func (*UpdateCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{41}
}

type GetCurrenciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    []string               `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrenciesRequest) Reset() {
	*x = GetCurrenciesRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrenciesRequest) ProtoMessage() {}

func (x *GetCurrenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrenciesRequest.ProtoReflect.Descriptor instead.
func (*GetCurrenciesRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{42}
}

func (x *GetCurrenciesRequest) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type GetCurrenciesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    []*Currency            `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrenciesResponse) Reset() {
	*x = GetCurrenciesResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrenciesResponse) ProtoMessage() {}

func (x *GetCurrenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrenciesResponse.ProtoReflect.Descriptor instead.
func (*GetCurrenciesResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{43}
}

func (x *GetCurrenciesResponse) GetCurrencies() []*Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type GetOperatorCurrenciesRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	Currencies      []string                `protobuf:"bytes,2,rep,name=currencies,proto3" json:"currencies,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetOperatorCurrenciesRequest) Reset() {
	*x = GetOperatorCurrenciesRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorCurrenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorCurrenciesRequest) ProtoMessage() {}

func (x *GetOperatorCurrenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorCurrenciesRequest.ProtoReflect.Descriptor instead.
func (*GetOperatorCurrenciesRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{44}
}

func (x *GetOperatorCurrenciesRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *GetOperatorCurrenciesRequest) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type GetOperatorCurrenciesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    []*Currency            `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOperatorCurrenciesResponse) Reset() {
	*x = GetOperatorCurrenciesResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorCurrenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorCurrenciesResponse) ProtoMessage() {}

func (x *GetOperatorCurrenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorCurrenciesResponse.ProtoReflect.Descriptor instead.
func (*GetOperatorCurrenciesResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{45}
}

func (x *GetOperatorCurrenciesResponse) GetCurrencies() []*Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type ListCurrenciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    []string               `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	Enabled       *bool                  `protobuf:"varint,2,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	Hidden        *bool                  `protobuf:"varint,3,opt,name=hidden,proto3,oneof" json:"hidden,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCurrenciesRequest) Reset() {
	*x = ListCurrenciesRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCurrenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCurrenciesRequest) ProtoMessage() {}

func (x *ListCurrenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCurrenciesRequest.ProtoReflect.Descriptor instead.
func (*ListCurrenciesRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{46}
}

func (x *ListCurrenciesRequest) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

func (x *ListCurrenciesRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *ListCurrenciesRequest) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return false
}

type ListCurrenciesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    []*Currency            `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	TotalEnabled  int32                  `protobuf:"varint,3,opt,name=total_enabled,json=totalEnabled,proto3" json:"total_enabled,omitempty"`
	TotalHidden   int32                  `protobuf:"varint,4,opt,name=total_hidden,json=totalHidden,proto3" json:"total_hidden,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCurrenciesResponse) Reset() {
	*x = ListCurrenciesResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCurrenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCurrenciesResponse) ProtoMessage() {}

func (x *ListCurrenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCurrenciesResponse.ProtoReflect.Descriptor instead.
func (*ListCurrenciesResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{47}
}

func (x *ListCurrenciesResponse) GetCurrencies() []*Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

func (x *ListCurrenciesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCurrenciesResponse) GetTotalEnabled() int32 {
	if x != nil {
		return x.TotalEnabled
	}
	return 0
}

func (x *ListCurrenciesResponse) GetTotalHidden() int32 {
	if x != nil {
		return x.TotalHidden
	}
	return 0
}

type UpdateOperatorCurrencyRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	OperatorId      int64                   `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	Currency        string                  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Enabled         *bool                   `protobuf:"varint,3,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	Hidden          *bool                   `protobuf:"varint,4,opt,name=hidden,proto3,oneof" json:"hidden,omitempty"`
	Type            *string                 `protobuf:"bytes,5,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Symbol          *string                 `protobuf:"bytes,6,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`
	Icon            *string                 `protobuf:"bytes,7,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	DecimalPlaces   *int32                  `protobuf:"varint,8,opt,name=decimal_places,json=decimalPlaces,proto3,oneof" json:"decimal_places,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,9,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateOperatorCurrencyRequest) Reset() {
	*x = UpdateOperatorCurrencyRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOperatorCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOperatorCurrencyRequest) ProtoMessage() {}

func (x *UpdateOperatorCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOperatorCurrencyRequest.ProtoReflect.Descriptor instead.
func (*UpdateOperatorCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateOperatorCurrencyRequest) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *UpdateOperatorCurrencyRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UpdateOperatorCurrencyRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *UpdateOperatorCurrencyRequest) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return false
}

func (x *UpdateOperatorCurrencyRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *UpdateOperatorCurrencyRequest) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *UpdateOperatorCurrencyRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *UpdateOperatorCurrencyRequest) GetDecimalPlaces() int32 {
	if x != nil && x.DecimalPlaces != nil {
		return *x.DecimalPlaces
	}
	return 0
}

func (x *UpdateOperatorCurrencyRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type UpdateOperatorCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOperatorCurrencyResponse) Reset() {
	*x = UpdateOperatorCurrencyResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOperatorCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOperatorCurrencyResponse) ProtoMessage() {}

func (x *UpdateOperatorCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOperatorCurrencyResponse.ProtoReflect.Descriptor instead.
func (*UpdateOperatorCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{49}
}

type UpdateUserCurrencyRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	UserId          int64                   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency        string                  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Enabled         bool                    `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,4,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateUserCurrencyRequest) Reset() {
	*x = UpdateUserCurrencyRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserCurrencyRequest) ProtoMessage() {}

func (x *UpdateUserCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserCurrencyRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateUserCurrencyRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserCurrencyRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UpdateUserCurrencyRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdateUserCurrencyRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type UpdateUserCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserCurrencyResponse) Reset() {
	*x = UpdateUserCurrencyResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserCurrencyResponse) ProtoMessage() {}

func (x *UpdateUserCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserCurrencyResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{51}
}

type ListBottomOperatorBalancesRequest struct {
	state                  protoimpl.MessageState         `protogen:"open.v1"`
	OperatorContextFilters *common.OperatorContextFilters `protobuf:"bytes,1,opt,name=operator_context_filters,json=operatorContextFilters,proto3" json:"operator_context_filters,omitempty"`
	Currencies             []string                       `protobuf:"bytes,2,rep,name=currencies,proto3" json:"currencies,omitempty"`
	OperatorContext        *common.OperatorContext        `protobuf:"bytes,3,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"` // define the basic range of operators
	Page                   *int32                         `protobuf:"varint,4,opt,name=page,proto3,oneof" json:"page,omitempty"`                                       // default 1
	PageSize               *int32                         `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`               // default 20
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListBottomOperatorBalancesRequest) Reset() {
	*x = ListBottomOperatorBalancesRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBottomOperatorBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBottomOperatorBalancesRequest) ProtoMessage() {}

func (x *ListBottomOperatorBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBottomOperatorBalancesRequest.ProtoReflect.Descriptor instead.
func (*ListBottomOperatorBalancesRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{52}
}

func (x *ListBottomOperatorBalancesRequest) GetOperatorContextFilters() *common.OperatorContextFilters {
	if x != nil {
		return x.OperatorContextFilters
	}
	return nil
}

func (x *ListBottomOperatorBalancesRequest) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

func (x *ListBottomOperatorBalancesRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *ListBottomOperatorBalancesRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListBottomOperatorBalancesRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type OperatorBalance struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext       *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	RetailerOperatorName  string                  `protobuf:"bytes,2,opt,name=retailer_operator_name,json=retailerOperatorName,proto3" json:"retailer_operator_name,omitempty"`
	CompanyOperatorName   string                  `protobuf:"bytes,3,opt,name=company_operator_name,json=companyOperatorName,proto3" json:"company_operator_name,omitempty"`
	OperatorName          string                  `protobuf:"bytes,4,opt,name=operator_name,json=operatorName,proto3" json:"operator_name,omitempty"`
	Currency              string                  `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Protocol              string                  `protobuf:"bytes,6,opt,name=protocol,proto3" json:"protocol,omitempty"` // placeholder for future use
	Cash                  string                  `protobuf:"bytes,7,opt,name=cash,proto3" json:"cash,omitempty"`
	CashUsd               string                  `protobuf:"bytes,8,opt,name=cash_usd,json=cashUsd,proto3" json:"cash_usd,omitempty"`
	CashReportingCurrency string                  `protobuf:"bytes,9,opt,name=cash_reporting_currency,json=cashReportingCurrency,proto3" json:"cash_reporting_currency,omitempty"`
	Enabled               bool                    `protobuf:"varint,10,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *OperatorBalance) Reset() {
	*x = OperatorBalance{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorBalance) ProtoMessage() {}

func (x *OperatorBalance) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorBalance.ProtoReflect.Descriptor instead.
func (*OperatorBalance) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{53}
}

func (x *OperatorBalance) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *OperatorBalance) GetRetailerOperatorName() string {
	if x != nil {
		return x.RetailerOperatorName
	}
	return ""
}

func (x *OperatorBalance) GetCompanyOperatorName() string {
	if x != nil {
		return x.CompanyOperatorName
	}
	return ""
}

func (x *OperatorBalance) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *OperatorBalance) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OperatorBalance) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *OperatorBalance) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *OperatorBalance) GetCashUsd() string {
	if x != nil {
		return x.CashUsd
	}
	return ""
}

func (x *OperatorBalance) GetCashReportingCurrency() string {
	if x != nil {
		return x.CashReportingCurrency
	}
	return ""
}

func (x *OperatorBalance) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type ListBottomOperatorBalancesResponse struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	OperatorBalances           []*OperatorBalance     `protobuf:"bytes,1,rep,name=operator_balances,json=operatorBalances,proto3" json:"operator_balances,omitempty"`
	TotalCashUsd               string                 `protobuf:"bytes,2,opt,name=total_cash_usd,json=totalCashUsd,proto3" json:"total_cash_usd,omitempty"`
	TotalCashReportingCurrency string                 `protobuf:"bytes,3,opt,name=total_cash_reporting_currency,json=totalCashReportingCurrency,proto3" json:"total_cash_reporting_currency,omitempty"`
	Total                      int32                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Page                       int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize                   int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *ListBottomOperatorBalancesResponse) Reset() {
	*x = ListBottomOperatorBalancesResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBottomOperatorBalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBottomOperatorBalancesResponse) ProtoMessage() {}

func (x *ListBottomOperatorBalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBottomOperatorBalancesResponse.ProtoReflect.Descriptor instead.
func (*ListBottomOperatorBalancesResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{54}
}

func (x *ListBottomOperatorBalancesResponse) GetOperatorBalances() []*OperatorBalance {
	if x != nil {
		return x.OperatorBalances
	}
	return nil
}

func (x *ListBottomOperatorBalancesResponse) GetTotalCashUsd() string {
	if x != nil {
		return x.TotalCashUsd
	}
	return ""
}

func (x *ListBottomOperatorBalancesResponse) GetTotalCashReportingCurrency() string {
	if x != nil {
		return x.TotalCashReportingCurrency
	}
	return ""
}

func (x *ListBottomOperatorBalancesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListBottomOperatorBalancesResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListBottomOperatorBalancesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type OperatorTransferRequest struct {
	state                   protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext         *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	TargetOperatorContext   *common.OperatorContext `protobuf:"bytes,2,opt,name=target_operator_context,json=targetOperatorContext,proto3" json:"target_operator_context,omitempty"`
	Currency                string                  `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	ReportingCurrency       string                  `protobuf:"bytes,4,opt,name=reporting_currency,json=reportingCurrency,proto3" json:"reporting_currency,omitempty"`
	TargetCurrency          string                  `protobuf:"bytes,5,opt,name=target_currency,json=targetCurrency,proto3" json:"target_currency,omitempty"`
	TargetReportingCurrency string                  `protobuf:"bytes,6,opt,name=target_reporting_currency,json=targetReportingCurrency,proto3" json:"target_reporting_currency,omitempty"`
	TransactionType         string                  `protobuf:"bytes,7,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	CashAmount              string                  `protobuf:"bytes,8,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *OperatorTransferRequest) Reset() {
	*x = OperatorTransferRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorTransferRequest) ProtoMessage() {}

func (x *OperatorTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorTransferRequest.ProtoReflect.Descriptor instead.
func (*OperatorTransferRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{55}
}

func (x *OperatorTransferRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *OperatorTransferRequest) GetTargetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.TargetOperatorContext
	}
	return nil
}

func (x *OperatorTransferRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OperatorTransferRequest) GetReportingCurrency() string {
	if x != nil {
		return x.ReportingCurrency
	}
	return ""
}

func (x *OperatorTransferRequest) GetTargetCurrency() string {
	if x != nil {
		return x.TargetCurrency
	}
	return ""
}

func (x *OperatorTransferRequest) GetTargetReportingCurrency() string {
	if x != nil {
		return x.TargetReportingCurrency
	}
	return ""
}

func (x *OperatorTransferRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *OperatorTransferRequest) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

type OperatorTransferResponse struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	OperatorCash                  string                 `protobuf:"bytes,1,opt,name=operator_cash,json=operatorCash,proto3" json:"operator_cash,omitempty"`
	OperatorBalanceCurrency       string                 `protobuf:"bytes,2,opt,name=operator_balance_currency,json=operatorBalanceCurrency,proto3" json:"operator_balance_currency,omitempty"`
	TargetOperatorCash            string                 `protobuf:"bytes,3,opt,name=target_operator_cash,json=targetOperatorCash,proto3" json:"target_operator_cash,omitempty"`
	TargetOperatorBalanceCurrency string                 `protobuf:"bytes,4,opt,name=target_operator_balance_currency,json=targetOperatorBalanceCurrency,proto3" json:"target_operator_balance_currency,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *OperatorTransferResponse) Reset() {
	*x = OperatorTransferResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorTransferResponse) ProtoMessage() {}

func (x *OperatorTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorTransferResponse.ProtoReflect.Descriptor instead.
func (*OperatorTransferResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{56}
}

func (x *OperatorTransferResponse) GetOperatorCash() string {
	if x != nil {
		return x.OperatorCash
	}
	return ""
}

func (x *OperatorTransferResponse) GetOperatorBalanceCurrency() string {
	if x != nil {
		return x.OperatorBalanceCurrency
	}
	return ""
}

func (x *OperatorTransferResponse) GetTargetOperatorCash() string {
	if x != nil {
		return x.TargetOperatorCash
	}
	return ""
}

func (x *OperatorTransferResponse) GetTargetOperatorBalanceCurrency() string {
	if x != nil {
		return x.TargetOperatorBalanceCurrency
	}
	return ""
}

type OperatorSwapRequest struct {
	state                   protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext         *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	TargetOperatorContext   *common.OperatorContext `protobuf:"bytes,2,opt,name=target_operator_context,json=targetOperatorContext,proto3" json:"target_operator_context,omitempty"`
	Currency                string                  `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	ReportingCurrency       string                  `protobuf:"bytes,4,opt,name=reporting_currency,json=reportingCurrency,proto3" json:"reporting_currency,omitempty"`
	TargetCurrency          string                  `protobuf:"bytes,5,opt,name=target_currency,json=targetCurrency,proto3" json:"target_currency,omitempty"`
	TargetReportingCurrency string                  `protobuf:"bytes,6,opt,name=target_reporting_currency,json=targetReportingCurrency,proto3" json:"target_reporting_currency,omitempty"`
	TransactionType         string                  `protobuf:"bytes,7,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	CashAmount              string                  `protobuf:"bytes,8,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *OperatorSwapRequest) Reset() {
	*x = OperatorSwapRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorSwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorSwapRequest) ProtoMessage() {}

func (x *OperatorSwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorSwapRequest.ProtoReflect.Descriptor instead.
func (*OperatorSwapRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{57}
}

func (x *OperatorSwapRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *OperatorSwapRequest) GetTargetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.TargetOperatorContext
	}
	return nil
}

func (x *OperatorSwapRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OperatorSwapRequest) GetReportingCurrency() string {
	if x != nil {
		return x.ReportingCurrency
	}
	return ""
}

func (x *OperatorSwapRequest) GetTargetCurrency() string {
	if x != nil {
		return x.TargetCurrency
	}
	return ""
}

func (x *OperatorSwapRequest) GetTargetReportingCurrency() string {
	if x != nil {
		return x.TargetReportingCurrency
	}
	return ""
}

func (x *OperatorSwapRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *OperatorSwapRequest) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

type OperatorSwapResponse struct {
	state                                      protoimpl.MessageState `protogen:"open.v1"`
	CurrencyBalanceCash                        string                 `protobuf:"bytes,1,opt,name=currency_balance_cash,json=currencyBalanceCash,proto3" json:"currency_balance_cash,omitempty"`
	CurrencyBalanceCashUsd                     string                 `protobuf:"bytes,2,opt,name=currency_balance_cash_usd,json=currencyBalanceCashUsd,proto3" json:"currency_balance_cash_usd,omitempty"`
	CurrencyBalanceCashReportingCurrency       string                 `protobuf:"bytes,3,opt,name=currency_balance_cash_reporting_currency,json=currencyBalanceCashReportingCurrency,proto3" json:"currency_balance_cash_reporting_currency,omitempty"`
	TargetCurrencyBalanceCash                  string                 `protobuf:"bytes,4,opt,name=target_currency_balance_cash,json=targetCurrencyBalanceCash,proto3" json:"target_currency_balance_cash,omitempty"`
	TargetCurrencyBalanceCashUsd               string                 `protobuf:"bytes,5,opt,name=target_currency_balance_cash_usd,json=targetCurrencyBalanceCashUsd,proto3" json:"target_currency_balance_cash_usd,omitempty"`
	TargetCurrencyBalanceCashReportingCurrency string                 `protobuf:"bytes,6,opt,name=target_currency_balance_cash_reporting_currency,json=targetCurrencyBalanceCashReportingCurrency,proto3" json:"target_currency_balance_cash_reporting_currency,omitempty"`
	unknownFields                              protoimpl.UnknownFields
	sizeCache                                  protoimpl.SizeCache
}

func (x *OperatorSwapResponse) Reset() {
	*x = OperatorSwapResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorSwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorSwapResponse) ProtoMessage() {}

func (x *OperatorSwapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorSwapResponse.ProtoReflect.Descriptor instead.
func (*OperatorSwapResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{58}
}

func (x *OperatorSwapResponse) GetCurrencyBalanceCash() string {
	if x != nil {
		return x.CurrencyBalanceCash
	}
	return ""
}

func (x *OperatorSwapResponse) GetCurrencyBalanceCashUsd() string {
	if x != nil {
		return x.CurrencyBalanceCashUsd
	}
	return ""
}

func (x *OperatorSwapResponse) GetCurrencyBalanceCashReportingCurrency() string {
	if x != nil {
		return x.CurrencyBalanceCashReportingCurrency
	}
	return ""
}

func (x *OperatorSwapResponse) GetTargetCurrencyBalanceCash() string {
	if x != nil {
		return x.TargetCurrencyBalanceCash
	}
	return ""
}

func (x *OperatorSwapResponse) GetTargetCurrencyBalanceCashUsd() string {
	if x != nil {
		return x.TargetCurrencyBalanceCashUsd
	}
	return ""
}

func (x *OperatorSwapResponse) GetTargetCurrencyBalanceCashReportingCurrency() string {
	if x != nil {
		return x.TargetCurrencyBalanceCashReportingCurrency
	}
	return ""
}

type OperatorFreezeRequest struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext       *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`                     // initiator operator context
	TargetOperatorContext *common.OperatorContext `protobuf:"bytes,2,opt,name=target_operator_context,json=targetOperatorContext,proto3" json:"target_operator_context,omitempty"` // target operator context
	Currency              string                  `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	ReportingCurrency     string                  `protobuf:"bytes,4,opt,name=reporting_currency,json=reportingCurrency,proto3" json:"reporting_currency,omitempty"`
	TransactionType       string                  `protobuf:"bytes,5,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	ExternalTransactionId *int64                  `protobuf:"varint,6,opt,name=external_transaction_id,json=externalTransactionId,proto3,oneof" json:"external_transaction_id,omitempty"`
	CashAmount            string                  `protobuf:"bytes,7,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	Memo                  string                  `protobuf:"bytes,8,opt,name=memo,proto3" json:"memo,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *OperatorFreezeRequest) Reset() {
	*x = OperatorFreezeRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorFreezeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorFreezeRequest) ProtoMessage() {}

func (x *OperatorFreezeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorFreezeRequest.ProtoReflect.Descriptor instead.
func (*OperatorFreezeRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{59}
}

func (x *OperatorFreezeRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *OperatorFreezeRequest) GetTargetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.TargetOperatorContext
	}
	return nil
}

func (x *OperatorFreezeRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OperatorFreezeRequest) GetReportingCurrency() string {
	if x != nil {
		return x.ReportingCurrency
	}
	return ""
}

func (x *OperatorFreezeRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *OperatorFreezeRequest) GetExternalTransactionId() int64 {
	if x != nil && x.ExternalTransactionId != nil {
		return *x.ExternalTransactionId
	}
	return 0
}

func (x *OperatorFreezeRequest) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

func (x *OperatorFreezeRequest) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type OperatorFreezeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash          string                 `protobuf:"bytes,2,opt,name=cash,proto3" json:"cash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperatorFreezeResponse) Reset() {
	*x = OperatorFreezeResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorFreezeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorFreezeResponse) ProtoMessage() {}

func (x *OperatorFreezeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorFreezeResponse.ProtoReflect.Descriptor instead.
func (*OperatorFreezeResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{60}
}

func (x *OperatorFreezeResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *OperatorFreezeResponse) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

type OperatorRollbackRequest struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext       *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`                     // initiator operator context
	TargetOperatorContext *common.OperatorContext `protobuf:"bytes,2,opt,name=target_operator_context,json=targetOperatorContext,proto3" json:"target_operator_context,omitempty"` // target operator context
	ExternalTransactionId *int64                  `protobuf:"varint,3,opt,name=external_transaction_id,json=externalTransactionId,proto3,oneof" json:"external_transaction_id,omitempty"`
	OriginalTransactionId int64                   `protobuf:"varint,4,opt,name=original_transaction_id,json=originalTransactionId,proto3" json:"original_transaction_id,omitempty"`
	TransactionType       string                  `protobuf:"bytes,5,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	Memo                  string                  `protobuf:"bytes,6,opt,name=memo,proto3" json:"memo,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *OperatorRollbackRequest) Reset() {
	*x = OperatorRollbackRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorRollbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorRollbackRequest) ProtoMessage() {}

func (x *OperatorRollbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorRollbackRequest.ProtoReflect.Descriptor instead.
func (*OperatorRollbackRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{61}
}

func (x *OperatorRollbackRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *OperatorRollbackRequest) GetTargetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.TargetOperatorContext
	}
	return nil
}

func (x *OperatorRollbackRequest) GetExternalTransactionId() int64 {
	if x != nil && x.ExternalTransactionId != nil {
		return *x.ExternalTransactionId
	}
	return 0
}

func (x *OperatorRollbackRequest) GetOriginalTransactionId() int64 {
	if x != nil {
		return x.OriginalTransactionId
	}
	return 0
}

func (x *OperatorRollbackRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *OperatorRollbackRequest) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type OperatorRollbackResponse struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	TransactionId               int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash                        string                 `protobuf:"bytes,2,opt,name=cash,proto3" json:"cash,omitempty"`
	CashAmount                  string                 `protobuf:"bytes,3,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	CashAmountUsd               string                 `protobuf:"bytes,4,opt,name=cash_amount_usd,json=cashAmountUsd,proto3" json:"cash_amount_usd,omitempty"`
	CashAmountReportingCurrency string                 `protobuf:"bytes,5,opt,name=cash_amount_reporting_currency,json=cashAmountReportingCurrency,proto3" json:"cash_amount_reporting_currency,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *OperatorRollbackResponse) Reset() {
	*x = OperatorRollbackResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorRollbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorRollbackResponse) ProtoMessage() {}

func (x *OperatorRollbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorRollbackResponse.ProtoReflect.Descriptor instead.
func (*OperatorRollbackResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{62}
}

func (x *OperatorRollbackResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *OperatorRollbackResponse) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *OperatorRollbackResponse) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

func (x *OperatorRollbackResponse) GetCashAmountUsd() string {
	if x != nil {
		return x.CashAmountUsd
	}
	return ""
}

func (x *OperatorRollbackResponse) GetCashAmountReportingCurrency() string {
	if x != nil {
		return x.CashAmountReportingCurrency
	}
	return ""
}

type OperatorSettleRequest struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext       *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`                     // initiator operator context
	TargetOperatorContext *common.OperatorContext `protobuf:"bytes,2,opt,name=target_operator_context,json=targetOperatorContext,proto3" json:"target_operator_context,omitempty"` // target operator context
	Currency              string                  `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	ExternalTransactionId *int64                  `protobuf:"varint,4,opt,name=external_transaction_id,json=externalTransactionId,proto3,oneof" json:"external_transaction_id,omitempty"`
	OriginalTransactionId int64                   `protobuf:"varint,5,opt,name=original_transaction_id,json=originalTransactionId,proto3" json:"original_transaction_id,omitempty"`
	TransactionType       string                  `protobuf:"bytes,6,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	Memo                  string                  `protobuf:"bytes,7,opt,name=memo,proto3" json:"memo,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *OperatorSettleRequest) Reset() {
	*x = OperatorSettleRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorSettleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorSettleRequest) ProtoMessage() {}

func (x *OperatorSettleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorSettleRequest.ProtoReflect.Descriptor instead.
func (*OperatorSettleRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{63}
}

func (x *OperatorSettleRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *OperatorSettleRequest) GetTargetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.TargetOperatorContext
	}
	return nil
}

func (x *OperatorSettleRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OperatorSettleRequest) GetExternalTransactionId() int64 {
	if x != nil && x.ExternalTransactionId != nil {
		return *x.ExternalTransactionId
	}
	return 0
}

func (x *OperatorSettleRequest) GetOriginalTransactionId() int64 {
	if x != nil {
		return x.OriginalTransactionId
	}
	return 0
}

func (x *OperatorSettleRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *OperatorSettleRequest) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type OperatorSettleResponse struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	TransactionId               int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash                        string                 `protobuf:"bytes,2,opt,name=cash,proto3" json:"cash,omitempty"`
	CashAmount                  string                 `protobuf:"bytes,3,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	CashAmountUsd               string                 `protobuf:"bytes,4,opt,name=cash_amount_usd,json=cashAmountUsd,proto3" json:"cash_amount_usd,omitempty"`
	CashAmountReportingCurrency string                 `protobuf:"bytes,5,opt,name=cash_amount_reporting_currency,json=cashAmountReportingCurrency,proto3" json:"cash_amount_reporting_currency,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *OperatorSettleResponse) Reset() {
	*x = OperatorSettleResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorSettleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorSettleResponse) ProtoMessage() {}

func (x *OperatorSettleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorSettleResponse.ProtoReflect.Descriptor instead.
func (*OperatorSettleResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{64}
}

func (x *OperatorSettleResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *OperatorSettleResponse) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *OperatorSettleResponse) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

func (x *OperatorSettleResponse) GetCashAmountUsd() string {
	if x != nil {
		return x.CashAmountUsd
	}
	return ""
}

func (x *OperatorSettleResponse) GetCashAmountReportingCurrency() string {
	if x != nil {
		return x.CashAmountReportingCurrency
	}
	return ""
}

type GetOperatorBalanceRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetOperatorBalanceRequest) Reset() {
	*x = GetOperatorBalanceRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorBalanceRequest) ProtoMessage() {}

func (x *GetOperatorBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetOperatorBalanceRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{65}
}

func (x *GetOperatorBalanceRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type GetOperatorBalanceResponse struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	OperatorBalances           []*OperatorBalance     `protobuf:"bytes,1,rep,name=operator_balances,json=operatorBalances,proto3" json:"operator_balances,omitempty"`
	TotalCashUsd               string                 `protobuf:"bytes,2,opt,name=total_cash_usd,json=totalCashUsd,proto3" json:"total_cash_usd,omitempty"`
	TotalCashReportingCurrency string                 `protobuf:"bytes,3,opt,name=total_cash_reporting_currency,json=totalCashReportingCurrency,proto3" json:"total_cash_reporting_currency,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *GetOperatorBalanceResponse) Reset() {
	*x = GetOperatorBalanceResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorBalanceResponse) ProtoMessage() {}

func (x *GetOperatorBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetOperatorBalanceResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{66}
}

func (x *GetOperatorBalanceResponse) GetOperatorBalances() []*OperatorBalance {
	if x != nil {
		return x.OperatorBalances
	}
	return nil
}

func (x *GetOperatorBalanceResponse) GetTotalCashUsd() string {
	if x != nil {
		return x.TotalCashUsd
	}
	return ""
}

func (x *GetOperatorBalanceResponse) GetTotalCashReportingCurrency() string {
	if x != nil {
		return x.TotalCashReportingCurrency
	}
	return ""
}

type ListOperatorBalanceTransactionsRequest struct {
	state                  protoimpl.MessageState         `protogen:"open.v1"`
	OperatorContextFilters *common.OperatorContextFilters `protobuf:"bytes,1,opt,name=operator_context_filters,json=operatorContextFilters,proto3" json:"operator_context_filters,omitempty"`
	SettlementCurrencies   []string                       `protobuf:"bytes,2,rep,name=settlement_currencies,json=settlementCurrencies,proto3" json:"settlement_currencies,omitempty"`
	TransactionTypes       []string                       `protobuf:"bytes,3,rep,name=transaction_types,json=transactionTypes,proto3" json:"transaction_types,omitempty"`
	TransactionId          *int64                         `protobuf:"varint,4,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	StartTime              *timestamppb.Timestamp         `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	EndTime                *timestamppb.Timestamp         `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	OperatorContext        *common.OperatorContext        `protobuf:"bytes,7,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"` // define the basic range of operators
	TargetOperatorType     string                         `protobuf:"bytes,8,opt,name=target_operator_type,json=targetOperatorType,proto3" json:"target_operator_type,omitempty"`
	Page                   *int32                         `protobuf:"varint,9,opt,name=page,proto3,oneof" json:"page,omitempty"`                          // default 1
	PageSize               *int32                         `protobuf:"varint,10,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"` // default 20
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListOperatorBalanceTransactionsRequest) Reset() {
	*x = ListOperatorBalanceTransactionsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOperatorBalanceTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperatorBalanceTransactionsRequest) ProtoMessage() {}

func (x *ListOperatorBalanceTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperatorBalanceTransactionsRequest.ProtoReflect.Descriptor instead.
func (*ListOperatorBalanceTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{67}
}

func (x *ListOperatorBalanceTransactionsRequest) GetOperatorContextFilters() *common.OperatorContextFilters {
	if x != nil {
		return x.OperatorContextFilters
	}
	return nil
}

func (x *ListOperatorBalanceTransactionsRequest) GetSettlementCurrencies() []string {
	if x != nil {
		return x.SettlementCurrencies
	}
	return nil
}

func (x *ListOperatorBalanceTransactionsRequest) GetTransactionTypes() []string {
	if x != nil {
		return x.TransactionTypes
	}
	return nil
}

func (x *ListOperatorBalanceTransactionsRequest) GetTransactionId() int64 {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return 0
}

func (x *ListOperatorBalanceTransactionsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListOperatorBalanceTransactionsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ListOperatorBalanceTransactionsRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *ListOperatorBalanceTransactionsRequest) GetTargetOperatorType() string {
	if x != nil {
		return x.TargetOperatorType
	}
	return ""
}

func (x *ListOperatorBalanceTransactionsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListOperatorBalanceTransactionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type OperatorBalanceTransaction struct {
	state                          protoimpl.MessageState  `protogen:"open.v1"`
	TransactionId                  int64                   `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ExternalTransactionId          int64                   `protobuf:"varint,2,opt,name=external_transaction_id,json=externalTransactionId,proto3" json:"external_transaction_id,omitempty"`
	RelatedTransactionId           int64                   `protobuf:"varint,3,opt,name=related_transaction_id,json=relatedTransactionId,proto3" json:"related_transaction_id,omitempty"`
	OperatorContext                *common.OperatorContext `protobuf:"bytes,4,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	SystemOperatorName             string                  `protobuf:"bytes,5,opt,name=system_operator_name,json=systemOperatorName,proto3" json:"system_operator_name,omitempty"`
	RetailerOperatorName           string                  `protobuf:"bytes,6,opt,name=retailer_operator_name,json=retailerOperatorName,proto3" json:"retailer_operator_name,omitempty"`
	CompanyOperatorName            string                  `protobuf:"bytes,7,opt,name=company_operator_name,json=companyOperatorName,proto3" json:"company_operator_name,omitempty"`
	OperatorName                   string                  `protobuf:"bytes,8,opt,name=operator_name,json=operatorName,proto3" json:"operator_name,omitempty"`
	Currency                       string                  `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	SettlementCurrency             string                  `protobuf:"bytes,10,opt,name=settlement_currency,json=settlementCurrency,proto3" json:"settlement_currency,omitempty"`
	ReportingCurrency              string                  `protobuf:"bytes,11,opt,name=reporting_currency,json=reportingCurrency,proto3" json:"reporting_currency,omitempty"`
	BeforeBalance                  string                  `protobuf:"bytes,12,opt,name=before_balance,json=beforeBalance,proto3" json:"before_balance,omitempty"`
	BeforeBalanceUsd               string                  `protobuf:"bytes,13,opt,name=before_balance_usd,json=beforeBalanceUsd,proto3" json:"before_balance_usd,omitempty"`
	BeforeBalanceReportingCurrency string                  `protobuf:"bytes,14,opt,name=before_balance_reporting_currency,json=beforeBalanceReportingCurrency,proto3" json:"before_balance_reporting_currency,omitempty"`
	AfterBalance                   string                  `protobuf:"bytes,15,opt,name=after_balance,json=afterBalance,proto3" json:"after_balance,omitempty"`
	AfterBalanceUsd                string                  `protobuf:"bytes,16,opt,name=after_balance_usd,json=afterBalanceUsd,proto3" json:"after_balance_usd,omitempty"`
	AfterBalanceReportingCurrency  string                  `protobuf:"bytes,17,opt,name=after_balance_reporting_currency,json=afterBalanceReportingCurrency,proto3" json:"after_balance_reporting_currency,omitempty"`
	CashAmount                     string                  `protobuf:"bytes,18,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	CashAmountUsd                  string                  `protobuf:"bytes,19,opt,name=cash_amount_usd,json=cashAmountUsd,proto3" json:"cash_amount_usd,omitempty"`
	CashAmountReportingCurrency    string                  `protobuf:"bytes,20,opt,name=cash_amount_reporting_currency,json=cashAmountReportingCurrency,proto3" json:"cash_amount_reporting_currency,omitempty"`
	TransactionType                string                  `protobuf:"bytes,21,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	Status                         string                  `protobuf:"bytes,22,opt,name=status,proto3" json:"status,omitempty"`
	Memo                           string                  `protobuf:"bytes,23,opt,name=memo,proto3" json:"memo,omitempty"`
	FeeAmount                      string                  `protobuf:"bytes,24,opt,name=fee_amount,json=feeAmount,proto3" json:"fee_amount,omitempty"`
	FeeAmountUsd                   string                  `protobuf:"bytes,25,opt,name=fee_amount_usd,json=feeAmountUsd,proto3" json:"fee_amount_usd,omitempty"`
	FeeAmountReportingCurrency     string                  `protobuf:"bytes,26,opt,name=fee_amount_reporting_currency,json=feeAmountReportingCurrency,proto3" json:"fee_amount_reporting_currency,omitempty"`
	CreatedAt                      *timestamppb.Timestamp  `protobuf:"bytes,27,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                      *timestamppb.Timestamp  `protobuf:"bytes,28,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *OperatorBalanceTransaction) Reset() {
	*x = OperatorBalanceTransaction{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorBalanceTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorBalanceTransaction) ProtoMessage() {}

func (x *OperatorBalanceTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorBalanceTransaction.ProtoReflect.Descriptor instead.
func (*OperatorBalanceTransaction) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{68}
}

func (x *OperatorBalanceTransaction) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *OperatorBalanceTransaction) GetExternalTransactionId() int64 {
	if x != nil {
		return x.ExternalTransactionId
	}
	return 0
}

func (x *OperatorBalanceTransaction) GetRelatedTransactionId() int64 {
	if x != nil {
		return x.RelatedTransactionId
	}
	return 0
}

func (x *OperatorBalanceTransaction) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *OperatorBalanceTransaction) GetSystemOperatorName() string {
	if x != nil {
		return x.SystemOperatorName
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetRetailerOperatorName() string {
	if x != nil {
		return x.RetailerOperatorName
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetCompanyOperatorName() string {
	if x != nil {
		return x.CompanyOperatorName
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetOperatorName() string {
	if x != nil {
		return x.OperatorName
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetSettlementCurrency() string {
	if x != nil {
		return x.SettlementCurrency
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetReportingCurrency() string {
	if x != nil {
		return x.ReportingCurrency
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetBeforeBalance() string {
	if x != nil {
		return x.BeforeBalance
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetBeforeBalanceUsd() string {
	if x != nil {
		return x.BeforeBalanceUsd
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetBeforeBalanceReportingCurrency() string {
	if x != nil {
		return x.BeforeBalanceReportingCurrency
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetAfterBalance() string {
	if x != nil {
		return x.AfterBalance
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetAfterBalanceUsd() string {
	if x != nil {
		return x.AfterBalanceUsd
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetAfterBalanceReportingCurrency() string {
	if x != nil {
		return x.AfterBalanceReportingCurrency
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetCashAmountUsd() string {
	if x != nil {
		return x.CashAmountUsd
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetCashAmountReportingCurrency() string {
	if x != nil {
		return x.CashAmountReportingCurrency
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetFeeAmount() string {
	if x != nil {
		return x.FeeAmount
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetFeeAmountUsd() string {
	if x != nil {
		return x.FeeAmountUsd
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetFeeAmountReportingCurrency() string {
	if x != nil {
		return x.FeeAmountReportingCurrency
	}
	return ""
}

func (x *OperatorBalanceTransaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *OperatorBalanceTransaction) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ListOperatorBalanceTransactionsResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Transactions  []*OperatorBalanceTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Total         int32                         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page          int32                         `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                         `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListOperatorBalanceTransactionsResponse) Reset() {
	*x = ListOperatorBalanceTransactionsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOperatorBalanceTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOperatorBalanceTransactionsResponse) ProtoMessage() {}

func (x *ListOperatorBalanceTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOperatorBalanceTransactionsResponse.ProtoReflect.Descriptor instead.
func (*ListOperatorBalanceTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{69}
}

func (x *ListOperatorBalanceTransactionsResponse) GetTransactions() []*OperatorBalanceTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *ListOperatorBalanceTransactionsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListOperatorBalanceTransactionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListOperatorBalanceTransactionsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type OperatorDebitRequest struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext       *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	Currency              string                  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	ReportingCurrency     string                  `protobuf:"bytes,3,opt,name=reporting_currency,json=reportingCurrency,proto3" json:"reporting_currency,omitempty"`
	TransactionType       string                  `protobuf:"bytes,4,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	ExternalTransactionId *int64                  `protobuf:"varint,5,opt,name=external_transaction_id,json=externalTransactionId,proto3,oneof" json:"external_transaction_id,omitempty"`
	CashAmount            string                  `protobuf:"bytes,6,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *OperatorDebitRequest) Reset() {
	*x = OperatorDebitRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorDebitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorDebitRequest) ProtoMessage() {}

func (x *OperatorDebitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorDebitRequest.ProtoReflect.Descriptor instead.
func (*OperatorDebitRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{70}
}

func (x *OperatorDebitRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *OperatorDebitRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OperatorDebitRequest) GetReportingCurrency() string {
	if x != nil {
		return x.ReportingCurrency
	}
	return ""
}

func (x *OperatorDebitRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *OperatorDebitRequest) GetExternalTransactionId() int64 {
	if x != nil && x.ExternalTransactionId != nil {
		return *x.ExternalTransactionId
	}
	return 0
}

func (x *OperatorDebitRequest) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

type OperatorDebitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash          string                 `protobuf:"bytes,2,opt,name=cash,proto3" json:"cash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperatorDebitResponse) Reset() {
	*x = OperatorDebitResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorDebitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorDebitResponse) ProtoMessage() {}

func (x *OperatorDebitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorDebitResponse.ProtoReflect.Descriptor instead.
func (*OperatorDebitResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{71}
}

func (x *OperatorDebitResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *OperatorDebitResponse) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

type UpdateOperatorBalanceRequest struct {
	state                  protoimpl.MessageState  `protogen:"open.v1"`
	InitialOperatorContext *common.OperatorContext `protobuf:"bytes,1,opt,name=initial_operator_context,json=initialOperatorContext,proto3" json:"initial_operator_context,omitempty"`
	TargetOperatorContext  *common.OperatorContext `protobuf:"bytes,2,opt,name=target_operator_context,json=targetOperatorContext,proto3" json:"target_operator_context,omitempty"`
	Currency               string                  `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	Enabled                bool                    `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateOperatorBalanceRequest) Reset() {
	*x = UpdateOperatorBalanceRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOperatorBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOperatorBalanceRequest) ProtoMessage() {}

func (x *UpdateOperatorBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOperatorBalanceRequest.ProtoReflect.Descriptor instead.
func (*UpdateOperatorBalanceRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{72}
}

func (x *UpdateOperatorBalanceRequest) GetInitialOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.InitialOperatorContext
	}
	return nil
}

func (x *UpdateOperatorBalanceRequest) GetTargetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.TargetOperatorContext
	}
	return nil
}

func (x *UpdateOperatorBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UpdateOperatorBalanceRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type UpdateOperatorBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOperatorBalanceResponse) Reset() {
	*x = UpdateOperatorBalanceResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOperatorBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOperatorBalanceResponse) ProtoMessage() {}

func (x *UpdateOperatorBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOperatorBalanceResponse.ProtoReflect.Descriptor instead.
func (*UpdateOperatorBalanceResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{73}
}

func (x *UpdateOperatorBalanceResponse) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type GetOperatorTransactionSummaryRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	Currency        *string                 `protobuf:"bytes,2,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	StartTime       *int64                  `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	EndTime         *int64                  `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetOperatorTransactionSummaryRequest) Reset() {
	*x = GetOperatorTransactionSummaryRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorTransactionSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorTransactionSummaryRequest) ProtoMessage() {}

func (x *GetOperatorTransactionSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorTransactionSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetOperatorTransactionSummaryRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{74}
}

func (x *GetOperatorTransactionSummaryRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *GetOperatorTransactionSummaryRequest) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *GetOperatorTransactionSummaryRequest) GetStartTime() int64 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

func (x *GetOperatorTransactionSummaryRequest) GetEndTime() int64 {
	if x != nil && x.EndTime != nil {
		return *x.EndTime
	}
	return 0
}

type GetOperatorTransactionSummaryResponse struct {
	state                             protoimpl.MessageState `protogen:"open.v1"`
	TotalWithdrawUsd                  string                 `protobuf:"bytes,1,opt,name=total_withdraw_usd,json=totalWithdrawUsd,proto3" json:"total_withdraw_usd,omitempty"`
	TotalDepositUsd                   string                 `protobuf:"bytes,2,opt,name=total_deposit_usd,json=totalDepositUsd,proto3" json:"total_deposit_usd,omitempty"`
	TotalTransferOutUsd               string                 `protobuf:"bytes,3,opt,name=total_transfer_out_usd,json=totalTransferOutUsd,proto3" json:"total_transfer_out_usd,omitempty"`
	TotalTransferInUsd                string                 `protobuf:"bytes,4,opt,name=total_transfer_in_usd,json=totalTransferInUsd,proto3" json:"total_transfer_in_usd,omitempty"`
	TotalSwapOutUsd                   string                 `protobuf:"bytes,5,opt,name=total_swap_out_usd,json=totalSwapOutUsd,proto3" json:"total_swap_out_usd,omitempty"`
	TotalSwapInUsd                    string                 `protobuf:"bytes,6,opt,name=total_swap_in_usd,json=totalSwapInUsd,proto3" json:"total_swap_in_usd,omitempty"`
	TotalFreezeUsd                    string                 `protobuf:"bytes,7,opt,name=total_freeze_usd,json=totalFreezeUsd,proto3" json:"total_freeze_usd,omitempty"`
	TotalRollbackUsd                  string                 `protobuf:"bytes,8,opt,name=total_rollback_usd,json=totalRollbackUsd,proto3" json:"total_rollback_usd,omitempty"`
	ReportingCurrency                 string                 `protobuf:"bytes,9,opt,name=reporting_currency,json=reportingCurrency,proto3" json:"reporting_currency,omitempty"`
	TotalWithdrawReportingCurrency    string                 `protobuf:"bytes,10,opt,name=total_withdraw_reporting_currency,json=totalWithdrawReportingCurrency,proto3" json:"total_withdraw_reporting_currency,omitempty"`
	TotalDepositReportingCurrency     string                 `protobuf:"bytes,11,opt,name=total_deposit_reporting_currency,json=totalDepositReportingCurrency,proto3" json:"total_deposit_reporting_currency,omitempty"`
	TotalTransferOutReportingCurrency string                 `protobuf:"bytes,12,opt,name=total_transfer_out_reporting_currency,json=totalTransferOutReportingCurrency,proto3" json:"total_transfer_out_reporting_currency,omitempty"`
	TotalTransferInReportingCurrency  string                 `protobuf:"bytes,13,opt,name=total_transfer_in_reporting_currency,json=totalTransferInReportingCurrency,proto3" json:"total_transfer_in_reporting_currency,omitempty"`
	TotalSwapOutReportingCurrency     string                 `protobuf:"bytes,14,opt,name=total_swap_out_reporting_currency,json=totalSwapOutReportingCurrency,proto3" json:"total_swap_out_reporting_currency,omitempty"`
	TotalSwapInReportingCurrency      string                 `protobuf:"bytes,15,opt,name=total_swap_in_reporting_currency,json=totalSwapInReportingCurrency,proto3" json:"total_swap_in_reporting_currency,omitempty"`
	TotalFreezeReportingCurrency      string                 `protobuf:"bytes,16,opt,name=total_freeze_reporting_currency,json=totalFreezeReportingCurrency,proto3" json:"total_freeze_reporting_currency,omitempty"`
	TotalRollbackReportingCurrency    string                 `protobuf:"bytes,17,opt,name=total_rollback_reporting_currency,json=totalRollbackReportingCurrency,proto3" json:"total_rollback_reporting_currency,omitempty"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *GetOperatorTransactionSummaryResponse) Reset() {
	*x = GetOperatorTransactionSummaryResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorTransactionSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorTransactionSummaryResponse) ProtoMessage() {}

func (x *GetOperatorTransactionSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorTransactionSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetOperatorTransactionSummaryResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{75}
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalWithdrawUsd() string {
	if x != nil {
		return x.TotalWithdrawUsd
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalDepositUsd() string {
	if x != nil {
		return x.TotalDepositUsd
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalTransferOutUsd() string {
	if x != nil {
		return x.TotalTransferOutUsd
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalTransferInUsd() string {
	if x != nil {
		return x.TotalTransferInUsd
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalSwapOutUsd() string {
	if x != nil {
		return x.TotalSwapOutUsd
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalSwapInUsd() string {
	if x != nil {
		return x.TotalSwapInUsd
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalFreezeUsd() string {
	if x != nil {
		return x.TotalFreezeUsd
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalRollbackUsd() string {
	if x != nil {
		return x.TotalRollbackUsd
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetReportingCurrency() string {
	if x != nil {
		return x.ReportingCurrency
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalWithdrawReportingCurrency() string {
	if x != nil {
		return x.TotalWithdrawReportingCurrency
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalDepositReportingCurrency() string {
	if x != nil {
		return x.TotalDepositReportingCurrency
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalTransferOutReportingCurrency() string {
	if x != nil {
		return x.TotalTransferOutReportingCurrency
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalTransferInReportingCurrency() string {
	if x != nil {
		return x.TotalTransferInReportingCurrency
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalSwapOutReportingCurrency() string {
	if x != nil {
		return x.TotalSwapOutReportingCurrency
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalSwapInReportingCurrency() string {
	if x != nil {
		return x.TotalSwapInReportingCurrency
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalFreezeReportingCurrency() string {
	if x != nil {
		return x.TotalFreezeReportingCurrency
	}
	return ""
}

func (x *GetOperatorTransactionSummaryResponse) GetTotalRollbackReportingCurrency() string {
	if x != nil {
		return x.TotalRollbackReportingCurrency
	}
	return ""
}

type GetOperatorBalanceTransactionsByIdsRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	TransactionIds  []int64                 `protobuf:"varint,1,rep,packed,name=transaction_ids,json=transactionIds,proto3" json:"transaction_ids,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,2,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetOperatorBalanceTransactionsByIdsRequest) Reset() {
	*x = GetOperatorBalanceTransactionsByIdsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorBalanceTransactionsByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorBalanceTransactionsByIdsRequest) ProtoMessage() {}

func (x *GetOperatorBalanceTransactionsByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorBalanceTransactionsByIdsRequest.ProtoReflect.Descriptor instead.
func (*GetOperatorBalanceTransactionsByIdsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{76}
}

func (x *GetOperatorBalanceTransactionsByIdsRequest) GetTransactionIds() []int64 {
	if x != nil {
		return x.TransactionIds
	}
	return nil
}

func (x *GetOperatorBalanceTransactionsByIdsRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type GetOperatorBalanceTransactionsByIdsResponse struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Transactions  []*OperatorBalanceTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOperatorBalanceTransactionsByIdsResponse) Reset() {
	*x = GetOperatorBalanceTransactionsByIdsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorBalanceTransactionsByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorBalanceTransactionsByIdsResponse) ProtoMessage() {}

func (x *GetOperatorBalanceTransactionsByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorBalanceTransactionsByIdsResponse.ProtoReflect.Descriptor instead.
func (*GetOperatorBalanceTransactionsByIdsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{77}
}

func (x *GetOperatorBalanceTransactionsByIdsResponse) GetTransactions() []*OperatorBalanceTransaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type RewardSequence struct {
	state               protoimpl.MessageState       `protogen:"open.v1"`
	SerialNumber        int32                        `protobuf:"varint,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Name                string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Enabled             bool                         `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	RewardType          string                       `protobuf:"bytes,4,opt,name=reward_type,json=rewardType,proto3" json:"reward_type,omitempty"`                             // cash or bonus
	WageringRequirement int32                        `protobuf:"varint,5,opt,name=wagering_requirement,json=wageringRequirement,proto3" json:"wagering_requirement,omitempty"` // coefficient
	RewardValidity      int64                        `protobuf:"varint,6,opt,name=reward_validity,json=rewardValidity,proto3" json:"reward_validity,omitempty"`                // milliseconds
	TierConfigs         []*RewardSequence_TierConfig `protobuf:"bytes,7,rep,name=tier_configs,json=tierConfigs,proto3" json:"tier_configs,omitempty"`
	StartTime           *timestamppb.Timestamp       `protobuf:"bytes,8,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime             *timestamppb.Timestamp       `protobuf:"bytes,9,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RewardSequence) Reset() {
	*x = RewardSequence{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RewardSequence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardSequence) ProtoMessage() {}

func (x *RewardSequence) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardSequence.ProtoReflect.Descriptor instead.
func (*RewardSequence) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{78}
}

func (x *RewardSequence) GetSerialNumber() int32 {
	if x != nil {
		return x.SerialNumber
	}
	return 0
}

func (x *RewardSequence) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RewardSequence) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *RewardSequence) GetRewardType() string {
	if x != nil {
		return x.RewardType
	}
	return ""
}

func (x *RewardSequence) GetWageringRequirement() int32 {
	if x != nil {
		return x.WageringRequirement
	}
	return 0
}

func (x *RewardSequence) GetRewardValidity() int64 {
	if x != nil {
		return x.RewardValidity
	}
	return 0
}

func (x *RewardSequence) GetTierConfigs() []*RewardSequence_TierConfig {
	if x != nil {
		return x.TierConfigs
	}
	return nil
}

func (x *RewardSequence) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *RewardSequence) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// Deposit reward config for an operator with specific currency
type DepositRewardConfig struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	WelcomeRewardEnabled   bool                   `protobuf:"varint,1,opt,name=welcome_reward_enabled,json=welcomeRewardEnabled,proto3" json:"welcome_reward_enabled,omitempty"`
	DailyRewardEnabled     bool                   `protobuf:"varint,2,opt,name=daily_reward_enabled,json=dailyRewardEnabled,proto3" json:"daily_reward_enabled,omitempty"`
	WelcomeRewardSequences []*RewardSequence      `protobuf:"bytes,3,rep,name=welcome_reward_sequences,json=welcomeRewardSequences,proto3" json:"welcome_reward_sequences,omitempty"`
	DailyRewardSequences   []*RewardSequence      `protobuf:"bytes,4,rep,name=daily_reward_sequences,json=dailyRewardSequences,proto3" json:"daily_reward_sequences,omitempty"`
	CreatedAt              *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DepositRewardConfig) Reset() {
	*x = DepositRewardConfig{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DepositRewardConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepositRewardConfig) ProtoMessage() {}

func (x *DepositRewardConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepositRewardConfig.ProtoReflect.Descriptor instead.
func (*DepositRewardConfig) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{79}
}

func (x *DepositRewardConfig) GetWelcomeRewardEnabled() bool {
	if x != nil {
		return x.WelcomeRewardEnabled
	}
	return false
}

func (x *DepositRewardConfig) GetDailyRewardEnabled() bool {
	if x != nil {
		return x.DailyRewardEnabled
	}
	return false
}

func (x *DepositRewardConfig) GetWelcomeRewardSequences() []*RewardSequence {
	if x != nil {
		return x.WelcomeRewardSequences
	}
	return nil
}

func (x *DepositRewardConfig) GetDailyRewardSequences() []*RewardSequence {
	if x != nil {
		return x.DailyRewardSequences
	}
	return nil
}

func (x *DepositRewardConfig) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DepositRewardConfig) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SetDepositRewardSequencesRequest struct {
	state                    protoimpl.MessageState  `protogen:"open.v1"`
	InitiatorOperatorContext *common.OperatorContext `protobuf:"bytes,1,opt,name=initiator_operator_context,json=initiatorOperatorContext,proto3" json:"initiator_operator_context,omitempty"`
	TargetOperatorContext    *common.OperatorContext `protobuf:"bytes,2,opt,name=target_operator_context,json=targetOperatorContext,proto3" json:"target_operator_context,omitempty"`
	UserId                   int64                   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency                 string                  `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	FollowParent             *bool                   `protobuf:"varint,5,opt,name=follow_parent,json=followParent,proto3,oneof" json:"follow_parent,omitempty"`
	WelcomeRewardEnabled     *bool                   `protobuf:"varint,6,opt,name=welcome_reward_enabled,json=welcomeRewardEnabled,proto3,oneof" json:"welcome_reward_enabled,omitempty"`
	DailyRewardEnabled       *bool                   `protobuf:"varint,7,opt,name=daily_reward_enabled,json=dailyRewardEnabled,proto3,oneof" json:"daily_reward_enabled,omitempty"`
	WelcomeRewardSequences   []*RewardSequence       `protobuf:"bytes,8,rep,name=welcome_reward_sequences,json=welcomeRewardSequences,proto3" json:"welcome_reward_sequences,omitempty"`
	DailyRewardSequences     []*RewardSequence       `protobuf:"bytes,9,rep,name=daily_reward_sequences,json=dailyRewardSequences,proto3" json:"daily_reward_sequences,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *SetDepositRewardSequencesRequest) Reset() {
	*x = SetDepositRewardSequencesRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDepositRewardSequencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDepositRewardSequencesRequest) ProtoMessage() {}

func (x *SetDepositRewardSequencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDepositRewardSequencesRequest.ProtoReflect.Descriptor instead.
func (*SetDepositRewardSequencesRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{80}
}

func (x *SetDepositRewardSequencesRequest) GetInitiatorOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.InitiatorOperatorContext
	}
	return nil
}

func (x *SetDepositRewardSequencesRequest) GetTargetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.TargetOperatorContext
	}
	return nil
}

func (x *SetDepositRewardSequencesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SetDepositRewardSequencesRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *SetDepositRewardSequencesRequest) GetFollowParent() bool {
	if x != nil && x.FollowParent != nil {
		return *x.FollowParent
	}
	return false
}

func (x *SetDepositRewardSequencesRequest) GetWelcomeRewardEnabled() bool {
	if x != nil && x.WelcomeRewardEnabled != nil {
		return *x.WelcomeRewardEnabled
	}
	return false
}

func (x *SetDepositRewardSequencesRequest) GetDailyRewardEnabled() bool {
	if x != nil && x.DailyRewardEnabled != nil {
		return *x.DailyRewardEnabled
	}
	return false
}

func (x *SetDepositRewardSequencesRequest) GetWelcomeRewardSequences() []*RewardSequence {
	if x != nil {
		return x.WelcomeRewardSequences
	}
	return nil
}

func (x *SetDepositRewardSequencesRequest) GetDailyRewardSequences() []*RewardSequence {
	if x != nil {
		return x.DailyRewardSequences
	}
	return nil
}

type SetDepositRewardSequencesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetDepositRewardSequencesResponse) Reset() {
	*x = SetDepositRewardSequencesResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetDepositRewardSequencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDepositRewardSequencesResponse) ProtoMessage() {}

func (x *SetDepositRewardSequencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDepositRewardSequencesResponse.ProtoReflect.Descriptor instead.
func (*SetDepositRewardSequencesResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{81}
}

type DeleteDepositRewardSequencesRequest struct {
	state                              protoimpl.MessageState  `protogen:"open.v1"`
	InitiatorOperatorContext           *common.OperatorContext `protobuf:"bytes,1,opt,name=initiator_operator_context,json=initiatorOperatorContext,proto3" json:"initiator_operator_context,omitempty"`
	TargetOperatorContext              *common.OperatorContext `protobuf:"bytes,2,opt,name=target_operator_context,json=targetOperatorContext,proto3" json:"target_operator_context,omitempty"`
	UserId                             int64                   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency                           string                  `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	WelcomeRewardSequenceSerialNumbers []int32                 `protobuf:"varint,5,rep,packed,name=welcome_reward_sequence_serial_numbers,json=welcomeRewardSequenceSerialNumbers,proto3" json:"welcome_reward_sequence_serial_numbers,omitempty"`
	DailyRewardSequenceSerialNumbers   []int32                 `protobuf:"varint,6,rep,packed,name=daily_reward_sequence_serial_numbers,json=dailyRewardSequenceSerialNumbers,proto3" json:"daily_reward_sequence_serial_numbers,omitempty"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *DeleteDepositRewardSequencesRequest) Reset() {
	*x = DeleteDepositRewardSequencesRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDepositRewardSequencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDepositRewardSequencesRequest) ProtoMessage() {}

func (x *DeleteDepositRewardSequencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDepositRewardSequencesRequest.ProtoReflect.Descriptor instead.
func (*DeleteDepositRewardSequencesRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{82}
}

func (x *DeleteDepositRewardSequencesRequest) GetInitiatorOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.InitiatorOperatorContext
	}
	return nil
}

func (x *DeleteDepositRewardSequencesRequest) GetTargetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.TargetOperatorContext
	}
	return nil
}

func (x *DeleteDepositRewardSequencesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteDepositRewardSequencesRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *DeleteDepositRewardSequencesRequest) GetWelcomeRewardSequenceSerialNumbers() []int32 {
	if x != nil {
		return x.WelcomeRewardSequenceSerialNumbers
	}
	return nil
}

func (x *DeleteDepositRewardSequencesRequest) GetDailyRewardSequenceSerialNumbers() []int32 {
	if x != nil {
		return x.DailyRewardSequenceSerialNumbers
	}
	return nil
}

type DeleteDepositRewardSequencesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDepositRewardSequencesResponse) Reset() {
	*x = DeleteDepositRewardSequencesResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDepositRewardSequencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDepositRewardSequencesResponse) ProtoMessage() {}

func (x *DeleteDepositRewardSequencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDepositRewardSequencesResponse.ProtoReflect.Descriptor instead.
func (*DeleteDepositRewardSequencesResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{83}
}

type GetDepositRewardConfigRequest struct {
	state                    protoimpl.MessageState  `protogen:"open.v1"`
	InitiatorOperatorContext *common.OperatorContext `protobuf:"bytes,1,opt,name=initiator_operator_context,json=initiatorOperatorContext,proto3" json:"initiator_operator_context,omitempty"`
	TargetOperatorContext    *common.OperatorContext `protobuf:"bytes,2,opt,name=target_operator_context,json=targetOperatorContext,proto3" json:"target_operator_context,omitempty"`
	Currency                 string                  `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GetDepositRewardConfigRequest) Reset() {
	*x = GetDepositRewardConfigRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDepositRewardConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositRewardConfigRequest) ProtoMessage() {}

func (x *GetDepositRewardConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositRewardConfigRequest.ProtoReflect.Descriptor instead.
func (*GetDepositRewardConfigRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{84}
}

func (x *GetDepositRewardConfigRequest) GetInitiatorOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.InitiatorOperatorContext
	}
	return nil
}

func (x *GetDepositRewardConfigRequest) GetTargetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.TargetOperatorContext
	}
	return nil
}

func (x *GetDepositRewardConfigRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type GetDepositRewardConfigResponse struct {
	state                          protoimpl.MessageState  `protogen:"open.v1"`
	CustomOperatorContext          *common.OperatorContext `protobuf:"bytes,1,opt,name=custom_operator_context,json=customOperatorContext,proto3" json:"custom_operator_context,omitempty"`
	Currency                       string                  `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	InheritedOperatorContext       *common.OperatorContext `protobuf:"bytes,3,opt,name=inherited_operator_context,json=inheritedOperatorContext,proto3" json:"inherited_operator_context,omitempty"`
	InheritedFromOperatorName      string                  `protobuf:"bytes,4,opt,name=inherited_from_operator_name,json=inheritedFromOperatorName,proto3" json:"inherited_from_operator_name,omitempty"`
	FollowParent                   bool                    `protobuf:"varint,5,opt,name=follow_parent,json=followParent,proto3" json:"follow_parent,omitempty"`
	WelcomeRewardSequencesMinCount int32                   `protobuf:"varint,6,opt,name=welcome_reward_sequences_min_count,json=welcomeRewardSequencesMinCount,proto3" json:"welcome_reward_sequences_min_count,omitempty"`
	DailyRewardSequencesMinCount   int32                   `protobuf:"varint,7,opt,name=daily_reward_sequences_min_count,json=dailyRewardSequencesMinCount,proto3" json:"daily_reward_sequences_min_count,omitempty"`
	DefaultDepositRewardConfig     *DepositRewardConfig    `protobuf:"bytes,8,opt,name=default_deposit_reward_config,json=defaultDepositRewardConfig,proto3" json:"default_deposit_reward_config,omitempty"`
	CustomDepositRewardConfig      *DepositRewardConfig    `protobuf:"bytes,9,opt,name=custom_deposit_reward_config,json=customDepositRewardConfig,proto3" json:"custom_deposit_reward_config,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *GetDepositRewardConfigResponse) Reset() {
	*x = GetDepositRewardConfigResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDepositRewardConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepositRewardConfigResponse) ProtoMessage() {}

func (x *GetDepositRewardConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepositRewardConfigResponse.ProtoReflect.Descriptor instead.
func (*GetDepositRewardConfigResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{85}
}

func (x *GetDepositRewardConfigResponse) GetCustomOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.CustomOperatorContext
	}
	return nil
}

func (x *GetDepositRewardConfigResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetDepositRewardConfigResponse) GetInheritedOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.InheritedOperatorContext
	}
	return nil
}

func (x *GetDepositRewardConfigResponse) GetInheritedFromOperatorName() string {
	if x != nil {
		return x.InheritedFromOperatorName
	}
	return ""
}

func (x *GetDepositRewardConfigResponse) GetFollowParent() bool {
	if x != nil {
		return x.FollowParent
	}
	return false
}

func (x *GetDepositRewardConfigResponse) GetWelcomeRewardSequencesMinCount() int32 {
	if x != nil {
		return x.WelcomeRewardSequencesMinCount
	}
	return 0
}

func (x *GetDepositRewardConfigResponse) GetDailyRewardSequencesMinCount() int32 {
	if x != nil {
		return x.DailyRewardSequencesMinCount
	}
	return 0
}

func (x *GetDepositRewardConfigResponse) GetDefaultDepositRewardConfig() *DepositRewardConfig {
	if x != nil {
		return x.DefaultDepositRewardConfig
	}
	return nil
}

func (x *GetDepositRewardConfigResponse) GetCustomDepositRewardConfig() *DepositRewardConfig {
	if x != nil {
		return x.CustomDepositRewardConfig
	}
	return nil
}

type GetUserDepositRewardSequenceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserDepositRewardSequenceRequest) Reset() {
	*x = GetUserDepositRewardSequenceRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserDepositRewardSequenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDepositRewardSequenceRequest) ProtoMessage() {}

func (x *GetUserDepositRewardSequenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDepositRewardSequenceRequest.ProtoReflect.Descriptor instead.
func (*GetUserDepositRewardSequenceRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{86}
}

func (x *GetUserDepositRewardSequenceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type GetUserDepositRewardSequenceResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	CurrentSequenceType   string                 `protobuf:"bytes,1,opt,name=current_sequence_type,json=currentSequenceType,proto3" json:"current_sequence_type,omitempty"`
	WelcomeRewardCount    int32                  `protobuf:"varint,2,opt,name=welcome_reward_count,json=welcomeRewardCount,proto3" json:"welcome_reward_count,omitempty"`
	DailyRewardCount      int32                  `protobuf:"varint,3,opt,name=daily_reward_count,json=dailyRewardCount,proto3" json:"daily_reward_count,omitempty"`
	CurrentRewardSequence *RewardSequence        `protobuf:"bytes,4,opt,name=current_reward_sequence,json=currentRewardSequence,proto3" json:"current_reward_sequence,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetUserDepositRewardSequenceResponse) Reset() {
	*x = GetUserDepositRewardSequenceResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserDepositRewardSequenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDepositRewardSequenceResponse) ProtoMessage() {}

func (x *GetUserDepositRewardSequenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDepositRewardSequenceResponse.ProtoReflect.Descriptor instead.
func (*GetUserDepositRewardSequenceResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{87}
}

func (x *GetUserDepositRewardSequenceResponse) GetCurrentSequenceType() string {
	if x != nil {
		return x.CurrentSequenceType
	}
	return ""
}

func (x *GetUserDepositRewardSequenceResponse) GetWelcomeRewardCount() int32 {
	if x != nil {
		return x.WelcomeRewardCount
	}
	return 0
}

func (x *GetUserDepositRewardSequenceResponse) GetDailyRewardCount() int32 {
	if x != nil {
		return x.DailyRewardCount
	}
	return 0
}

func (x *GetUserDepositRewardSequenceResponse) GetCurrentRewardSequence() *RewardSequence {
	if x != nil {
		return x.CurrentRewardSequence
	}
	return nil
}

type GetGamificationCurrencyConfigRequest struct {
	state                    protoimpl.MessageState  `protogen:"open.v1"`
	InitiatorOperatorContext *common.OperatorContext `protobuf:"bytes,1,opt,name=initiator_operator_context,json=initiatorOperatorContext,proto3" json:"initiator_operator_context,omitempty"`
	TargetOperatorContext    *common.OperatorContext `protobuf:"bytes,2,opt,name=target_operator_context,json=targetOperatorContext,proto3" json:"target_operator_context,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GetGamificationCurrencyConfigRequest) Reset() {
	*x = GetGamificationCurrencyConfigRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGamificationCurrencyConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGamificationCurrencyConfigRequest) ProtoMessage() {}

func (x *GetGamificationCurrencyConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGamificationCurrencyConfigRequest.ProtoReflect.Descriptor instead.
func (*GetGamificationCurrencyConfigRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{88}
}

func (x *GetGamificationCurrencyConfigRequest) GetInitiatorOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.InitiatorOperatorContext
	}
	return nil
}

func (x *GetGamificationCurrencyConfigRequest) GetTargetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.TargetOperatorContext
	}
	return nil
}

type DeductionOrder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeductionType string                 `protobuf:"bytes,1,opt,name=deduction_type,json=deductionType,proto3" json:"deduction_type,omitempty"` // cash_first, bonus_first, mixed
	CashRatio     *string                `protobuf:"bytes,2,opt,name=cash_ratio,json=cashRatio,proto3,oneof" json:"cash_ratio,omitempty"`
	BonusRatio    *string                `protobuf:"bytes,3,opt,name=bonus_ratio,json=bonusRatio,proto3,oneof" json:"bonus_ratio,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeductionOrder) Reset() {
	*x = DeductionOrder{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeductionOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeductionOrder) ProtoMessage() {}

func (x *DeductionOrder) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeductionOrder.ProtoReflect.Descriptor instead.
func (*DeductionOrder) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{89}
}

func (x *DeductionOrder) GetDeductionType() string {
	if x != nil {
		return x.DeductionType
	}
	return ""
}

func (x *DeductionOrder) GetCashRatio() string {
	if x != nil && x.CashRatio != nil {
		return *x.CashRatio
	}
	return ""
}

func (x *DeductionOrder) GetBonusRatio() string {
	if x != nil && x.BonusRatio != nil {
		return *x.BonusRatio
	}
	return ""
}

type OperatorCurrencyConfig struct {
	state                             protoimpl.MessageState `protogen:"open.v1"`
	Currency                          string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	CashWithdrawalWageringRequirement *int32                 `protobuf:"varint,2,opt,name=cash_withdrawal_wagering_requirement,json=cashWithdrawalWageringRequirement,proto3,oneof" json:"cash_withdrawal_wagering_requirement,omitempty"`
	BonusEnabled                      *bool                  `protobuf:"varint,3,opt,name=bonus_enabled,json=bonusEnabled,proto3,oneof" json:"bonus_enabled,omitempty"`
	MaximumBonusBetLimit              *string                `protobuf:"bytes,4,opt,name=maximum_bonus_bet_limit,json=maximumBonusBetLimit,proto3,oneof" json:"maximum_bonus_bet_limit,omitempty"`
	WageringUnlockPriority            *string                `protobuf:"bytes,5,opt,name=wagering_unlock_priority,json=wageringUnlockPriority,proto3,oneof" json:"wagering_unlock_priority,omitempty"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *OperatorCurrencyConfig) Reset() {
	*x = OperatorCurrencyConfig{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorCurrencyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorCurrencyConfig) ProtoMessage() {}

func (x *OperatorCurrencyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorCurrencyConfig.ProtoReflect.Descriptor instead.
func (*OperatorCurrencyConfig) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{90}
}

func (x *OperatorCurrencyConfig) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OperatorCurrencyConfig) GetCashWithdrawalWageringRequirement() int32 {
	if x != nil && x.CashWithdrawalWageringRequirement != nil {
		return *x.CashWithdrawalWageringRequirement
	}
	return 0
}

func (x *OperatorCurrencyConfig) GetBonusEnabled() bool {
	if x != nil && x.BonusEnabled != nil {
		return *x.BonusEnabled
	}
	return false
}

func (x *OperatorCurrencyConfig) GetMaximumBonusBetLimit() string {
	if x != nil && x.MaximumBonusBetLimit != nil {
		return *x.MaximumBonusBetLimit
	}
	return ""
}

func (x *OperatorCurrencyConfig) GetWageringUnlockPriority() string {
	if x != nil && x.WageringUnlockPriority != nil {
		return *x.WageringUnlockPriority
	}
	return ""
}

type GetGamificationCurrencyConfigResponse struct {
	state                   protoimpl.MessageState    `protogen:"open.v1"`
	DeductionOrder          *DeductionOrder           `protobuf:"bytes,1,opt,name=deduction_order,json=deductionOrder,proto3" json:"deduction_order,omitempty"`
	OperatorCurrencyConfigs []*OperatorCurrencyConfig `protobuf:"bytes,2,rep,name=operator_currency_configs,json=operatorCurrencyConfigs,proto3" json:"operator_currency_configs,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetGamificationCurrencyConfigResponse) Reset() {
	*x = GetGamificationCurrencyConfigResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGamificationCurrencyConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGamificationCurrencyConfigResponse) ProtoMessage() {}

func (x *GetGamificationCurrencyConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGamificationCurrencyConfigResponse.ProtoReflect.Descriptor instead.
func (*GetGamificationCurrencyConfigResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{91}
}

func (x *GetGamificationCurrencyConfigResponse) GetDeductionOrder() *DeductionOrder {
	if x != nil {
		return x.DeductionOrder
	}
	return nil
}

func (x *GetGamificationCurrencyConfigResponse) GetOperatorCurrencyConfigs() []*OperatorCurrencyConfig {
	if x != nil {
		return x.OperatorCurrencyConfigs
	}
	return nil
}

type UpdateOperatorCurrencyConfigRequest struct {
	state                    protoimpl.MessageState  `protogen:"open.v1"`
	InitiatorOperatorContext *common.OperatorContext `protobuf:"bytes,1,opt,name=initiator_operator_context,json=initiatorOperatorContext,proto3" json:"initiator_operator_context,omitempty"`
	TargetOperatorContext    *common.OperatorContext `protobuf:"bytes,2,opt,name=target_operator_context,json=targetOperatorContext,proto3" json:"target_operator_context,omitempty"`
	OperatorCurrencyConfig   *OperatorCurrencyConfig `protobuf:"bytes,3,opt,name=operator_currency_config,json=operatorCurrencyConfig,proto3" json:"operator_currency_config,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *UpdateOperatorCurrencyConfigRequest) Reset() {
	*x = UpdateOperatorCurrencyConfigRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOperatorCurrencyConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOperatorCurrencyConfigRequest) ProtoMessage() {}

func (x *UpdateOperatorCurrencyConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOperatorCurrencyConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateOperatorCurrencyConfigRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{92}
}

func (x *UpdateOperatorCurrencyConfigRequest) GetInitiatorOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.InitiatorOperatorContext
	}
	return nil
}

func (x *UpdateOperatorCurrencyConfigRequest) GetTargetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.TargetOperatorContext
	}
	return nil
}

func (x *UpdateOperatorCurrencyConfigRequest) GetOperatorCurrencyConfig() *OperatorCurrencyConfig {
	if x != nil {
		return x.OperatorCurrencyConfig
	}
	return nil
}

type UpdateOperatorCurrencyConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOperatorCurrencyConfigResponse) Reset() {
	*x = UpdateOperatorCurrencyConfigResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOperatorCurrencyConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOperatorCurrencyConfigResponse) ProtoMessage() {}

func (x *UpdateOperatorCurrencyConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOperatorCurrencyConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateOperatorCurrencyConfigResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{93}
}

type UpdateDeductionOrderRequest struct {
	state                    protoimpl.MessageState  `protogen:"open.v1"`
	InitiatorOperatorContext *common.OperatorContext `protobuf:"bytes,1,opt,name=initiator_operator_context,json=initiatorOperatorContext,proto3" json:"initiator_operator_context,omitempty"`
	TargetOperatorContext    *common.OperatorContext `protobuf:"bytes,2,opt,name=target_operator_context,json=targetOperatorContext,proto3" json:"target_operator_context,omitempty"`
	DeductionOrder           *DeductionOrder         `protobuf:"bytes,3,opt,name=deduction_order,json=deductionOrder,proto3" json:"deduction_order,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *UpdateDeductionOrderRequest) Reset() {
	*x = UpdateDeductionOrderRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeductionOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeductionOrderRequest) ProtoMessage() {}

func (x *UpdateDeductionOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeductionOrderRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeductionOrderRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{94}
}

func (x *UpdateDeductionOrderRequest) GetInitiatorOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.InitiatorOperatorContext
	}
	return nil
}

func (x *UpdateDeductionOrderRequest) GetTargetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.TargetOperatorContext
	}
	return nil
}

func (x *UpdateDeductionOrderRequest) GetDeductionOrder() *DeductionOrder {
	if x != nil {
		return x.DeductionOrder
	}
	return nil
}

type UpdateDeductionOrderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDeductionOrderResponse) Reset() {
	*x = UpdateDeductionOrderResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeductionOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeductionOrderResponse) ProtoMessage() {}

func (x *UpdateDeductionOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeductionOrderResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeductionOrderResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{95}
}

type BonusTransferRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CreditId        int64                  `protobuf:"varint,1,opt,name=credit_id,json=creditId,proto3" json:"credit_id,omitempty"`
	Currency        string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	TransactionType string                 `protobuf:"bytes,3,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BonusTransferRequest) Reset() {
	*x = BonusTransferRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BonusTransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusTransferRequest) ProtoMessage() {}

func (x *BonusTransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusTransferRequest.ProtoReflect.Descriptor instead.
func (*BonusTransferRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{96}
}

func (x *BonusTransferRequest) GetCreditId() int64 {
	if x != nil {
		return x.CreditId
	}
	return 0
}

func (x *BonusTransferRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BonusTransferRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

type BonusTransferResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TransactionId     int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	TransferredAmount string                 `protobuf:"bytes,2,opt,name=transferred_amount,json=transferredAmount,proto3" json:"transferred_amount,omitempty"`
	BalanceCash       string                 `protobuf:"bytes,3,opt,name=balance_cash,json=balanceCash,proto3" json:"balance_cash,omitempty"`
	BalanceBonus      string                 `protobuf:"bytes,4,opt,name=balance_bonus,json=balanceBonus,proto3" json:"balance_bonus,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BonusTransferResponse) Reset() {
	*x = BonusTransferResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BonusTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusTransferResponse) ProtoMessage() {}

func (x *BonusTransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusTransferResponse.ProtoReflect.Descriptor instead.
func (*BonusTransferResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{97}
}

func (x *BonusTransferResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *BonusTransferResponse) GetTransferredAmount() string {
	if x != nil {
		return x.TransferredAmount
	}
	return ""
}

func (x *BonusTransferResponse) GetBalanceCash() string {
	if x != nil {
		return x.BalanceCash
	}
	return ""
}

func (x *BonusTransferResponse) GetBalanceBonus() string {
	if x != nil {
		return x.BalanceBonus
	}
	return ""
}

type GetUserBalanceDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalanceDetailsRequest) Reset() {
	*x = GetUserBalanceDetailsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalanceDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceDetailsRequest) ProtoMessage() {}

func (x *GetUserBalanceDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetUserBalanceDetailsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{98}
}

func (x *GetUserBalanceDetailsRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type UserBalanceDetail struct {
	state                          protoimpl.MessageState      `protogen:"open.v1"`
	Currency                       string                      `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	TotalCash                      string                      `protobuf:"bytes,2,opt,name=total_cash,json=totalCash,proto3" json:"total_cash,omitempty"`
	TotalOperatorBonus             string                      `protobuf:"bytes,3,opt,name=total_operator_bonus,json=totalOperatorBonus,proto3" json:"total_operator_bonus,omitempty"`
	TotalProviderBonus             string                      `protobuf:"bytes,4,opt,name=total_provider_bonus,json=totalProviderBonus,proto3" json:"total_provider_bonus,omitempty"`
	TotalWithdrawableCash          string                      `protobuf:"bytes,5,opt,name=total_withdrawable_cash,json=totalWithdrawableCash,proto3" json:"total_withdrawable_cash,omitempty"`
	TotalTransferableOperatorBonus string                      `protobuf:"bytes,6,opt,name=total_transferable_operator_bonus,json=totalTransferableOperatorBonus,proto3" json:"total_transferable_operator_bonus,omitempty"`
	Credits                        []*UserBalanceDetail_Credit `protobuf:"bytes,7,rep,name=credits,proto3" json:"credits,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *UserBalanceDetail) Reset() {
	*x = UserBalanceDetail{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserBalanceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBalanceDetail) ProtoMessage() {}

func (x *UserBalanceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBalanceDetail.ProtoReflect.Descriptor instead.
func (*UserBalanceDetail) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{99}
}

func (x *UserBalanceDetail) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UserBalanceDetail) GetTotalCash() string {
	if x != nil {
		return x.TotalCash
	}
	return ""
}

func (x *UserBalanceDetail) GetTotalOperatorBonus() string {
	if x != nil {
		return x.TotalOperatorBonus
	}
	return ""
}

func (x *UserBalanceDetail) GetTotalProviderBonus() string {
	if x != nil {
		return x.TotalProviderBonus
	}
	return ""
}

func (x *UserBalanceDetail) GetTotalWithdrawableCash() string {
	if x != nil {
		return x.TotalWithdrawableCash
	}
	return ""
}

func (x *UserBalanceDetail) GetTotalTransferableOperatorBonus() string {
	if x != nil {
		return x.TotalTransferableOperatorBonus
	}
	return ""
}

func (x *UserBalanceDetail) GetCredits() []*UserBalanceDetail_Credit {
	if x != nil {
		return x.Credits
	}
	return nil
}

type GetUserBalanceDetailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Detail        *UserBalanceDetail     `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalanceDetailsResponse) Reset() {
	*x = GetUserBalanceDetailsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalanceDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceDetailsResponse) ProtoMessage() {}

func (x *GetUserBalanceDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetUserBalanceDetailsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{100}
}

func (x *GetUserBalanceDetailsResponse) GetDetail() *UserBalanceDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

type AddResponsibleGamblingConfigRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Currency         string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	DepositLimit     *string                `protobuf:"bytes,2,opt,name=deposit_limit,json=depositLimit,proto3,oneof" json:"deposit_limit,omitempty"`
	WithdrawalLimit  *string                `protobuf:"bytes,3,opt,name=withdrawal_limit,json=withdrawalLimit,proto3,oneof" json:"withdrawal_limit,omitempty"`
	DailyPlayLimit   *string                `protobuf:"bytes,4,opt,name=daily_play_limit,json=dailyPlayLimit,proto3,oneof" json:"daily_play_limit,omitempty"`
	WeeklyPlayLimit  *string                `protobuf:"bytes,5,opt,name=weekly_play_limit,json=weeklyPlayLimit,proto3,oneof" json:"weekly_play_limit,omitempty"`
	MonthlyPlayLimit *string                `protobuf:"bytes,6,opt,name=monthly_play_limit,json=monthlyPlayLimit,proto3,oneof" json:"monthly_play_limit,omitempty"`
	DailyLossLimit   *string                `protobuf:"bytes,7,opt,name=daily_loss_limit,json=dailyLossLimit,proto3,oneof" json:"daily_loss_limit,omitempty"`
	WeeklyLossLimit  *string                `protobuf:"bytes,8,opt,name=weekly_loss_limit,json=weeklyLossLimit,proto3,oneof" json:"weekly_loss_limit,omitempty"`
	MonthlyLossLimit *string                `protobuf:"bytes,9,opt,name=monthly_loss_limit,json=monthlyLossLimit,proto3,oneof" json:"monthly_loss_limit,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AddResponsibleGamblingConfigRequest) Reset() {
	*x = AddResponsibleGamblingConfigRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddResponsibleGamblingConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResponsibleGamblingConfigRequest) ProtoMessage() {}

func (x *AddResponsibleGamblingConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResponsibleGamblingConfigRequest.ProtoReflect.Descriptor instead.
func (*AddResponsibleGamblingConfigRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{101}
}

func (x *AddResponsibleGamblingConfigRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetDepositLimit() string {
	if x != nil && x.DepositLimit != nil {
		return *x.DepositLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetWithdrawalLimit() string {
	if x != nil && x.WithdrawalLimit != nil {
		return *x.WithdrawalLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetDailyPlayLimit() string {
	if x != nil && x.DailyPlayLimit != nil {
		return *x.DailyPlayLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetWeeklyPlayLimit() string {
	if x != nil && x.WeeklyPlayLimit != nil {
		return *x.WeeklyPlayLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetMonthlyPlayLimit() string {
	if x != nil && x.MonthlyPlayLimit != nil {
		return *x.MonthlyPlayLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetDailyLossLimit() string {
	if x != nil && x.DailyLossLimit != nil {
		return *x.DailyLossLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetWeeklyLossLimit() string {
	if x != nil && x.WeeklyLossLimit != nil {
		return *x.WeeklyLossLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetMonthlyLossLimit() string {
	if x != nil && x.MonthlyLossLimit != nil {
		return *x.MonthlyLossLimit
	}
	return ""
}

type AddResponsibleGamblingConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddResponsibleGamblingConfigResponse) Reset() {
	*x = AddResponsibleGamblingConfigResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddResponsibleGamblingConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResponsibleGamblingConfigResponse) ProtoMessage() {}

func (x *AddResponsibleGamblingConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResponsibleGamblingConfigResponse.ProtoReflect.Descriptor instead.
func (*AddResponsibleGamblingConfigResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{102}
}

type DeleteResponsibleGamblingConfigRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	UserId          *int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,2,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	Currency        string                  `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	// deposit_limit, withdrawal_limit, daily_play_limit, weekly_play_limit, monthly_play_limit
	// daily_loss_limit, weekly_loss_limit, monthly_loss_limit
	LimitType     string `protobuf:"bytes,4,opt,name=limit_type,json=limitType,proto3" json:"limit_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponsibleGamblingConfigRequest) Reset() {
	*x = DeleteResponsibleGamblingConfigRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponsibleGamblingConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponsibleGamblingConfigRequest) ProtoMessage() {}

func (x *DeleteResponsibleGamblingConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponsibleGamblingConfigRequest.ProtoReflect.Descriptor instead.
func (*DeleteResponsibleGamblingConfigRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{103}
}

func (x *DeleteResponsibleGamblingConfigRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *DeleteResponsibleGamblingConfigRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *DeleteResponsibleGamblingConfigRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *DeleteResponsibleGamblingConfigRequest) GetLimitType() string {
	if x != nil {
		return x.LimitType
	}
	return ""
}

type DeleteResponsibleGamblingConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponsibleGamblingConfigResponse) Reset() {
	*x = DeleteResponsibleGamblingConfigResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponsibleGamblingConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponsibleGamblingConfigResponse) ProtoMessage() {}

func (x *DeleteResponsibleGamblingConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponsibleGamblingConfigResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponsibleGamblingConfigResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{104}
}

type ResponsibleGamblingConfig struct {
	state                              protoimpl.MessageState `protogen:"open.v1"`
	Currency                           string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	DepositLimit                       string                 `protobuf:"bytes,2,opt,name=deposit_limit,json=depositLimit,proto3" json:"deposit_limit,omitempty"`
	WithdrawalLimit                    string                 `protobuf:"bytes,3,opt,name=withdrawal_limit,json=withdrawalLimit,proto3" json:"withdrawal_limit,omitempty"`
	DailyPlayLimit                     string                 `protobuf:"bytes,4,opt,name=daily_play_limit,json=dailyPlayLimit,proto3" json:"daily_play_limit,omitempty"`
	WeeklyPlayLimit                    string                 `protobuf:"bytes,5,opt,name=weekly_play_limit,json=weeklyPlayLimit,proto3" json:"weekly_play_limit,omitempty"`
	MonthlyPlayLimit                   string                 `protobuf:"bytes,6,opt,name=monthly_play_limit,json=monthlyPlayLimit,proto3" json:"monthly_play_limit,omitempty"`
	DailyLossLimit                     string                 `protobuf:"bytes,7,opt,name=daily_loss_limit,json=dailyLossLimit,proto3" json:"daily_loss_limit,omitempty"`
	WeeklyLossLimit                    string                 `protobuf:"bytes,8,opt,name=weekly_loss_limit,json=weeklyLossLimit,proto3" json:"weekly_loss_limit,omitempty"`
	MonthlyLossLimit                   string                 `protobuf:"bytes,9,opt,name=monthly_loss_limit,json=monthlyLossLimit,proto3" json:"monthly_loss_limit,omitempty"`
	DepositLimitDeleteScheduleTime     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=deposit_limit_delete_schedule_time,json=depositLimitDeleteScheduleTime,proto3" json:"deposit_limit_delete_schedule_time,omitempty"`
	WithdrawalLimitDeleteScheduleTime  *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=withdrawal_limit_delete_schedule_time,json=withdrawalLimitDeleteScheduleTime,proto3" json:"withdrawal_limit_delete_schedule_time,omitempty"`
	DailyPlayLimitDeleteScheduleTime   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=daily_play_limit_delete_schedule_time,json=dailyPlayLimitDeleteScheduleTime,proto3" json:"daily_play_limit_delete_schedule_time,omitempty"`
	WeeklyPlayLimitDeleteScheduleTime  *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=weekly_play_limit_delete_schedule_time,json=weeklyPlayLimitDeleteScheduleTime,proto3" json:"weekly_play_limit_delete_schedule_time,omitempty"`
	MonthlyPlayLimitDeleteScheduleTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=monthly_play_limit_delete_schedule_time,json=monthlyPlayLimitDeleteScheduleTime,proto3" json:"monthly_play_limit_delete_schedule_time,omitempty"`
	DailyLossLimitDeleteScheduleTime   *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=daily_loss_limit_delete_schedule_time,json=dailyLossLimitDeleteScheduleTime,proto3" json:"daily_loss_limit_delete_schedule_time,omitempty"`
	WeeklyLossLimitDeleteScheduleTime  *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=weekly_loss_limit_delete_schedule_time,json=weeklyLossLimitDeleteScheduleTime,proto3" json:"weekly_loss_limit_delete_schedule_time,omitempty"`
	MonthlyLossLimitDeleteScheduleTime *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=monthly_loss_limit_delete_schedule_time,json=monthlyLossLimitDeleteScheduleTime,proto3" json:"monthly_loss_limit_delete_schedule_time,omitempty"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *ResponsibleGamblingConfig) Reset() {
	*x = ResponsibleGamblingConfig{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponsibleGamblingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsibleGamblingConfig) ProtoMessage() {}

func (x *ResponsibleGamblingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsibleGamblingConfig.ProtoReflect.Descriptor instead.
func (*ResponsibleGamblingConfig) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{105}
}

func (x *ResponsibleGamblingConfig) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetDepositLimit() string {
	if x != nil {
		return x.DepositLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetWithdrawalLimit() string {
	if x != nil {
		return x.WithdrawalLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetDailyPlayLimit() string {
	if x != nil {
		return x.DailyPlayLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetWeeklyPlayLimit() string {
	if x != nil {
		return x.WeeklyPlayLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetMonthlyPlayLimit() string {
	if x != nil {
		return x.MonthlyPlayLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetDailyLossLimit() string {
	if x != nil {
		return x.DailyLossLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetWeeklyLossLimit() string {
	if x != nil {
		return x.WeeklyLossLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetMonthlyLossLimit() string {
	if x != nil {
		return x.MonthlyLossLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetDepositLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepositLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetWithdrawalLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.WithdrawalLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetDailyPlayLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DailyPlayLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetWeeklyPlayLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.WeeklyPlayLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetMonthlyPlayLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MonthlyPlayLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetDailyLossLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DailyLossLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetWeeklyLossLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.WeeklyLossLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetMonthlyLossLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MonthlyLossLimitDeleteScheduleTime
	}
	return nil
}

type ResponsibleGamblingStatus struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Currency          string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	WithdrawalAllowed bool                   `protobuf:"varint,2,opt,name=withdrawal_allowed,json=withdrawalAllowed,proto3" json:"withdrawal_allowed,omitempty"`
	WithdrawalUsage   string                 `protobuf:"bytes,3,opt,name=withdrawal_usage,json=withdrawalUsage,proto3" json:"withdrawal_usage,omitempty"`
	DepositAllowed    bool                   `protobuf:"varint,4,opt,name=deposit_allowed,json=depositAllowed,proto3" json:"deposit_allowed,omitempty"`
	DepositUsage      string                 `protobuf:"bytes,5,opt,name=deposit_usage,json=depositUsage,proto3" json:"deposit_usage,omitempty"`
	GameBetAllowed    bool                   `protobuf:"varint,6,opt,name=game_bet_allowed,json=gameBetAllowed,proto3" json:"game_bet_allowed,omitempty"`
	DailyPlayUsage    string                 `protobuf:"bytes,7,opt,name=daily_play_usage,json=dailyPlayUsage,proto3" json:"daily_play_usage,omitempty"`
	WeeklyPlayUsage   string                 `protobuf:"bytes,8,opt,name=weekly_play_usage,json=weeklyPlayUsage,proto3" json:"weekly_play_usage,omitempty"`
	MonthlyPlayUsage  string                 `protobuf:"bytes,9,opt,name=monthly_play_usage,json=monthlyPlayUsage,proto3" json:"monthly_play_usage,omitempty"`
	DailyLossUsage    string                 `protobuf:"bytes,10,opt,name=daily_loss_usage,json=dailyLossUsage,proto3" json:"daily_loss_usage,omitempty"`
	WeeklyLossUsage   string                 `protobuf:"bytes,11,opt,name=weekly_loss_usage,json=weeklyLossUsage,proto3" json:"weekly_loss_usage,omitempty"`
	MonthlyLossUsage  string                 `protobuf:"bytes,12,opt,name=monthly_loss_usage,json=monthlyLossUsage,proto3" json:"monthly_loss_usage,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ResponsibleGamblingStatus) Reset() {
	*x = ResponsibleGamblingStatus{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponsibleGamblingStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsibleGamblingStatus) ProtoMessage() {}

func (x *ResponsibleGamblingStatus) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsibleGamblingStatus.ProtoReflect.Descriptor instead.
func (*ResponsibleGamblingStatus) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{106}
}

func (x *ResponsibleGamblingStatus) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetWithdrawalAllowed() bool {
	if x != nil {
		return x.WithdrawalAllowed
	}
	return false
}

func (x *ResponsibleGamblingStatus) GetWithdrawalUsage() string {
	if x != nil {
		return x.WithdrawalUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetDepositAllowed() bool {
	if x != nil {
		return x.DepositAllowed
	}
	return false
}

func (x *ResponsibleGamblingStatus) GetDepositUsage() string {
	if x != nil {
		return x.DepositUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetGameBetAllowed() bool {
	if x != nil {
		return x.GameBetAllowed
	}
	return false
}

func (x *ResponsibleGamblingStatus) GetDailyPlayUsage() string {
	if x != nil {
		return x.DailyPlayUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetWeeklyPlayUsage() string {
	if x != nil {
		return x.WeeklyPlayUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetMonthlyPlayUsage() string {
	if x != nil {
		return x.MonthlyPlayUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetDailyLossUsage() string {
	if x != nil {
		return x.DailyLossUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetWeeklyLossUsage() string {
	if x != nil {
		return x.WeeklyLossUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetMonthlyLossUsage() string {
	if x != nil {
		return x.MonthlyLossUsage
	}
	return ""
}

type ListResponsibleGamblingConfigsRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	UserId          *int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,2,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListResponsibleGamblingConfigsRequest) Reset() {
	*x = ListResponsibleGamblingConfigsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponsibleGamblingConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponsibleGamblingConfigsRequest) ProtoMessage() {}

func (x *ListResponsibleGamblingConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponsibleGamblingConfigsRequest.ProtoReflect.Descriptor instead.
func (*ListResponsibleGamblingConfigsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{107}
}

func (x *ListResponsibleGamblingConfigsRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ListResponsibleGamblingConfigsRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type ListResponsibleGamblingConfigsResponse struct {
	state                       protoimpl.MessageState       `protogen:"open.v1"`
	ResponsibleGamblingConfigs  []*ResponsibleGamblingConfig `protobuf:"bytes,1,rep,name=responsible_gambling_configs,json=responsibleGamblingConfigs,proto3" json:"responsible_gambling_configs,omitempty"`
	ResponsibleGamblingStatuses []*ResponsibleGamblingStatus `protobuf:"bytes,2,rep,name=responsible_gambling_statuses,json=responsibleGamblingStatuses,proto3" json:"responsible_gambling_statuses,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ListResponsibleGamblingConfigsResponse) Reset() {
	*x = ListResponsibleGamblingConfigsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponsibleGamblingConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponsibleGamblingConfigsResponse) ProtoMessage() {}

func (x *ListResponsibleGamblingConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponsibleGamblingConfigsResponse.ProtoReflect.Descriptor instead.
func (*ListResponsibleGamblingConfigsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{108}
}

func (x *ListResponsibleGamblingConfigsResponse) GetResponsibleGamblingConfigs() []*ResponsibleGamblingConfig {
	if x != nil {
		return x.ResponsibleGamblingConfigs
	}
	return nil
}

func (x *ListResponsibleGamblingConfigsResponse) GetResponsibleGamblingStatuses() []*ResponsibleGamblingStatus {
	if x != nil {
		return x.ResponsibleGamblingStatuses
	}
	return nil
}

type GetResponsibleGamblingConfigRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	UserId          int64                   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,2,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	Currency        string                  `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetResponsibleGamblingConfigRequest) Reset() {
	*x = GetResponsibleGamblingConfigRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponsibleGamblingConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponsibleGamblingConfigRequest) ProtoMessage() {}

func (x *GetResponsibleGamblingConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponsibleGamblingConfigRequest.ProtoReflect.Descriptor instead.
func (*GetResponsibleGamblingConfigRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{109}
}

func (x *GetResponsibleGamblingConfigRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetResponsibleGamblingConfigRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *GetResponsibleGamblingConfigRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type GetResponsibleGamblingConfigResponse struct {
	state                     protoimpl.MessageState     `protogen:"open.v1"`
	ResponsibleGamblingConfig *ResponsibleGamblingConfig `protobuf:"bytes,1,opt,name=responsible_gambling_config,json=responsibleGamblingConfig,proto3" json:"responsible_gambling_config,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GetResponsibleGamblingConfigResponse) Reset() {
	*x = GetResponsibleGamblingConfigResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponsibleGamblingConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponsibleGamblingConfigResponse) ProtoMessage() {}

func (x *GetResponsibleGamblingConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponsibleGamblingConfigResponse.ProtoReflect.Descriptor instead.
func (*GetResponsibleGamblingConfigResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{110}
}

func (x *GetResponsibleGamblingConfigResponse) GetResponsibleGamblingConfig() *ResponsibleGamblingConfig {
	if x != nil {
		return x.ResponsibleGamblingConfig
	}
	return nil
}

type ListCustomerRecordsRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	StartTime       *timestamppb.Timestamp  `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	EndTime         *timestamppb.Timestamp  `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	UserId          *int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	TransactionId   *int64                  `protobuf:"varint,4,opt,name=transaction_id,json=transactionId,proto3,oneof" json:"transaction_id,omitempty"`
	TransactionType *string                 `protobuf:"bytes,5,opt,name=transaction_type,json=transactionType,proto3,oneof" json:"transaction_type,omitempty"`
	Page            *int32                  `protobuf:"varint,6,opt,name=page,proto3,oneof" json:"page,omitempty"`
	PageSize        *int32                  `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,8,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListCustomerRecordsRequest) Reset() {
	*x = ListCustomerRecordsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCustomerRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomerRecordsRequest) ProtoMessage() {}

func (x *ListCustomerRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomerRecordsRequest.ProtoReflect.Descriptor instead.
func (*ListCustomerRecordsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{111}
}

func (x *ListCustomerRecordsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListCustomerRecordsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ListCustomerRecordsRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ListCustomerRecordsRequest) GetTransactionId() int64 {
	if x != nil && x.TransactionId != nil {
		return *x.TransactionId
	}
	return 0
}

func (x *ListCustomerRecordsRequest) GetTransactionType() string {
	if x != nil && x.TransactionType != nil {
		return *x.TransactionType
	}
	return ""
}

func (x *ListCustomerRecordsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListCustomerRecordsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListCustomerRecordsRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type ListCustomerRecordsResponse struct {
	state           protoimpl.MessageState                        `protogen:"open.v1"`
	CustomerRecords []*ListCustomerRecordsResponse_CustomerRecord `protobuf:"bytes,1,rep,name=customer_records,json=customerRecords,proto3" json:"customer_records,omitempty"`
	Total           int32                                         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page            int32                                         `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize        int32                                         `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListCustomerRecordsResponse) Reset() {
	*x = ListCustomerRecordsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCustomerRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomerRecordsResponse) ProtoMessage() {}

func (x *ListCustomerRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomerRecordsResponse.ProtoReflect.Descriptor instead.
func (*ListCustomerRecordsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{112}
}

func (x *ListCustomerRecordsResponse) GetCustomerRecords() []*ListCustomerRecordsResponse_CustomerRecord {
	if x != nil {
		return x.CustomerRecords
	}
	return nil
}

func (x *ListCustomerRecordsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCustomerRecordsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCustomerRecordsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type FICAThresholdConfig struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Configs       []*FICAThresholdConfig_Config `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FICAThresholdConfig) Reset() {
	*x = FICAThresholdConfig{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FICAThresholdConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FICAThresholdConfig) ProtoMessage() {}

func (x *FICAThresholdConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FICAThresholdConfig.ProtoReflect.Descriptor instead.
func (*FICAThresholdConfig) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{113}
}

func (x *FICAThresholdConfig) GetConfigs() []*FICAThresholdConfig_Config {
	if x != nil {
		return x.Configs
	}
	return nil
}

type SetFICAThresholdConfigRequest struct {
	state               protoimpl.MessageState  `protogen:"open.v1"`
	Currency            string                  `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	FicaThresholdConfig *FICAThresholdConfig    `protobuf:"bytes,2,opt,name=fica_threshold_config,json=ficaThresholdConfig,proto3" json:"fica_threshold_config,omitempty"`
	OperatorContext     *common.OperatorContext `protobuf:"bytes,3,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SetFICAThresholdConfigRequest) Reset() {
	*x = SetFICAThresholdConfigRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetFICAThresholdConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFICAThresholdConfigRequest) ProtoMessage() {}

func (x *SetFICAThresholdConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFICAThresholdConfigRequest.ProtoReflect.Descriptor instead.
func (*SetFICAThresholdConfigRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{114}
}

func (x *SetFICAThresholdConfigRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *SetFICAThresholdConfigRequest) GetFicaThresholdConfig() *FICAThresholdConfig {
	if x != nil {
		return x.FicaThresholdConfig
	}
	return nil
}

func (x *SetFICAThresholdConfigRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type SetFICAThresholdConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetFICAThresholdConfigResponse) Reset() {
	*x = SetFICAThresholdConfigResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetFICAThresholdConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetFICAThresholdConfigResponse) ProtoMessage() {}

func (x *SetFICAThresholdConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetFICAThresholdConfigResponse.ProtoReflect.Descriptor instead.
func (*SetFICAThresholdConfigResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{115}
}

type GetFICAThresholdConfigRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetFICAThresholdConfigRequest) Reset() {
	*x = GetFICAThresholdConfigRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFICAThresholdConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFICAThresholdConfigRequest) ProtoMessage() {}

func (x *GetFICAThresholdConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFICAThresholdConfigRequest.ProtoReflect.Descriptor instead.
func (*GetFICAThresholdConfigRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{116}
}

func (x *GetFICAThresholdConfigRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type GetFICAThresholdConfigResponse struct {
	state                protoimpl.MessageState          `protogen:"open.v1"`
	FicaThresholdConfigs map[string]*FICAThresholdConfig `protobuf:"bytes,1,rep,name=fica_threshold_configs,json=ficaThresholdConfigs,proto3" json:"fica_threshold_configs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetFICAThresholdConfigResponse) Reset() {
	*x = GetFICAThresholdConfigResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFICAThresholdConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFICAThresholdConfigResponse) ProtoMessage() {}

func (x *GetFICAThresholdConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFICAThresholdConfigResponse.ProtoReflect.Descriptor instead.
func (*GetFICAThresholdConfigResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{117}
}

func (x *GetFICAThresholdConfigResponse) GetFicaThresholdConfigs() map[string]*FICAThresholdConfig {
	if x != nil {
		return x.FicaThresholdConfigs
	}
	return nil
}

type ListFICAThresholdTransactionsRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	StartTime       *timestamppb.Timestamp  `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	EndTime         *timestamppb.Timestamp  `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	TransactionType *string                 `protobuf:"bytes,3,opt,name=transaction_type,json=transactionType,proto3,oneof" json:"transaction_type,omitempty"`
	Currency        *string                 `protobuf:"bytes,4,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	KycLevel        *int32                  `protobuf:"varint,5,opt,name=kyc_level,json=kycLevel,proto3,oneof" json:"kyc_level,omitempty"`
	Page            *int32                  `protobuf:"varint,6,opt,name=page,proto3,oneof" json:"page,omitempty"`
	PageSize        *int32                  `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,8,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListFICAThresholdTransactionsRequest) Reset() {
	*x = ListFICAThresholdTransactionsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[118]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFICAThresholdTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFICAThresholdTransactionsRequest) ProtoMessage() {}

func (x *ListFICAThresholdTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[118]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFICAThresholdTransactionsRequest.ProtoReflect.Descriptor instead.
func (*ListFICAThresholdTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{118}
}

func (x *ListFICAThresholdTransactionsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListFICAThresholdTransactionsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ListFICAThresholdTransactionsRequest) GetTransactionType() string {
	if x != nil && x.TransactionType != nil {
		return *x.TransactionType
	}
	return ""
}

func (x *ListFICAThresholdTransactionsRequest) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *ListFICAThresholdTransactionsRequest) GetKycLevel() int32 {
	if x != nil && x.KycLevel != nil {
		return *x.KycLevel
	}
	return 0
}

func (x *ListFICAThresholdTransactionsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListFICAThresholdTransactionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListFICAThresholdTransactionsRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

type ListFICAThresholdTransactionsResponse struct {
	state                 protoimpl.MessageState                                            `protogen:"open.v1"`
	ThresholdTransactions []*ListFICAThresholdTransactionsResponse_FICAThresholdTransaction `protobuf:"bytes,1,rep,name=threshold_transactions,json=thresholdTransactions,proto3" json:"threshold_transactions,omitempty"`
	Total                 int32                                                             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page                  int32                                                             `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize              int32                                                             `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ListFICAThresholdTransactionsResponse) Reset() {
	*x = ListFICAThresholdTransactionsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[119]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFICAThresholdTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFICAThresholdTransactionsResponse) ProtoMessage() {}

func (x *ListFICAThresholdTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[119]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFICAThresholdTransactionsResponse.ProtoReflect.Descriptor instead.
func (*ListFICAThresholdTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{119}
}

func (x *ListFICAThresholdTransactionsResponse) GetThresholdTransactions() []*ListFICAThresholdTransactionsResponse_FICAThresholdTransaction {
	if x != nil {
		return x.ThresholdTransactions
	}
	return nil
}

func (x *ListFICAThresholdTransactionsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListFICAThresholdTransactionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListFICAThresholdTransactionsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetUserBalancesResponse_Balance struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Currency          string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Cash              string                 `protobuf:"bytes,2,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorBonus     string                 `protobuf:"bytes,3,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	ProviderBonus     string                 `protobuf:"bytes,4,opt,name=provider_bonus,json=providerBonus,proto3" json:"provider_bonus,omitempty"`
	WithdrawableCash  string                 `protobuf:"bytes,5,opt,name=withdrawable_cash,json=withdrawableCash,proto3" json:"withdrawable_cash,omitempty"`
	TransferableBonus string                 `protobuf:"bytes,6,opt,name=transferable_bonus,json=transferableBonus,proto3" json:"transferable_bonus,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetUserBalancesResponse_Balance) Reset() {
	*x = GetUserBalancesResponse_Balance{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[120]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalancesResponse_Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalancesResponse_Balance) ProtoMessage() {}

func (x *GetUserBalancesResponse_Balance) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[120]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalancesResponse_Balance.ProtoReflect.Descriptor instead.
func (*GetUserBalancesResponse_Balance) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetUserBalancesResponse_Balance) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetUserBalancesResponse_Balance) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GetUserBalancesResponse_Balance) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

func (x *GetUserBalancesResponse_Balance) GetProviderBonus() string {
	if x != nil {
		return x.ProviderBonus
	}
	return ""
}

func (x *GetUserBalancesResponse_Balance) GetWithdrawableCash() string {
	if x != nil {
		return x.WithdrawableCash
	}
	return ""
}

func (x *GetUserBalancesResponse_Balance) GetTransferableBonus() string {
	if x != nil {
		return x.TransferableBonus
	}
	return ""
}

type CreditRequest_Ratio struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cash          string                 `protobuf:"bytes,1,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorBonus string                 `protobuf:"bytes,2,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditRequest_Ratio) Reset() {
	*x = CreditRequest_Ratio{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[121]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditRequest_Ratio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditRequest_Ratio) ProtoMessage() {}

func (x *CreditRequest_Ratio) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[121]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditRequest_Ratio.ProtoReflect.Descriptor instead.
func (*CreditRequest_Ratio) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CreditRequest_Ratio) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *CreditRequest_Ratio) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

type GetWalletsResponse_TotalAssets struct {
	state                                 protoimpl.MessageState `protogen:"open.v1"`
	BalanceUsd                            string                 `protobuf:"bytes,1,opt,name=balance_usd,json=balanceUsd,proto3" json:"balance_usd,omitempty"`
	DepositUsd                            string                 `protobuf:"bytes,2,opt,name=deposit_usd,json=depositUsd,proto3" json:"deposit_usd,omitempty"`
	WithdrawUsd                           string                 `protobuf:"bytes,3,opt,name=withdraw_usd,json=withdrawUsd,proto3" json:"withdraw_usd,omitempty"`
	DepositMinusWithdrawUsd               string                 `protobuf:"bytes,4,opt,name=deposit_minus_withdraw_usd,json=depositMinusWithdrawUsd,proto3" json:"deposit_minus_withdraw_usd,omitempty"`
	ValidTurnoverUsd                      string                 `protobuf:"bytes,5,opt,name=valid_turnover_usd,json=validTurnoverUsd,proto3" json:"valid_turnover_usd,omitempty"`
	BalanceReportingCurrency              string                 `protobuf:"bytes,6,opt,name=balance_reporting_currency,json=balanceReportingCurrency,proto3" json:"balance_reporting_currency,omitempty"`
	DepositReportingCurrency              string                 `protobuf:"bytes,7,opt,name=deposit_reporting_currency,json=depositReportingCurrency,proto3" json:"deposit_reporting_currency,omitempty"`
	WithdrawReportingCurrency             string                 `protobuf:"bytes,8,opt,name=withdraw_reporting_currency,json=withdrawReportingCurrency,proto3" json:"withdraw_reporting_currency,omitempty"`
	DepositMinusWithdrawReportingCurrency string                 `protobuf:"bytes,9,opt,name=deposit_minus_withdraw_reporting_currency,json=depositMinusWithdrawReportingCurrency,proto3" json:"deposit_minus_withdraw_reporting_currency,omitempty"`
	ValidTurnoverReportingCurrency        string                 `protobuf:"bytes,10,opt,name=valid_turnover_reporting_currency,json=validTurnoverReportingCurrency,proto3" json:"valid_turnover_reporting_currency,omitempty"`
	unknownFields                         protoimpl.UnknownFields
	sizeCache                             protoimpl.SizeCache
}

func (x *GetWalletsResponse_TotalAssets) Reset() {
	*x = GetWalletsResponse_TotalAssets{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[122]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletsResponse_TotalAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletsResponse_TotalAssets) ProtoMessage() {}

func (x *GetWalletsResponse_TotalAssets) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[122]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletsResponse_TotalAssets.ProtoReflect.Descriptor instead.
func (*GetWalletsResponse_TotalAssets) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{20, 0}
}

func (x *GetWalletsResponse_TotalAssets) GetBalanceUsd() string {
	if x != nil {
		return x.BalanceUsd
	}
	return ""
}

func (x *GetWalletsResponse_TotalAssets) GetDepositUsd() string {
	if x != nil {
		return x.DepositUsd
	}
	return ""
}

func (x *GetWalletsResponse_TotalAssets) GetWithdrawUsd() string {
	if x != nil {
		return x.WithdrawUsd
	}
	return ""
}

func (x *GetWalletsResponse_TotalAssets) GetDepositMinusWithdrawUsd() string {
	if x != nil {
		return x.DepositMinusWithdrawUsd
	}
	return ""
}

func (x *GetWalletsResponse_TotalAssets) GetValidTurnoverUsd() string {
	if x != nil {
		return x.ValidTurnoverUsd
	}
	return ""
}

func (x *GetWalletsResponse_TotalAssets) GetBalanceReportingCurrency() string {
	if x != nil {
		return x.BalanceReportingCurrency
	}
	return ""
}

func (x *GetWalletsResponse_TotalAssets) GetDepositReportingCurrency() string {
	if x != nil {
		return x.DepositReportingCurrency
	}
	return ""
}

func (x *GetWalletsResponse_TotalAssets) GetWithdrawReportingCurrency() string {
	if x != nil {
		return x.WithdrawReportingCurrency
	}
	return ""
}

func (x *GetWalletsResponse_TotalAssets) GetDepositMinusWithdrawReportingCurrency() string {
	if x != nil {
		return x.DepositMinusWithdrawReportingCurrency
	}
	return ""
}

func (x *GetWalletsResponse_TotalAssets) GetValidTurnoverReportingCurrency() string {
	if x != nil {
		return x.ValidTurnoverReportingCurrency
	}
	return ""
}

type GetWalletsResponse_Credit struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt              *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	TransactionId          int64                  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash                   string                 `protobuf:"bytes,3,opt,name=cash,proto3" json:"cash,omitempty"`
	OriginalCash           string                 `protobuf:"bytes,4,opt,name=original_cash,json=originalCash,proto3" json:"original_cash,omitempty"`
	Bonus                  string                 `protobuf:"bytes,5,opt,name=bonus,proto3" json:"bonus,omitempty"`
	OriginalBonus          string                 `protobuf:"bytes,6,opt,name=original_bonus,json=originalBonus,proto3" json:"original_bonus,omitempty"`
	TurnoverThreshold      string                 `protobuf:"bytes,7,opt,name=turnover_threshold,json=turnoverThreshold,proto3" json:"turnover_threshold,omitempty"` // cash turnover threshold + bonus turnover threshold
	Turnover               string                 `protobuf:"bytes,8,opt,name=turnover,proto3" json:"turnover,omitempty"`
	CashTurnover           string                 `protobuf:"bytes,9,opt,name=cash_turnover,json=cashTurnover,proto3" json:"cash_turnover,omitempty"`
	BonusTurnover          string                 `protobuf:"bytes,10,opt,name=bonus_turnover,json=bonusTurnover,proto3" json:"bonus_turnover,omitempty"`
	TurnoverMultiplier     string                 `protobuf:"bytes,11,opt,name=turnover_multiplier,json=turnoverMultiplier,proto3" json:"turnover_multiplier,omitempty"`
	CashTurnoverThreshold  string                 `protobuf:"bytes,12,opt,name=cash_turnover_threshold,json=cashTurnoverThreshold,proto3" json:"cash_turnover_threshold,omitempty"`
	BonusTurnoverThreshold string                 `protobuf:"bytes,13,opt,name=bonus_turnover_threshold,json=bonusTurnoverThreshold,proto3" json:"bonus_turnover_threshold,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetWalletsResponse_Credit) Reset() {
	*x = GetWalletsResponse_Credit{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletsResponse_Credit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletsResponse_Credit) ProtoMessage() {}

func (x *GetWalletsResponse_Credit) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletsResponse_Credit.ProtoReflect.Descriptor instead.
func (*GetWalletsResponse_Credit) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{20, 1}
}

func (x *GetWalletsResponse_Credit) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetWalletsResponse_Credit) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *GetWalletsResponse_Credit) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetOriginalCash() string {
	if x != nil {
		return x.OriginalCash
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetBonus() string {
	if x != nil {
		return x.Bonus
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetOriginalBonus() string {
	if x != nil {
		return x.OriginalBonus
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetTurnoverThreshold() string {
	if x != nil {
		return x.TurnoverThreshold
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetTurnover() string {
	if x != nil {
		return x.Turnover
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetCashTurnover() string {
	if x != nil {
		return x.CashTurnover
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetBonusTurnover() string {
	if x != nil {
		return x.BonusTurnover
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetTurnoverMultiplier() string {
	if x != nil {
		return x.TurnoverMultiplier
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetCashTurnoverThreshold() string {
	if x != nil {
		return x.CashTurnoverThreshold
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetBonusTurnoverThreshold() string {
	if x != nil {
		return x.BonusTurnoverThreshold
	}
	return ""
}

type GetWalletsResponse_Wallet struct {
	state                  protoimpl.MessageState       `protogen:"open.v1"`
	Currency               string                       `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Cash                   string                       `protobuf:"bytes,2,opt,name=cash,proto3" json:"cash,omitempty"`
	OriginalCash           string                       `protobuf:"bytes,3,opt,name=original_cash,json=originalCash,proto3" json:"original_cash,omitempty"`
	Bonus                  string                       `protobuf:"bytes,4,opt,name=bonus,proto3" json:"bonus,omitempty"`
	OriginalBonus          string                       `protobuf:"bytes,5,opt,name=original_bonus,json=originalBonus,proto3" json:"original_bonus,omitempty"`
	TurnoverThreshold      string                       `protobuf:"bytes,6,opt,name=turnover_threshold,json=turnoverThreshold,proto3" json:"turnover_threshold,omitempty"`
	Turnover               string                       `protobuf:"bytes,7,opt,name=turnover,proto3" json:"turnover,omitempty"`
	CashTurnover           string                       `protobuf:"bytes,8,opt,name=cash_turnover,json=cashTurnover,proto3" json:"cash_turnover,omitempty"`
	BonusTurnover          string                       `protobuf:"bytes,9,opt,name=bonus_turnover,json=bonusTurnover,proto3" json:"bonus_turnover,omitempty"`
	TurnoverMultiplier     string                       `protobuf:"bytes,10,opt,name=turnover_multiplier,json=turnoverMultiplier,proto3" json:"turnover_multiplier,omitempty"`
	Credits                []*GetWalletsResponse_Credit `protobuf:"bytes,11,rep,name=credits,proto3" json:"credits,omitempty"`
	CashTurnoverThreshold  string                       `protobuf:"bytes,12,opt,name=cash_turnover_threshold,json=cashTurnoverThreshold,proto3" json:"cash_turnover_threshold,omitempty"`
	BonusTurnoverThreshold string                       `protobuf:"bytes,13,opt,name=bonus_turnover_threshold,json=bonusTurnoverThreshold,proto3" json:"bonus_turnover_threshold,omitempty"`
	WithdrawableCash       string                       `protobuf:"bytes,14,opt,name=withdrawable_cash,json=withdrawableCash,proto3" json:"withdrawable_cash,omitempty"`
	TransferableBonus      string                       `protobuf:"bytes,15,opt,name=transferable_bonus,json=transferableBonus,proto3" json:"transferable_bonus,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetWalletsResponse_Wallet) Reset() {
	*x = GetWalletsResponse_Wallet{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[124]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletsResponse_Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletsResponse_Wallet) ProtoMessage() {}

func (x *GetWalletsResponse_Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[124]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletsResponse_Wallet.ProtoReflect.Descriptor instead.
func (*GetWalletsResponse_Wallet) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{20, 2}
}

func (x *GetWalletsResponse_Wallet) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetOriginalCash() string {
	if x != nil {
		return x.OriginalCash
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetBonus() string {
	if x != nil {
		return x.Bonus
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetOriginalBonus() string {
	if x != nil {
		return x.OriginalBonus
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetTurnoverThreshold() string {
	if x != nil {
		return x.TurnoverThreshold
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetTurnover() string {
	if x != nil {
		return x.Turnover
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetCashTurnover() string {
	if x != nil {
		return x.CashTurnover
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetBonusTurnover() string {
	if x != nil {
		return x.BonusTurnover
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetTurnoverMultiplier() string {
	if x != nil {
		return x.TurnoverMultiplier
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetCredits() []*GetWalletsResponse_Credit {
	if x != nil {
		return x.Credits
	}
	return nil
}

func (x *GetWalletsResponse_Wallet) GetCashTurnoverThreshold() string {
	if x != nil {
		return x.CashTurnoverThreshold
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetBonusTurnoverThreshold() string {
	if x != nil {
		return x.BonusTurnoverThreshold
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetWithdrawableCash() string {
	if x != nil {
		return x.WithdrawableCash
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetTransferableBonus() string {
	if x != nil {
		return x.TransferableBonus
	}
	return ""
}

type ListWalletBalanceTransactionsResponse_BalanceTransaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	TransactionId int64                  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	// Transaction types for different operations
	// Expected values:
	// Credit operations:
	//   - "payment_deposit"    - Payment deposit transaction
	//   - "game_win"          - Game win transaction
	//
	// Debit operations:
	//   - "payment_withdraw"   - Payment withdraw transaction
	//   - "game_bet"          - Game bet transaction
	//   - "payment_withdraw_freeze" - Payment withdraw freeze transaction
	//
	// Settlement operations:
	//   - "payment_withdraw_settle" - Payment withdraw settlement
	//
	// Rollback operations:
	//   - "game_bet_rollback"            - Game bet transaction rollback
	//   - "game_win_rollback"            - Game win transaction rollback
	//   - "payment_withdraw_rollback" - Payment withdraw transaction rollback
	TransactionType      string `protobuf:"bytes,3,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	VipLevel             int32  `protobuf:"varint,4,opt,name=vip_level,json=vipLevel,proto3" json:"vip_level,omitempty"`
	ChangeBalance        string `protobuf:"bytes,5,opt,name=change_balance,json=changeBalance,proto3" json:"change_balance,omitempty"`
	BeforeBalance        string `protobuf:"bytes,6,opt,name=before_balance,json=beforeBalance,proto3" json:"before_balance,omitempty"`
	AfterBalance         string `protobuf:"bytes,7,opt,name=after_balance,json=afterBalance,proto3" json:"after_balance,omitempty"`
	Currency             string `protobuf:"bytes,8,opt,name=currency,proto3" json:"currency,omitempty"`
	RelatedTransactionId int64  `protobuf:"varint,9,opt,name=related_transaction_id,json=relatedTransactionId,proto3" json:"related_transaction_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) Reset() {
	*x = ListWalletBalanceTransactionsResponse_BalanceTransaction{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[125]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWalletBalanceTransactionsResponse_BalanceTransaction) ProtoMessage() {}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[125]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWalletBalanceTransactionsResponse_BalanceTransaction.ProtoReflect.Descriptor instead.
func (*ListWalletBalanceTransactionsResponse_BalanceTransaction) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{22, 0}
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetVipLevel() int32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetChangeBalance() string {
	if x != nil {
		return x.ChangeBalance
	}
	return ""
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetBeforeBalance() string {
	if x != nil {
		return x.BeforeBalance
	}
	return ""
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetAfterBalance() string {
	if x != nil {
		return x.AfterBalance
	}
	return ""
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetRelatedTransactionId() int64 {
	if x != nil {
		return x.RelatedTransactionId
	}
	return 0
}

type GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction struct {
	state                                  protoimpl.MessageState `protogen:"open.v1"`
	Id                                     int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId                                 int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SettlementCurrency                     string                 `protobuf:"bytes,3,opt,name=settlement_currency,json=settlementCurrency,proto3" json:"settlement_currency,omitempty"`
	Currency                               string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	ExchangeRate                           string                 `protobuf:"bytes,5,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`
	TransactionType                        string                 `protobuf:"bytes,6,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	ExternalTransactionId                  int64                  `protobuf:"varint,7,opt,name=external_transaction_id,json=externalTransactionId,proto3" json:"external_transaction_id,omitempty"`
	RelatedTransactionId                   int64                  `protobuf:"varint,8,opt,name=related_transaction_id,json=relatedTransactionId,proto3" json:"related_transaction_id,omitempty"`
	OriginalCash                           string                 `protobuf:"bytes,9,opt,name=original_cash,json=originalCash,proto3" json:"original_cash,omitempty"`
	OriginalCashUsd                        string                 `protobuf:"bytes,10,opt,name=original_cash_usd,json=originalCashUsd,proto3" json:"original_cash_usd,omitempty"`
	OriginalCashReportingCurrency          string                 `protobuf:"bytes,11,opt,name=original_cash_reporting_currency,json=originalCashReportingCurrency,proto3" json:"original_cash_reporting_currency,omitempty"`
	Cash                                   string                 `protobuf:"bytes,12,opt,name=cash,proto3" json:"cash,omitempty"`
	CashUsd                                string                 `protobuf:"bytes,13,opt,name=cash_usd,json=cashUsd,proto3" json:"cash_usd,omitempty"`
	CashReportingCurrency                  string                 `protobuf:"bytes,14,opt,name=cash_reporting_currency,json=cashReportingCurrency,proto3" json:"cash_reporting_currency,omitempty"`
	CashAmount                             string                 `protobuf:"bytes,15,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	CashAmountUsd                          string                 `protobuf:"bytes,16,opt,name=cash_amount_usd,json=cashAmountUsd,proto3" json:"cash_amount_usd,omitempty"`
	CashAmountReportingCurrency            string                 `protobuf:"bytes,17,opt,name=cash_amount_reporting_currency,json=cashAmountReportingCurrency,proto3" json:"cash_amount_reporting_currency,omitempty"`
	OriginalOperatorBonus                  string                 `protobuf:"bytes,18,opt,name=original_operator_bonus,json=originalOperatorBonus,proto3" json:"original_operator_bonus,omitempty"`
	OriginalOperatorBonusUsd               string                 `protobuf:"bytes,19,opt,name=original_operator_bonus_usd,json=originalOperatorBonusUsd,proto3" json:"original_operator_bonus_usd,omitempty"`
	OriginalOperatorBonusReportingCurrency string                 `protobuf:"bytes,20,opt,name=original_operator_bonus_reporting_currency,json=originalOperatorBonusReportingCurrency,proto3" json:"original_operator_bonus_reporting_currency,omitempty"`
	OperatorBonus                          string                 `protobuf:"bytes,21,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	OperatorBonusUsd                       string                 `protobuf:"bytes,22,opt,name=operator_bonus_usd,json=operatorBonusUsd,proto3" json:"operator_bonus_usd,omitempty"`
	OperatorBonusReportingCurrency         string                 `protobuf:"bytes,23,opt,name=operator_bonus_reporting_currency,json=operatorBonusReportingCurrency,proto3" json:"operator_bonus_reporting_currency,omitempty"`
	OperatorBonusAmount                    string                 `protobuf:"bytes,24,opt,name=operator_bonus_amount,json=operatorBonusAmount,proto3" json:"operator_bonus_amount,omitempty"`
	OperatorBonusAmountUsd                 string                 `protobuf:"bytes,25,opt,name=operator_bonus_amount_usd,json=operatorBonusAmountUsd,proto3" json:"operator_bonus_amount_usd,omitempty"`
	OperatorBonusAmountReportingCurrency   string                 `protobuf:"bytes,26,opt,name=operator_bonus_amount_reporting_currency,json=operatorBonusAmountReportingCurrency,proto3" json:"operator_bonus_amount_reporting_currency,omitempty"`
	OriginalProviderBonus                  string                 `protobuf:"bytes,27,opt,name=original_provider_bonus,json=originalProviderBonus,proto3" json:"original_provider_bonus,omitempty"`
	OriginalProviderBonusUsd               string                 `protobuf:"bytes,28,opt,name=original_provider_bonus_usd,json=originalProviderBonusUsd,proto3" json:"original_provider_bonus_usd,omitempty"`
	OriginalProviderBonusReportingCurrency string                 `protobuf:"bytes,29,opt,name=original_provider_bonus_reporting_currency,json=originalProviderBonusReportingCurrency,proto3" json:"original_provider_bonus_reporting_currency,omitempty"`
	ProviderBonus                          string                 `protobuf:"bytes,30,opt,name=provider_bonus,json=providerBonus,proto3" json:"provider_bonus,omitempty"`
	ProviderBonusUsd                       string                 `protobuf:"bytes,31,opt,name=provider_bonus_usd,json=providerBonusUsd,proto3" json:"provider_bonus_usd,omitempty"`
	ProviderBonusReportingCurrency         string                 `protobuf:"bytes,32,opt,name=provider_bonus_reporting_currency,json=providerBonusReportingCurrency,proto3" json:"provider_bonus_reporting_currency,omitempty"`
	ProviderBonusAmount                    string                 `protobuf:"bytes,33,opt,name=provider_bonus_amount,json=providerBonusAmount,proto3" json:"provider_bonus_amount,omitempty"`
	ProviderBonusAmountUsd                 string                 `protobuf:"bytes,34,opt,name=provider_bonus_amount_usd,json=providerBonusAmountUsd,proto3" json:"provider_bonus_amount_usd,omitempty"`
	ProviderBonusAmountReportingCurrency   string                 `protobuf:"bytes,35,opt,name=provider_bonus_amount_reporting_currency,json=providerBonusAmountReportingCurrency,proto3" json:"provider_bonus_amount_reporting_currency,omitempty"`
	CreatedAt                              *timestamppb.Timestamp `protobuf:"bytes,36,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                              *timestamppb.Timestamp `protobuf:"bytes,37,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields                          protoimpl.UnknownFields
	sizeCache                              protoimpl.SizeCache
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) Reset() {
	*x = GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[126]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) ProtoMessage() {}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[126]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{24, 0}
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetSettlementCurrency() string {
	if x != nil {
		return x.SettlementCurrency
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetExternalTransactionId() int64 {
	if x != nil {
		return x.ExternalTransactionId
	}
	return 0
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetRelatedTransactionId() int64 {
	if x != nil {
		return x.RelatedTransactionId
	}
	return 0
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalCash() string {
	if x != nil {
		return x.OriginalCash
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalCashUsd() string {
	if x != nil {
		return x.OriginalCashUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalCashReportingCurrency() string {
	if x != nil {
		return x.OriginalCashReportingCurrency
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCashUsd() string {
	if x != nil {
		return x.CashUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCashReportingCurrency() string {
	if x != nil {
		return x.CashReportingCurrency
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCashAmountUsd() string {
	if x != nil {
		return x.CashAmountUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCashAmountReportingCurrency() string {
	if x != nil {
		return x.CashAmountReportingCurrency
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalOperatorBonus() string {
	if x != nil {
		return x.OriginalOperatorBonus
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalOperatorBonusUsd() string {
	if x != nil {
		return x.OriginalOperatorBonusUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalOperatorBonusReportingCurrency() string {
	if x != nil {
		return x.OriginalOperatorBonusReportingCurrency
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOperatorBonusUsd() string {
	if x != nil {
		return x.OperatorBonusUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOperatorBonusReportingCurrency() string {
	if x != nil {
		return x.OperatorBonusReportingCurrency
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOperatorBonusAmount() string {
	if x != nil {
		return x.OperatorBonusAmount
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOperatorBonusAmountUsd() string {
	if x != nil {
		return x.OperatorBonusAmountUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOperatorBonusAmountReportingCurrency() string {
	if x != nil {
		return x.OperatorBonusAmountReportingCurrency
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalProviderBonus() string {
	if x != nil {
		return x.OriginalProviderBonus
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalProviderBonusUsd() string {
	if x != nil {
		return x.OriginalProviderBonusUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalProviderBonusReportingCurrency() string {
	if x != nil {
		return x.OriginalProviderBonusReportingCurrency
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetProviderBonus() string {
	if x != nil {
		return x.ProviderBonus
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetProviderBonusUsd() string {
	if x != nil {
		return x.ProviderBonusUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetProviderBonusReportingCurrency() string {
	if x != nil {
		return x.ProviderBonusReportingCurrency
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetProviderBonusAmount() string {
	if x != nil {
		return x.ProviderBonusAmount
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetProviderBonusAmountUsd() string {
	if x != nil {
		return x.ProviderBonusAmountUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetProviderBonusAmountReportingCurrency() string {
	if x != nil {
		return x.ProviderBonusAmountReportingCurrency
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetWalletCreditTransactionsResponse_CreditTransaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Cash          string                 `protobuf:"bytes,3,opt,name=cash,proto3" json:"cash,omitempty"`
	Bonus         string                 `protobuf:"bytes,4,opt,name=bonus,proto3" json:"bonus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) Reset() {
	*x = GetWalletCreditTransactionsResponse_CreditTransaction{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[127]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletCreditTransactionsResponse_CreditTransaction) ProtoMessage() {}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[127]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletCreditTransactionsResponse_CreditTransaction.ProtoReflect.Descriptor instead.
func (*GetWalletCreditTransactionsResponse_CreditTransaction) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{26, 0}
}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) GetBonus() string {
	if x != nil {
		return x.Bonus
	}
	return ""
}

type GetOverviewDashboardFromWalletResponse_GGR struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	TodayUsd                   string                 `protobuf:"bytes,1,opt,name=today_usd,json=todayUsd,proto3" json:"today_usd,omitempty"`
	YesterdayUsd               string                 `protobuf:"bytes,2,opt,name=yesterday_usd,json=yesterdayUsd,proto3" json:"yesterday_usd,omitempty"`
	TodayReportingCurrency     string                 `protobuf:"bytes,3,opt,name=today_reporting_currency,json=todayReportingCurrency,proto3" json:"today_reporting_currency,omitempty"`
	YesterdayReportingCurrency string                 `protobuf:"bytes,4,opt,name=yesterday_reporting_currency,json=yesterdayReportingCurrency,proto3" json:"yesterday_reporting_currency,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletResponse_GGR) Reset() {
	*x = GetOverviewDashboardFromWalletResponse_GGR{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletResponse_GGR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletResponse_GGR) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletResponse_GGR) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletResponse_GGR.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletResponse_GGR) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{36, 0}
}

func (x *GetOverviewDashboardFromWalletResponse_GGR) GetTodayUsd() string {
	if x != nil {
		return x.TodayUsd
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_GGR) GetYesterdayUsd() string {
	if x != nil {
		return x.YesterdayUsd
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_GGR) GetTodayReportingCurrency() string {
	if x != nil {
		return x.TodayReportingCurrency
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_GGR) GetYesterdayReportingCurrency() string {
	if x != nil {
		return x.YesterdayReportingCurrency
	}
	return ""
}

type GetOverviewDashboardFromWalletResponse_NGR struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	TodayUsd                   string                 `protobuf:"bytes,1,opt,name=today_usd,json=todayUsd,proto3" json:"today_usd,omitempty"`
	YesterdayUsd               string                 `protobuf:"bytes,2,opt,name=yesterday_usd,json=yesterdayUsd,proto3" json:"yesterday_usd,omitempty"`
	TodayReportingCurrency     string                 `protobuf:"bytes,3,opt,name=today_reporting_currency,json=todayReportingCurrency,proto3" json:"today_reporting_currency,omitempty"`
	YesterdayReportingCurrency string                 `protobuf:"bytes,4,opt,name=yesterday_reporting_currency,json=yesterdayReportingCurrency,proto3" json:"yesterday_reporting_currency,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletResponse_NGR) Reset() {
	*x = GetOverviewDashboardFromWalletResponse_NGR{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[131]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletResponse_NGR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletResponse_NGR) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletResponse_NGR) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[131]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletResponse_NGR.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletResponse_NGR) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{36, 1}
}

func (x *GetOverviewDashboardFromWalletResponse_NGR) GetTodayUsd() string {
	if x != nil {
		return x.TodayUsd
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_NGR) GetYesterdayUsd() string {
	if x != nil {
		return x.YesterdayUsd
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_NGR) GetTodayReportingCurrency() string {
	if x != nil {
		return x.TodayReportingCurrency
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_NGR) GetYesterdayReportingCurrency() string {
	if x != nil {
		return x.YesterdayReportingCurrency
	}
	return ""
}

type GetOverviewDashboardFromWalletResponse_Deposit struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	TodayUsd                   string                 `protobuf:"bytes,1,opt,name=today_usd,json=todayUsd,proto3" json:"today_usd,omitempty"`
	YesterdayUsd               string                 `protobuf:"bytes,2,opt,name=yesterday_usd,json=yesterdayUsd,proto3" json:"yesterday_usd,omitempty"`
	TodayReportingCurrency     string                 `protobuf:"bytes,3,opt,name=today_reporting_currency,json=todayReportingCurrency,proto3" json:"today_reporting_currency,omitempty"`
	YesterdayReportingCurrency string                 `protobuf:"bytes,4,opt,name=yesterday_reporting_currency,json=yesterdayReportingCurrency,proto3" json:"yesterday_reporting_currency,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletResponse_Deposit) Reset() {
	*x = GetOverviewDashboardFromWalletResponse_Deposit{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[132]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletResponse_Deposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletResponse_Deposit) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletResponse_Deposit) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[132]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletResponse_Deposit.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletResponse_Deposit) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{36, 2}
}

func (x *GetOverviewDashboardFromWalletResponse_Deposit) GetTodayUsd() string {
	if x != nil {
		return x.TodayUsd
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_Deposit) GetYesterdayUsd() string {
	if x != nil {
		return x.YesterdayUsd
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_Deposit) GetTodayReportingCurrency() string {
	if x != nil {
		return x.TodayReportingCurrency
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_Deposit) GetYesterdayReportingCurrency() string {
	if x != nil {
		return x.YesterdayReportingCurrency
	}
	return ""
}

type GetOverviewDashboardFromWalletResponse_Withdraw struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	TodayUsd                   string                 `protobuf:"bytes,1,opt,name=today_usd,json=todayUsd,proto3" json:"today_usd,omitempty"`
	YesterdayUsd               string                 `protobuf:"bytes,2,opt,name=yesterday_usd,json=yesterdayUsd,proto3" json:"yesterday_usd,omitempty"`
	TodayReportingCurrency     string                 `protobuf:"bytes,3,opt,name=today_reporting_currency,json=todayReportingCurrency,proto3" json:"today_reporting_currency,omitempty"`
	YesterdayReportingCurrency string                 `protobuf:"bytes,4,opt,name=yesterday_reporting_currency,json=yesterdayReportingCurrency,proto3" json:"yesterday_reporting_currency,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletResponse_Withdraw) Reset() {
	*x = GetOverviewDashboardFromWalletResponse_Withdraw{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletResponse_Withdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletResponse_Withdraw) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletResponse_Withdraw) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletResponse_Withdraw.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletResponse_Withdraw) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{36, 3}
}

func (x *GetOverviewDashboardFromWalletResponse_Withdraw) GetTodayUsd() string {
	if x != nil {
		return x.TodayUsd
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_Withdraw) GetYesterdayUsd() string {
	if x != nil {
		return x.YesterdayUsd
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_Withdraw) GetTodayReportingCurrency() string {
	if x != nil {
		return x.TodayReportingCurrency
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_Withdraw) GetYesterdayReportingCurrency() string {
	if x != nil {
		return x.YesterdayReportingCurrency
	}
	return ""
}

type GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	TodayUsd                   string                 `protobuf:"bytes,1,opt,name=today_usd,json=todayUsd,proto3" json:"today_usd,omitempty"`
	YesterdayUsd               string                 `protobuf:"bytes,2,opt,name=yesterday_usd,json=yesterdayUsd,proto3" json:"yesterday_usd,omitempty"`
	TodayReportingCurrency     string                 `protobuf:"bytes,3,opt,name=today_reporting_currency,json=todayReportingCurrency,proto3" json:"today_reporting_currency,omitempty"`
	YesterdayReportingCurrency string                 `protobuf:"bytes,4,opt,name=yesterday_reporting_currency,json=yesterdayReportingCurrency,proto3" json:"yesterday_reporting_currency,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) Reset() {
	*x = GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{36, 4}
}

func (x *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) GetTodayUsd() string {
	if x != nil {
		return x.TodayUsd
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) GetYesterdayUsd() string {
	if x != nil {
		return x.YesterdayUsd
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) GetTodayReportingCurrency() string {
	if x != nil {
		return x.TodayReportingCurrency
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) GetYesterdayReportingCurrency() string {
	if x != nil {
		return x.YesterdayReportingCurrency
	}
	return ""
}

type RewardSequence_TierConfig struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	MinDepositAmount    string                 `protobuf:"bytes,1,opt,name=min_deposit_amount,json=minDepositAmount,proto3" json:"min_deposit_amount,omitempty"`
	MaxDepositAmount    string                 `protobuf:"bytes,2,opt,name=max_deposit_amount,json=maxDepositAmount,proto3" json:"max_deposit_amount,omitempty"`
	RewardPercentage    string                 `protobuf:"bytes,3,opt,name=reward_percentage,json=rewardPercentage,proto3" json:"reward_percentage,omitempty"`
	MaxRewardAmount     string                 `protobuf:"bytes,4,opt,name=max_reward_amount,json=maxRewardAmount,proto3" json:"max_reward_amount,omitempty"`
	MaxWithdrawalAmount string                 `protobuf:"bytes,5,opt,name=max_withdrawal_amount,json=maxWithdrawalAmount,proto3" json:"max_withdrawal_amount,omitempty"` // only available for bonus reward
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RewardSequence_TierConfig) Reset() {
	*x = RewardSequence_TierConfig{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[135]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RewardSequence_TierConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RewardSequence_TierConfig) ProtoMessage() {}

func (x *RewardSequence_TierConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[135]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RewardSequence_TierConfig.ProtoReflect.Descriptor instead.
func (*RewardSequence_TierConfig) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{78, 0}
}

func (x *RewardSequence_TierConfig) GetMinDepositAmount() string {
	if x != nil {
		return x.MinDepositAmount
	}
	return ""
}

func (x *RewardSequence_TierConfig) GetMaxDepositAmount() string {
	if x != nil {
		return x.MaxDepositAmount
	}
	return ""
}

func (x *RewardSequence_TierConfig) GetRewardPercentage() string {
	if x != nil {
		return x.RewardPercentage
	}
	return ""
}

func (x *RewardSequence_TierConfig) GetMaxRewardAmount() string {
	if x != nil {
		return x.MaxRewardAmount
	}
	return ""
}

func (x *RewardSequence_TierConfig) GetMaxWithdrawalAmount() string {
	if x != nil {
		return x.MaxWithdrawalAmount
	}
	return ""
}

type UserBalanceDetail_Credit struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	CreditId                       int64                  `protobuf:"varint,1,opt,name=credit_id,json=creditId,proto3" json:"credit_id,omitempty"`
	Cash                           string                 `protobuf:"bytes,2,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorBonus                  string                 `protobuf:"bytes,3,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	ProviderBonus                  string                 `protobuf:"bytes,4,opt,name=provider_bonus,json=providerBonus,proto3" json:"provider_bonus,omitempty"`
	WithdrawableCash               string                 `protobuf:"bytes,5,opt,name=withdrawable_cash,json=withdrawableCash,proto3" json:"withdrawable_cash,omitempty"`
	TransferableOperatorBonus      string                 `protobuf:"bytes,6,opt,name=transferable_operator_bonus,json=transferableOperatorBonus,proto3" json:"transferable_operator_bonus,omitempty"`
	CashTurnover                   string                 `protobuf:"bytes,7,opt,name=cash_turnover,json=cashTurnover,proto3" json:"cash_turnover,omitempty"`
	CashTurnoverThreshold          string                 `protobuf:"bytes,8,opt,name=cash_turnover_threshold,json=cashTurnoverThreshold,proto3" json:"cash_turnover_threshold,omitempty"`
	OperatorBonusTurnover          string                 `protobuf:"bytes,9,opt,name=operator_bonus_turnover,json=operatorBonusTurnover,proto3" json:"operator_bonus_turnover,omitempty"`
	OperatorBonusTurnoverThreshold string                 `protobuf:"bytes,10,opt,name=operator_bonus_turnover_threshold,json=operatorBonusTurnoverThreshold,proto3" json:"operator_bonus_turnover_threshold,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *UserBalanceDetail_Credit) Reset() {
	*x = UserBalanceDetail_Credit{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserBalanceDetail_Credit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBalanceDetail_Credit) ProtoMessage() {}

func (x *UserBalanceDetail_Credit) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBalanceDetail_Credit.ProtoReflect.Descriptor instead.
func (*UserBalanceDetail_Credit) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{99, 0}
}

func (x *UserBalanceDetail_Credit) GetCreditId() int64 {
	if x != nil {
		return x.CreditId
	}
	return 0
}

func (x *UserBalanceDetail_Credit) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *UserBalanceDetail_Credit) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

func (x *UserBalanceDetail_Credit) GetProviderBonus() string {
	if x != nil {
		return x.ProviderBonus
	}
	return ""
}

func (x *UserBalanceDetail_Credit) GetWithdrawableCash() string {
	if x != nil {
		return x.WithdrawableCash
	}
	return ""
}

func (x *UserBalanceDetail_Credit) GetTransferableOperatorBonus() string {
	if x != nil {
		return x.TransferableOperatorBonus
	}
	return ""
}

func (x *UserBalanceDetail_Credit) GetCashTurnover() string {
	if x != nil {
		return x.CashTurnover
	}
	return ""
}

func (x *UserBalanceDetail_Credit) GetCashTurnoverThreshold() string {
	if x != nil {
		return x.CashTurnoverThreshold
	}
	return ""
}

func (x *UserBalanceDetail_Credit) GetOperatorBonusTurnover() string {
	if x != nil {
		return x.OperatorBonusTurnover
	}
	return ""
}

func (x *UserBalanceDetail_Credit) GetOperatorBonusTurnoverThreshold() string {
	if x != nil {
		return x.OperatorBonusTurnoverThreshold
	}
	return ""
}

type ListCustomerRecordsResponse_CustomerRecord struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	DateTime              *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	TransactionType       string                 `protobuf:"bytes,2,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	UserId                int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TransactionId         int64                  `protobuf:"varint,4,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Currency              string                 `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	AmountChanged         string                 `protobuf:"bytes,6,opt,name=amount_changed,json=amountChanged,proto3" json:"amount_changed,omitempty"`
	BeforeBalance         string                 `protobuf:"bytes,7,opt,name=before_balance,json=beforeBalance,proto3" json:"before_balance,omitempty"`
	AfterBalance          string                 `protobuf:"bytes,8,opt,name=after_balance,json=afterBalance,proto3" json:"after_balance,omitempty"`
	ExternalTransactionId int64                  `protobuf:"varint,9,opt,name=external_transaction_id,json=externalTransactionId,proto3" json:"external_transaction_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ListCustomerRecordsResponse_CustomerRecord) Reset() {
	*x = ListCustomerRecordsResponse_CustomerRecord{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCustomerRecordsResponse_CustomerRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCustomerRecordsResponse_CustomerRecord) ProtoMessage() {}

func (x *ListCustomerRecordsResponse_CustomerRecord) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCustomerRecordsResponse_CustomerRecord.ProtoReflect.Descriptor instead.
func (*ListCustomerRecordsResponse_CustomerRecord) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{112, 0}
}

func (x *ListCustomerRecordsResponse_CustomerRecord) GetDateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DateTime
	}
	return nil
}

func (x *ListCustomerRecordsResponse_CustomerRecord) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *ListCustomerRecordsResponse_CustomerRecord) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListCustomerRecordsResponse_CustomerRecord) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *ListCustomerRecordsResponse_CustomerRecord) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ListCustomerRecordsResponse_CustomerRecord) GetAmountChanged() string {
	if x != nil {
		return x.AmountChanged
	}
	return ""
}

func (x *ListCustomerRecordsResponse_CustomerRecord) GetBeforeBalance() string {
	if x != nil {
		return x.BeforeBalance
	}
	return ""
}

func (x *ListCustomerRecordsResponse_CustomerRecord) GetAfterBalance() string {
	if x != nil {
		return x.AfterBalance
	}
	return ""
}

func (x *ListCustomerRecordsResponse_CustomerRecord) GetExternalTransactionId() int64 {
	if x != nil {
		return x.ExternalTransactionId
	}
	return 0
}

type FICAThresholdConfig_Config struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TransactionType string                 `protobuf:"bytes,1,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"` // payment_deposit, payment_withdraw_freeze, game_bet, game_win, deposit_reward
	ThresholdAmount string                 `protobuf:"bytes,2,opt,name=threshold_amount,json=thresholdAmount,proto3" json:"threshold_amount,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FICAThresholdConfig_Config) Reset() {
	*x = FICAThresholdConfig_Config{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FICAThresholdConfig_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FICAThresholdConfig_Config) ProtoMessage() {}

func (x *FICAThresholdConfig_Config) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FICAThresholdConfig_Config.ProtoReflect.Descriptor instead.
func (*FICAThresholdConfig_Config) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{113, 0}
}

func (x *FICAThresholdConfig_Config) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *FICAThresholdConfig_Config) GetThresholdAmount() string {
	if x != nil {
		return x.ThresholdAmount
	}
	return ""
}

type ListFICAThresholdTransactionsResponse_FICAThresholdTransaction struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Type            string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	TransactionTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=transaction_time,json=transactionTime,proto3" json:"transaction_time,omitempty"` // created_at
	TransactionId   int64                  `protobuf:"varint,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Currency        string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount          string                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`
	ExcessAmount    string                 `protobuf:"bytes,6,opt,name=excess_amount,json=excessAmount,proto3" json:"excess_amount,omitempty"`
	UserId          int64                  `protobuf:"varint,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FullName        string                 `protobuf:"bytes,8,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	IdType          string                 `protobuf:"bytes,9,opt,name=id_type,json=idType,proto3" json:"id_type,omitempty"`
	IdNumber        string                 `protobuf:"bytes,10,opt,name=id_number,json=idNumber,proto3" json:"id_number,omitempty"`
	Mobile          string                 `protobuf:"bytes,11,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email           string                 `protobuf:"bytes,12,opt,name=email,proto3" json:"email,omitempty"`
	Address         string                 `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	KycLevel        int32                  `protobuf:"varint,14,opt,name=kyc_level,json=kycLevel,proto3" json:"kyc_level,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) Reset() {
	*x = ListFICAThresholdTransactionsResponse_FICAThresholdTransaction{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) ProtoMessage() {}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFICAThresholdTransactionsResponse_FICAThresholdTransaction.ProtoReflect.Descriptor instead.
func (*ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{119, 0}
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetTransactionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.TransactionTime
	}
	return nil
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetExcessAmount() string {
	if x != nil {
		return x.ExcessAmount
	}
	return ""
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetIdType() string {
	if x != nil {
		return x.IdType
	}
	return ""
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetIdNumber() string {
	if x != nil {
		return x.IdNumber
	}
	return ""
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ListFICAThresholdTransactionsResponse_FICAThresholdTransaction) GetKycLevel() int32 {
	if x != nil {
		return x.KycLevel
	}
	return 0
}

var File_wallet_service_v1_wallet_proto protoreflect.FileDescriptor

const file_wallet_service_v1_wallet_proto_rawDesc = "" +
	"\n" +
	"\x1ewallet/service/v1/wallet.proto\x12\x15api.wallet.service.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x13common/common.proto\"1\n" +
	"\x16GetUserBalancesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"\xd3\x02\n" +
	"\x17GetUserBalancesResponse\x12R\n" +
	"\bbalances\x18\x01 \x03(\v26.api.wallet.service.v1.GetUserBalancesResponse.BalanceR\bbalances\x1a\xe3\x01\n" +
	"\aBalance\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x12\n" +
	"\x04cash\x18\x02 \x01(\tR\x04cash\x12%\n" +
	"\x0eoperator_bonus\x18\x03 \x01(\tR\roperatorBonus\x12%\n" +
	"\x0eprovider_bonus\x18\x04 \x01(\tR\rproviderBonus\x12+\n" +
	"\x11withdrawable_cash\x18\x05 \x01(\tR\x10withdrawableCash\x12-\n" +
	"\x12transferable_bonus\x18\x06 \x01(\tR\x11transferableBonus\"}\n" +
	"\x15GetUserBalanceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12/\n" +
	"\x13settlement_currency\x18\x03 \x01(\tR\x12settlementCurrency\"\x9f\x01\n" +
	"\x16GetUserBalanceResponse\x12#\n" +
	"\rexchange_rate\x18\x01 \x01(\tR\fexchangeRate\x12\x12\n" +
	"\x04cash\x18\x02 \x01(\tR\x04cash\x12%\n" +
	"\x0eoperator_bonus\x18\x03 \x01(\tR\roperatorBonus\x12%\n" +
	"\x0eprovider_bonus\x18\x04 \x01(\tR\rproviderBonus\"\xe5\x02\n" +
	"\rCreditRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12-\n" +
	"\x12reporting_currency\x18\x03 \x01(\tR\x11reportingCurrency\x12)\n" +
	"\x10transaction_type\x18\x04 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\x05 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x06 \x01(\tR\x04cash\x12F\n" +
	"\x10operator_context\x18\a \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x1aB\n" +
	"\x05Ratio\x12\x12\n" +
	"\x04cash\x18\x01 \x01(\tR\x04cash\x12%\n" +
	"\x0eoperator_bonus\x18\x02 \x01(\tR\roperatorBonus\"7\n" +
	"\x0eCreditResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\"\xa0\x02\n" +
	"\fDebitRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12-\n" +
	"\x12reporting_currency\x18\x03 \x01(\tR\x11reportingCurrency\x12)\n" +
	"\x10transaction_type\x18\x04 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\x05 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x06 \x01(\tR\x04cash\x12F\n" +
	"\x10operator_context\x18\a \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\"6\n" +
	"\rDebitResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\"\xdc\x03\n" +
	"\x10GameDebitRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12/\n" +
	"\x13settlement_currency\x18\x03 \x01(\tR\x12settlementCurrency\x12-\n" +
	"\x12reporting_currency\x18\x04 \x01(\tR\x11reportingCurrency\x12#\n" +
	"\rexchange_rate\x18\x05 \x01(\tR\fexchangeRate\x12)\n" +
	"\x10transaction_type\x18\x06 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\a \x01(\x03R\rtransactionId\x12\x16\n" +
	"\x06amount\x18\b \x01(\tR\x06amount\x12\x1a\n" +
	"\bturnover\x18\t \x01(\tR\bturnover\x12F\n" +
	"\x10operator_context\x18\n" +
	" \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12,\n" +
	"\x0fallow_overdraft\x18\v \x01(\bH\x00R\x0eallowOverdraft\x88\x01\x01B\x12\n" +
	"\x10_allow_overdraft\"\xdd\x05\n" +
	"\x11GameDebitResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\x12#\n" +
	"\rexchange_rate\x18\x02 \x01(\tR\fexchangeRate\x12\x12\n" +
	"\x04cash\x18\x03 \x01(\tR\x04cash\x12%\n" +
	"\x0eoperator_bonus\x18\x04 \x01(\tR\roperatorBonus\x12%\n" +
	"\x0eprovider_bonus\x18\x05 \x01(\tR\rproviderBonus\x12\x1f\n" +
	"\vcash_amount\x18\x06 \x01(\tR\n" +
	"cashAmount\x122\n" +
	"\x15operator_bonus_amount\x18\a \x01(\tR\x13operatorBonusAmount\x122\n" +
	"\x15provider_bonus_amount\x18\b \x01(\tR\x13providerBonusAmount\x12&\n" +
	"\x0fcash_amount_usd\x18\t \x01(\tR\rcashAmountUsd\x129\n" +
	"\x19operator_bonus_amount_usd\x18\n" +
	" \x01(\tR\x16operatorBonusAmountUsd\x129\n" +
	"\x19provider_bonus_amount_usd\x18\v \x01(\tR\x16providerBonusAmountUsd\x12C\n" +
	"\x1ecash_amount_reporting_currency\x18\f \x01(\tR\x1bcashAmountReportingCurrency\x12V\n" +
	"(operator_bonus_amount_reporting_currency\x18\r \x01(\tR$operatorBonusAmountReportingCurrency\x12V\n" +
	"(provider_bonus_amount_reporting_currency\x18\x0e \x01(\tR$providerBonusAmountReportingCurrency\"\xb7\x03\n" +
	"\x11GameCreditRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12/\n" +
	"\x13settlement_currency\x18\x03 \x01(\tR\x12settlementCurrency\x12-\n" +
	"\x12reporting_currency\x18\x04 \x01(\tR\x11reportingCurrency\x12#\n" +
	"\rexchange_rate\x18\x05 \x01(\tR\fexchangeRate\x12)\n" +
	"\x10transaction_type\x18\x06 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\a \x01(\x03R\rtransactionId\x126\n" +
	"\x17original_transaction_id\x18\b \x01(\x03R\x15originalTransactionId\x12\x16\n" +
	"\x06amount\x18\t \x01(\tR\x06amount\x12F\n" +
	"\x10operator_context\x18\n" +
	" \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\"\xde\x05\n" +
	"\x12GameCreditResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\x12#\n" +
	"\rexchange_rate\x18\x02 \x01(\tR\fexchangeRate\x12\x12\n" +
	"\x04cash\x18\x03 \x01(\tR\x04cash\x12%\n" +
	"\x0eoperator_bonus\x18\x04 \x01(\tR\roperatorBonus\x12%\n" +
	"\x0eprovider_bonus\x18\x05 \x01(\tR\rproviderBonus\x12\x1f\n" +
	"\vcash_amount\x18\x06 \x01(\tR\n" +
	"cashAmount\x122\n" +
	"\x15operator_bonus_amount\x18\a \x01(\tR\x13operatorBonusAmount\x122\n" +
	"\x15provider_bonus_amount\x18\b \x01(\tR\x13providerBonusAmount\x12&\n" +
	"\x0fcash_amount_usd\x18\t \x01(\tR\rcashAmountUsd\x129\n" +
	"\x19operator_bonus_amount_usd\x18\n" +
	" \x01(\tR\x16operatorBonusAmountUsd\x129\n" +
	"\x19provider_bonus_amount_usd\x18\v \x01(\tR\x16providerBonusAmountUsd\x12C\n" +
	"\x1ecash_amount_reporting_currency\x18\f \x01(\tR\x1bcashAmountReportingCurrency\x12V\n" +
	"(operator_bonus_amount_reporting_currency\x18\r \x01(\tR$operatorBonusAmountReportingCurrency\x12V\n" +
	"(provider_bonus_amount_reporting_currency\x18\x0e \x01(\tR$providerBonusAmountReportingCurrency\"U\n" +
	"\vChannelInfo\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\"\xe8\x02\n" +
	"\rFreezeRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12-\n" +
	"\x12reporting_currency\x18\x03 \x01(\tR\x11reportingCurrency\x12)\n" +
	"\x10transaction_type\x18\x04 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\x05 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x06 \x01(\tR\x04cash\x12F\n" +
	"\x10operator_context\x18\a \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12E\n" +
	"\fchannel_info\x18\b \x01(\v2\".api.wallet.service.v1.ChannelInfoR\vchannelInfo\"7\n" +
	"\x0eFreezeResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\"\xe0\x01\n" +
	"\rSettleRequest\x12)\n" +
	"\x10transaction_type\x18\x01 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\x03R\rtransactionId\x126\n" +
	"\x17original_transaction_id\x18\x03 \x01(\x03R\x15originalTransactionId\x12E\n" +
	"\fchannel_info\x18\x04 \x01(\v2\".api.wallet.service.v1.ChannelInfoR\vchannelInfo\"7\n" +
	"\x0eSettleResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\"\xe2\x01\n" +
	"\x0fRollbackRequest\x12)\n" +
	"\x10transaction_type\x18\x01 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\x03R\rtransactionId\x126\n" +
	"\x17original_transaction_id\x18\x03 \x01(\x03R\x15originalTransactionId\x12E\n" +
	"\fchannel_info\x18\x04 \x01(\v2\".api.wallet.service.v1.ChannelInfoR\vchannelInfo\"\xb7\x05\n" +
	"\x10RollbackResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x02 \x01(\tR\x04cash\x12%\n" +
	"\x0eoperator_bonus\x18\x03 \x01(\tR\roperatorBonus\x12%\n" +
	"\x0eprovider_bonus\x18\x04 \x01(\tR\rproviderBonus\x12\x1f\n" +
	"\vcash_amount\x18\x05 \x01(\tR\n" +
	"cashAmount\x122\n" +
	"\x15operator_bonus_amount\x18\x06 \x01(\tR\x13operatorBonusAmount\x122\n" +
	"\x15provider_bonus_amount\x18\a \x01(\tR\x13providerBonusAmount\x12&\n" +
	"\x0fcash_amount_usd\x18\b \x01(\tR\rcashAmountUsd\x129\n" +
	"\x19operator_bonus_amount_usd\x18\t \x01(\tR\x16operatorBonusAmountUsd\x129\n" +
	"\x19provider_bonus_amount_usd\x18\n" +
	" \x01(\tR\x16providerBonusAmountUsd\x12C\n" +
	"\x1ecash_amount_reporting_currency\x18\v \x01(\tR\x1bcashAmountReportingCurrency\x12V\n" +
	"(operator_bonus_amount_reporting_currency\x18\f \x01(\tR$operatorBonusAmountReportingCurrency\x12V\n" +
	"(provider_bonus_amount_reporting_currency\x18\r \x01(\tR$providerBonusAmountReportingCurrency\"\x94\x01\n" +
	"\x11GetWalletsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1e\n" +
	"\n" +
	"currencies\x18\x02 \x03(\tR\n" +
	"currencies\x12F\n" +
	"\x10operator_context\x18\x03 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\"\x97\x0f\n" +
	"\x12GetWalletsResponse\x12X\n" +
	"\ftotal_assets\x18\x01 \x01(\v25.api.wallet.service.v1.GetWalletsResponse.TotalAssetsR\vtotalAssets\x12J\n" +
	"\awallets\x18\x02 \x03(\v20.api.wallet.service.v1.GetWalletsResponse.WalletR\awallets\x1a\xbe\x04\n" +
	"\vTotalAssets\x12\x1f\n" +
	"\vbalance_usd\x18\x01 \x01(\tR\n" +
	"balanceUsd\x12\x1f\n" +
	"\vdeposit_usd\x18\x02 \x01(\tR\n" +
	"depositUsd\x12!\n" +
	"\fwithdraw_usd\x18\x03 \x01(\tR\vwithdrawUsd\x12;\n" +
	"\x1adeposit_minus_withdraw_usd\x18\x04 \x01(\tR\x17depositMinusWithdrawUsd\x12,\n" +
	"\x12valid_turnover_usd\x18\x05 \x01(\tR\x10validTurnoverUsd\x12<\n" +
	"\x1abalance_reporting_currency\x18\x06 \x01(\tR\x18balanceReportingCurrency\x12<\n" +
	"\x1adeposit_reporting_currency\x18\a \x01(\tR\x18depositReportingCurrency\x12>\n" +
	"\x1bwithdraw_reporting_currency\x18\b \x01(\tR\x19withdrawReportingCurrency\x12X\n" +
	")deposit_minus_withdraw_reporting_currency\x18\t \x01(\tR%depositMinusWithdrawReportingCurrency\x12I\n" +
	"!valid_turnover_reporting_currency\x18\n" +
	" \x01(\tR\x1evalidTurnoverReportingCurrency\x1a\x9a\x04\n" +
	"\x06Credit\x129\n" +
	"\n" +
	"created_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x03 \x01(\tR\x04cash\x12#\n" +
	"\roriginal_cash\x18\x04 \x01(\tR\foriginalCash\x12\x14\n" +
	"\x05bonus\x18\x05 \x01(\tR\x05bonus\x12%\n" +
	"\x0eoriginal_bonus\x18\x06 \x01(\tR\roriginalBonus\x12-\n" +
	"\x12turnover_threshold\x18\a \x01(\tR\x11turnoverThreshold\x12\x1a\n" +
	"\bturnover\x18\b \x01(\tR\bturnover\x12#\n" +
	"\rcash_turnover\x18\t \x01(\tR\fcashTurnover\x12%\n" +
	"\x0ebonus_turnover\x18\n" +
	" \x01(\tR\rbonusTurnover\x12/\n" +
	"\x13turnover_multiplier\x18\v \x01(\tR\x12turnoverMultiplier\x126\n" +
	"\x17cash_turnover_threshold\x18\f \x01(\tR\x15cashTurnoverThreshold\x128\n" +
	"\x18bonus_turnover_threshold\x18\r \x01(\tR\x16bonusTurnoverThreshold\x1a\xfc\x04\n" +
	"\x06Wallet\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x12\n" +
	"\x04cash\x18\x02 \x01(\tR\x04cash\x12#\n" +
	"\roriginal_cash\x18\x03 \x01(\tR\foriginalCash\x12\x14\n" +
	"\x05bonus\x18\x04 \x01(\tR\x05bonus\x12%\n" +
	"\x0eoriginal_bonus\x18\x05 \x01(\tR\roriginalBonus\x12-\n" +
	"\x12turnover_threshold\x18\x06 \x01(\tR\x11turnoverThreshold\x12\x1a\n" +
	"\bturnover\x18\a \x01(\tR\bturnover\x12#\n" +
	"\rcash_turnover\x18\b \x01(\tR\fcashTurnover\x12%\n" +
	"\x0ebonus_turnover\x18\t \x01(\tR\rbonusTurnover\x12/\n" +
	"\x13turnover_multiplier\x18\n" +
	" \x01(\tR\x12turnoverMultiplier\x12J\n" +
	"\acredits\x18\v \x03(\v20.api.wallet.service.v1.GetWalletsResponse.CreditR\acredits\x126\n" +
	"\x17cash_turnover_threshold\x18\f \x01(\tR\x15cashTurnoverThreshold\x128\n" +
	"\x18bonus_turnover_threshold\x18\r \x01(\tR\x16bonusTurnoverThreshold\x12+\n" +
	"\x11withdrawable_cash\x18\x0e \x01(\tR\x10withdrawableCash\x12-\n" +
	"\x12transferable_bonus\x18\x0f \x01(\tR\x11transferableBonus\"\xe4\x03\n" +
	"$ListWalletBalanceTransactionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12.\n" +
	"\x10transaction_type\x18\x02 \x01(\tH\x00R\x0ftransactionType\x88\x01\x01\x12\x1f\n" +
	"\bcurrency\x18\x03 \x01(\tH\x01R\bcurrency\x88\x01\x01\x12>\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampH\x02R\tstartTime\x88\x01\x01\x12:\n" +
	"\bend_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampH\x03R\aendTime\x88\x01\x01\x12\x17\n" +
	"\x04page\x18\x06 \x01(\x05H\x04R\x04page\x88\x01\x01\x12 \n" +
	"\tpage_size\x18\a \x01(\x05H\x05R\bpageSize\x88\x01\x01\x12F\n" +
	"\x10operator_context\x18\b \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContextB\x13\n" +
	"\x11_transaction_typeB\v\n" +
	"\t_currencyB\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_timeB\a\n" +
	"\x05_pageB\f\n" +
	"\n" +
	"_page_size\"\xf9\x04\n" +
	"%ListWalletBalanceTransactionsResponse\x12\x82\x01\n" +
	"\x14balance_transactions\x18\x01 \x03(\v2O.api.wallet.service.v1.ListWalletBalanceTransactionsResponse.BalanceTransactionR\x13balanceTransactions\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x1a\x83\x03\n" +
	"\x12BalanceTransaction\x129\n" +
	"\n" +
	"created_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\x03R\rtransactionId\x12)\n" +
	"\x10transaction_type\x18\x03 \x01(\tR\x0ftransactionType\x12\x1b\n" +
	"\tvip_level\x18\x04 \x01(\x05R\bvipLevel\x12%\n" +
	"\x0echange_balance\x18\x05 \x01(\tR\rchangeBalance\x12%\n" +
	"\x0ebefore_balance\x18\x06 \x01(\tR\rbeforeBalance\x12#\n" +
	"\rafter_balance\x18\a \x01(\tR\fafterBalance\x12\x1a\n" +
	"\bcurrency\x18\b \x01(\tR\bcurrency\x124\n" +
	"\x16related_transaction_id\x18\t \x01(\x03R\x14relatedTransactionId\"\x9b\x01\n" +
	"(GetWalletBalanceTransactionsByIdsRequest\x12'\n" +
	"\x0ftransaction_ids\x18\x01 \x03(\x03R\x0etransactionIds\x12F\n" +
	"\x10operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\"\xf8\x10\n" +
	")GetWalletBalanceTransactionsByIdsResponse\x12\x86\x01\n" +
	"\x14balance_transactions\x18\x01 \x03(\v2S.api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse.BalanceTransactionR\x13balanceTransactions\x1a\xc1\x0f\n" +
	"\x12BalanceTransaction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12/\n" +
	"\x13settlement_currency\x18\x03 \x01(\tR\x12settlementCurrency\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12#\n" +
	"\rexchange_rate\x18\x05 \x01(\tR\fexchangeRate\x12)\n" +
	"\x10transaction_type\x18\x06 \x01(\tR\x0ftransactionType\x126\n" +
	"\x17external_transaction_id\x18\a \x01(\x03R\x15externalTransactionId\x124\n" +
	"\x16related_transaction_id\x18\b \x01(\x03R\x14relatedTransactionId\x12#\n" +
	"\roriginal_cash\x18\t \x01(\tR\foriginalCash\x12*\n" +
	"\x11original_cash_usd\x18\n" +
	" \x01(\tR\x0foriginalCashUsd\x12G\n" +
	" original_cash_reporting_currency\x18\v \x01(\tR\x1doriginalCashReportingCurrency\x12\x12\n" +
	"\x04cash\x18\f \x01(\tR\x04cash\x12\x19\n" +
	"\bcash_usd\x18\r \x01(\tR\acashUsd\x126\n" +
	"\x17cash_reporting_currency\x18\x0e \x01(\tR\x15cashReportingCurrency\x12\x1f\n" +
	"\vcash_amount\x18\x0f \x01(\tR\n" +
	"cashAmount\x12&\n" +
	"\x0fcash_amount_usd\x18\x10 \x01(\tR\rcashAmountUsd\x12C\n" +
	"\x1ecash_amount_reporting_currency\x18\x11 \x01(\tR\x1bcashAmountReportingCurrency\x126\n" +
	"\x17original_operator_bonus\x18\x12 \x01(\tR\x15originalOperatorBonus\x12=\n" +
	"\x1boriginal_operator_bonus_usd\x18\x13 \x01(\tR\x18originalOperatorBonusUsd\x12Z\n" +
	"*original_operator_bonus_reporting_currency\x18\x14 \x01(\tR&originalOperatorBonusReportingCurrency\x12%\n" +
	"\x0eoperator_bonus\x18\x15 \x01(\tR\roperatorBonus\x12,\n" +
	"\x12operator_bonus_usd\x18\x16 \x01(\tR\x10operatorBonusUsd\x12I\n" +
	"!operator_bonus_reporting_currency\x18\x17 \x01(\tR\x1eoperatorBonusReportingCurrency\x122\n" +
	"\x15operator_bonus_amount\x18\x18 \x01(\tR\x13operatorBonusAmount\x129\n" +
	"\x19operator_bonus_amount_usd\x18\x19 \x01(\tR\x16operatorBonusAmountUsd\x12V\n" +
	"(operator_bonus_amount_reporting_currency\x18\x1a \x01(\tR$operatorBonusAmountReportingCurrency\x126\n" +
	"\x17original_provider_bonus\x18\x1b \x01(\tR\x15originalProviderBonus\x12=\n" +
	"\x1boriginal_provider_bonus_usd\x18\x1c \x01(\tR\x18originalProviderBonusUsd\x12Z\n" +
	"*original_provider_bonus_reporting_currency\x18\x1d \x01(\tR&originalProviderBonusReportingCurrency\x12%\n" +
	"\x0eprovider_bonus\x18\x1e \x01(\tR\rproviderBonus\x12,\n" +
	"\x12provider_bonus_usd\x18\x1f \x01(\tR\x10providerBonusUsd\x12I\n" +
	"!provider_bonus_reporting_currency\x18  \x01(\tR\x1eproviderBonusReportingCurrency\x122\n" +
	"\x15provider_bonus_amount\x18! \x01(\tR\x13providerBonusAmount\x129\n" +
	"\x19provider_bonus_amount_usd\x18\" \x01(\tR\x16providerBonusAmountUsd\x12V\n" +
	"(provider_bonus_amount_reporting_currency\x18# \x01(\tR$providerBonusAmountReportingCurrency\x129\n" +
	"\n" +
	"created_at\x18$ \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18% \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xdb\x01\n" +
	"\"GetWalletCreditTransactionsRequest\x12\x1b\n" +
	"\tcredit_id\x18\x01 \x01(\x03R\bcreditId\x12\x17\n" +
	"\x04page\x18\x02 \x01(\x03H\x00R\x04page\x88\x01\x01\x12 \n" +
	"\tpage_size\x18\x03 \x01(\x03H\x01R\bpageSize\x88\x01\x01\x12F\n" +
	"\x10operator_context\x18\x04 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContextB\a\n" +
	"\x05_pageB\f\n" +
	"\n" +
	"_page_size\"\xfa\x02\n" +
	"#GetWalletCreditTransactionsResponse\x12}\n" +
	"\x13credit_transactions\x18\x01 \x03(\v2L.api.wallet.service.v1.GetWalletCreditTransactionsResponse.CreditTransactionR\x12creditTransactions\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x03R\bpageSize\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x03R\x05total\x1a\x8c\x01\n" +
	"\x11CreditTransaction\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x12\n" +
	"\x04cash\x18\x03 \x01(\tR\x04cash\x12\x14\n" +
	"\x05bonus\x18\x04 \x01(\tR\x05bonus\"9\n" +
	"\x17GetExchangeRatesRequest\x12\x1e\n" +
	"\n" +
	"currencies\x18\x01 \x03(\tR\n" +
	"currencies\"\xc7\x01\n" +
	"\x18GetExchangeRatesResponse\x12i\n" +
	"\x0eexchange_rates\x18\x01 \x03(\v2B.api.wallet.service.v1.GetExchangeRatesResponse.ExchangeRatesEntryR\rexchangeRates\x1a@\n" +
	"\x12ExchangeRatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x85\x01\n" +
	"'GetExchangeRatesWithBaseCurrencyRequest\x12\x1e\n" +
	"\n" +
	"currencies\x18\x01 \x03(\tR\n" +
	"currencies\x12(\n" +
	"\rbase_currency\x18\x02 \x01(\tH\x00R\fbaseCurrency\x88\x01\x01B\x10\n" +
	"\x0e_base_currency\"\xe7\x01\n" +
	"(GetExchangeRatesWithBaseCurrencyResponse\x12y\n" +
	"\x0eexchange_rates\x18\x01 \x03(\v2R.api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyResponse.ExchangeRatesEntryR\rexchangeRates\x1a@\n" +
	"\x12ExchangeRatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc9\x02\n" +
	" GetUserTransactionSummaryRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1f\n" +
	"\bcurrency\x18\x02 \x01(\tH\x00R\bcurrency\x88\x01\x01\x12>\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\tstartTime\x88\x01\x01\x12:\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampH\x02R\aendTime\x88\x01\x01\x12F\n" +
	"\x10operator_context\x18\x05 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContextB\v\n" +
	"\t_currencyB\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_time\"\xb7\x05\n" +
	"!GetUserTransactionSummaryResponse\x12*\n" +
	"\x11total_deposit_usd\x18\x01 \x01(\tR\x0ftotalDepositUsd\x12,\n" +
	"\x12total_withdraw_usd\x18\x02 \x01(\tR\x10totalWithdrawUsd\x12;\n" +
	"\x1adeposit_minus_withdraw_usd\x18\x03 \x01(\tR\x17depositMinusWithdrawUsd\x12-\n" +
	"\x13total_valid_bet_usd\x18\x04 \x01(\tR\x10totalValidBetUsd\x12G\n" +
	" total_deposit_reporting_currency\x18\x05 \x01(\tR\x1dtotalDepositReportingCurrency\x12I\n" +
	"!total_withdraw_reporting_currency\x18\x06 \x01(\tR\x1etotalWithdrawReportingCurrency\x12X\n" +
	")deposit_minus_withdraw_reporting_currency\x18\a \x01(\tR%depositMinusWithdrawReportingCurrency\x12J\n" +
	"\"total_valid_bet_reporting_currency\x18\b \x01(\tR\x1etotalValidBetReportingCurrency\x12.\n" +
	"\x13total_deposit_count\x18\t \x01(\x05R\x11totalDepositCount\x120\n" +
	"\x14total_withdraw_count\x18\n" +
	" \x01(\x05R\x12totalWithdrawCount\x120\n" +
	"\x14today_withdraw_count\x18\v \x01(\x05R\x12todayWithdrawCount\"\xa5\x02\n" +
	"*GetBackofficeUserOverviewFromWalletRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12>\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\tstartTime\x88\x01\x01\x12:\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\aendTime\x88\x01\x01\x12F\n" +
	"\x10operator_context\x18\x04 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContextB\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_time\"\xc1\x10\n" +
	"+GetBackofficeUserOverviewFromWalletResponse\x12\x1f\n" +
	"\vbalance_usd\x18\x01 \x01(\tR\n" +
	"balanceUsd\x12;\n" +
	"\x1adeposit_minus_withdraw_usd\x18\x02 \x01(\tR\x17depositMinusWithdrawUsd\x12!\n" +
	"\fturnover_usd\x18\x03 \x01(\tR\vturnoverUsd\x12*\n" +
	"\x11cash_turnover_usd\x18\x04 \x01(\tR\x0fcashTurnoverUsd\x12,\n" +
	"\x12bonus_turnover_usd\x18\x05 \x01(\tR\x10bonusTurnoverUsd\x12\x1f\n" +
	"\vdeposit_usd\x18\x06 \x01(\tR\n" +
	"depositUsd\x12(\n" +
	"\x10last_deposit_usd\x18\a \x01(\tR\x0elastDepositUsd\x12#\n" +
	"\rdeposit_count\x18\b \x01(\x05R\fdepositCount\x12!\n" +
	"\fwithdraw_usd\x18\t \x01(\tR\vwithdrawUsd\x12*\n" +
	"\x11last_withdraw_usd\x18\n" +
	" \x01(\tR\x0flastWithdrawUsd\x12%\n" +
	"\x0ewithdraw_count\x18\v \x01(\x05R\rwithdrawCount\x12\x1b\n" +
	"\tbonus_usd\x18\f \x01(\tR\bbonusUsd\x12,\n" +
	"\x12valid_turnover_usd\x18\r \x01(\tR\x10validTurnoverUsd\x123\n" +
	"\x16average_bet_amount_usd\x18\x0e \x01(\tR\x13averageBetAmountUsd\x12\x17\n" +
	"\aggr_usd\x18\x0f \x01(\tR\x06ggrUsd\x12%\n" +
	"\x0eggr_percentage\x18\x10 \x01(\tR\rggrPercentage\x12;\n" +
	"\x1amanually_added_balance_usd\x18\x11 \x01(\tR\x17manuallyAddedBalanceUsd\x12*\n" +
	"\x11bonus_claimed_usd\x18\x12 \x01(\tR\x0fbonusClaimedUsd\x12\x17\n" +
	"\angr_usd\x18\x13 \x01(\tR\x06ngrUsd\x121\n" +
	"\x15ggr_to_ngr_percentage\x18\x14 \x01(\tR\x12ggrToNgrPercentage\x12/\n" +
	"\x13turnover_multiplier\x18\x15 \x01(\tR\x12turnoverMultiplier\x129\n" +
	"\x19withdraw_to_deposit_ratio\x18\x16 \x01(\tR\x16withdrawToDepositRatio\x12\x10\n" +
	"\x03rtp\x18\x17 \x01(\tR\x03rtp\x12<\n" +
	"\x1abalance_reporting_currency\x18\x18 \x01(\tR\x18balanceReportingCurrency\x12X\n" +
	")deposit_minus_withdraw_reporting_currency\x18\x19 \x01(\tR%depositMinusWithdrawReportingCurrency\x12>\n" +
	"\x1bturnover_reporting_currency\x18\x1a \x01(\tR\x19turnoverReportingCurrency\x12G\n" +
	" cash_turnover_reporting_currency\x18\x1b \x01(\tR\x1dcashTurnoverReportingCurrency\x12I\n" +
	"!bonus_turnover_reporting_currency\x18\x1c \x01(\tR\x1ebonusTurnoverReportingCurrency\x12<\n" +
	"\x1adeposit_reporting_currency\x18\x1d \x01(\tR\x18depositReportingCurrency\x12E\n" +
	"\x1flast_deposit_reporting_currency\x18\x1e \x01(\tR\x1clastDepositReportingCurrency\x12>\n" +
	"\x1bwithdraw_reporting_currency\x18\x1f \x01(\tR\x19withdrawReportingCurrency\x12G\n" +
	" last_withdraw_reporting_currency\x18  \x01(\tR\x1dlastWithdrawReportingCurrency\x128\n" +
	"\x18bonus_reporting_currency\x18! \x01(\tR\x16bonusReportingCurrency\x12I\n" +
	"!valid_turnover_reporting_currency\x18\" \x01(\tR\x1evalidTurnoverReportingCurrency\x12P\n" +
	"%average_bet_amount_reporting_currency\x18# \x01(\tR!averageBetAmountReportingCurrency\x124\n" +
	"\x16ggr_reporting_currency\x18$ \x01(\tR\x14ggrReportingCurrency\x12X\n" +
	")manually_added_balance_reporting_currency\x18% \x01(\tR%manuallyAddedBalanceReportingCurrency\x12G\n" +
	" bonus_claimed_reporting_currency\x18& \x01(\tR\x1dbonusClaimedReportingCurrency\x124\n" +
	"\x16ngr_reporting_currency\x18' \x01(\tR\x14ngrReportingCurrency\"\xcd\x01\n" +
	"%GetOverviewDashboardFromWalletRequest\x12\\\n" +
	"\x18operator_context_filters\x18\x01 \x01(\v2\".api.common.OperatorContextFiltersR\x16operatorContextFilters\x12F\n" +
	"\x10operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\"\x9a\f\n" +
	"&GetOverviewDashboardFromWalletResponse\x12S\n" +
	"\x03ggr\x18\x01 \x01(\v2A.api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.GGRR\x03ggr\x12S\n" +
	"\x03ngr\x18\x02 \x01(\v2A.api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.NGRR\x03ngr\x12_\n" +
	"\adeposit\x18\x03 \x01(\v2E.api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.DepositR\adeposit\x12b\n" +
	"\bwithdraw\x18\x04 \x01(\v2F.api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.WithdrawR\bwithdraw\x12\x88\x01\n" +
	"\x16deposit_minus_withdraw\x18\x05 \x01(\v2R.api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.DepositMinusWithdrawR\x14depositMinusWithdraw\x1a\xc3\x01\n" +
	"\x03GGR\x12\x1b\n" +
	"\ttoday_usd\x18\x01 \x01(\tR\btodayUsd\x12#\n" +
	"\ryesterday_usd\x18\x02 \x01(\tR\fyesterdayUsd\x128\n" +
	"\x18today_reporting_currency\x18\x03 \x01(\tR\x16todayReportingCurrency\x12@\n" +
	"\x1cyesterday_reporting_currency\x18\x04 \x01(\tR\x1ayesterdayReportingCurrency\x1a\xc3\x01\n" +
	"\x03NGR\x12\x1b\n" +
	"\ttoday_usd\x18\x01 \x01(\tR\btodayUsd\x12#\n" +
	"\ryesterday_usd\x18\x02 \x01(\tR\fyesterdayUsd\x128\n" +
	"\x18today_reporting_currency\x18\x03 \x01(\tR\x16todayReportingCurrency\x12@\n" +
	"\x1cyesterday_reporting_currency\x18\x04 \x01(\tR\x1ayesterdayReportingCurrency\x1a\xc7\x01\n" +
	"\aDeposit\x12\x1b\n" +
	"\ttoday_usd\x18\x01 \x01(\tR\btodayUsd\x12#\n" +
	"\ryesterday_usd\x18\x02 \x01(\tR\fyesterdayUsd\x128\n" +
	"\x18today_reporting_currency\x18\x03 \x01(\tR\x16todayReportingCurrency\x12@\n" +
	"\x1cyesterday_reporting_currency\x18\x04 \x01(\tR\x1ayesterdayReportingCurrency\x1a\xc8\x01\n" +
	"\bWithdraw\x12\x1b\n" +
	"\ttoday_usd\x18\x01 \x01(\tR\btodayUsd\x12#\n" +
	"\ryesterday_usd\x18\x02 \x01(\tR\fyesterdayUsd\x128\n" +
	"\x18today_reporting_currency\x18\x03 \x01(\tR\x16todayReportingCurrency\x12@\n" +
	"\x1cyesterday_reporting_currency\x18\x04 \x01(\tR\x1ayesterdayReportingCurrency\x1a\xd4\x01\n" +
	"\x14DepositMinusWithdraw\x12\x1b\n" +
	"\ttoday_usd\x18\x01 \x01(\tR\btodayUsd\x12#\n" +
	"\ryesterday_usd\x18\x02 \x01(\tR\fyesterdayUsd\x128\n" +
	"\x18today_reporting_currency\x18\x03 \x01(\tR\x16todayReportingCurrency\x12@\n" +
	"\x1cyesterday_reporting_currency\x18\x04 \x01(\tR\x1ayesterdayReportingCurrency\"\xbf\x01\n" +
	"\bCurrency\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x18\n" +
	"\aenabled\x18\x02 \x01(\bR\aenabled\x12\x16\n" +
	"\x06hidden\x18\x03 \x01(\bR\x06hidden\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x16\n" +
	"\x06symbol\x18\x05 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04icon\x18\x06 \x01(\tR\x04icon\x12%\n" +
	"\x0edecimal_places\x18\a \x01(\x05R\rdecimalPlaces\"\x99\x01\n" +
	"\x12AddCurrencyRequest\x12;\n" +
	"\bcurrency\x18\x01 \x01(\v2\x1f.api.wallet.service.v1.CurrencyR\bcurrency\x12F\n" +
	"\x10operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\"\x15\n" +
	"\x13AddCurrencyResponse\"\xb1\x02\n" +
	"\x15UpdateCurrencyRequest\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x1d\n" +
	"\aenabled\x18\x02 \x01(\bH\x00R\aenabled\x88\x01\x01\x12\x1b\n" +
	"\x06hidden\x18\x03 \x01(\bH\x01R\x06hidden\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x04 \x01(\tH\x02R\x04type\x88\x01\x01\x12\x1b\n" +
	"\x06symbol\x18\x05 \x01(\tH\x03R\x06symbol\x88\x01\x01\x12\x17\n" +
	"\x04icon\x18\x06 \x01(\tH\x04R\x04icon\x88\x01\x01\x12*\n" +
	"\x0edecimal_places\x18\a \x01(\x05H\x05R\rdecimalPlaces\x88\x01\x01B\n" +
	"\n" +
	"\b_enabledB\t\n" +
	"\a_hiddenB\a\n" +
	"\x05_typeB\t\n" +
	"\a_symbolB\a\n" +
	"\x05_iconB\x11\n" +
	"\x0f_decimal_places\"\x18\n" +
	"\x16UpdateCurrencyResponse\"6\n" +
	"\x14GetCurrenciesRequest\x12\x1e\n" +
	"\n" +
	"currencies\x18\x01 \x03(\tR\n" +
	"currencies\"X\n" +
	"\x15GetCurrenciesResponse\x12?\n" +
	"\n" +
	"currencies\x18\x01 \x03(\v2\x1f.api.wallet.service.v1.CurrencyR\n" +
	"currencies\"\x86\x01\n" +
	"\x1cGetOperatorCurrenciesRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\x1e\n" +
	"\n" +
	"currencies\x18\x02 \x03(\tR\n" +
	"currencies\"`\n" +
	"\x1dGetOperatorCurrenciesResponse\x12?\n" +
	"\n" +
	"currencies\x18\x01 \x03(\v2\x1f.api.wallet.service.v1.CurrencyR\n" +
	"currencies\"\x8a\x01\n" +
	"\x15ListCurrenciesRequest\x12\x1e\n" +
	"\n" +
	"currencies\x18\x01 \x03(\tR\n" +
	"currencies\x12\x1d\n" +
	"\aenabled\x18\x02 \x01(\bH\x00R\aenabled\x88\x01\x01\x12\x1b\n" +
	"\x06hidden\x18\x03 \x01(\bH\x01R\x06hidden\x88\x01\x01B\n" +
	"\n" +
	"\b_enabledB\t\n" +
	"\a_hidden\"\xb7\x01\n" +
	"\x16ListCurrenciesResponse\x12?\n" +
	"\n" +
	"currencies\x18\x01 \x03(\v2\x1f.api.wallet.service.v1.CurrencyR\n" +
	"currencies\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12#\n" +
	"\rtotal_enabled\x18\x03 \x01(\x05R\ftotalEnabled\x12!\n" +
	"\ftotal_hidden\x18\x04 \x01(\x05R\vtotalHidden\"\xa2\x03\n" +
	"\x1dUpdateOperatorCurrencyRequest\x12\x1f\n" +
	"\voperator_id\x18\x01 \x01(\x03R\n" +
	"operatorId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x1d\n" +
	"\aenabled\x18\x03 \x01(\bH\x00R\aenabled\x88\x01\x01\x12\x1b\n" +
	"\x06hidden\x18\x04 \x01(\bH\x01R\x06hidden\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x05 \x01(\tH\x02R\x04type\x88\x01\x01\x12\x1b\n" +
	"\x06symbol\x18\x06 \x01(\tH\x03R\x06symbol\x88\x01\x01\x12\x17\n" +
	"\x04icon\x18\a \x01(\tH\x04R\x04icon\x88\x01\x01\x12*\n" +
	"\x0edecimal_places\x18\b \x01(\x05H\x05R\rdecimalPlaces\x88\x01\x01\x12F\n" +
	"\x10operator_context\x18\t \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContextB\n" +
	"\n" +
	"\b_enabledB\t\n" +
	"\a_hiddenB\a\n" +
	"\x05_typeB\t\n" +
	"\a_symbolB\a\n" +
	"\x05_iconB\x11\n" +
	"\x0f_decimal_places\" \n" +
	"\x1eUpdateOperatorCurrencyResponse\"\xb2\x01\n" +
	"\x19UpdateUserCurrencyRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x12F\n" +
	"\x10operator_context\x18\x04 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\"\x1c\n" +
	"\x1aUpdateUserCurrencyResponse\"\xbb\x02\n" +
	"!ListBottomOperatorBalancesRequest\x12\\\n" +
	"\x18operator_context_filters\x18\x01 \x01(\v2\".api.common.OperatorContextFiltersR\x16operatorContextFilters\x12\x1e\n" +
	"\n" +
	"currencies\x18\x02 \x03(\tR\n" +
	"currencies\x12F\n" +
	"\x10operator_context\x18\x03 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\x17\n" +
	"\x04page\x18\x04 \x01(\x05H\x00R\x04page\x88\x01\x01\x12 \n" +
	"\tpage_size\x18\x05 \x01(\x05H\x01R\bpageSize\x88\x01\x01B\a\n" +
	"\x05_pageB\f\n" +
	"\n" +
	"_page_size\"\xa1\x03\n" +
	"\x0fOperatorBalance\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x124\n" +
	"\x16retailer_operator_name\x18\x02 \x01(\tR\x14retailerOperatorName\x122\n" +
	"\x15company_operator_name\x18\x03 \x01(\tR\x13companyOperatorName\x12#\n" +
	"\roperator_name\x18\x04 \x01(\tR\foperatorName\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x12\x1a\n" +
	"\bprotocol\x18\x06 \x01(\tR\bprotocol\x12\x12\n" +
	"\x04cash\x18\a \x01(\tR\x04cash\x12\x19\n" +
	"\bcash_usd\x18\b \x01(\tR\acashUsd\x126\n" +
	"\x17cash_reporting_currency\x18\t \x01(\tR\x15cashReportingCurrency\x12\x18\n" +
	"\aenabled\x18\n" +
	" \x01(\bR\aenabled\"\xa9\x02\n" +
	"\"ListBottomOperatorBalancesResponse\x12S\n" +
	"\x11operator_balances\x18\x01 \x03(\v2&.api.wallet.service.v1.OperatorBalanceR\x10operatorBalances\x12$\n" +
	"\x0etotal_cash_usd\x18\x02 \x01(\tR\ftotalCashUsd\x12A\n" +
	"\x1dtotal_cash_reporting_currency\x18\x03 \x01(\tR\x1atotalCashReportingCurrency\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\"\xb2\x03\n" +
	"\x17OperatorTransferRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12S\n" +
	"\x17target_operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x15targetOperatorContext\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12-\n" +
	"\x12reporting_currency\x18\x04 \x01(\tR\x11reportingCurrency\x12'\n" +
	"\x0ftarget_currency\x18\x05 \x01(\tR\x0etargetCurrency\x12:\n" +
	"\x19target_reporting_currency\x18\x06 \x01(\tR\x17targetReportingCurrency\x12)\n" +
	"\x10transaction_type\x18\a \x01(\tR\x0ftransactionType\x12\x1f\n" +
	"\vcash_amount\x18\b \x01(\tR\n" +
	"cashAmount\"\xf6\x01\n" +
	"\x18OperatorTransferResponse\x12#\n" +
	"\roperator_cash\x18\x01 \x01(\tR\foperatorCash\x12:\n" +
	"\x19operator_balance_currency\x18\x02 \x01(\tR\x17operatorBalanceCurrency\x120\n" +
	"\x14target_operator_cash\x18\x03 \x01(\tR\x12targetOperatorCash\x12G\n" +
	" target_operator_balance_currency\x18\x04 \x01(\tR\x1dtargetOperatorBalanceCurrency\"\xae\x03\n" +
	"\x13OperatorSwapRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12S\n" +
	"\x17target_operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x15targetOperatorContext\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12-\n" +
	"\x12reporting_currency\x18\x04 \x01(\tR\x11reportingCurrency\x12'\n" +
	"\x0ftarget_currency\x18\x05 \x01(\tR\x0etargetCurrency\x12:\n" +
	"\x19target_reporting_currency\x18\x06 \x01(\tR\x17targetReportingCurrency\x12)\n" +
	"\x10transaction_type\x18\a \x01(\tR\x0ftransactionType\x12\x1f\n" +
	"\vcash_amount\x18\b \x01(\tR\n" +
	"cashAmount\"\xcb\x03\n" +
	"\x14OperatorSwapResponse\x122\n" +
	"\x15currency_balance_cash\x18\x01 \x01(\tR\x13currencyBalanceCash\x129\n" +
	"\x19currency_balance_cash_usd\x18\x02 \x01(\tR\x16currencyBalanceCashUsd\x12V\n" +
	"(currency_balance_cash_reporting_currency\x18\x03 \x01(\tR$currencyBalanceCashReportingCurrency\x12?\n" +
	"\x1ctarget_currency_balance_cash\x18\x04 \x01(\tR\x19targetCurrencyBalanceCash\x12F\n" +
	" target_currency_balance_cash_usd\x18\x05 \x01(\tR\x1ctargetCurrencyBalanceCashUsd\x12c\n" +
	"/target_currency_balance_cash_reporting_currency\x18\x06 \x01(\tR*targetCurrencyBalanceCashReportingCurrency\"\xb8\x03\n" +
	"\x15OperatorFreezeRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12S\n" +
	"\x17target_operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x15targetOperatorContext\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12-\n" +
	"\x12reporting_currency\x18\x04 \x01(\tR\x11reportingCurrency\x12)\n" +
	"\x10transaction_type\x18\x05 \x01(\tR\x0ftransactionType\x12;\n" +
	"\x17external_transaction_id\x18\x06 \x01(\x03H\x00R\x15externalTransactionId\x88\x01\x01\x12\x1f\n" +
	"\vcash_amount\x18\a \x01(\tR\n" +
	"cashAmount\x12\x12\n" +
	"\x04memo\x18\b \x01(\tR\x04memoB\x1a\n" +
	"\x18_external_transaction_id\"S\n" +
	"\x16OperatorFreezeResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x02 \x01(\tR\x04cash\"\x86\x03\n" +
	"\x17OperatorRollbackRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12S\n" +
	"\x17target_operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x15targetOperatorContext\x12;\n" +
	"\x17external_transaction_id\x18\x03 \x01(\x03H\x00R\x15externalTransactionId\x88\x01\x01\x126\n" +
	"\x17original_transaction_id\x18\x04 \x01(\x03R\x15originalTransactionId\x12)\n" +
	"\x10transaction_type\x18\x05 \x01(\tR\x0ftransactionType\x12\x12\n" +
	"\x04memo\x18\x06 \x01(\tR\x04memoB\x1a\n" +
	"\x18_external_transaction_id\"\xe3\x01\n" +
	"\x18OperatorRollbackResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x02 \x01(\tR\x04cash\x12\x1f\n" +
	"\vcash_amount\x18\x03 \x01(\tR\n" +
	"cashAmount\x12&\n" +
	"\x0fcash_amount_usd\x18\x04 \x01(\tR\rcashAmountUsd\x12C\n" +
	"\x1ecash_amount_reporting_currency\x18\x05 \x01(\tR\x1bcashAmountReportingCurrency\"\xa0\x03\n" +
	"\x15OperatorSettleRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12S\n" +
	"\x17target_operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x15targetOperatorContext\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12;\n" +
	"\x17external_transaction_id\x18\x04 \x01(\x03H\x00R\x15externalTransactionId\x88\x01\x01\x126\n" +
	"\x17original_transaction_id\x18\x05 \x01(\x03R\x15originalTransactionId\x12)\n" +
	"\x10transaction_type\x18\x06 \x01(\tR\x0ftransactionType\x12\x12\n" +
	"\x04memo\x18\a \x01(\tR\x04memoB\x1a\n" +
	"\x18_external_transaction_id\"\xe1\x01\n" +
	"\x16OperatorSettleResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x02 \x01(\tR\x04cash\x12\x1f\n" +
	"\vcash_amount\x18\x03 \x01(\tR\n" +
	"cashAmount\x12&\n" +
	"\x0fcash_amount_usd\x18\x04 \x01(\tR\rcashAmountUsd\x12C\n" +
	"\x1ecash_amount_reporting_currency\x18\x05 \x01(\tR\x1bcashAmountReportingCurrency\"c\n" +
	"\x19GetOperatorBalanceRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\"\xda\x01\n" +
	"\x1aGetOperatorBalanceResponse\x12S\n" +
	"\x11operator_balances\x18\x01 \x03(\v2&.api.wallet.service.v1.OperatorBalanceR\x10operatorBalances\x12$\n" +
	"\x0etotal_cash_usd\x18\x02 \x01(\tR\ftotalCashUsd\x12A\n" +
	"\x1dtotal_cash_reporting_currency\x18\x03 \x01(\tR\x1atotalCashReportingCurrency\"\x8b\x05\n" +
	"&ListOperatorBalanceTransactionsRequest\x12\\\n" +
	"\x18operator_context_filters\x18\x01 \x01(\v2\".api.common.OperatorContextFiltersR\x16operatorContextFilters\x123\n" +
	"\x15settlement_currencies\x18\x02 \x03(\tR\x14settlementCurrencies\x12+\n" +
	"\x11transaction_types\x18\x03 \x03(\tR\x10transactionTypes\x12*\n" +
	"\x0etransaction_id\x18\x04 \x01(\x03H\x00R\rtransactionId\x88\x01\x01\x12>\n" +
	"\n" +
	"start_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\tstartTime\x88\x01\x01\x12:\n" +
	"\bend_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampH\x02R\aendTime\x88\x01\x01\x12F\n" +
	"\x10operator_context\x18\a \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x120\n" +
	"\x14target_operator_type\x18\b \x01(\tR\x12targetOperatorType\x12\x17\n" +
	"\x04page\x18\t \x01(\x05H\x03R\x04page\x88\x01\x01\x12 \n" +
	"\tpage_size\x18\n" +
	" \x01(\x05H\x04R\bpageSize\x88\x01\x01B\x11\n" +
	"\x0f_transaction_idB\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_timeB\a\n" +
	"\x05_pageB\f\n" +
	"\n" +
	"_page_size\"\xd3\n" +
	"\n" +
	"\x1aOperatorBalanceTransaction\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\x126\n" +
	"\x17external_transaction_id\x18\x02 \x01(\x03R\x15externalTransactionId\x124\n" +
	"\x16related_transaction_id\x18\x03 \x01(\x03R\x14relatedTransactionId\x12F\n" +
	"\x10operator_context\x18\x04 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x120\n" +
	"\x14system_operator_name\x18\x05 \x01(\tR\x12systemOperatorName\x124\n" +
	"\x16retailer_operator_name\x18\x06 \x01(\tR\x14retailerOperatorName\x122\n" +
	"\x15company_operator_name\x18\a \x01(\tR\x13companyOperatorName\x12#\n" +
	"\roperator_name\x18\b \x01(\tR\foperatorName\x12\x1a\n" +
	"\bcurrency\x18\t \x01(\tR\bcurrency\x12/\n" +
	"\x13settlement_currency\x18\n" +
	" \x01(\tR\x12settlementCurrency\x12-\n" +
	"\x12reporting_currency\x18\v \x01(\tR\x11reportingCurrency\x12%\n" +
	"\x0ebefore_balance\x18\f \x01(\tR\rbeforeBalance\x12,\n" +
	"\x12before_balance_usd\x18\r \x01(\tR\x10beforeBalanceUsd\x12I\n" +
	"!before_balance_reporting_currency\x18\x0e \x01(\tR\x1ebeforeBalanceReportingCurrency\x12#\n" +
	"\rafter_balance\x18\x0f \x01(\tR\fafterBalance\x12*\n" +
	"\x11after_balance_usd\x18\x10 \x01(\tR\x0fafterBalanceUsd\x12G\n" +
	" after_balance_reporting_currency\x18\x11 \x01(\tR\x1dafterBalanceReportingCurrency\x12\x1f\n" +
	"\vcash_amount\x18\x12 \x01(\tR\n" +
	"cashAmount\x12&\n" +
	"\x0fcash_amount_usd\x18\x13 \x01(\tR\rcashAmountUsd\x12C\n" +
	"\x1ecash_amount_reporting_currency\x18\x14 \x01(\tR\x1bcashAmountReportingCurrency\x12)\n" +
	"\x10transaction_type\x18\x15 \x01(\tR\x0ftransactionType\x12\x16\n" +
	"\x06status\x18\x16 \x01(\tR\x06status\x12\x12\n" +
	"\x04memo\x18\x17 \x01(\tR\x04memo\x12\x1d\n" +
	"\n" +
	"fee_amount\x18\x18 \x01(\tR\tfeeAmount\x12$\n" +
	"\x0efee_amount_usd\x18\x19 \x01(\tR\ffeeAmountUsd\x12A\n" +
	"\x1dfee_amount_reporting_currency\x18\x1a \x01(\tR\x1afeeAmountReportingCurrency\x129\n" +
	"\n" +
	"created_at\x18\x1b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x1c \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xc7\x01\n" +
	"'ListOperatorBalanceTransactionsResponse\x12U\n" +
	"\ftransactions\x18\x01 \x03(\v21.api.wallet.service.v1.OperatorBalanceTransactionR\ftransactions\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"\xce\x02\n" +
	"\x14OperatorDebitRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12-\n" +
	"\x12reporting_currency\x18\x03 \x01(\tR\x11reportingCurrency\x12)\n" +
	"\x10transaction_type\x18\x04 \x01(\tR\x0ftransactionType\x12;\n" +
	"\x17external_transaction_id\x18\x05 \x01(\x03H\x00R\x15externalTransactionId\x88\x01\x01\x12\x1f\n" +
	"\vcash_amount\x18\x06 \x01(\tR\n" +
	"cashAmountB\x1a\n" +
	"\x18_external_transaction_id\"R\n" +
	"\x15OperatorDebitResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x02 \x01(\tR\x04cash\"\x80\x02\n" +
	"\x1cUpdateOperatorBalanceRequest\x12U\n" +
	"\x18initial_operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x16initialOperatorContext\x12S\n" +
	"\x17target_operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x15targetOperatorContext\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12\x18\n" +
	"\aenabled\x18\x04 \x01(\bR\aenabled\"9\n" +
	"\x1dUpdateOperatorBalanceResponse\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\"\xfc\x01\n" +
	"$GetOperatorTransactionSummaryRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\x1f\n" +
	"\bcurrency\x18\x02 \x01(\tH\x00R\bcurrency\x88\x01\x01\x12\"\n" +
	"\n" +
	"start_time\x18\x03 \x01(\x03H\x01R\tstartTime\x88\x01\x01\x12\x1e\n" +
	"\bend_time\x18\x04 \x01(\x03H\x02R\aendTime\x88\x01\x01B\v\n" +
	"\t_currencyB\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_time\"\xa2\b\n" +
	"%GetOperatorTransactionSummaryResponse\x12,\n" +
	"\x12total_withdraw_usd\x18\x01 \x01(\tR\x10totalWithdrawUsd\x12*\n" +
	"\x11total_deposit_usd\x18\x02 \x01(\tR\x0ftotalDepositUsd\x123\n" +
	"\x16total_transfer_out_usd\x18\x03 \x01(\tR\x13totalTransferOutUsd\x121\n" +
	"\x15total_transfer_in_usd\x18\x04 \x01(\tR\x12totalTransferInUsd\x12+\n" +
	"\x12total_swap_out_usd\x18\x05 \x01(\tR\x0ftotalSwapOutUsd\x12)\n" +
	"\x11total_swap_in_usd\x18\x06 \x01(\tR\x0etotalSwapInUsd\x12(\n" +
	"\x10total_freeze_usd\x18\a \x01(\tR\x0etotalFreezeUsd\x12,\n" +
	"\x12total_rollback_usd\x18\b \x01(\tR\x10totalRollbackUsd\x12-\n" +
	"\x12reporting_currency\x18\t \x01(\tR\x11reportingCurrency\x12I\n" +
	"!total_withdraw_reporting_currency\x18\n" +
	" \x01(\tR\x1etotalWithdrawReportingCurrency\x12G\n" +
	" total_deposit_reporting_currency\x18\v \x01(\tR\x1dtotalDepositReportingCurrency\x12P\n" +
	"%total_transfer_out_reporting_currency\x18\f \x01(\tR!totalTransferOutReportingCurrency\x12N\n" +
	"$total_transfer_in_reporting_currency\x18\r \x01(\tR totalTransferInReportingCurrency\x12H\n" +
	"!total_swap_out_reporting_currency\x18\x0e \x01(\tR\x1dtotalSwapOutReportingCurrency\x12F\n" +
	" total_swap_in_reporting_currency\x18\x0f \x01(\tR\x1ctotalSwapInReportingCurrency\x12E\n" +
	"\x1ftotal_freeze_reporting_currency\x18\x10 \x01(\tR\x1ctotalFreezeReportingCurrency\x12I\n" +
	"!total_rollback_reporting_currency\x18\x11 \x01(\tR\x1etotalRollbackReportingCurrency\"\x9d\x01\n" +
	"*GetOperatorBalanceTransactionsByIdsRequest\x12'\n" +
	"\x0ftransaction_ids\x18\x01 \x03(\x03R\x0etransactionIds\x12F\n" +
	"\x10operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\"\x84\x01\n" +
	"+GetOperatorBalanceTransactionsByIdsResponse\x12U\n" +
	"\ftransactions\x18\x01 \x03(\v21.api.wallet.service.v1.OperatorBalanceTransactionR\ftransactions\"\x9f\x05\n" +
	"\x0eRewardSequence\x12#\n" +
	"\rserial_number\x18\x01 \x01(\x05R\fserialNumber\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x12\x1f\n" +
	"\vreward_type\x18\x04 \x01(\tR\n" +
	"rewardType\x121\n" +
	"\x14wagering_requirement\x18\x05 \x01(\x05R\x13wageringRequirement\x12'\n" +
	"\x0freward_validity\x18\x06 \x01(\x03R\x0erewardValidity\x12S\n" +
	"\ftier_configs\x18\a \x03(\v20.api.wallet.service.v1.RewardSequence.TierConfigR\vtierConfigs\x129\n" +
	"\n" +
	"start_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x1a\xf5\x01\n" +
	"\n" +
	"TierConfig\x12,\n" +
	"\x12min_deposit_amount\x18\x01 \x01(\tR\x10minDepositAmount\x12,\n" +
	"\x12max_deposit_amount\x18\x02 \x01(\tR\x10maxDepositAmount\x12+\n" +
	"\x11reward_percentage\x18\x03 \x01(\tR\x10rewardPercentage\x12*\n" +
	"\x11max_reward_amount\x18\x04 \x01(\tR\x0fmaxRewardAmount\x122\n" +
	"\x15max_withdrawal_amount\x18\x05 \x01(\tR\x13maxWithdrawalAmount\"\xb1\x03\n" +
	"\x13DepositRewardConfig\x124\n" +
	"\x16welcome_reward_enabled\x18\x01 \x01(\bR\x14welcomeRewardEnabled\x120\n" +
	"\x14daily_reward_enabled\x18\x02 \x01(\bR\x12dailyRewardEnabled\x12_\n" +
	"\x18welcome_reward_sequences\x18\x03 \x03(\v2%.api.wallet.service.v1.RewardSequenceR\x16welcomeRewardSequences\x12[\n" +
	"\x16daily_reward_sequences\x18\x04 \x03(\v2%.api.wallet.service.v1.RewardSequenceR\x14dailyRewardSequences\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xa7\x05\n" +
	" SetDepositRewardSequencesRequest\x12Y\n" +
	"\x1ainitiator_operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x18initiatorOperatorContext\x12S\n" +
	"\x17target_operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x15targetOperatorContext\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12(\n" +
	"\rfollow_parent\x18\x05 \x01(\bH\x00R\ffollowParent\x88\x01\x01\x129\n" +
	"\x16welcome_reward_enabled\x18\x06 \x01(\bH\x01R\x14welcomeRewardEnabled\x88\x01\x01\x125\n" +
	"\x14daily_reward_enabled\x18\a \x01(\bH\x02R\x12dailyRewardEnabled\x88\x01\x01\x12_\n" +
	"\x18welcome_reward_sequences\x18\b \x03(\v2%.api.wallet.service.v1.RewardSequenceR\x16welcomeRewardSequences\x12[\n" +
	"\x16daily_reward_sequences\x18\t \x03(\v2%.api.wallet.service.v1.RewardSequenceR\x14dailyRewardSequencesB\x10\n" +
	"\x0e_follow_parentB\x19\n" +
	"\x17_welcome_reward_enabledB\x17\n" +
	"\x15_daily_reward_enabled\"#\n" +
	"!SetDepositRewardSequencesResponse\"\xae\x03\n" +
	"#DeleteDepositRewardSequencesRequest\x12Y\n" +
	"\x1ainitiator_operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x18initiatorOperatorContext\x12S\n" +
	"\x17target_operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x15targetOperatorContext\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12R\n" +
	"&welcome_reward_sequence_serial_numbers\x18\x05 \x03(\x05R\"welcomeRewardSequenceSerialNumbers\x12N\n" +
	"$daily_reward_sequence_serial_numbers\x18\x06 \x03(\x05R dailyRewardSequenceSerialNumbers\"&\n" +
	"$DeleteDepositRewardSequencesResponse\"\xeb\x01\n" +
	"\x1dGetDepositRewardConfigRequest\x12Y\n" +
	"\x1ainitiator_operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x18initiatorOperatorContext\x12S\n" +
	"\x17target_operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x15targetOperatorContext\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\"\xc2\x05\n" +
	"\x1eGetDepositRewardConfigResponse\x12S\n" +
	"\x17custom_operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x15customOperatorContext\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12Y\n" +
	"\x1ainherited_operator_context\x18\x03 \x01(\v2\x1b.api.common.OperatorContextR\x18inheritedOperatorContext\x12?\n" +
	"\x1cinherited_from_operator_name\x18\x04 \x01(\tR\x19inheritedFromOperatorName\x12#\n" +
	"\rfollow_parent\x18\x05 \x01(\bR\ffollowParent\x12J\n" +
	"\"welcome_reward_sequences_min_count\x18\x06 \x01(\x05R\x1ewelcomeRewardSequencesMinCount\x12F\n" +
	" daily_reward_sequences_min_count\x18\a \x01(\x05R\x1cdailyRewardSequencesMinCount\x12m\n" +
	"\x1ddefault_deposit_reward_config\x18\b \x01(\v2*.api.wallet.service.v1.DepositRewardConfigR\x1adefaultDepositRewardConfig\x12k\n" +
	"\x1ccustom_deposit_reward_config\x18\t \x01(\v2*.api.wallet.service.v1.DepositRewardConfigR\x19customDepositRewardConfig\"A\n" +
	"#GetUserDepositRewardSequenceRequest\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\"\x99\x02\n" +
	"$GetUserDepositRewardSequenceResponse\x122\n" +
	"\x15current_sequence_type\x18\x01 \x01(\tR\x13currentSequenceType\x120\n" +
	"\x14welcome_reward_count\x18\x02 \x01(\x05R\x12welcomeRewardCount\x12,\n" +
	"\x12daily_reward_count\x18\x03 \x01(\x05R\x10dailyRewardCount\x12]\n" +
	"\x17current_reward_sequence\x18\x04 \x01(\v2%.api.wallet.service.v1.RewardSequenceR\x15currentRewardSequence\"\xd6\x01\n" +
	"$GetGamificationCurrencyConfigRequest\x12Y\n" +
	"\x1ainitiator_operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x18initiatorOperatorContext\x12S\n" +
	"\x17target_operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x15targetOperatorContext\"\xa0\x01\n" +
	"\x0eDeductionOrder\x12%\n" +
	"\x0ededuction_type\x18\x01 \x01(\tR\rdeductionType\x12\"\n" +
	"\n" +
	"cash_ratio\x18\x02 \x01(\tH\x00R\tcashRatio\x88\x01\x01\x12$\n" +
	"\vbonus_ratio\x18\x03 \x01(\tH\x01R\n" +
	"bonusRatio\x88\x01\x01B\r\n" +
	"\v_cash_ratioB\x0e\n" +
	"\f_bonus_ratio\"\xa3\x03\n" +
	"\x16OperatorCurrencyConfig\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12T\n" +
	"$cash_withdrawal_wagering_requirement\x18\x02 \x01(\x05H\x00R!cashWithdrawalWageringRequirement\x88\x01\x01\x12(\n" +
	"\rbonus_enabled\x18\x03 \x01(\bH\x01R\fbonusEnabled\x88\x01\x01\x12:\n" +
	"\x17maximum_bonus_bet_limit\x18\x04 \x01(\tH\x02R\x14maximumBonusBetLimit\x88\x01\x01\x12=\n" +
	"\x18wagering_unlock_priority\x18\x05 \x01(\tH\x03R\x16wageringUnlockPriority\x88\x01\x01B'\n" +
	"%_cash_withdrawal_wagering_requirementB\x10\n" +
	"\x0e_bonus_enabledB\x1a\n" +
	"\x18_maximum_bonus_bet_limitB\x1b\n" +
	"\x19_wagering_unlock_priority\"\xe2\x01\n" +
	"%GetGamificationCurrencyConfigResponse\x12N\n" +
	"\x0fdeduction_order\x18\x01 \x01(\v2%.api.wallet.service.v1.DeductionOrderR\x0edeductionOrder\x12i\n" +
	"\x19operator_currency_configs\x18\x02 \x03(\v2-.api.wallet.service.v1.OperatorCurrencyConfigR\x17operatorCurrencyConfigs\"\xbe\x02\n" +
	"#UpdateOperatorCurrencyConfigRequest\x12Y\n" +
	"\x1ainitiator_operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x18initiatorOperatorContext\x12S\n" +
	"\x17target_operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x15targetOperatorContext\x12g\n" +
	"\x18operator_currency_config\x18\x03 \x01(\v2-.api.wallet.service.v1.OperatorCurrencyConfigR\x16operatorCurrencyConfig\"&\n" +
	"$UpdateOperatorCurrencyConfigResponse\"\x9d\x02\n" +
	"\x1bUpdateDeductionOrderRequest\x12Y\n" +
	"\x1ainitiator_operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x18initiatorOperatorContext\x12S\n" +
	"\x17target_operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x15targetOperatorContext\x12N\n" +
	"\x0fdeduction_order\x18\x03 \x01(\v2%.api.wallet.service.v1.DeductionOrderR\x0edeductionOrder\"\x1e\n" +
	"\x1cUpdateDeductionOrderResponse\"z\n" +
	"\x14BonusTransferRequest\x12\x1b\n" +
	"\tcredit_id\x18\x01 \x01(\x03R\bcreditId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12)\n" +
	"\x10transaction_type\x18\x03 \x01(\tR\x0ftransactionType\"\xb5\x01\n" +
	"\x15BonusTransferResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\x12-\n" +
	"\x12transferred_amount\x18\x02 \x01(\tR\x11transferredAmount\x12!\n" +
	"\fbalance_cash\x18\x03 \x01(\tR\vbalanceCash\x12#\n" +
	"\rbalance_bonus\x18\x04 \x01(\tR\fbalanceBonus\":\n" +
	"\x1cGetUserBalanceDetailsRequest\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\"\xd7\x06\n" +
	"\x11UserBalanceDetail\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x1d\n" +
	"\n" +
	"total_cash\x18\x02 \x01(\tR\ttotalCash\x120\n" +
	"\x14total_operator_bonus\x18\x03 \x01(\tR\x12totalOperatorBonus\x120\n" +
	"\x14total_provider_bonus\x18\x04 \x01(\tR\x12totalProviderBonus\x126\n" +
	"\x17total_withdrawable_cash\x18\x05 \x01(\tR\x15totalWithdrawableCash\x12I\n" +
	"!total_transferable_operator_bonus\x18\x06 \x01(\tR\x1etotalTransferableOperatorBonus\x12I\n" +
	"\acredits\x18\a \x03(\v2/.api.wallet.service.v1.UserBalanceDetail.CreditR\acredits\x1a\xd4\x03\n" +
	"\x06Credit\x12\x1b\n" +
	"\tcredit_id\x18\x01 \x01(\x03R\bcreditId\x12\x12\n" +
	"\x04cash\x18\x02 \x01(\tR\x04cash\x12%\n" +
	"\x0eoperator_bonus\x18\x03 \x01(\tR\roperatorBonus\x12%\n" +
	"\x0eprovider_bonus\x18\x04 \x01(\tR\rproviderBonus\x12+\n" +
	"\x11withdrawable_cash\x18\x05 \x01(\tR\x10withdrawableCash\x12>\n" +
	"\x1btransferable_operator_bonus\x18\x06 \x01(\tR\x19transferableOperatorBonus\x12#\n" +
	"\rcash_turnover\x18\a \x01(\tR\fcashTurnover\x126\n" +
	"\x17cash_turnover_threshold\x18\b \x01(\tR\x15cashTurnoverThreshold\x126\n" +
	"\x17operator_bonus_turnover\x18\t \x01(\tR\x15operatorBonusTurnover\x12I\n" +
	"!operator_bonus_turnover_threshold\x18\n" +
	" \x01(\tR\x1eoperatorBonusTurnoverThreshold\"a\n" +
	"\x1dGetUserBalanceDetailsResponse\x12@\n" +
	"\x06detail\x18\x01 \x01(\v2(.api.wallet.service.v1.UserBalanceDetailR\x06detail\"\xec\x04\n" +
	"#AddResponsibleGamblingConfigRequest\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12(\n" +
	"\rdeposit_limit\x18\x02 \x01(\tH\x00R\fdepositLimit\x88\x01\x01\x12.\n" +
	"\x10withdrawal_limit\x18\x03 \x01(\tH\x01R\x0fwithdrawalLimit\x88\x01\x01\x12-\n" +
	"\x10daily_play_limit\x18\x04 \x01(\tH\x02R\x0edailyPlayLimit\x88\x01\x01\x12/\n" +
	"\x11weekly_play_limit\x18\x05 \x01(\tH\x03R\x0fweeklyPlayLimit\x88\x01\x01\x121\n" +
	"\x12monthly_play_limit\x18\x06 \x01(\tH\x04R\x10monthlyPlayLimit\x88\x01\x01\x12-\n" +
	"\x10daily_loss_limit\x18\a \x01(\tH\x05R\x0edailyLossLimit\x88\x01\x01\x12/\n" +
	"\x11weekly_loss_limit\x18\b \x01(\tH\x06R\x0fweeklyLossLimit\x88\x01\x01\x121\n" +
	"\x12monthly_loss_limit\x18\t \x01(\tH\aR\x10monthlyLossLimit\x88\x01\x01B\x10\n" +
	"\x0e_deposit_limitB\x13\n" +
	"\x11_withdrawal_limitB\x13\n" +
	"\x11_daily_play_limitB\x14\n" +
	"\x12_weekly_play_limitB\x15\n" +
	"\x13_monthly_play_limitB\x13\n" +
	"\x11_daily_loss_limitB\x14\n" +
	"\x12_weekly_loss_limitB\x15\n" +
	"\x13_monthly_loss_limit\"&\n" +
	"$AddResponsibleGamblingConfigResponse\"\xd5\x01\n" +
	"&DeleteResponsibleGamblingConfigRequest\x12\x1c\n" +
	"\auser_id\x18\x01 \x01(\x03H\x00R\x06userId\x88\x01\x01\x12F\n" +
	"\x10operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12\x1d\n" +
	"\n" +
	"limit_type\x18\x04 \x01(\tR\tlimitTypeB\n" +
	"\n" +
	"\b_user_id\")\n" +
	"'DeleteResponsibleGamblingConfigResponse\"\xff\t\n" +
	"\x19ResponsibleGamblingConfig\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12#\n" +
	"\rdeposit_limit\x18\x02 \x01(\tR\fdepositLimit\x12)\n" +
	"\x10withdrawal_limit\x18\x03 \x01(\tR\x0fwithdrawalLimit\x12(\n" +
	"\x10daily_play_limit\x18\x04 \x01(\tR\x0edailyPlayLimit\x12*\n" +
	"\x11weekly_play_limit\x18\x05 \x01(\tR\x0fweeklyPlayLimit\x12,\n" +
	"\x12monthly_play_limit\x18\x06 \x01(\tR\x10monthlyPlayLimit\x12(\n" +
	"\x10daily_loss_limit\x18\a \x01(\tR\x0edailyLossLimit\x12*\n" +
	"\x11weekly_loss_limit\x18\b \x01(\tR\x0fweeklyLossLimit\x12,\n" +
	"\x12monthly_loss_limit\x18\t \x01(\tR\x10monthlyLossLimit\x12f\n" +
	"\"deposit_limit_delete_schedule_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x1edepositLimitDeleteScheduleTime\x12l\n" +
	"%withdrawal_limit_delete_schedule_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampR!withdrawalLimitDeleteScheduleTime\x12k\n" +
	"%daily_play_limit_delete_schedule_time\x18\f \x01(\v2\x1a.google.protobuf.TimestampR dailyPlayLimitDeleteScheduleTime\x12m\n" +
	"&weekly_play_limit_delete_schedule_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR!weeklyPlayLimitDeleteScheduleTime\x12o\n" +
	"'monthly_play_limit_delete_schedule_time\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\"monthlyPlayLimitDeleteScheduleTime\x12k\n" +
	"%daily_loss_limit_delete_schedule_time\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR dailyLossLimitDeleteScheduleTime\x12m\n" +
	"&weekly_loss_limit_delete_schedule_time\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR!weeklyLossLimitDeleteScheduleTime\x12o\n" +
	"'monthly_loss_limit_delete_schedule_time\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\"monthlyLossLimitDeleteScheduleTime\"\x91\x04\n" +
	"\x19ResponsibleGamblingStatus\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12-\n" +
	"\x12withdrawal_allowed\x18\x02 \x01(\bR\x11withdrawalAllowed\x12)\n" +
	"\x10withdrawal_usage\x18\x03 \x01(\tR\x0fwithdrawalUsage\x12'\n" +
	"\x0fdeposit_allowed\x18\x04 \x01(\bR\x0edepositAllowed\x12#\n" +
	"\rdeposit_usage\x18\x05 \x01(\tR\fdepositUsage\x12(\n" +
	"\x10game_bet_allowed\x18\x06 \x01(\bR\x0egameBetAllowed\x12(\n" +
	"\x10daily_play_usage\x18\a \x01(\tR\x0edailyPlayUsage\x12*\n" +
	"\x11weekly_play_usage\x18\b \x01(\tR\x0fweeklyPlayUsage\x12,\n" +
	"\x12monthly_play_usage\x18\t \x01(\tR\x10monthlyPlayUsage\x12(\n" +
	"\x10daily_loss_usage\x18\n" +
	" \x01(\tR\x0edailyLossUsage\x12*\n" +
	"\x11weekly_loss_usage\x18\v \x01(\tR\x0fweeklyLossUsage\x12,\n" +
	"\x12monthly_loss_usage\x18\f \x01(\tR\x10monthlyLossUsage\"\x99\x01\n" +
	"%ListResponsibleGamblingConfigsRequest\x12\x1c\n" +
	"\auser_id\x18\x01 \x01(\x03H\x00R\x06userId\x88\x01\x01\x12F\n" +
	"\x10operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContextB\n" +
	"\n" +
	"\b_user_id\"\x92\x02\n" +
	"&ListResponsibleGamblingConfigsResponse\x12r\n" +
	"\x1cresponsible_gambling_configs\x18\x01 \x03(\v20.api.wallet.service.v1.ResponsibleGamblingConfigR\x1aresponsibleGamblingConfigs\x12t\n" +
	"\x1dresponsible_gambling_statuses\x18\x02 \x03(\v20.api.wallet.service.v1.ResponsibleGamblingStatusR\x1bresponsibleGamblingStatuses\"\xa2\x01\n" +
	"#GetResponsibleGamblingConfigRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12F\n" +
	"\x10operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\"\x98\x01\n" +
	"$GetResponsibleGamblingConfigResponse\x12p\n" +
	"\x1bresponsible_gambling_config\x18\x01 \x01(\v20.api.wallet.service.v1.ResponsibleGamblingConfigR\x19responsibleGamblingConfig\"\xfc\x03\n" +
	"\x1aListCustomerRecordsRequest\x12>\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\tstartTime\x88\x01\x01\x12:\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\aendTime\x88\x01\x01\x12\x1c\n" +
	"\auser_id\x18\x03 \x01(\x03H\x02R\x06userId\x88\x01\x01\x12*\n" +
	"\x0etransaction_id\x18\x04 \x01(\x03H\x03R\rtransactionId\x88\x01\x01\x12.\n" +
	"\x10transaction_type\x18\x05 \x01(\tH\x04R\x0ftransactionType\x88\x01\x01\x12\x17\n" +
	"\x04page\x18\x06 \x01(\x05H\x05R\x04page\x88\x01\x01\x12 \n" +
	"\tpage_size\x18\a \x01(\x05H\x06R\bpageSize\x88\x01\x01\x12F\n" +
	"\x10operator_context\x18\b \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContextB\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_timeB\n" +
	"\n" +
	"\b_user_idB\x11\n" +
	"\x0f_transaction_idB\x13\n" +
	"\x11_transaction_typeB\a\n" +
	"\x05_pageB\f\n" +
	"\n" +
	"_page_size\"\xd0\x04\n" +
	"\x1bListCustomerRecordsResponse\x12l\n" +
	"\x10customer_records\x18\x01 \x03(\v2A.api.wallet.service.v1.ListCustomerRecordsResponse.CustomerRecordR\x0fcustomerRecords\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x1a\xfb\x02\n" +
	"\x0eCustomerRecord\x127\n" +
	"\tdate_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bdateTime\x12)\n" +
	"\x10transaction_type\x18\x02 \x01(\tR\x0ftransactionType\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12%\n" +
	"\x0etransaction_id\x18\x04 \x01(\x03R\rtransactionId\x12\x1a\n" +
	"\bcurrency\x18\x05 \x01(\tR\bcurrency\x12%\n" +
	"\x0eamount_changed\x18\x06 \x01(\tR\ramountChanged\x12%\n" +
	"\x0ebefore_balance\x18\a \x01(\tR\rbeforeBalance\x12#\n" +
	"\rafter_balance\x18\b \x01(\tR\fafterBalance\x126\n" +
	"\x17external_transaction_id\x18\t \x01(\x03R\x15externalTransactionId\"\xc2\x01\n" +
	"\x13FICAThresholdConfig\x12K\n" +
	"\aconfigs\x18\x01 \x03(\v21.api.wallet.service.v1.FICAThresholdConfig.ConfigR\aconfigs\x1a^\n" +
	"\x06Config\x12)\n" +
	"\x10transaction_type\x18\x01 \x01(\tR\x0ftransactionType\x12)\n" +
	"\x10threshold_amount\x18\x02 \x01(\tR\x0fthresholdAmount\"\xe3\x01\n" +
	"\x1dSetFICAThresholdConfigRequest\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12^\n" +
	"\x15fica_threshold_config\x18\x02 \x01(\v2*.api.wallet.service.v1.FICAThresholdConfigR\x13ficaThresholdConfig\x12F\n" +
	"\x10operator_context\x18\x03 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\" \n" +
	"\x1eSetFICAThresholdConfigResponse\"g\n" +
	"\x1dGetFICAThresholdConfigRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\"\x9d\x02\n" +
	"\x1eGetFICAThresholdConfigResponse\x12\x85\x01\n" +
	"\x16fica_threshold_configs\x18\x01 \x03(\v2O.api.wallet.service.v1.GetFICAThresholdConfigResponse.FicaThresholdConfigsEntryR\x14ficaThresholdConfigs\x1as\n" +
	"\x19FicaThresholdConfigsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12@\n" +
	"\x05value\x18\x02 \x01(\v2*.api.wallet.service.v1.FICAThresholdConfigR\x05value:\x028\x01\"\xfb\x03\n" +
	"$ListFICAThresholdTransactionsRequest\x12>\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\tstartTime\x88\x01\x01\x12:\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\aendTime\x88\x01\x01\x12.\n" +
	"\x10transaction_type\x18\x03 \x01(\tH\x02R\x0ftransactionType\x88\x01\x01\x12\x1f\n" +
	"\bcurrency\x18\x04 \x01(\tH\x03R\bcurrency\x88\x01\x01\x12 \n" +
	"\tkyc_level\x18\x05 \x01(\x05H\x04R\bkycLevel\x88\x01\x01\x12\x17\n" +
	"\x04page\x18\x06 \x01(\x05H\x05R\x04page\x88\x01\x01\x12 \n" +
	"\tpage_size\x18\a \x01(\x05H\x06R\bpageSize\x88\x01\x01\x12F\n" +
	"\x10operator_context\x18\b \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContextB\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_timeB\x13\n" +
	"\x11_transaction_typeB\v\n" +
	"\t_currencyB\f\n" +
	"\n" +
	"_kyc_levelB\a\n" +
	"\x05_pageB\f\n" +
	"\n" +
	"_page_size\"\xc6\x05\n" +
	"%ListFICAThresholdTransactionsResponse\x12\x8c\x01\n" +
	"\x16threshold_transactions\x18\x01 \x03(\v2U.api.wallet.service.v1.ListFICAThresholdTransactionsResponse.FICAThresholdTransactionR\x15thresholdTransactions\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x1a\xc6\x03\n" +
	"\x18FICAThresholdTransaction\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12E\n" +
	"\x10transaction_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x0ftransactionTime\x12%\n" +
	"\x0etransaction_id\x18\x03 \x01(\x03R\rtransactionId\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\tR\x06amount\x12#\n" +
	"\rexcess_amount\x18\x06 \x01(\tR\fexcessAmount\x12\x17\n" +
	"\auser_id\x18\a \x01(\x03R\x06userId\x12\x1b\n" +
	"\tfull_name\x18\b \x01(\tR\bfullName\x12\x17\n" +
	"\aid_type\x18\t \x01(\tR\x06idType\x12\x1b\n" +
	"\tid_number\x18\n" +
	" \x01(\tR\bidNumber\x12\x16\n" +
	"\x06mobile\x18\v \x01(\tR\x06mobile\x12\x14\n" +
	"\x05email\x18\f \x01(\tR\x05email\x12\x18\n" +
	"\aaddress\x18\r \x01(\tR\aaddress\x12\x1b\n" +
	"\tkyc_level\x18\x0e \x01(\x05R\bkycLevel2\x95;\n" +
	"\x06Wallet\x12\x95\x01\n" +
	"\x0fGetUserBalances\x12-.api.wallet.service.v1.GetUserBalancesRequest\x1a..api.wallet.service.v1.GetUserBalancesResponse\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v1/wallet/balances/list\x12o\n" +
	"\x0eGetUserBalance\x12,.api.wallet.service.v1.GetUserBalanceRequest\x1a-.api.wallet.service.v1.GetUserBalanceResponse\"\x00\x12\xa9\x01\n" +
	"\x15GetUserBalanceDetails\x123.api.wallet.service.v1.GetUserBalanceDetailsRequest\x1a4.api.wallet.service.v1.GetUserBalanceDetailsResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v1/wallet/balance/details\x12W\n" +
	"\x06Credit\x12$.api.wallet.service.v1.CreditRequest\x1a%.api.wallet.service.v1.CreditResponse\"\x00\x12T\n" +
	"\x05Debit\x12#.api.wallet.service.v1.DebitRequest\x1a$.api.wallet.service.v1.DebitResponse\"\x00\x12`\n" +
	"\tGameDebit\x12'.api.wallet.service.v1.GameDebitRequest\x1a(.api.wallet.service.v1.GameDebitResponse\"\x00\x12c\n" +
	"\n" +
	"GameCredit\x12(.api.wallet.service.v1.GameCreditRequest\x1a).api.wallet.service.v1.GameCreditResponse\"\x00\x12W\n" +
	"\x06Freeze\x12$.api.wallet.service.v1.FreezeRequest\x1a%.api.wallet.service.v1.FreezeResponse\"\x00\x12W\n" +
	"\x06Settle\x12$.api.wallet.service.v1.SettleRequest\x1a%.api.wallet.service.v1.SettleResponse\"\x00\x12]\n" +
	"\bRollback\x12&.api.wallet.service.v1.RollbackRequest\x1a'.api.wallet.service.v1.RollbackResponse\"\x00\x12c\n" +
	"\n" +
	"GetWallets\x12(.api.wallet.service.v1.GetWalletsRequest\x1a).api.wallet.service.v1.GetWalletsResponse\"\x00\x12\x9c\x01\n" +
	"\x1dListWalletBalanceTransactions\x12;.api.wallet.service.v1.ListWalletBalanceTransactionsRequest\x1a<.api.wallet.service.v1.ListWalletBalanceTransactionsResponse\"\x00\x12\xa8\x01\n" +
	"!GetWalletBalanceTransactionsByIds\x12?.api.wallet.service.v1.GetWalletBalanceTransactionsByIdsRequest\x1a@.api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse\"\x00\x12\x96\x01\n" +
	"\x1bGetWalletCreditTransactions\x129.api.wallet.service.v1.GetWalletCreditTransactionsRequest\x1a:.api.wallet.service.v1.GetWalletCreditTransactionsResponse\"\x00\x12u\n" +
	"\x10GetExchangeRates\x12..api.wallet.service.v1.GetExchangeRatesRequest\x1a/.api.wallet.service.v1.GetExchangeRatesResponse\"\x00\x12\xd7\x01\n" +
	" GetExchangeRatesWithBaseCurrency\x12>.api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyRequest\x1a?.api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyResponse\"2\x82\xd3\xe4\x93\x02,:\x01*\"'/v1/wallet/exchange-rates/base-currency\x12\x90\x01\n" +
	"\x19GetUserTransactionSummary\x127.api.wallet.service.v1.GetUserTransactionSummaryRequest\x1a8.api.wallet.service.v1.GetUserTransactionSummaryResponse\"\x00\x12\xae\x01\n" +
	"#GetBackofficeUserOverviewFromWallet\x12A.api.wallet.service.v1.GetBackofficeUserOverviewFromWalletRequest\x1aB.api.wallet.service.v1.GetBackofficeUserOverviewFromWalletResponse\"\x00\x12\x9f\x01\n" +
	"\x1eGetOverviewDashboardFromWallet\x12<.api.wallet.service.v1.GetOverviewDashboardFromWalletRequest\x1a=.api.wallet.service.v1.GetOverviewDashboardFromWalletResponse\"\x00\x12f\n" +
	"\vAddCurrency\x12).api.wallet.service.v1.AddCurrencyRequest\x1a*.api.wallet.service.v1.AddCurrencyResponse\"\x00\x12o\n" +
	"\x0eUpdateCurrency\x12,.api.wallet.service.v1.UpdateCurrencyRequest\x1a-.api.wallet.service.v1.UpdateCurrencyResponse\"\x00\x12\x90\x01\n" +
	"\rGetCurrencies\x12+.api.wallet.service.v1.GetCurrenciesRequest\x1a,.api.wallet.service.v1.GetCurrenciesResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/v1/wallet/currencies/get\x12\x84\x01\n" +
	"\x15GetOperatorCurrencies\x123.api.wallet.service.v1.GetOperatorCurrenciesRequest\x1a4.api.wallet.service.v1.GetOperatorCurrenciesResponse\"\x00\x12o\n" +
	"\x0eListCurrencies\x12,.api.wallet.service.v1.ListCurrenciesRequest\x1a-.api.wallet.service.v1.ListCurrenciesResponse\"\x00\x12\x87\x01\n" +
	"\x16UpdateOperatorCurrency\x124.api.wallet.service.v1.UpdateOperatorCurrencyRequest\x1a5.api.wallet.service.v1.UpdateOperatorCurrencyResponse\"\x00\x12{\n" +
	"\x12UpdateUserCurrency\x120.api.wallet.service.v1.UpdateUserCurrencyRequest\x1a1.api.wallet.service.v1.UpdateUserCurrencyResponse\"\x00\x12\x93\x01\n" +
	"\x1aListBottomOperatorBalances\x128.api.wallet.service.v1.ListBottomOperatorBalancesRequest\x1a9.api.wallet.service.v1.ListBottomOperatorBalancesResponse\"\x00\x12u\n" +
	"\x10OperatorTransfer\x12..api.wallet.service.v1.OperatorTransferRequest\x1a/.api.wallet.service.v1.OperatorTransferResponse\"\x00\x12i\n" +
	"\fOperatorSwap\x12*.api.wallet.service.v1.OperatorSwapRequest\x1a+.api.wallet.service.v1.OperatorSwapResponse\"\x00\x12o\n" +
	"\x0eOperatorFreeze\x12,.api.wallet.service.v1.OperatorFreezeRequest\x1a-.api.wallet.service.v1.OperatorFreezeResponse\"\x00\x12u\n" +
	"\x10OperatorRollback\x12..api.wallet.service.v1.OperatorRollbackRequest\x1a/.api.wallet.service.v1.OperatorRollbackResponse\"\x00\x12o\n" +
	"\x0eOperatorSettle\x12,.api.wallet.service.v1.OperatorSettleRequest\x1a-.api.wallet.service.v1.OperatorSettleResponse\"\x00\x12{\n" +
	"\x12GetOperatorBalance\x120.api.wallet.service.v1.GetOperatorBalanceRequest\x1a1.api.wallet.service.v1.GetOperatorBalanceResponse\"\x00\x12\xa2\x01\n" +
	"\x1fListOperatorBalanceTransactions\x12=.api.wallet.service.v1.ListOperatorBalanceTransactionsRequest\x1a>.api.wallet.service.v1.ListOperatorBalanceTransactionsResponse\"\x00\x12l\n" +
	"\rOperatorDebit\x12+.api.wallet.service.v1.OperatorDebitRequest\x1a,.api.wallet.service.v1.OperatorDebitResponse\"\x00\x12\x84\x01\n" +
	"\x15UpdateOperatorBalance\x123.api.wallet.service.v1.UpdateOperatorBalanceRequest\x1a4.api.wallet.service.v1.UpdateOperatorBalanceResponse\"\x00\x12\x9c\x01\n" +
	"\x1dGetOperatorTransactionSummary\x12;.api.wallet.service.v1.GetOperatorTransactionSummaryRequest\x1a<.api.wallet.service.v1.GetOperatorTransactionSummaryResponse\"\x00\x12\xae\x01\n" +
	"#GetOperatorBalanceTransactionsByIds\x12A.api.wallet.service.v1.GetOperatorBalanceTransactionsByIdsRequest\x1aB.api.wallet.service.v1.GetOperatorBalanceTransactionsByIdsResponse\"\x00\x12\x90\x01\n" +
	"\x19SetDepositRewardSequences\x127.api.wallet.service.v1.SetDepositRewardSequencesRequest\x1a8.api.wallet.service.v1.SetDepositRewardSequencesResponse\"\x00\x12\x99\x01\n" +
	"\x1cDeleteDepositRewardSequences\x12:.api.wallet.service.v1.DeleteDepositRewardSequencesRequest\x1a;.api.wallet.service.v1.DeleteDepositRewardSequencesResponse\"\x00\x12\x87\x01\n" +
	"\x16GetDepositRewardConfig\x124.api.wallet.service.v1.GetDepositRewardConfigRequest\x1a5.api.wallet.service.v1.GetDepositRewardConfigResponse\"\x00\x12\xcb\x01\n" +
	"\x1cGetUserDepositRewardSequence\x12:.api.wallet.service.v1.GetUserDepositRewardSequenceRequest\x1a;.api.wallet.service.v1.GetUserDepositRewardSequenceResponse\"2\x82\xd3\xe4\x93\x02,:\x01*\"'/v1/wallet/deposit-reward/user-sequence\x12\x9c\x01\n" +
	"\x1dGetGamificationCurrencyConfig\x12;.api.wallet.service.v1.GetGamificationCurrencyConfigRequest\x1a<.api.wallet.service.v1.GetGamificationCurrencyConfigResponse\"\x00\x12\x99\x01\n" +
	"\x1cUpdateOperatorCurrencyConfig\x12:.api.wallet.service.v1.UpdateOperatorCurrencyConfigRequest\x1a;.api.wallet.service.v1.UpdateOperatorCurrencyConfigResponse\"\x00\x12\x81\x01\n" +
	"\x14UpdateDeductionOrder\x122.api.wallet.service.v1.UpdateDeductionOrderRequest\x1a3.api.wallet.service.v1.UpdateDeductionOrderResponse\"\x00\x12\x90\x01\n" +
	"\rBonusTransfer\x12+.api.wallet.service.v1.BonusTransferRequest\x1a,.api.wallet.service.v1.BonusTransferResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/v1/wallet/bonus-transfer\x12\xce\x01\n" +
	"\x1cAddResponsibleGamblingConfig\x12:.api.wallet.service.v1.AddResponsibleGamblingConfigRequest\x1a;.api.wallet.service.v1.AddResponsibleGamblingConfigResponse\"5\x82\xd3\xe4\x93\x02/:\x01*\"*/v1/wallet/responsible-gambling/config/add\x12\xda\x01\n" +
	"\x1fDeleteResponsibleGamblingConfig\x12=.api.wallet.service.v1.DeleteResponsibleGamblingConfigRequest\x1a>.api.wallet.service.v1.DeleteResponsibleGamblingConfigResponse\"8\x82\xd3\xe4\x93\x022:\x01*\"-/v1/wallet/responsible-gambling/config/delete\x12\xd6\x01\n" +
	"\x1eListResponsibleGamblingConfigs\x12<.api.wallet.service.v1.ListResponsibleGamblingConfigsRequest\x1a=.api.wallet.service.v1.ListResponsibleGamblingConfigsResponse\"7\x82\xd3\xe4\x93\x021:\x01*\",/v1/wallet/responsible-gambling/configs/list\x12\x99\x01\n" +
	"\x1cGetResponsibleGamblingConfig\x12:.api.wallet.service.v1.GetResponsibleGamblingConfigRequest\x1a;.api.wallet.service.v1.GetResponsibleGamblingConfigResponse\"\x00\x12~\n" +
	"\x13ListCustomerRecords\x121.api.wallet.service.v1.ListCustomerRecordsRequest\x1a2.api.wallet.service.v1.ListCustomerRecordsResponse\"\x00\x12\x87\x01\n" +
	"\x16SetFICAThresholdConfig\x124.api.wallet.service.v1.SetFICAThresholdConfigRequest\x1a5.api.wallet.service.v1.SetFICAThresholdConfigResponse\"\x00\x12\x87\x01\n" +
	"\x16GetFICAThresholdConfig\x124.api.wallet.service.v1.GetFICAThresholdConfigRequest\x1a5.api.wallet.service.v1.GetFICAThresholdConfigResponse\"\x00\x12\x9c\x01\n" +
	"\x1dListFICAThresholdTransactions\x12;.api.wallet.service.v1.ListFICAThresholdTransactionsRequest\x1a<.api.wallet.service.v1.ListFICAThresholdTransactionsResponse\"\x00BS\n" +
	"\x15api.wallet.service.v1P\x01Z8github.com/infigaming-com/meepo-api/wallet/service/v1;v1b\x06proto3"

var (
	file_wallet_service_v1_wallet_proto_rawDescOnce sync.Once
	file_wallet_service_v1_wallet_proto_rawDescData []byte
)

func file_wallet_service_v1_wallet_proto_rawDescGZIP() []byte {
	file_wallet_service_v1_wallet_proto_rawDescOnce.Do(func() {
		file_wallet_service_v1_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wallet_service_v1_wallet_proto_rawDesc), len(file_wallet_service_v1_wallet_proto_rawDesc)))
	})
	return file_wallet_service_v1_wallet_proto_rawDescData
}

var file_wallet_service_v1_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 141)
var file_wallet_service_v1_wallet_proto_goTypes = []any{
	(*GetUserBalancesRequest)(nil),                                       // 0: api.wallet.service.v1.GetUserBalancesRequest
	(*GetUserBalancesResponse)(nil),                                      // 1: api.wallet.service.v1.GetUserBalancesResponse
	(*GetUserBalanceRequest)(nil),                                        // 2: api.wallet.service.v1.GetUserBalanceRequest
	(*GetUserBalanceResponse)(nil),                                       // 3: api.wallet.service.v1.GetUserBalanceResponse
	(*CreditRequest)(nil),                                                // 4: api.wallet.service.v1.CreditRequest
	(*CreditResponse)(nil),                                               // 5: api.wallet.service.v1.CreditResponse
	(*DebitRequest)(nil),                                                 // 6: api.wallet.service.v1.DebitRequest
	(*DebitResponse)(nil),                                                // 7: api.wallet.service.v1.DebitResponse
	(*GameDebitRequest)(nil),                                             // 8: api.wallet.service.v1.GameDebitRequest
	(*GameDebitResponse)(nil),                                            // 9: api.wallet.service.v1.GameDebitResponse
	(*GameCreditRequest)(nil),                                            // 10: api.wallet.service.v1.GameCreditRequest
	(*GameCreditResponse)(nil),                                           // 11: api.wallet.service.v1.GameCreditResponse
	(*ChannelInfo)(nil),                                                  // 12: api.wallet.service.v1.ChannelInfo
	(*FreezeRequest)(nil),                                                // 13: api.wallet.service.v1.FreezeRequest
	(*FreezeResponse)(nil),                                               // 14: api.wallet.service.v1.FreezeResponse
	(*SettleRequest)(nil),                                                // 15: api.wallet.service.v1.SettleRequest
	(*SettleResponse)(nil),                                               // 16: api.wallet.service.v1.SettleResponse
	(*RollbackRequest)(nil),                                              // 17: api.wallet.service.v1.RollbackRequest
	(*RollbackResponse)(nil),                                             // 18: api.wallet.service.v1.RollbackResponse
	(*GetWalletsRequest)(nil),                                            // 19: api.wallet.service.v1.GetWalletsRequest
	(*GetWalletsResponse)(nil),                                           // 20: api.wallet.service.v1.GetWalletsResponse
	(*ListWalletBalanceTransactionsRequest)(nil),                         // 21: api.wallet.service.v1.ListWalletBalanceTransactionsRequest
	(*ListWalletBalanceTransactionsResponse)(nil),                        // 22: api.wallet.service.v1.ListWalletBalanceTransactionsResponse
	(*GetWalletBalanceTransactionsByIdsRequest)(nil),                     // 23: api.wallet.service.v1.GetWalletBalanceTransactionsByIdsRequest
	(*GetWalletBalanceTransactionsByIdsResponse)(nil),                    // 24: api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse
	(*GetWalletCreditTransactionsRequest)(nil),                           // 25: api.wallet.service.v1.GetWalletCreditTransactionsRequest
	(*GetWalletCreditTransactionsResponse)(nil),                          // 26: api.wallet.service.v1.GetWalletCreditTransactionsResponse
	(*GetExchangeRatesRequest)(nil),                                      // 27: api.wallet.service.v1.GetExchangeRatesRequest
	(*GetExchangeRatesResponse)(nil),                                     // 28: api.wallet.service.v1.GetExchangeRatesResponse
	(*GetExchangeRatesWithBaseCurrencyRequest)(nil),                      // 29: api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyRequest
	(*GetExchangeRatesWithBaseCurrencyResponse)(nil),                     // 30: api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyResponse
	(*GetUserTransactionSummaryRequest)(nil),                             // 31: api.wallet.service.v1.GetUserTransactionSummaryRequest
	(*GetUserTransactionSummaryResponse)(nil),                            // 32: api.wallet.service.v1.GetUserTransactionSummaryResponse
	(*GetBackofficeUserOverviewFromWalletRequest)(nil),                   // 33: api.wallet.service.v1.GetBackofficeUserOverviewFromWalletRequest
	(*GetBackofficeUserOverviewFromWalletResponse)(nil),                  // 34: api.wallet.service.v1.GetBackofficeUserOverviewFromWalletResponse
	(*GetOverviewDashboardFromWalletRequest)(nil),                        // 35: api.wallet.service.v1.GetOverviewDashboardFromWalletRequest
	(*GetOverviewDashboardFromWalletResponse)(nil),                       // 36: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse
	(*Currency)(nil),                                                     // 37: api.wallet.service.v1.Currency
	(*AddCurrencyRequest)(nil),                                           // 38: api.wallet.service.v1.AddCurrencyRequest
	(*AddCurrencyResponse)(nil),                                          // 39: api.wallet.service.v1.AddCurrencyResponse
	(*UpdateCurrencyRequest)(nil),                                        // 40: api.wallet.service.v1.UpdateCurrencyRequest
	(*UpdateCurrencyResponse)(nil),                                       // 41: api.wallet.service.v1.UpdateCurrencyResponse
	(*GetCurrenciesRequest)(nil),                                         // 42: api.wallet.service.v1.GetCurrenciesRequest
	(*GetCurrenciesResponse)(nil),                                        // 43: api.wallet.service.v1.GetCurrenciesResponse
	(*GetOperatorCurrenciesRequest)(nil),                                 // 44: api.wallet.service.v1.GetOperatorCurrenciesRequest
	(*GetOperatorCurrenciesResponse)(nil),                                // 45: api.wallet.service.v1.GetOperatorCurrenciesResponse
	(*ListCurrenciesRequest)(nil),                                        // 46: api.wallet.service.v1.ListCurrenciesRequest
	(*ListCurrenciesResponse)(nil),                                       // 47: api.wallet.service.v1.ListCurrenciesResponse
	(*UpdateOperatorCurrencyRequest)(nil),                                // 48: api.wallet.service.v1.UpdateOperatorCurrencyRequest
	(*UpdateOperatorCurrencyResponse)(nil),                               // 49: api.wallet.service.v1.UpdateOperatorCurrencyResponse
	(*UpdateUserCurrencyRequest)(nil),                                    // 50: api.wallet.service.v1.UpdateUserCurrencyRequest
	(*UpdateUserCurrencyResponse)(nil),                                   // 51: api.wallet.service.v1.UpdateUserCurrencyResponse
	(*ListBottomOperatorBalancesRequest)(nil),                            // 52: api.wallet.service.v1.ListBottomOperatorBalancesRequest
	(*OperatorBalance)(nil),                                              // 53: api.wallet.service.v1.OperatorBalance
	(*ListBottomOperatorBalancesResponse)(nil),                           // 54: api.wallet.service.v1.ListBottomOperatorBalancesResponse
	(*OperatorTransferRequest)(nil),                                      // 55: api.wallet.service.v1.OperatorTransferRequest
	(*OperatorTransferResponse)(nil),                                     // 56: api.wallet.service.v1.OperatorTransferResponse
	(*OperatorSwapRequest)(nil),                                          // 57: api.wallet.service.v1.OperatorSwapRequest
	(*OperatorSwapResponse)(nil),                                         // 58: api.wallet.service.v1.OperatorSwapResponse
	(*OperatorFreezeRequest)(nil),                                        // 59: api.wallet.service.v1.OperatorFreezeRequest
	(*OperatorFreezeResponse)(nil),                                       // 60: api.wallet.service.v1.OperatorFreezeResponse
	(*OperatorRollbackRequest)(nil),                                      // 61: api.wallet.service.v1.OperatorRollbackRequest
	(*OperatorRollbackResponse)(nil),                                     // 62: api.wallet.service.v1.OperatorRollbackResponse
	(*OperatorSettleRequest)(nil),                                        // 63: api.wallet.service.v1.OperatorSettleRequest
	(*OperatorSettleResponse)(nil),                                       // 64: api.wallet.service.v1.OperatorSettleResponse
	(*GetOperatorBalanceRequest)(nil),                                    // 65: api.wallet.service.v1.GetOperatorBalanceRequest
	(*GetOperatorBalanceResponse)(nil),                                   // 66: api.wallet.service.v1.GetOperatorBalanceResponse
	(*ListOperatorBalanceTransactionsRequest)(nil),                       // 67: api.wallet.service.v1.ListOperatorBalanceTransactionsRequest
	(*OperatorBalanceTransaction)(nil),                                   // 68: api.wallet.service.v1.OperatorBalanceTransaction
	(*ListOperatorBalanceTransactionsResponse)(nil),                      // 69: api.wallet.service.v1.ListOperatorBalanceTransactionsResponse
	(*OperatorDebitRequest)(nil),                                         // 70: api.wallet.service.v1.OperatorDebitRequest
	(*OperatorDebitResponse)(nil),                                        // 71: api.wallet.service.v1.OperatorDebitResponse
	(*UpdateOperatorBalanceRequest)(nil),                                 // 72: api.wallet.service.v1.UpdateOperatorBalanceRequest
	(*UpdateOperatorBalanceResponse)(nil),                                // 73: api.wallet.service.v1.UpdateOperatorBalanceResponse
	(*GetOperatorTransactionSummaryRequest)(nil),                         // 74: api.wallet.service.v1.GetOperatorTransactionSummaryRequest
	(*GetOperatorTransactionSummaryResponse)(nil),                        // 75: api.wallet.service.v1.GetOperatorTransactionSummaryResponse
	(*GetOperatorBalanceTransactionsByIdsRequest)(nil),                   // 76: api.wallet.service.v1.GetOperatorBalanceTransactionsByIdsRequest
	(*GetOperatorBalanceTransactionsByIdsResponse)(nil),                  // 77: api.wallet.service.v1.GetOperatorBalanceTransactionsByIdsResponse
	(*RewardSequence)(nil),                                               // 78: api.wallet.service.v1.RewardSequence
	(*DepositRewardConfig)(nil),                                          // 79: api.wallet.service.v1.DepositRewardConfig
	(*SetDepositRewardSequencesRequest)(nil),                             // 80: api.wallet.service.v1.SetDepositRewardSequencesRequest
	(*SetDepositRewardSequencesResponse)(nil),                            // 81: api.wallet.service.v1.SetDepositRewardSequencesResponse
	(*DeleteDepositRewardSequencesRequest)(nil),                          // 82: api.wallet.service.v1.DeleteDepositRewardSequencesRequest
	(*DeleteDepositRewardSequencesResponse)(nil),                         // 83: api.wallet.service.v1.DeleteDepositRewardSequencesResponse
	(*GetDepositRewardConfigRequest)(nil),                                // 84: api.wallet.service.v1.GetDepositRewardConfigRequest
	(*GetDepositRewardConfigResponse)(nil),                               // 85: api.wallet.service.v1.GetDepositRewardConfigResponse
	(*GetUserDepositRewardSequenceRequest)(nil),                          // 86: api.wallet.service.v1.GetUserDepositRewardSequenceRequest
	(*GetUserDepositRewardSequenceResponse)(nil),                         // 87: api.wallet.service.v1.GetUserDepositRewardSequenceResponse
	(*GetGamificationCurrencyConfigRequest)(nil),                         // 88: api.wallet.service.v1.GetGamificationCurrencyConfigRequest
	(*DeductionOrder)(nil),                                               // 89: api.wallet.service.v1.DeductionOrder
	(*OperatorCurrencyConfig)(nil),                                       // 90: api.wallet.service.v1.OperatorCurrencyConfig
	(*GetGamificationCurrencyConfigResponse)(nil),                        // 91: api.wallet.service.v1.GetGamificationCurrencyConfigResponse
	(*UpdateOperatorCurrencyConfigRequest)(nil),                          // 92: api.wallet.service.v1.UpdateOperatorCurrencyConfigRequest
	(*UpdateOperatorCurrencyConfigResponse)(nil),                         // 93: api.wallet.service.v1.UpdateOperatorCurrencyConfigResponse
	(*UpdateDeductionOrderRequest)(nil),                                  // 94: api.wallet.service.v1.UpdateDeductionOrderRequest
	(*UpdateDeductionOrderResponse)(nil),                                 // 95: api.wallet.service.v1.UpdateDeductionOrderResponse
	(*BonusTransferRequest)(nil),                                         // 96: api.wallet.service.v1.BonusTransferRequest
	(*BonusTransferResponse)(nil),                                        // 97: api.wallet.service.v1.BonusTransferResponse
	(*GetUserBalanceDetailsRequest)(nil),                                 // 98: api.wallet.service.v1.GetUserBalanceDetailsRequest
	(*UserBalanceDetail)(nil),                                            // 99: api.wallet.service.v1.UserBalanceDetail
	(*GetUserBalanceDetailsResponse)(nil),                                // 100: api.wallet.service.v1.GetUserBalanceDetailsResponse
	(*AddResponsibleGamblingConfigRequest)(nil),                          // 101: api.wallet.service.v1.AddResponsibleGamblingConfigRequest
	(*AddResponsibleGamblingConfigResponse)(nil),                         // 102: api.wallet.service.v1.AddResponsibleGamblingConfigResponse
	(*DeleteResponsibleGamblingConfigRequest)(nil),                       // 103: api.wallet.service.v1.DeleteResponsibleGamblingConfigRequest
	(*DeleteResponsibleGamblingConfigResponse)(nil),                      // 104: api.wallet.service.v1.DeleteResponsibleGamblingConfigResponse
	(*ResponsibleGamblingConfig)(nil),                                    // 105: api.wallet.service.v1.ResponsibleGamblingConfig
	(*ResponsibleGamblingStatus)(nil),                                    // 106: api.wallet.service.v1.ResponsibleGamblingStatus
	(*ListResponsibleGamblingConfigsRequest)(nil),                        // 107: api.wallet.service.v1.ListResponsibleGamblingConfigsRequest
	(*ListResponsibleGamblingConfigsResponse)(nil),                       // 108: api.wallet.service.v1.ListResponsibleGamblingConfigsResponse
	(*GetResponsibleGamblingConfigRequest)(nil),                          // 109: api.wallet.service.v1.GetResponsibleGamblingConfigRequest
	(*GetResponsibleGamblingConfigResponse)(nil),                         // 110: api.wallet.service.v1.GetResponsibleGamblingConfigResponse
	(*ListCustomerRecordsRequest)(nil),                                   // 111: api.wallet.service.v1.ListCustomerRecordsRequest
	(*ListCustomerRecordsResponse)(nil),                                  // 112: api.wallet.service.v1.ListCustomerRecordsResponse
	(*FICAThresholdConfig)(nil),                                          // 113: api.wallet.service.v1.FICAThresholdConfig
	(*SetFICAThresholdConfigRequest)(nil),                                // 114: api.wallet.service.v1.SetFICAThresholdConfigRequest
	(*SetFICAThresholdConfigResponse)(nil),                               // 115: api.wallet.service.v1.SetFICAThresholdConfigResponse
	(*GetFICAThresholdConfigRequest)(nil),                                // 116: api.wallet.service.v1.GetFICAThresholdConfigRequest
	(*GetFICAThresholdConfigResponse)(nil),                               // 117: api.wallet.service.v1.GetFICAThresholdConfigResponse
	(*ListFICAThresholdTransactionsRequest)(nil),                         // 118: api.wallet.service.v1.ListFICAThresholdTransactionsRequest
	(*ListFICAThresholdTransactionsResponse)(nil),                        // 119: api.wallet.service.v1.ListFICAThresholdTransactionsResponse
	(*GetUserBalancesResponse_Balance)(nil),                              // 120: api.wallet.service.v1.GetUserBalancesResponse.Balance
	(*CreditRequest_Ratio)(nil),                                          // 121: api.wallet.service.v1.CreditRequest.Ratio
	(*GetWalletsResponse_TotalAssets)(nil),                               // 122: api.wallet.service.v1.GetWalletsResponse.TotalAssets
	(*GetWalletsResponse_Credit)(nil),                                    // 123: api.wallet.service.v1.GetWalletsResponse.Credit
	(*GetWalletsResponse_Wallet)(nil),                                    // 124: api.wallet.service.v1.GetWalletsResponse.Wallet
	(*ListWalletBalanceTransactionsResponse_BalanceTransaction)(nil),     // 125: api.wallet.service.v1.ListWalletBalanceTransactionsResponse.BalanceTransaction
	(*GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction)(nil), // 126: api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse.BalanceTransaction
	(*GetWalletCreditTransactionsResponse_CreditTransaction)(nil),        // 127: api.wallet.service.v1.GetWalletCreditTransactionsResponse.CreditTransaction
	nil, // 128: api.wallet.service.v1.GetExchangeRatesResponse.ExchangeRatesEntry
	nil, // 129: api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyResponse.ExchangeRatesEntry
	(*GetOverviewDashboardFromWalletResponse_GGR)(nil),                     // 130: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.GGR
	(*GetOverviewDashboardFromWalletResponse_NGR)(nil),                     // 131: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.NGR
	(*GetOverviewDashboardFromWalletResponse_Deposit)(nil),                 // 132: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.Deposit
	(*GetOverviewDashboardFromWalletResponse_Withdraw)(nil),                // 133: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.Withdraw
	(*GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw)(nil),    // 134: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.DepositMinusWithdraw
	(*RewardSequence_TierConfig)(nil),                                      // 135: api.wallet.service.v1.RewardSequence.TierConfig
	(*UserBalanceDetail_Credit)(nil),                                       // 136: api.wallet.service.v1.UserBalanceDetail.Credit
	(*ListCustomerRecordsResponse_CustomerRecord)(nil),                     // 137: api.wallet.service.v1.ListCustomerRecordsResponse.CustomerRecord
	(*FICAThresholdConfig_Config)(nil),                                     // 138: api.wallet.service.v1.FICAThresholdConfig.Config
	nil,                                                                    // 139: api.wallet.service.v1.GetFICAThresholdConfigResponse.FicaThresholdConfigsEntry
	(*ListFICAThresholdTransactionsResponse_FICAThresholdTransaction)(nil), // 140: api.wallet.service.v1.ListFICAThresholdTransactionsResponse.FICAThresholdTransaction
	(*common.OperatorContext)(nil),                                         // 141: api.common.OperatorContext
	(*timestamppb.Timestamp)(nil),                                          // 142: google.protobuf.Timestamp
	(*common.OperatorContextFilters)(nil),                                  // 143: api.common.OperatorContextFilters
}
var file_wallet_service_v1_wallet_proto_depIdxs = []int32{
	120, // 0: api.wallet.service.v1.GetUserBalancesResponse.balances:type_name -> api.wallet.service.v1.GetUserBalancesResponse.Balance
	141, // 1: api.wallet.service.v1.CreditRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 2: api.wallet.service.v1.DebitRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 3: api.wallet.service.v1.GameDebitRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 4: api.wallet.service.v1.GameCreditRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 5: api.wallet.service.v1.ChannelInfo.operator_context:type_name -> api.common.OperatorContext
	141, // 6: api.wallet.service.v1.FreezeRequest.operator_context:type_name -> api.common.OperatorContext
	12,  // 7: api.wallet.service.v1.FreezeRequest.channel_info:type_name -> api.wallet.service.v1.ChannelInfo
	12,  // 8: api.wallet.service.v1.SettleRequest.channel_info:type_name -> api.wallet.service.v1.ChannelInfo
	12,  // 9: api.wallet.service.v1.RollbackRequest.channel_info:type_name -> api.wallet.service.v1.ChannelInfo
	141, // 10: api.wallet.service.v1.GetWalletsRequest.operator_context:type_name -> api.common.OperatorContext
	122, // 11: api.wallet.service.v1.GetWalletsResponse.total_assets:type_name -> api.wallet.service.v1.GetWalletsResponse.TotalAssets
	124, // 12: api.wallet.service.v1.GetWalletsResponse.wallets:type_name -> api.wallet.service.v1.GetWalletsResponse.Wallet
	142, // 13: api.wallet.service.v1.ListWalletBalanceTransactionsRequest.start_time:type_name -> google.protobuf.Timestamp
	142, // 14: api.wallet.service.v1.ListWalletBalanceTransactionsRequest.end_time:type_name -> google.protobuf.Timestamp
	141, // 15: api.wallet.service.v1.ListWalletBalanceTransactionsRequest.operator_context:type_name -> api.common.OperatorContext
	125, // 16: api.wallet.service.v1.ListWalletBalanceTransactionsResponse.balance_transactions:type_name -> api.wallet.service.v1.ListWalletBalanceTransactionsResponse.BalanceTransaction
	141, // 17: api.wallet.service.v1.GetWalletBalanceTransactionsByIdsRequest.operator_context:type_name -> api.common.OperatorContext
	126, // 18: api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse.balance_transactions:type_name -> api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse.BalanceTransaction
	141, // 19: api.wallet.service.v1.GetWalletCreditTransactionsRequest.operator_context:type_name -> api.common.OperatorContext
	127, // 20: api.wallet.service.v1.GetWalletCreditTransactionsResponse.credit_transactions:type_name -> api.wallet.service.v1.GetWalletCreditTransactionsResponse.CreditTransaction
	128, // 21: api.wallet.service.v1.GetExchangeRatesResponse.exchange_rates:type_name -> api.wallet.service.v1.GetExchangeRatesResponse.ExchangeRatesEntry
	129, // 22: api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyResponse.exchange_rates:type_name -> api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyResponse.ExchangeRatesEntry
	142, // 23: api.wallet.service.v1.GetUserTransactionSummaryRequest.start_time:type_name -> google.protobuf.Timestamp
	142, // 24: api.wallet.service.v1.GetUserTransactionSummaryRequest.end_time:type_name -> google.protobuf.Timestamp
	141, // 25: api.wallet.service.v1.GetUserTransactionSummaryRequest.operator_context:type_name -> api.common.OperatorContext
	142, // 26: api.wallet.service.v1.GetBackofficeUserOverviewFromWalletRequest.start_time:type_name -> google.protobuf.Timestamp
	142, // 27: api.wallet.service.v1.GetBackofficeUserOverviewFromWalletRequest.end_time:type_name -> google.protobuf.Timestamp
	141, // 28: api.wallet.service.v1.GetBackofficeUserOverviewFromWalletRequest.operator_context:type_name -> api.common.OperatorContext
	143, // 29: api.wallet.service.v1.GetOverviewDashboardFromWalletRequest.operator_context_filters:type_name -> api.common.OperatorContextFilters
	141, // 30: api.wallet.service.v1.GetOverviewDashboardFromWalletRequest.operator_context:type_name -> api.common.OperatorContext
	130, // 31: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.ggr:type_name -> api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.GGR
	131, // 32: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.ngr:type_name -> api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.NGR
	132, // 33: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.deposit:type_name -> api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.Deposit
	133, // 34: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.withdraw:type_name -> api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.Withdraw
	134, // 35: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.deposit_minus_withdraw:type_name -> api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.DepositMinusWithdraw
	37,  // 36: api.wallet.service.v1.AddCurrencyRequest.currency:type_name -> api.wallet.service.v1.Currency
	141, // 37: api.wallet.service.v1.AddCurrencyRequest.operator_context:type_name -> api.common.OperatorContext
	37,  // 38: api.wallet.service.v1.GetCurrenciesResponse.currencies:type_name -> api.wallet.service.v1.Currency
	141, // 39: api.wallet.service.v1.GetOperatorCurrenciesRequest.operator_context:type_name -> api.common.OperatorContext
	37,  // 40: api.wallet.service.v1.GetOperatorCurrenciesResponse.currencies:type_name -> api.wallet.service.v1.Currency
	37,  // 41: api.wallet.service.v1.ListCurrenciesResponse.currencies:type_name -> api.wallet.service.v1.Currency
	141, // 42: api.wallet.service.v1.UpdateOperatorCurrencyRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 43: api.wallet.service.v1.UpdateUserCurrencyRequest.operator_context:type_name -> api.common.OperatorContext
	143, // 44: api.wallet.service.v1.ListBottomOperatorBalancesRequest.operator_context_filters:type_name -> api.common.OperatorContextFilters
	141, // 45: api.wallet.service.v1.ListBottomOperatorBalancesRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 46: api.wallet.service.v1.OperatorBalance.operator_context:type_name -> api.common.OperatorContext
	53,  // 47: api.wallet.service.v1.ListBottomOperatorBalancesResponse.operator_balances:type_name -> api.wallet.service.v1.OperatorBalance
	141, // 48: api.wallet.service.v1.OperatorTransferRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 49: api.wallet.service.v1.OperatorTransferRequest.target_operator_context:type_name -> api.common.OperatorContext
	141, // 50: api.wallet.service.v1.OperatorSwapRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 51: api.wallet.service.v1.OperatorSwapRequest.target_operator_context:type_name -> api.common.OperatorContext
	141, // 52: api.wallet.service.v1.OperatorFreezeRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 53: api.wallet.service.v1.OperatorFreezeRequest.target_operator_context:type_name -> api.common.OperatorContext
	141, // 54: api.wallet.service.v1.OperatorRollbackRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 55: api.wallet.service.v1.OperatorRollbackRequest.target_operator_context:type_name -> api.common.OperatorContext
	141, // 56: api.wallet.service.v1.OperatorSettleRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 57: api.wallet.service.v1.OperatorSettleRequest.target_operator_context:type_name -> api.common.OperatorContext
	141, // 58: api.wallet.service.v1.GetOperatorBalanceRequest.operator_context:type_name -> api.common.OperatorContext
	53,  // 59: api.wallet.service.v1.GetOperatorBalanceResponse.operator_balances:type_name -> api.wallet.service.v1.OperatorBalance
	143, // 60: api.wallet.service.v1.ListOperatorBalanceTransactionsRequest.operator_context_filters:type_name -> api.common.OperatorContextFilters
	142, // 61: api.wallet.service.v1.ListOperatorBalanceTransactionsRequest.start_time:type_name -> google.protobuf.Timestamp
	142, // 62: api.wallet.service.v1.ListOperatorBalanceTransactionsRequest.end_time:type_name -> google.protobuf.Timestamp
	141, // 63: api.wallet.service.v1.ListOperatorBalanceTransactionsRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 64: api.wallet.service.v1.OperatorBalanceTransaction.operator_context:type_name -> api.common.OperatorContext
	142, // 65: api.wallet.service.v1.OperatorBalanceTransaction.created_at:type_name -> google.protobuf.Timestamp
	142, // 66: api.wallet.service.v1.OperatorBalanceTransaction.updated_at:type_name -> google.protobuf.Timestamp
	68,  // 67: api.wallet.service.v1.ListOperatorBalanceTransactionsResponse.transactions:type_name -> api.wallet.service.v1.OperatorBalanceTransaction
	141, // 68: api.wallet.service.v1.OperatorDebitRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 69: api.wallet.service.v1.UpdateOperatorBalanceRequest.initial_operator_context:type_name -> api.common.OperatorContext
	141, // 70: api.wallet.service.v1.UpdateOperatorBalanceRequest.target_operator_context:type_name -> api.common.OperatorContext
	141, // 71: api.wallet.service.v1.GetOperatorTransactionSummaryRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 72: api.wallet.service.v1.GetOperatorBalanceTransactionsByIdsRequest.operator_context:type_name -> api.common.OperatorContext
	68,  // 73: api.wallet.service.v1.GetOperatorBalanceTransactionsByIdsResponse.transactions:type_name -> api.wallet.service.v1.OperatorBalanceTransaction
	135, // 74: api.wallet.service.v1.RewardSequence.tier_configs:type_name -> api.wallet.service.v1.RewardSequence.TierConfig
	142, // 75: api.wallet.service.v1.RewardSequence.start_time:type_name -> google.protobuf.Timestamp
	142, // 76: api.wallet.service.v1.RewardSequence.end_time:type_name -> google.protobuf.Timestamp
	78,  // 77: api.wallet.service.v1.DepositRewardConfig.welcome_reward_sequences:type_name -> api.wallet.service.v1.RewardSequence
	78,  // 78: api.wallet.service.v1.DepositRewardConfig.daily_reward_sequences:type_name -> api.wallet.service.v1.RewardSequence
	142, // 79: api.wallet.service.v1.DepositRewardConfig.created_at:type_name -> google.protobuf.Timestamp
	142, // 80: api.wallet.service.v1.DepositRewardConfig.updated_at:type_name -> google.protobuf.Timestamp
	141, // 81: api.wallet.service.v1.SetDepositRewardSequencesRequest.initiator_operator_context:type_name -> api.common.OperatorContext
	141, // 82: api.wallet.service.v1.SetDepositRewardSequencesRequest.target_operator_context:type_name -> api.common.OperatorContext
	78,  // 83: api.wallet.service.v1.SetDepositRewardSequencesRequest.welcome_reward_sequences:type_name -> api.wallet.service.v1.RewardSequence
	78,  // 84: api.wallet.service.v1.SetDepositRewardSequencesRequest.daily_reward_sequences:type_name -> api.wallet.service.v1.RewardSequence
	141, // 85: api.wallet.service.v1.DeleteDepositRewardSequencesRequest.initiator_operator_context:type_name -> api.common.OperatorContext
	141, // 86: api.wallet.service.v1.DeleteDepositRewardSequencesRequest.target_operator_context:type_name -> api.common.OperatorContext
	141, // 87: api.wallet.service.v1.GetDepositRewardConfigRequest.initiator_operator_context:type_name -> api.common.OperatorContext
	141, // 88: api.wallet.service.v1.GetDepositRewardConfigRequest.target_operator_context:type_name -> api.common.OperatorContext
	141, // 89: api.wallet.service.v1.GetDepositRewardConfigResponse.custom_operator_context:type_name -> api.common.OperatorContext
	141, // 90: api.wallet.service.v1.GetDepositRewardConfigResponse.inherited_operator_context:type_name -> api.common.OperatorContext
	79,  // 91: api.wallet.service.v1.GetDepositRewardConfigResponse.default_deposit_reward_config:type_name -> api.wallet.service.v1.DepositRewardConfig
	79,  // 92: api.wallet.service.v1.GetDepositRewardConfigResponse.custom_deposit_reward_config:type_name -> api.wallet.service.v1.DepositRewardConfig
	78,  // 93: api.wallet.service.v1.GetUserDepositRewardSequenceResponse.current_reward_sequence:type_name -> api.wallet.service.v1.RewardSequence
	141, // 94: api.wallet.service.v1.GetGamificationCurrencyConfigRequest.initiator_operator_context:type_name -> api.common.OperatorContext
	141, // 95: api.wallet.service.v1.GetGamificationCurrencyConfigRequest.target_operator_context:type_name -> api.common.OperatorContext
	89,  // 96: api.wallet.service.v1.GetGamificationCurrencyConfigResponse.deduction_order:type_name -> api.wallet.service.v1.DeductionOrder
	90,  // 97: api.wallet.service.v1.GetGamificationCurrencyConfigResponse.operator_currency_configs:type_name -> api.wallet.service.v1.OperatorCurrencyConfig
	141, // 98: api.wallet.service.v1.UpdateOperatorCurrencyConfigRequest.initiator_operator_context:type_name -> api.common.OperatorContext
	141, // 99: api.wallet.service.v1.UpdateOperatorCurrencyConfigRequest.target_operator_context:type_name -> api.common.OperatorContext
	90,  // 100: api.wallet.service.v1.UpdateOperatorCurrencyConfigRequest.operator_currency_config:type_name -> api.wallet.service.v1.OperatorCurrencyConfig
	141, // 101: api.wallet.service.v1.UpdateDeductionOrderRequest.initiator_operator_context:type_name -> api.common.OperatorContext
	141, // 102: api.wallet.service.v1.UpdateDeductionOrderRequest.target_operator_context:type_name -> api.common.OperatorContext
	89,  // 103: api.wallet.service.v1.UpdateDeductionOrderRequest.deduction_order:type_name -> api.wallet.service.v1.DeductionOrder
	136, // 104: api.wallet.service.v1.UserBalanceDetail.credits:type_name -> api.wallet.service.v1.UserBalanceDetail.Credit
	99,  // 105: api.wallet.service.v1.GetUserBalanceDetailsResponse.detail:type_name -> api.wallet.service.v1.UserBalanceDetail
	141, // 106: api.wallet.service.v1.DeleteResponsibleGamblingConfigRequest.operator_context:type_name -> api.common.OperatorContext
	142, // 107: api.wallet.service.v1.ResponsibleGamblingConfig.deposit_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	142, // 108: api.wallet.service.v1.ResponsibleGamblingConfig.withdrawal_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	142, // 109: api.wallet.service.v1.ResponsibleGamblingConfig.daily_play_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	142, // 110: api.wallet.service.v1.ResponsibleGamblingConfig.weekly_play_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	142, // 111: api.wallet.service.v1.ResponsibleGamblingConfig.monthly_play_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	142, // 112: api.wallet.service.v1.ResponsibleGamblingConfig.daily_loss_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	142, // 113: api.wallet.service.v1.ResponsibleGamblingConfig.weekly_loss_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	142, // 114: api.wallet.service.v1.ResponsibleGamblingConfig.monthly_loss_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	141, // 115: api.wallet.service.v1.ListResponsibleGamblingConfigsRequest.operator_context:type_name -> api.common.OperatorContext
	105, // 116: api.wallet.service.v1.ListResponsibleGamblingConfigsResponse.responsible_gambling_configs:type_name -> api.wallet.service.v1.ResponsibleGamblingConfig
	106, // 117: api.wallet.service.v1.ListResponsibleGamblingConfigsResponse.responsible_gambling_statuses:type_name -> api.wallet.service.v1.ResponsibleGamblingStatus
	141, // 118: api.wallet.service.v1.GetResponsibleGamblingConfigRequest.operator_context:type_name -> api.common.OperatorContext
	105, // 119: api.wallet.service.v1.GetResponsibleGamblingConfigResponse.responsible_gambling_config:type_name -> api.wallet.service.v1.ResponsibleGamblingConfig
	142, // 120: api.wallet.service.v1.ListCustomerRecordsRequest.start_time:type_name -> google.protobuf.Timestamp
	142, // 121: api.wallet.service.v1.ListCustomerRecordsRequest.end_time:type_name -> google.protobuf.Timestamp
	141, // 122: api.wallet.service.v1.ListCustomerRecordsRequest.operator_context:type_name -> api.common.OperatorContext
	137, // 123: api.wallet.service.v1.ListCustomerRecordsResponse.customer_records:type_name -> api.wallet.service.v1.ListCustomerRecordsResponse.CustomerRecord
	138, // 124: api.wallet.service.v1.FICAThresholdConfig.configs:type_name -> api.wallet.service.v1.FICAThresholdConfig.Config
	113, // 125: api.wallet.service.v1.SetFICAThresholdConfigRequest.fica_threshold_config:type_name -> api.wallet.service.v1.FICAThresholdConfig
	141, // 126: api.wallet.service.v1.SetFICAThresholdConfigRequest.operator_context:type_name -> api.common.OperatorContext
	141, // 127: api.wallet.service.v1.GetFICAThresholdConfigRequest.operator_context:type_name -> api.common.OperatorContext
	139, // 128: api.wallet.service.v1.GetFICAThresholdConfigResponse.fica_threshold_configs:type_name -> api.wallet.service.v1.GetFICAThresholdConfigResponse.FicaThresholdConfigsEntry
	142, // 129: api.wallet.service.v1.ListFICAThresholdTransactionsRequest.start_time:type_name -> google.protobuf.Timestamp
	142, // 130: api.wallet.service.v1.ListFICAThresholdTransactionsRequest.end_time:type_name -> google.protobuf.Timestamp
	141, // 131: api.wallet.service.v1.ListFICAThresholdTransactionsRequest.operator_context:type_name -> api.common.OperatorContext
	140, // 132: api.wallet.service.v1.ListFICAThresholdTransactionsResponse.threshold_transactions:type_name -> api.wallet.service.v1.ListFICAThresholdTransactionsResponse.FICAThresholdTransaction
	142, // 133: api.wallet.service.v1.GetWalletsResponse.Credit.created_at:type_name -> google.protobuf.Timestamp
	123, // 134: api.wallet.service.v1.GetWalletsResponse.Wallet.credits:type_name -> api.wallet.service.v1.GetWalletsResponse.Credit
	142, // 135: api.wallet.service.v1.ListWalletBalanceTransactionsResponse.BalanceTransaction.created_at:type_name -> google.protobuf.Timestamp
	142, // 136: api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse.BalanceTransaction.created_at:type_name -> google.protobuf.Timestamp
	142, // 137: api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse.BalanceTransaction.updated_at:type_name -> google.protobuf.Timestamp
	142, // 138: api.wallet.service.v1.GetWalletCreditTransactionsResponse.CreditTransaction.created_at:type_name -> google.protobuf.Timestamp
	142, // 139: api.wallet.service.v1.ListCustomerRecordsResponse.CustomerRecord.date_time:type_name -> google.protobuf.Timestamp
	113, // 140: api.wallet.service.v1.GetFICAThresholdConfigResponse.FicaThresholdConfigsEntry.value:type_name -> api.wallet.service.v1.FICAThresholdConfig
	142, // 141: api.wallet.service.v1.ListFICAThresholdTransactionsResponse.FICAThresholdTransaction.transaction_time:type_name -> google.protobuf.Timestamp
	0,   // 142: api.wallet.service.v1.Wallet.GetUserBalances:input_type -> api.wallet.service.v1.GetUserBalancesRequest
	2,   // 143: api.wallet.service.v1.Wallet.GetUserBalance:input_type -> api.wallet.service.v1.GetUserBalanceRequest
	98,  // 144: api.wallet.service.v1.Wallet.GetUserBalanceDetails:input_type -> api.wallet.service.v1.GetUserBalanceDetailsRequest
	4,   // 145: api.wallet.service.v1.Wallet.Credit:input_type -> api.wallet.service.v1.CreditRequest
	6,   // 146: api.wallet.service.v1.Wallet.Debit:input_type -> api.wallet.service.v1.DebitRequest
	8,   // 147: api.wallet.service.v1.Wallet.GameDebit:input_type -> api.wallet.service.v1.GameDebitRequest
	10,  // 148: api.wallet.service.v1.Wallet.GameCredit:input_type -> api.wallet.service.v1.GameCreditRequest
	13,  // 149: api.wallet.service.v1.Wallet.Freeze:input_type -> api.wallet.service.v1.FreezeRequest
	15,  // 150: api.wallet.service.v1.Wallet.Settle:input_type -> api.wallet.service.v1.SettleRequest
	17,  // 151: api.wallet.service.v1.Wallet.Rollback:input_type -> api.wallet.service.v1.RollbackRequest
	19,  // 152: api.wallet.service.v1.Wallet.GetWallets:input_type -> api.wallet.service.v1.GetWalletsRequest
	21,  // 153: api.wallet.service.v1.Wallet.ListWalletBalanceTransactions:input_type -> api.wallet.service.v1.ListWalletBalanceTransactionsRequest
	23,  // 154: api.wallet.service.v1.Wallet.GetWalletBalanceTransactionsByIds:input_type -> api.wallet.service.v1.GetWalletBalanceTransactionsByIdsRequest
	25,  // 155: api.wallet.service.v1.Wallet.GetWalletCreditTransactions:input_type -> api.wallet.service.v1.GetWalletCreditTransactionsRequest
	27,  // 156: api.wallet.service.v1.Wallet.GetExchangeRates:input_type -> api.wallet.service.v1.GetExchangeRatesRequest
	29,  // 157: api.wallet.service.v1.Wallet.GetExchangeRatesWithBaseCurrency:input_type -> api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyRequest
	31,  // 158: api.wallet.service.v1.Wallet.GetUserTransactionSummary:input_type -> api.wallet.service.v1.GetUserTransactionSummaryRequest
	33,  // 159: api.wallet.service.v1.Wallet.GetBackofficeUserOverviewFromWallet:input_type -> api.wallet.service.v1.GetBackofficeUserOverviewFromWalletRequest
	35,  // 160: api.wallet.service.v1.Wallet.GetOverviewDashboardFromWallet:input_type -> api.wallet.service.v1.GetOverviewDashboardFromWalletRequest
	38,  // 161: api.wallet.service.v1.Wallet.AddCurrency:input_type -> api.wallet.service.v1.AddCurrencyRequest
	40,  // 162: api.wallet.service.v1.Wallet.UpdateCurrency:input_type -> api.wallet.service.v1.UpdateCurrencyRequest
	42,  // 163: api.wallet.service.v1.Wallet.GetCurrencies:input_type -> api.wallet.service.v1.GetCurrenciesRequest
	44,  // 164: api.wallet.service.v1.Wallet.GetOperatorCurrencies:input_type -> api.wallet.service.v1.GetOperatorCurrenciesRequest
	46,  // 165: api.wallet.service.v1.Wallet.ListCurrencies:input_type -> api.wallet.service.v1.ListCurrenciesRequest
	48,  // 166: api.wallet.service.v1.Wallet.UpdateOperatorCurrency:input_type -> api.wallet.service.v1.UpdateOperatorCurrencyRequest
	50,  // 167: api.wallet.service.v1.Wallet.UpdateUserCurrency:input_type -> api.wallet.service.v1.UpdateUserCurrencyRequest
	52,  // 168: api.wallet.service.v1.Wallet.ListBottomOperatorBalances:input_type -> api.wallet.service.v1.ListBottomOperatorBalancesRequest
	55,  // 169: api.wallet.service.v1.Wallet.OperatorTransfer:input_type -> api.wallet.service.v1.OperatorTransferRequest
	57,  // 170: api.wallet.service.v1.Wallet.OperatorSwap:input_type -> api.wallet.service.v1.OperatorSwapRequest
	59,  // 171: api.wallet.service.v1.Wallet.OperatorFreeze:input_type -> api.wallet.service.v1.OperatorFreezeRequest
	61,  // 172: api.wallet.service.v1.Wallet.OperatorRollback:input_type -> api.wallet.service.v1.OperatorRollbackRequest
	63,  // 173: api.wallet.service.v1.Wallet.OperatorSettle:input_type -> api.wallet.service.v1.OperatorSettleRequest
	65,  // 174: api.wallet.service.v1.Wallet.GetOperatorBalance:input_type -> api.wallet.service.v1.GetOperatorBalanceRequest
	67,  // 175: api.wallet.service.v1.Wallet.ListOperatorBalanceTransactions:input_type -> api.wallet.service.v1.ListOperatorBalanceTransactionsRequest
	70,  // 176: api.wallet.service.v1.Wallet.OperatorDebit:input_type -> api.wallet.service.v1.OperatorDebitRequest
	72,  // 177: api.wallet.service.v1.Wallet.UpdateOperatorBalance:input_type -> api.wallet.service.v1.UpdateOperatorBalanceRequest
	74,  // 178: api.wallet.service.v1.Wallet.GetOperatorTransactionSummary:input_type -> api.wallet.service.v1.GetOperatorTransactionSummaryRequest
	76,  // 179: api.wallet.service.v1.Wallet.GetOperatorBalanceTransactionsByIds:input_type -> api.wallet.service.v1.GetOperatorBalanceTransactionsByIdsRequest
	80,  // 180: api.wallet.service.v1.Wallet.SetDepositRewardSequences:input_type -> api.wallet.service.v1.SetDepositRewardSequencesRequest
	82,  // 181: api.wallet.service.v1.Wallet.DeleteDepositRewardSequences:input_type -> api.wallet.service.v1.DeleteDepositRewardSequencesRequest
	84,  // 182: api.wallet.service.v1.Wallet.GetDepositRewardConfig:input_type -> api.wallet.service.v1.GetDepositRewardConfigRequest
	86,  // 183: api.wallet.service.v1.Wallet.GetUserDepositRewardSequence:input_type -> api.wallet.service.v1.GetUserDepositRewardSequenceRequest
	88,  // 184: api.wallet.service.v1.Wallet.GetGamificationCurrencyConfig:input_type -> api.wallet.service.v1.GetGamificationCurrencyConfigRequest
	92,  // 185: api.wallet.service.v1.Wallet.UpdateOperatorCurrencyConfig:input_type -> api.wallet.service.v1.UpdateOperatorCurrencyConfigRequest
	94,  // 186: api.wallet.service.v1.Wallet.UpdateDeductionOrder:input_type -> api.wallet.service.v1.UpdateDeductionOrderRequest
	96,  // 187: api.wallet.service.v1.Wallet.BonusTransfer:input_type -> api.wallet.service.v1.BonusTransferRequest
	101, // 188: api.wallet.service.v1.Wallet.AddResponsibleGamblingConfig:input_type -> api.wallet.service.v1.AddResponsibleGamblingConfigRequest
	103, // 189: api.wallet.service.v1.Wallet.DeleteResponsibleGamblingConfig:input_type -> api.wallet.service.v1.DeleteResponsibleGamblingConfigRequest
	107, // 190: api.wallet.service.v1.Wallet.ListResponsibleGamblingConfigs:input_type -> api.wallet.service.v1.ListResponsibleGamblingConfigsRequest
	109, // 191: api.wallet.service.v1.Wallet.GetResponsibleGamblingConfig:input_type -> api.wallet.service.v1.GetResponsibleGamblingConfigRequest
	111, // 192: api.wallet.service.v1.Wallet.ListCustomerRecords:input_type -> api.wallet.service.v1.ListCustomerRecordsRequest
	114, // 193: api.wallet.service.v1.Wallet.SetFICAThresholdConfig:input_type -> api.wallet.service.v1.SetFICAThresholdConfigRequest
	116, // 194: api.wallet.service.v1.Wallet.GetFICAThresholdConfig:input_type -> api.wallet.service.v1.GetFICAThresholdConfigRequest
	118, // 195: api.wallet.service.v1.Wallet.ListFICAThresholdTransactions:input_type -> api.wallet.service.v1.ListFICAThresholdTransactionsRequest
	1,   // 196: api.wallet.service.v1.Wallet.GetUserBalances:output_type -> api.wallet.service.v1.GetUserBalancesResponse
	3,   // 197: api.wallet.service.v1.Wallet.GetUserBalance:output_type -> api.wallet.service.v1.GetUserBalanceResponse
	100, // 198: api.wallet.service.v1.Wallet.GetUserBalanceDetails:output_type -> api.wallet.service.v1.GetUserBalanceDetailsResponse
	5,   // 199: api.wallet.service.v1.Wallet.Credit:output_type -> api.wallet.service.v1.CreditResponse
	7,   // 200: api.wallet.service.v1.Wallet.Debit:output_type -> api.wallet.service.v1.DebitResponse
	9,   // 201: api.wallet.service.v1.Wallet.GameDebit:output_type -> api.wallet.service.v1.GameDebitResponse
	11,  // 202: api.wallet.service.v1.Wallet.GameCredit:output_type -> api.wallet.service.v1.GameCreditResponse
	14,  // 203: api.wallet.service.v1.Wallet.Freeze:output_type -> api.wallet.service.v1.FreezeResponse
	16,  // 204: api.wallet.service.v1.Wallet.Settle:output_type -> api.wallet.service.v1.SettleResponse
	18,  // 205: api.wallet.service.v1.Wallet.Rollback:output_type -> api.wallet.service.v1.RollbackResponse
	20,  // 206: api.wallet.service.v1.Wallet.GetWallets:output_type -> api.wallet.service.v1.GetWalletsResponse
	22,  // 207: api.wallet.service.v1.Wallet.ListWalletBalanceTransactions:output_type -> api.wallet.service.v1.ListWalletBalanceTransactionsResponse
	24,  // 208: api.wallet.service.v1.Wallet.GetWalletBalanceTransactionsByIds:output_type -> api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse
	26,  // 209: api.wallet.service.v1.Wallet.GetWalletCreditTransactions:output_type -> api.wallet.service.v1.GetWalletCreditTransactionsResponse
	28,  // 210: api.wallet.service.v1.Wallet.GetExchangeRates:output_type -> api.wallet.service.v1.GetExchangeRatesResponse
	30,  // 211: api.wallet.service.v1.Wallet.GetExchangeRatesWithBaseCurrency:output_type -> api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyResponse
	32,  // 212: api.wallet.service.v1.Wallet.GetUserTransactionSummary:output_type -> api.wallet.service.v1.GetUserTransactionSummaryResponse
	34,  // 213: api.wallet.service.v1.Wallet.GetBackofficeUserOverviewFromWallet:output_type -> api.wallet.service.v1.GetBackofficeUserOverviewFromWalletResponse
	36,  // 214: api.wallet.service.v1.Wallet.GetOverviewDashboardFromWallet:output_type -> api.wallet.service.v1.GetOverviewDashboardFromWalletResponse
	39,  // 215: api.wallet.service.v1.Wallet.AddCurrency:output_type -> api.wallet.service.v1.AddCurrencyResponse
	41,  // 216: api.wallet.service.v1.Wallet.UpdateCurrency:output_type -> api.wallet.service.v1.UpdateCurrencyResponse
	43,  // 217: api.wallet.service.v1.Wallet.GetCurrencies:output_type -> api.wallet.service.v1.GetCurrenciesResponse
	45,  // 218: api.wallet.service.v1.Wallet.GetOperatorCurrencies:output_type -> api.wallet.service.v1.GetOperatorCurrenciesResponse
	47,  // 219: api.wallet.service.v1.Wallet.ListCurrencies:output_type -> api.wallet.service.v1.ListCurrenciesResponse
	49,  // 220: api.wallet.service.v1.Wallet.UpdateOperatorCurrency:output_type -> api.wallet.service.v1.UpdateOperatorCurrencyResponse
	51,  // 221: api.wallet.service.v1.Wallet.UpdateUserCurrency:output_type -> api.wallet.service.v1.UpdateUserCurrencyResponse
	54,  // 222: api.wallet.service.v1.Wallet.ListBottomOperatorBalances:output_type -> api.wallet.service.v1.ListBottomOperatorBalancesResponse
	56,  // 223: api.wallet.service.v1.Wallet.OperatorTransfer:output_type -> api.wallet.service.v1.OperatorTransferResponse
	58,  // 224: api.wallet.service.v1.Wallet.OperatorSwap:output_type -> api.wallet.service.v1.OperatorSwapResponse
	60,  // 225: api.wallet.service.v1.Wallet.OperatorFreeze:output_type -> api.wallet.service.v1.OperatorFreezeResponse
	62,  // 226: api.wallet.service.v1.Wallet.OperatorRollback:output_type -> api.wallet.service.v1.OperatorRollbackResponse
	64,  // 227: api.wallet.service.v1.Wallet.OperatorSettle:output_type -> api.wallet.service.v1.OperatorSettleResponse
	66,  // 228: api.wallet.service.v1.Wallet.GetOperatorBalance:output_type -> api.wallet.service.v1.GetOperatorBalanceResponse
	69,  // 229: api.wallet.service.v1.Wallet.ListOperatorBalanceTransactions:output_type -> api.wallet.service.v1.ListOperatorBalanceTransactionsResponse
	71,  // 230: api.wallet.service.v1.Wallet.OperatorDebit:output_type -> api.wallet.service.v1.OperatorDebitResponse
	73,  // 231: api.wallet.service.v1.Wallet.UpdateOperatorBalance:output_type -> api.wallet.service.v1.UpdateOperatorBalanceResponse
	75,  // 232: api.wallet.service.v1.Wallet.GetOperatorTransactionSummary:output_type -> api.wallet.service.v1.GetOperatorTransactionSummaryResponse
	77,  // 233: api.wallet.service.v1.Wallet.GetOperatorBalanceTransactionsByIds:output_type -> api.wallet.service.v1.GetOperatorBalanceTransactionsByIdsResponse
	81,  // 234: api.wallet.service.v1.Wallet.SetDepositRewardSequences:output_type -> api.wallet.service.v1.SetDepositRewardSequencesResponse
	83,  // 235: api.wallet.service.v1.Wallet.DeleteDepositRewardSequences:output_type -> api.wallet.service.v1.DeleteDepositRewardSequencesResponse
	85,  // 236: api.wallet.service.v1.Wallet.GetDepositRewardConfig:output_type -> api.wallet.service.v1.GetDepositRewardConfigResponse
	87,  // 237: api.wallet.service.v1.Wallet.GetUserDepositRewardSequence:output_type -> api.wallet.service.v1.GetUserDepositRewardSequenceResponse
	91,  // 238: api.wallet.service.v1.Wallet.GetGamificationCurrencyConfig:output_type -> api.wallet.service.v1.GetGamificationCurrencyConfigResponse
	93,  // 239: api.wallet.service.v1.Wallet.UpdateOperatorCurrencyConfig:output_type -> api.wallet.service.v1.UpdateOperatorCurrencyConfigResponse
	95,  // 240: api.wallet.service.v1.Wallet.UpdateDeductionOrder:output_type -> api.wallet.service.v1.UpdateDeductionOrderResponse
	97,  // 241: api.wallet.service.v1.Wallet.BonusTransfer:output_type -> api.wallet.service.v1.BonusTransferResponse
	102, // 242: api.wallet.service.v1.Wallet.AddResponsibleGamblingConfig:output_type -> api.wallet.service.v1.AddResponsibleGamblingConfigResponse
	104, // 243: api.wallet.service.v1.Wallet.DeleteResponsibleGamblingConfig:output_type -> api.wallet.service.v1.DeleteResponsibleGamblingConfigResponse
	108, // 244: api.wallet.service.v1.Wallet.ListResponsibleGamblingConfigs:output_type -> api.wallet.service.v1.ListResponsibleGamblingConfigsResponse
	110, // 245: api.wallet.service.v1.Wallet.GetResponsibleGamblingConfig:output_type -> api.wallet.service.v1.GetResponsibleGamblingConfigResponse
	112, // 246: api.wallet.service.v1.Wallet.ListCustomerRecords:output_type -> api.wallet.service.v1.ListCustomerRecordsResponse
	115, // 247: api.wallet.service.v1.Wallet.SetFICAThresholdConfig:output_type -> api.wallet.service.v1.SetFICAThresholdConfigResponse
	117, // 248: api.wallet.service.v1.Wallet.GetFICAThresholdConfig:output_type -> api.wallet.service.v1.GetFICAThresholdConfigResponse
	119, // 249: api.wallet.service.v1.Wallet.ListFICAThresholdTransactions:output_type -> api.wallet.service.v1.ListFICAThresholdTransactionsResponse
	196, // [196:250] is the sub-list for method output_type
	142, // [142:196] is the sub-list for method input_type
	142, // [142:142] is the sub-list for extension type_name
	142, // [142:142] is the sub-list for extension extendee
	0,   // [0:142] is the sub-list for field type_name
}

func init() { file_wallet_service_v1_wallet_proto_init() }
func file_wallet_service_v1_wallet_proto_init() {
	if File_wallet_service_v1_wallet_proto != nil {
		return
	}
	file_wallet_service_v1_wallet_proto_msgTypes[8].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[21].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[25].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[29].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[31].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[33].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[40].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[46].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[48].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[52].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[59].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[61].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[63].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[67].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[70].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[74].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[80].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[89].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[90].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[101].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[103].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[107].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[111].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[118].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wallet_service_v1_wallet_proto_rawDesc), len(file_wallet_service_v1_wallet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   141,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wallet_service_v1_wallet_proto_goTypes,
		DependencyIndexes: file_wallet_service_v1_wallet_proto_depIdxs,
		MessageInfos:      file_wallet_service_v1_wallet_proto_msgTypes,
	}.Build()
	File_wallet_service_v1_wallet_proto = out.File
	file_wallet_service_v1_wallet_proto_goTypes = nil
	file_wallet_service_v1_wallet_proto_depIdxs = nil
}
