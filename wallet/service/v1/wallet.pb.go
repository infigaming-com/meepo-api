// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.6
// source: wallet/service/v1/wallet.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserBalancesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalancesRequest) Reset() {
	*x = GetUserBalancesRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalancesRequest) ProtoMessage() {}

func (x *GetUserBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalancesRequest.ProtoReflect.Descriptor instead.
func (*GetUserBalancesRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserBalancesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserBalancesResponse struct {
	state         protoimpl.MessageState             `protogen:"open.v1"`
	Balances      []*GetUserBalancesResponse_Balance `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalancesResponse) Reset() {
	*x = GetUserBalancesResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalancesResponse) ProtoMessage() {}

func (x *GetUserBalancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalancesResponse.ProtoReflect.Descriptor instead.
func (*GetUserBalancesResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserBalancesResponse) GetBalances() []*GetUserBalancesResponse_Balance {
	if x != nil {
		return x.Balances
	}
	return nil
}

type GetUserBalanceRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	UserId   int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	// optional target currency
	SettlementCurrency string `protobuf:"bytes,3,opt,name=settlement_currency,json=settlementCurrency,proto3" json:"settlement_currency,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetUserBalanceRequest) Reset() {
	*x = GetUserBalanceRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceRequest) ProtoMessage() {}

func (x *GetUserBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetUserBalanceRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserBalanceRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserBalanceRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetUserBalanceRequest) GetSettlementCurrency() string {
	if x != nil {
		return x.SettlementCurrency
	}
	return ""
}

type GetUserBalanceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// optional exchange rate between currency and target currency
	ExchangeRate  string `protobuf:"bytes,1,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`
	Cash          string `protobuf:"bytes,2,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorBonus string `protobuf:"bytes,3,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	ProviderBonus string `protobuf:"bytes,4,opt,name=provider_bonus,json=providerBonus,proto3" json:"provider_bonus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalanceResponse) Reset() {
	*x = GetUserBalanceResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceResponse) ProtoMessage() {}

func (x *GetUserBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetUserBalanceResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserBalanceResponse) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *GetUserBalanceResponse) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GetUserBalanceResponse) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

func (x *GetUserBalanceResponse) GetProviderBonus() string {
	if x != nil {
		return x.ProviderBonus
	}
	return ""
}

type CreditRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	UserId   int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	// Valid credit transaction types:
	//   - "payment_deposit"    - Payment deposit transaction
	TransactionType string `protobuf:"bytes,3,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId   int64  `protobuf:"varint,4,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash            string `protobuf:"bytes,5,opt,name=cash,proto3" json:"cash,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreditRequest) Reset() {
	*x = CreditRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditRequest) ProtoMessage() {}

func (x *CreditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditRequest.ProtoReflect.Descriptor instead.
func (*CreditRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *CreditRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreditRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CreditRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *CreditRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *CreditRequest) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

type CreditResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditResponse) Reset() {
	*x = CreditResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditResponse) ProtoMessage() {}

func (x *CreditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditResponse.ProtoReflect.Descriptor instead.
func (*CreditResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *CreditResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

type DebitRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	UserId   int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	// Valid debit transaction types:
	//   - "payment_withdraw"   - Payment withdraw transaction
	TransactionType string `protobuf:"bytes,3,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId   int64  `protobuf:"varint,4,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash            string `protobuf:"bytes,5,opt,name=cash,proto3" json:"cash,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DebitRequest) Reset() {
	*x = DebitRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitRequest) ProtoMessage() {}

func (x *DebitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitRequest.ProtoReflect.Descriptor instead.
func (*DebitRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{6}
}

func (x *DebitRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DebitRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *DebitRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *DebitRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *DebitRequest) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

type DebitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebitResponse) Reset() {
	*x = DebitResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebitResponse) ProtoMessage() {}

func (x *DebitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebitResponse.ProtoReflect.Descriptor instead.
func (*DebitResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *DebitResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

type GameDebitRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UserId             int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency           string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	SettlementCurrency string                 `protobuf:"bytes,3,opt,name=settlement_currency,json=settlementCurrency,proto3" json:"settlement_currency,omitempty"`
	ExchangeRate       string                 `protobuf:"bytes,4,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`
	// Valid game debit transaction types:
	//   - "game_bet"          - Game bet transaction
	TransactionType string `protobuf:"bytes,5,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId   int64  `protobuf:"varint,6,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Amount          string `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"`
	Turnover        string `protobuf:"bytes,8,opt,name=turnover,proto3" json:"turnover,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GameDebitRequest) Reset() {
	*x = GameDebitRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameDebitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDebitRequest) ProtoMessage() {}

func (x *GameDebitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDebitRequest.ProtoReflect.Descriptor instead.
func (*GameDebitRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *GameDebitRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GameDebitRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GameDebitRequest) GetSettlementCurrency() string {
	if x != nil {
		return x.SettlementCurrency
	}
	return ""
}

func (x *GameDebitRequest) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *GameDebitRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *GameDebitRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *GameDebitRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *GameDebitRequest) GetTurnover() string {
	if x != nil {
		return x.Turnover
	}
	return ""
}

type GameDebitResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	TransactionId          int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ExchangeRate           string                 `protobuf:"bytes,2,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`
	Cash                   string                 `protobuf:"bytes,3,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorBonus          string                 `protobuf:"bytes,4,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	ProviderBonus          string                 `protobuf:"bytes,5,opt,name=provider_bonus,json=providerBonus,proto3" json:"provider_bonus,omitempty"`
	CashAmount             string                 `protobuf:"bytes,6,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	OperatorBonusAmount    string                 `protobuf:"bytes,7,opt,name=operator_bonus_amount,json=operatorBonusAmount,proto3" json:"operator_bonus_amount,omitempty"`
	ProviderBonusAmount    string                 `protobuf:"bytes,8,opt,name=provider_bonus_amount,json=providerBonusAmount,proto3" json:"provider_bonus_amount,omitempty"`
	CashAmountUsd          string                 `protobuf:"bytes,9,opt,name=cash_amount_usd,json=cashAmountUsd,proto3" json:"cash_amount_usd,omitempty"`
	OperatorBonusAmountUsd string                 `protobuf:"bytes,10,opt,name=operator_bonus_amount_usd,json=operatorBonusAmountUsd,proto3" json:"operator_bonus_amount_usd,omitempty"`
	ProviderBonusAmountUsd string                 `protobuf:"bytes,11,opt,name=provider_bonus_amount_usd,json=providerBonusAmountUsd,proto3" json:"provider_bonus_amount_usd,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GameDebitResponse) Reset() {
	*x = GameDebitResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameDebitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameDebitResponse) ProtoMessage() {}

func (x *GameDebitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameDebitResponse.ProtoReflect.Descriptor instead.
func (*GameDebitResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *GameDebitResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *GameDebitResponse) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *GameDebitResponse) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GameDebitResponse) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

func (x *GameDebitResponse) GetProviderBonus() string {
	if x != nil {
		return x.ProviderBonus
	}
	return ""
}

func (x *GameDebitResponse) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

func (x *GameDebitResponse) GetOperatorBonusAmount() string {
	if x != nil {
		return x.OperatorBonusAmount
	}
	return ""
}

func (x *GameDebitResponse) GetProviderBonusAmount() string {
	if x != nil {
		return x.ProviderBonusAmount
	}
	return ""
}

func (x *GameDebitResponse) GetCashAmountUsd() string {
	if x != nil {
		return x.CashAmountUsd
	}
	return ""
}

func (x *GameDebitResponse) GetOperatorBonusAmountUsd() string {
	if x != nil {
		return x.OperatorBonusAmountUsd
	}
	return ""
}

func (x *GameDebitResponse) GetProviderBonusAmountUsd() string {
	if x != nil {
		return x.ProviderBonusAmountUsd
	}
	return ""
}

type GameCreditRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	UserId                int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency              string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	SettlementCurrency    string                 `protobuf:"bytes,3,opt,name=settlement_currency,json=settlementCurrency,proto3" json:"settlement_currency,omitempty"`
	ExchangeRate          string                 `protobuf:"bytes,4,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`
	TransactionType       string                 `protobuf:"bytes,5,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId         int64                  `protobuf:"varint,6,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	OriginalTransactionId int64                  `protobuf:"varint,7,opt,name=original_transaction_id,json=originalTransactionId,proto3" json:"original_transaction_id,omitempty"`
	Amount                string                 `protobuf:"bytes,8,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GameCreditRequest) Reset() {
	*x = GameCreditRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameCreditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCreditRequest) ProtoMessage() {}

func (x *GameCreditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCreditRequest.ProtoReflect.Descriptor instead.
func (*GameCreditRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{10}
}

func (x *GameCreditRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GameCreditRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GameCreditRequest) GetSettlementCurrency() string {
	if x != nil {
		return x.SettlementCurrency
	}
	return ""
}

func (x *GameCreditRequest) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *GameCreditRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *GameCreditRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *GameCreditRequest) GetOriginalTransactionId() int64 {
	if x != nil {
		return x.OriginalTransactionId
	}
	return 0
}

func (x *GameCreditRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GameCreditResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	TransactionId          int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	ExchangeRate           string                 `protobuf:"bytes,2,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`
	Cash                   string                 `protobuf:"bytes,3,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorBonus          string                 `protobuf:"bytes,4,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	ProviderBonus          string                 `protobuf:"bytes,5,opt,name=provider_bonus,json=providerBonus,proto3" json:"provider_bonus,omitempty"`
	CashAmount             string                 `protobuf:"bytes,6,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	OperatorBonusAmount    string                 `protobuf:"bytes,7,opt,name=operator_bonus_amount,json=operatorBonusAmount,proto3" json:"operator_bonus_amount,omitempty"`
	ProviderBonusAmount    string                 `protobuf:"bytes,8,opt,name=provider_bonus_amount,json=providerBonusAmount,proto3" json:"provider_bonus_amount,omitempty"`
	CashAmountUsd          string                 `protobuf:"bytes,9,opt,name=cash_amount_usd,json=cashAmountUsd,proto3" json:"cash_amount_usd,omitempty"`
	OperatorBonusAmountUsd string                 `protobuf:"bytes,10,opt,name=operator_bonus_amount_usd,json=operatorBonusAmountUsd,proto3" json:"operator_bonus_amount_usd,omitempty"`
	ProviderBonusAmountUsd string                 `protobuf:"bytes,11,opt,name=provider_bonus_amount_usd,json=providerBonusAmountUsd,proto3" json:"provider_bonus_amount_usd,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GameCreditResponse) Reset() {
	*x = GameCreditResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameCreditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCreditResponse) ProtoMessage() {}

func (x *GameCreditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCreditResponse.ProtoReflect.Descriptor instead.
func (*GameCreditResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *GameCreditResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *GameCreditResponse) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *GameCreditResponse) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GameCreditResponse) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

func (x *GameCreditResponse) GetProviderBonus() string {
	if x != nil {
		return x.ProviderBonus
	}
	return ""
}

func (x *GameCreditResponse) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

func (x *GameCreditResponse) GetOperatorBonusAmount() string {
	if x != nil {
		return x.OperatorBonusAmount
	}
	return ""
}

func (x *GameCreditResponse) GetProviderBonusAmount() string {
	if x != nil {
		return x.ProviderBonusAmount
	}
	return ""
}

func (x *GameCreditResponse) GetCashAmountUsd() string {
	if x != nil {
		return x.CashAmountUsd
	}
	return ""
}

func (x *GameCreditResponse) GetOperatorBonusAmountUsd() string {
	if x != nil {
		return x.OperatorBonusAmountUsd
	}
	return ""
}

func (x *GameCreditResponse) GetProviderBonusAmountUsd() string {
	if x != nil {
		return x.ProviderBonusAmountUsd
	}
	return ""
}

type FreezeRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	UserId   int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	// Valid freeze transaction types:
	//   - "payment_withdraw_freeze"   - Payment withdraw freeze transaction
	TransactionType string `protobuf:"bytes,3,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId   int64  `protobuf:"varint,4,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash            string `protobuf:"bytes,5,opt,name=cash,proto3" json:"cash,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FreezeRequest) Reset() {
	*x = FreezeRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreezeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeRequest) ProtoMessage() {}

func (x *FreezeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeRequest.ProtoReflect.Descriptor instead.
func (*FreezeRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{12}
}

func (x *FreezeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FreezeRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FreezeRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *FreezeRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *FreezeRequest) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

type FreezeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreezeResponse) Reset() {
	*x = FreezeResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreezeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreezeResponse) ProtoMessage() {}

func (x *FreezeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreezeResponse.ProtoReflect.Descriptor instead.
func (*FreezeResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{13}
}

func (x *FreezeResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

type SettleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Valid settle transaction types:
	//   - "payment_withdraw_settle"   - Payment withdraw settle transaction
	TransactionType       string `protobuf:"bytes,1,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId         int64  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	OriginalTransactionId int64  `protobuf:"varint,3,opt,name=original_transaction_id,json=originalTransactionId,proto3" json:"original_transaction_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *SettleRequest) Reset() {
	*x = SettleRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleRequest) ProtoMessage() {}

func (x *SettleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleRequest.ProtoReflect.Descriptor instead.
func (*SettleRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{14}
}

func (x *SettleRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *SettleRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *SettleRequest) GetOriginalTransactionId() int64 {
	if x != nil {
		return x.OriginalTransactionId
	}
	return 0
}

type SettleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettleResponse) Reset() {
	*x = SettleResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettleResponse) ProtoMessage() {}

func (x *SettleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettleResponse.ProtoReflect.Descriptor instead.
func (*SettleResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{15}
}

func (x *SettleResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

type RollbackRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Valid rollback transaction types:
	//   - "game_bet_rollback"            - Game bet transaction rollback
	//   - "game_win_rollback"            - Game win transaction rollback
	//   - "payment_withdraw_rollback" - Payment withdraw transaction rollback
	TransactionType       string `protobuf:"bytes,1,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransactionId         int64  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	OriginalTransactionId int64  `protobuf:"varint,3,opt,name=original_transaction_id,json=originalTransactionId,proto3" json:"original_transaction_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RollbackRequest) Reset() {
	*x = RollbackRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackRequest) ProtoMessage() {}

func (x *RollbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackRequest.ProtoReflect.Descriptor instead.
func (*RollbackRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{16}
}

func (x *RollbackRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *RollbackRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *RollbackRequest) GetOriginalTransactionId() int64 {
	if x != nil {
		return x.OriginalTransactionId
	}
	return 0
}

type RollbackResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	TransactionId          int64                  `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash                   string                 `protobuf:"bytes,2,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorBonus          string                 `protobuf:"bytes,3,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	ProviderBonus          string                 `protobuf:"bytes,4,opt,name=provider_bonus,json=providerBonus,proto3" json:"provider_bonus,omitempty"`
	CashAmount             string                 `protobuf:"bytes,5,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	OperatorBonusAmount    string                 `protobuf:"bytes,6,opt,name=operator_bonus_amount,json=operatorBonusAmount,proto3" json:"operator_bonus_amount,omitempty"`
	ProviderBonusAmount    string                 `protobuf:"bytes,7,opt,name=provider_bonus_amount,json=providerBonusAmount,proto3" json:"provider_bonus_amount,omitempty"`
	CashAmountUsd          string                 `protobuf:"bytes,8,opt,name=cash_amount_usd,json=cashAmountUsd,proto3" json:"cash_amount_usd,omitempty"`
	OperatorBonusAmountUsd string                 `protobuf:"bytes,9,opt,name=operator_bonus_amount_usd,json=operatorBonusAmountUsd,proto3" json:"operator_bonus_amount_usd,omitempty"`
	ProviderBonusAmountUsd string                 `protobuf:"bytes,10,opt,name=provider_bonus_amount_usd,json=providerBonusAmountUsd,proto3" json:"provider_bonus_amount_usd,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RollbackResponse) Reset() {
	*x = RollbackResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RollbackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollbackResponse) ProtoMessage() {}

func (x *RollbackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollbackResponse.ProtoReflect.Descriptor instead.
func (*RollbackResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{17}
}

func (x *RollbackResponse) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *RollbackResponse) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *RollbackResponse) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

func (x *RollbackResponse) GetProviderBonus() string {
	if x != nil {
		return x.ProviderBonus
	}
	return ""
}

func (x *RollbackResponse) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

func (x *RollbackResponse) GetOperatorBonusAmount() string {
	if x != nil {
		return x.OperatorBonusAmount
	}
	return ""
}

func (x *RollbackResponse) GetProviderBonusAmount() string {
	if x != nil {
		return x.ProviderBonusAmount
	}
	return ""
}

func (x *RollbackResponse) GetCashAmountUsd() string {
	if x != nil {
		return x.CashAmountUsd
	}
	return ""
}

func (x *RollbackResponse) GetOperatorBonusAmountUsd() string {
	if x != nil {
		return x.OperatorBonusAmountUsd
	}
	return ""
}

func (x *RollbackResponse) GetProviderBonusAmountUsd() string {
	if x != nil {
		return x.ProviderBonusAmountUsd
	}
	return ""
}

type GetWalletsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currencies    []string               `protobuf:"bytes,2,rep,name=currencies,proto3" json:"currencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletsRequest) Reset() {
	*x = GetWalletsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletsRequest) ProtoMessage() {}

func (x *GetWalletsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletsRequest.ProtoReflect.Descriptor instead.
func (*GetWalletsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{18}
}

func (x *GetWalletsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetWalletsRequest) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type GetWalletsResponse struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	TotalAssets   *GetWalletsResponse_TotalAssets `protobuf:"bytes,1,opt,name=total_assets,json=totalAssets,proto3" json:"total_assets,omitempty"`
	Wallets       []*GetWalletsResponse_Wallet    `protobuf:"bytes,2,rep,name=wallets,proto3" json:"wallets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletsResponse) Reset() {
	*x = GetWalletsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletsResponse) ProtoMessage() {}

func (x *GetWalletsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletsResponse.ProtoReflect.Descriptor instead.
func (*GetWalletsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{19}
}

func (x *GetWalletsResponse) GetTotalAssets() *GetWalletsResponse_TotalAssets {
	if x != nil {
		return x.TotalAssets
	}
	return nil
}

func (x *GetWalletsResponse) GetWallets() []*GetWalletsResponse_Wallet {
	if x != nil {
		return x.Wallets
	}
	return nil
}

type ListWalletBalanceTransactionsRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	UserId int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Transaction types for different operations
	// Expected values:
	// Credit operations:
	//   - "payment_deposit"    - Payment deposit transaction
	//   - "game_win"          - Game win transaction
	//
	// Debit operations:
	//   - "payment_withdraw"   - Payment withdraw transaction
	//   - "game_bet"          - Game bet transaction
	//   - "payment_withdraw_freeze" - Payment withdraw freeze transaction
	//
	// Settlement operations:
	//   - "payment_withdraw_settle" - Payment withdraw settlement
	//
	// Rollback operations:
	//   - "game_bet_rollback"            - Game bet transaction rollback
	//   - "game_win_rollback"            - Game win transaction rollback
	//   - "payment_withdraw_rollback" - Payment withdraw transaction rollback
	TransactionType *string                `protobuf:"bytes,2,opt,name=transaction_type,json=transactionType,proto3,oneof" json:"transaction_type,omitempty"`
	Currency        *string                `protobuf:"bytes,3,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	StartTime       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	EndTime         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	Page            *int32                 `protobuf:"varint,6,opt,name=page,proto3,oneof" json:"page,omitempty"`
	PageSize        *int32                 `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListWalletBalanceTransactionsRequest) Reset() {
	*x = ListWalletBalanceTransactionsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWalletBalanceTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWalletBalanceTransactionsRequest) ProtoMessage() {}

func (x *ListWalletBalanceTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWalletBalanceTransactionsRequest.ProtoReflect.Descriptor instead.
func (*ListWalletBalanceTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{20}
}

func (x *ListWalletBalanceTransactionsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListWalletBalanceTransactionsRequest) GetTransactionType() string {
	if x != nil && x.TransactionType != nil {
		return *x.TransactionType
	}
	return ""
}

func (x *ListWalletBalanceTransactionsRequest) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *ListWalletBalanceTransactionsRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ListWalletBalanceTransactionsRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ListWalletBalanceTransactionsRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListWalletBalanceTransactionsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type ListWalletBalanceTransactionsResponse struct {
	state               protoimpl.MessageState                                      `protogen:"open.v1"`
	BalanceTransactions []*ListWalletBalanceTransactionsResponse_BalanceTransaction `protobuf:"bytes,1,rep,name=balance_transactions,json=balanceTransactions,proto3" json:"balance_transactions,omitempty"`
	Total               int32                                                       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page                int32                                                       `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize            int32                                                       `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ListWalletBalanceTransactionsResponse) Reset() {
	*x = ListWalletBalanceTransactionsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWalletBalanceTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWalletBalanceTransactionsResponse) ProtoMessage() {}

func (x *ListWalletBalanceTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWalletBalanceTransactionsResponse.ProtoReflect.Descriptor instead.
func (*ListWalletBalanceTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{21}
}

func (x *ListWalletBalanceTransactionsResponse) GetBalanceTransactions() []*ListWalletBalanceTransactionsResponse_BalanceTransaction {
	if x != nil {
		return x.BalanceTransactions
	}
	return nil
}

func (x *ListWalletBalanceTransactionsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListWalletBalanceTransactionsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListWalletBalanceTransactionsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetWalletBalanceTransactionsByIdsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TransactionIds []int64                `protobuf:"varint,1,rep,packed,name=transaction_ids,json=transactionIds,proto3" json:"transaction_ids,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetWalletBalanceTransactionsByIdsRequest) Reset() {
	*x = GetWalletBalanceTransactionsByIdsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletBalanceTransactionsByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceTransactionsByIdsRequest) ProtoMessage() {}

func (x *GetWalletBalanceTransactionsByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceTransactionsByIdsRequest.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceTransactionsByIdsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{22}
}

func (x *GetWalletBalanceTransactionsByIdsRequest) GetTransactionIds() []int64 {
	if x != nil {
		return x.TransactionIds
	}
	return nil
}

type GetWalletBalanceTransactionsByIdsResponse struct {
	state               protoimpl.MessageState                                          `protogen:"open.v1"`
	BalanceTransactions []*GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction `protobuf:"bytes,1,rep,name=balance_transactions,json=balanceTransactions,proto3" json:"balance_transactions,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetWalletBalanceTransactionsByIdsResponse) Reset() {
	*x = GetWalletBalanceTransactionsByIdsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletBalanceTransactionsByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceTransactionsByIdsResponse) ProtoMessage() {}

func (x *GetWalletBalanceTransactionsByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceTransactionsByIdsResponse.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceTransactionsByIdsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{23}
}

func (x *GetWalletBalanceTransactionsByIdsResponse) GetBalanceTransactions() []*GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction {
	if x != nil {
		return x.BalanceTransactions
	}
	return nil
}

type GetWalletCreditTransactionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreditId      int64                  `protobuf:"varint,1,opt,name=credit_id,json=creditId,proto3" json:"credit_id,omitempty"`
	Page          *int64                 `protobuf:"varint,2,opt,name=page,proto3,oneof" json:"page,omitempty"`
	PageSize      *int64                 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletCreditTransactionsRequest) Reset() {
	*x = GetWalletCreditTransactionsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletCreditTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletCreditTransactionsRequest) ProtoMessage() {}

func (x *GetWalletCreditTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletCreditTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetWalletCreditTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{24}
}

func (x *GetWalletCreditTransactionsRequest) GetCreditId() int64 {
	if x != nil {
		return x.CreditId
	}
	return 0
}

func (x *GetWalletCreditTransactionsRequest) GetPage() int64 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *GetWalletCreditTransactionsRequest) GetPageSize() int64 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

type GetWalletCreditTransactionsResponse struct {
	state              protoimpl.MessageState                                   `protogen:"open.v1"`
	CreditTransactions []*GetWalletCreditTransactionsResponse_CreditTransaction `protobuf:"bytes,1,rep,name=credit_transactions,json=creditTransactions,proto3" json:"credit_transactions,omitempty"`
	Page               int64                                                    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize           int64                                                    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Total              int64                                                    `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetWalletCreditTransactionsResponse) Reset() {
	*x = GetWalletCreditTransactionsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletCreditTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletCreditTransactionsResponse) ProtoMessage() {}

func (x *GetWalletCreditTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletCreditTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetWalletCreditTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{25}
}

func (x *GetWalletCreditTransactionsResponse) GetCreditTransactions() []*GetWalletCreditTransactionsResponse_CreditTransaction {
	if x != nil {
		return x.CreditTransactions
	}
	return nil
}

func (x *GetWalletCreditTransactionsResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetWalletCreditTransactionsResponse) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetWalletCreditTransactionsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetExchangeRatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    []string               `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExchangeRatesRequest) Reset() {
	*x = GetExchangeRatesRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExchangeRatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangeRatesRequest) ProtoMessage() {}

func (x *GetExchangeRatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangeRatesRequest.ProtoReflect.Descriptor instead.
func (*GetExchangeRatesRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{26}
}

func (x *GetExchangeRatesRequest) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type GetExchangeRatesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// map key is source currency, value is target currency rate
	ExchangeRates map[string]string `protobuf:"bytes,1,rep,name=exchange_rates,json=exchangeRates,proto3" json:"exchange_rates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExchangeRatesResponse) Reset() {
	*x = GetExchangeRatesResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExchangeRatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExchangeRatesResponse) ProtoMessage() {}

func (x *GetExchangeRatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExchangeRatesResponse.ProtoReflect.Descriptor instead.
func (*GetExchangeRatesResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{27}
}

func (x *GetExchangeRatesResponse) GetExchangeRates() map[string]string {
	if x != nil {
		return x.ExchangeRates
	}
	return nil
}

type GetUserTransactionSummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency      *string                `protobuf:"bytes,2,opt,name=currency,proto3,oneof" json:"currency,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserTransactionSummaryRequest) Reset() {
	*x = GetUserTransactionSummaryRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTransactionSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTransactionSummaryRequest) ProtoMessage() {}

func (x *GetUserTransactionSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTransactionSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetUserTransactionSummaryRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserTransactionSummaryRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserTransactionSummaryRequest) GetCurrency() string {
	if x != nil && x.Currency != nil {
		return *x.Currency
	}
	return ""
}

func (x *GetUserTransactionSummaryRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetUserTransactionSummaryRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetUserTransactionSummaryResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Currency             string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	TotalDeposit         string                 `protobuf:"bytes,2,opt,name=total_deposit,json=totalDeposit,proto3" json:"total_deposit,omitempty"`
	TotalWithdraw        string                 `protobuf:"bytes,3,opt,name=total_withdraw,json=totalWithdraw,proto3" json:"total_withdraw,omitempty"`
	DepositMinusWithdraw string                 `protobuf:"bytes,4,opt,name=deposit_minus_withdraw,json=depositMinusWithdraw,proto3" json:"deposit_minus_withdraw,omitempty"`
	TotalValidBet        string                 `protobuf:"bytes,5,opt,name=total_valid_bet,json=totalValidBet,proto3" json:"total_valid_bet,omitempty"`
	TotalDepositCount    int32                  `protobuf:"varint,6,opt,name=total_deposit_count,json=totalDepositCount,proto3" json:"total_deposit_count,omitempty"`
	TotalWithdrawCount   int32                  `protobuf:"varint,7,opt,name=total_withdraw_count,json=totalWithdrawCount,proto3" json:"total_withdraw_count,omitempty"`
	TodayWithdrawCount   int32                  `protobuf:"varint,8,opt,name=today_withdraw_count,json=todayWithdrawCount,proto3" json:"today_withdraw_count,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetUserTransactionSummaryResponse) Reset() {
	*x = GetUserTransactionSummaryResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTransactionSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTransactionSummaryResponse) ProtoMessage() {}

func (x *GetUserTransactionSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTransactionSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetUserTransactionSummaryResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{29}
}

func (x *GetUserTransactionSummaryResponse) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetUserTransactionSummaryResponse) GetTotalDeposit() string {
	if x != nil {
		return x.TotalDeposit
	}
	return ""
}

func (x *GetUserTransactionSummaryResponse) GetTotalWithdraw() string {
	if x != nil {
		return x.TotalWithdraw
	}
	return ""
}

func (x *GetUserTransactionSummaryResponse) GetDepositMinusWithdraw() string {
	if x != nil {
		return x.DepositMinusWithdraw
	}
	return ""
}

func (x *GetUserTransactionSummaryResponse) GetTotalValidBet() string {
	if x != nil {
		return x.TotalValidBet
	}
	return ""
}

func (x *GetUserTransactionSummaryResponse) GetTotalDepositCount() int32 {
	if x != nil {
		return x.TotalDepositCount
	}
	return 0
}

func (x *GetUserTransactionSummaryResponse) GetTotalWithdrawCount() int32 {
	if x != nil {
		return x.TotalWithdrawCount
	}
	return 0
}

func (x *GetUserTransactionSummaryResponse) GetTodayWithdrawCount() int32 {
	if x != nil {
		return x.TodayWithdrawCount
	}
	return 0
}

type GetBackofficeUserOverviewFromWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3,oneof" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3,oneof" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBackofficeUserOverviewFromWalletRequest) Reset() {
	*x = GetBackofficeUserOverviewFromWalletRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackofficeUserOverviewFromWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackofficeUserOverviewFromWalletRequest) ProtoMessage() {}

func (x *GetBackofficeUserOverviewFromWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackofficeUserOverviewFromWalletRequest.ProtoReflect.Descriptor instead.
func (*GetBackofficeUserOverviewFromWalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{30}
}

func (x *GetBackofficeUserOverviewFromWalletRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetBackofficeUserOverviewFromWalletRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetBackofficeUserOverviewFromWalletRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetBackofficeUserOverviewFromWalletResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Balance                string                 `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	DepositMinusWithdraw   string                 `protobuf:"bytes,2,opt,name=deposit_minus_withdraw,json=depositMinusWithdraw,proto3" json:"deposit_minus_withdraw,omitempty"`
	Turnover               string                 `protobuf:"bytes,3,opt,name=turnover,proto3" json:"turnover,omitempty"`
	CashTurnover           string                 `protobuf:"bytes,4,opt,name=cash_turnover,json=cashTurnover,proto3" json:"cash_turnover,omitempty"`
	BonusTurnover          string                 `protobuf:"bytes,5,opt,name=bonus_turnover,json=bonusTurnover,proto3" json:"bonus_turnover,omitempty"`
	Deposit                string                 `protobuf:"bytes,6,opt,name=deposit,proto3" json:"deposit,omitempty"`
	LastDeposit            string                 `protobuf:"bytes,7,opt,name=last_deposit,json=lastDeposit,proto3" json:"last_deposit,omitempty"`
	DepositCount           int32                  `protobuf:"varint,8,opt,name=deposit_count,json=depositCount,proto3" json:"deposit_count,omitempty"`
	Withdraw               string                 `protobuf:"bytes,9,opt,name=withdraw,proto3" json:"withdraw,omitempty"`
	LastWithdraw           string                 `protobuf:"bytes,10,opt,name=last_withdraw,json=lastWithdraw,proto3" json:"last_withdraw,omitempty"`
	WithdrawCount          int32                  `protobuf:"varint,11,opt,name=withdraw_count,json=withdrawCount,proto3" json:"withdraw_count,omitempty"`
	Bonus                  string                 `protobuf:"bytes,12,opt,name=bonus,proto3" json:"bonus,omitempty"`                                      // Not available for now, only return 0
	ValidTurnover          string                 `protobuf:"bytes,13,opt,name=valid_turnover,json=validTurnover,proto3" json:"valid_turnover,omitempty"` // Not available for now, only return 0
	AverageBetAmount       string                 `protobuf:"bytes,14,opt,name=average_bet_amount,json=averageBetAmount,proto3" json:"average_bet_amount,omitempty"`
	Ggr                    string                 `protobuf:"bytes,15,opt,name=ggr,proto3" json:"ggr,omitempty"`
	GgrPercentage          string                 `protobuf:"bytes,16,opt,name=ggr_percentage,json=ggrPercentage,proto3" json:"ggr_percentage,omitempty"`                        // Round to 2 decimal places
	ManuallyAddedBalance   string                 `protobuf:"bytes,17,opt,name=manually_added_balance,json=manuallyAddedBalance,proto3" json:"manually_added_balance,omitempty"` // Not available for now, only return 0
	BonusClaimed           string                 `protobuf:"bytes,18,opt,name=bonus_claimed,json=bonusClaimed,proto3" json:"bonus_claimed,omitempty"`                           // Not available for now, only return 0
	Ngr                    string                 `protobuf:"bytes,19,opt,name=ngr,proto3" json:"ngr,omitempty"`
	GgrToNgrPercentage     string                 `protobuf:"bytes,20,opt,name=ggr_to_ngr_percentage,json=ggrToNgrPercentage,proto3" json:"ggr_to_ngr_percentage,omitempty"`             // Round to 2 decimal places
	TurnoverMultiplier     string                 `protobuf:"bytes,21,opt,name=turnover_multiplier,json=turnoverMultiplier,proto3" json:"turnover_multiplier,omitempty"`                 // Round to 2 decimal places
	DepositToWithdrawRatio string                 `protobuf:"bytes,22,opt,name=deposit_to_withdraw_ratio,json=depositToWithdrawRatio,proto3" json:"deposit_to_withdraw_ratio,omitempty"` // Round to 2 decimal places
	Rtp                    string                 `protobuf:"bytes,23,opt,name=rtp,proto3" json:"rtp,omitempty"`                                                                         // Round to 2 decimal places
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetBackofficeUserOverviewFromWalletResponse) Reset() {
	*x = GetBackofficeUserOverviewFromWalletResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBackofficeUserOverviewFromWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBackofficeUserOverviewFromWalletResponse) ProtoMessage() {}

func (x *GetBackofficeUserOverviewFromWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBackofficeUserOverviewFromWalletResponse.ProtoReflect.Descriptor instead.
func (*GetBackofficeUserOverviewFromWalletResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{31}
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetDepositMinusWithdraw() string {
	if x != nil {
		return x.DepositMinusWithdraw
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetTurnover() string {
	if x != nil {
		return x.Turnover
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetCashTurnover() string {
	if x != nil {
		return x.CashTurnover
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetBonusTurnover() string {
	if x != nil {
		return x.BonusTurnover
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetDeposit() string {
	if x != nil {
		return x.Deposit
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetLastDeposit() string {
	if x != nil {
		return x.LastDeposit
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetDepositCount() int32 {
	if x != nil {
		return x.DepositCount
	}
	return 0
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetWithdraw() string {
	if x != nil {
		return x.Withdraw
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetLastWithdraw() string {
	if x != nil {
		return x.LastWithdraw
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetWithdrawCount() int32 {
	if x != nil {
		return x.WithdrawCount
	}
	return 0
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetBonus() string {
	if x != nil {
		return x.Bonus
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetValidTurnover() string {
	if x != nil {
		return x.ValidTurnover
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetAverageBetAmount() string {
	if x != nil {
		return x.AverageBetAmount
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetGgr() string {
	if x != nil {
		return x.Ggr
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetGgrPercentage() string {
	if x != nil {
		return x.GgrPercentage
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetManuallyAddedBalance() string {
	if x != nil {
		return x.ManuallyAddedBalance
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetBonusClaimed() string {
	if x != nil {
		return x.BonusClaimed
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetNgr() string {
	if x != nil {
		return x.Ngr
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetGgrToNgrPercentage() string {
	if x != nil {
		return x.GgrToNgrPercentage
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetTurnoverMultiplier() string {
	if x != nil {
		return x.TurnoverMultiplier
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetDepositToWithdrawRatio() string {
	if x != nil {
		return x.DepositToWithdrawRatio
	}
	return ""
}

func (x *GetBackofficeUserOverviewFromWalletResponse) GetRtp() string {
	if x != nil {
		return x.Rtp
	}
	return ""
}

type GetOverviewDashboardFromWalletRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletRequest) Reset() {
	*x = GetOverviewDashboardFromWalletRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletRequest) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletRequest.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{32}
}

type GetOverviewDashboardFromWalletResponse struct {
	state                protoimpl.MessageState                                       `protogen:"open.v1"`
	Ggr                  *GetOverviewDashboardFromWalletResponse_GGR                  `protobuf:"bytes,1,opt,name=ggr,proto3" json:"ggr,omitempty"`
	Ngr                  *GetOverviewDashboardFromWalletResponse_NGR                  `protobuf:"bytes,2,opt,name=ngr,proto3" json:"ngr,omitempty"`
	Deposit              *GetOverviewDashboardFromWalletResponse_Deposit              `protobuf:"bytes,3,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Withdraw             *GetOverviewDashboardFromWalletResponse_Withdraw             `protobuf:"bytes,4,opt,name=withdraw,proto3" json:"withdraw,omitempty"`
	DepositMinusWithdraw *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw `protobuf:"bytes,5,opt,name=deposit_minus_withdraw,json=depositMinusWithdraw,proto3" json:"deposit_minus_withdraw,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletResponse) Reset() {
	*x = GetOverviewDashboardFromWalletResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletResponse) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletResponse.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{33}
}

func (x *GetOverviewDashboardFromWalletResponse) GetGgr() *GetOverviewDashboardFromWalletResponse_GGR {
	if x != nil {
		return x.Ggr
	}
	return nil
}

func (x *GetOverviewDashboardFromWalletResponse) GetNgr() *GetOverviewDashboardFromWalletResponse_NGR {
	if x != nil {
		return x.Ngr
	}
	return nil
}

func (x *GetOverviewDashboardFromWalletResponse) GetDeposit() *GetOverviewDashboardFromWalletResponse_Deposit {
	if x != nil {
		return x.Deposit
	}
	return nil
}

func (x *GetOverviewDashboardFromWalletResponse) GetWithdraw() *GetOverviewDashboardFromWalletResponse_Withdraw {
	if x != nil {
		return x.Withdraw
	}
	return nil
}

func (x *GetOverviewDashboardFromWalletResponse) GetDepositMinusWithdraw() *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw {
	if x != nil {
		return x.DepositMinusWithdraw
	}
	return nil
}

type Currency struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Enabled       bool                   `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Hidden        bool                   `protobuf:"varint,3,opt,name=hidden,proto3" json:"hidden,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Symbol        string                 `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Icon          string                 `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon,omitempty"`
	DecimalPlaces int32                  `protobuf:"varint,7,opt,name=decimal_places,json=decimalPlaces,proto3" json:"decimal_places,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Currency) Reset() {
	*x = Currency{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Currency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Currency) ProtoMessage() {}

func (x *Currency) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Currency.ProtoReflect.Descriptor instead.
func (*Currency) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{34}
}

func (x *Currency) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Currency) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Currency) GetHidden() bool {
	if x != nil {
		return x.Hidden
	}
	return false
}

func (x *Currency) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Currency) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Currency) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Currency) GetDecimalPlaces() int32 {
	if x != nil {
		return x.DecimalPlaces
	}
	return 0
}

type AddCurrencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      *Currency              `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCurrencyRequest) Reset() {
	*x = AddCurrencyRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCurrencyRequest) ProtoMessage() {}

func (x *AddCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCurrencyRequest.ProtoReflect.Descriptor instead.
func (*AddCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{35}
}

func (x *AddCurrencyRequest) GetCurrency() *Currency {
	if x != nil {
		return x.Currency
	}
	return nil
}

type AddCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddCurrencyResponse) Reset() {
	*x = AddCurrencyResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCurrencyResponse) ProtoMessage() {}

func (x *AddCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCurrencyResponse.ProtoReflect.Descriptor instead.
func (*AddCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{36}
}

type UpdateCurrencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Enabled       *bool                  `protobuf:"varint,2,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	Hidden        *bool                  `protobuf:"varint,3,opt,name=hidden,proto3,oneof" json:"hidden,omitempty"`
	Type          *string                `protobuf:"bytes,4,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Symbol        *string                `protobuf:"bytes,5,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`
	Icon          *string                `protobuf:"bytes,6,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	DecimalPlaces *int32                 `protobuf:"varint,7,opt,name=decimal_places,json=decimalPlaces,proto3,oneof" json:"decimal_places,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCurrencyRequest) Reset() {
	*x = UpdateCurrencyRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCurrencyRequest) ProtoMessage() {}

func (x *UpdateCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCurrencyRequest.ProtoReflect.Descriptor instead.
func (*UpdateCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateCurrencyRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UpdateCurrencyRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *UpdateCurrencyRequest) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return false
}

func (x *UpdateCurrencyRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *UpdateCurrencyRequest) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *UpdateCurrencyRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *UpdateCurrencyRequest) GetDecimalPlaces() int32 {
	if x != nil && x.DecimalPlaces != nil {
		return *x.DecimalPlaces
	}
	return 0
}

type UpdateCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCurrencyResponse) Reset() {
	*x = UpdateCurrencyResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCurrencyResponse) ProtoMessage() {}

func (x *UpdateCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCurrencyResponse.ProtoReflect.Descriptor instead.
func (*UpdateCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{38}
}

type GetCurrenciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    []string               `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrenciesRequest) Reset() {
	*x = GetCurrenciesRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrenciesRequest) ProtoMessage() {}

func (x *GetCurrenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrenciesRequest.ProtoReflect.Descriptor instead.
func (*GetCurrenciesRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{39}
}

func (x *GetCurrenciesRequest) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type GetCurrenciesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    []*Currency            `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrenciesResponse) Reset() {
	*x = GetCurrenciesResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrenciesResponse) ProtoMessage() {}

func (x *GetCurrenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrenciesResponse.ProtoReflect.Descriptor instead.
func (*GetCurrenciesResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{40}
}

func (x *GetCurrenciesResponse) GetCurrencies() []*Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type ListCurrenciesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    []string               `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	Enabled       *bool                  `protobuf:"varint,2,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	Hidden        *bool                  `protobuf:"varint,3,opt,name=hidden,proto3,oneof" json:"hidden,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCurrenciesRequest) Reset() {
	*x = ListCurrenciesRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCurrenciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCurrenciesRequest) ProtoMessage() {}

func (x *ListCurrenciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCurrenciesRequest.ProtoReflect.Descriptor instead.
func (*ListCurrenciesRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{41}
}

func (x *ListCurrenciesRequest) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

func (x *ListCurrenciesRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *ListCurrenciesRequest) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return false
}

type ListCurrenciesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currencies    []*Currency            `protobuf:"bytes,1,rep,name=currencies,proto3" json:"currencies,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	TotalEnabled  int32                  `protobuf:"varint,3,opt,name=total_enabled,json=totalEnabled,proto3" json:"total_enabled,omitempty"`
	TotalHidden   int32                  `protobuf:"varint,4,opt,name=total_hidden,json=totalHidden,proto3" json:"total_hidden,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCurrenciesResponse) Reset() {
	*x = ListCurrenciesResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCurrenciesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCurrenciesResponse) ProtoMessage() {}

func (x *ListCurrenciesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCurrenciesResponse.ProtoReflect.Descriptor instead.
func (*ListCurrenciesResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{42}
}

func (x *ListCurrenciesResponse) GetCurrencies() []*Currency {
	if x != nil {
		return x.Currencies
	}
	return nil
}

func (x *ListCurrenciesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListCurrenciesResponse) GetTotalEnabled() int32 {
	if x != nil {
		return x.TotalEnabled
	}
	return 0
}

func (x *ListCurrenciesResponse) GetTotalHidden() int32 {
	if x != nil {
		return x.TotalHidden
	}
	return 0
}

type UpdateOperatorCurrencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperatorId    int64                  `protobuf:"varint,1,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Enabled       *bool                  `protobuf:"varint,3,opt,name=enabled,proto3,oneof" json:"enabled,omitempty"`
	Hidden        *bool                  `protobuf:"varint,4,opt,name=hidden,proto3,oneof" json:"hidden,omitempty"`
	Type          *string                `protobuf:"bytes,5,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Symbol        *string                `protobuf:"bytes,6,opt,name=symbol,proto3,oneof" json:"symbol,omitempty"`
	Icon          *string                `protobuf:"bytes,7,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	DecimalPlaces *int32                 `protobuf:"varint,8,opt,name=decimal_places,json=decimalPlaces,proto3,oneof" json:"decimal_places,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOperatorCurrencyRequest) Reset() {
	*x = UpdateOperatorCurrencyRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOperatorCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOperatorCurrencyRequest) ProtoMessage() {}

func (x *UpdateOperatorCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOperatorCurrencyRequest.ProtoReflect.Descriptor instead.
func (*UpdateOperatorCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateOperatorCurrencyRequest) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *UpdateOperatorCurrencyRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UpdateOperatorCurrencyRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

func (x *UpdateOperatorCurrencyRequest) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return false
}

func (x *UpdateOperatorCurrencyRequest) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *UpdateOperatorCurrencyRequest) GetSymbol() string {
	if x != nil && x.Symbol != nil {
		return *x.Symbol
	}
	return ""
}

func (x *UpdateOperatorCurrencyRequest) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *UpdateOperatorCurrencyRequest) GetDecimalPlaces() int32 {
	if x != nil && x.DecimalPlaces != nil {
		return *x.DecimalPlaces
	}
	return 0
}

type UpdateOperatorCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOperatorCurrencyResponse) Reset() {
	*x = UpdateOperatorCurrencyResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOperatorCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOperatorCurrencyResponse) ProtoMessage() {}

func (x *UpdateOperatorCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOperatorCurrencyResponse.ProtoReflect.Descriptor instead.
func (*UpdateOperatorCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{44}
}

type UpdateUserCurrencyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Enabled       bool                   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserCurrencyRequest) Reset() {
	*x = UpdateUserCurrencyRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserCurrencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserCurrencyRequest) ProtoMessage() {}

func (x *UpdateUserCurrencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserCurrencyRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserCurrencyRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateUserCurrencyRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserCurrencyRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UpdateUserCurrencyRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type UpdateUserCurrencyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserCurrencyResponse) Reset() {
	*x = UpdateUserCurrencyResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserCurrencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserCurrencyResponse) ProtoMessage() {}

func (x *UpdateUserCurrencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserCurrencyResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserCurrencyResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{46}
}

type AddResponsibleGamblingConfigRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Currency         string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	DepositLimit     *string                `protobuf:"bytes,2,opt,name=deposit_limit,json=depositLimit,proto3,oneof" json:"deposit_limit,omitempty"`
	WithdrawalLimit  *string                `protobuf:"bytes,3,opt,name=withdrawal_limit,json=withdrawalLimit,proto3,oneof" json:"withdrawal_limit,omitempty"`
	DailyPlayLimit   *string                `protobuf:"bytes,4,opt,name=daily_play_limit,json=dailyPlayLimit,proto3,oneof" json:"daily_play_limit,omitempty"`
	WeeklyPlayLimit  *string                `protobuf:"bytes,5,opt,name=weekly_play_limit,json=weeklyPlayLimit,proto3,oneof" json:"weekly_play_limit,omitempty"`
	MonthlyPlayLimit *string                `protobuf:"bytes,6,opt,name=monthly_play_limit,json=monthlyPlayLimit,proto3,oneof" json:"monthly_play_limit,omitempty"`
	DailyLossLimit   *string                `protobuf:"bytes,7,opt,name=daily_loss_limit,json=dailyLossLimit,proto3,oneof" json:"daily_loss_limit,omitempty"`
	WeeklyLossLimit  *string                `protobuf:"bytes,8,opt,name=weekly_loss_limit,json=weeklyLossLimit,proto3,oneof" json:"weekly_loss_limit,omitempty"`
	MonthlyLossLimit *string                `protobuf:"bytes,9,opt,name=monthly_loss_limit,json=monthlyLossLimit,proto3,oneof" json:"monthly_loss_limit,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AddResponsibleGamblingConfigRequest) Reset() {
	*x = AddResponsibleGamblingConfigRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddResponsibleGamblingConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResponsibleGamblingConfigRequest) ProtoMessage() {}

func (x *AddResponsibleGamblingConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResponsibleGamblingConfigRequest.ProtoReflect.Descriptor instead.
func (*AddResponsibleGamblingConfigRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{47}
}

func (x *AddResponsibleGamblingConfigRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetDepositLimit() string {
	if x != nil && x.DepositLimit != nil {
		return *x.DepositLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetWithdrawalLimit() string {
	if x != nil && x.WithdrawalLimit != nil {
		return *x.WithdrawalLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetDailyPlayLimit() string {
	if x != nil && x.DailyPlayLimit != nil {
		return *x.DailyPlayLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetWeeklyPlayLimit() string {
	if x != nil && x.WeeklyPlayLimit != nil {
		return *x.WeeklyPlayLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetMonthlyPlayLimit() string {
	if x != nil && x.MonthlyPlayLimit != nil {
		return *x.MonthlyPlayLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetDailyLossLimit() string {
	if x != nil && x.DailyLossLimit != nil {
		return *x.DailyLossLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetWeeklyLossLimit() string {
	if x != nil && x.WeeklyLossLimit != nil {
		return *x.WeeklyLossLimit
	}
	return ""
}

func (x *AddResponsibleGamblingConfigRequest) GetMonthlyLossLimit() string {
	if x != nil && x.MonthlyLossLimit != nil {
		return *x.MonthlyLossLimit
	}
	return ""
}

type AddResponsibleGamblingConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddResponsibleGamblingConfigResponse) Reset() {
	*x = AddResponsibleGamblingConfigResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddResponsibleGamblingConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddResponsibleGamblingConfigResponse) ProtoMessage() {}

func (x *AddResponsibleGamblingConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddResponsibleGamblingConfigResponse.ProtoReflect.Descriptor instead.
func (*AddResponsibleGamblingConfigResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{48}
}

type DeleteResponsibleGamblingConfigRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	TargetUserId *int64                 `protobuf:"varint,1,opt,name=target_user_id,json=targetUserId,proto3,oneof" json:"target_user_id,omitempty"`
	OperatorId   *int64                 `protobuf:"varint,2,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"`
	Currency     string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	// deposit_limit, withdrawal_limit, daily_play_limit, weekly_play_limit, monthly_play_limit
	// daily_loss_limit, weekly_loss_limit, monthly_loss_limit
	LimitType       string `protobuf:"bytes,4,opt,name=limit_type,json=limitType,proto3" json:"limit_type,omitempty"`
	InitiatorUserId *int64 `protobuf:"varint,5,opt,name=initiator_user_id,json=initiatorUserId,proto3,oneof" json:"initiator_user_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DeleteResponsibleGamblingConfigRequest) Reset() {
	*x = DeleteResponsibleGamblingConfigRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponsibleGamblingConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponsibleGamblingConfigRequest) ProtoMessage() {}

func (x *DeleteResponsibleGamblingConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponsibleGamblingConfigRequest.ProtoReflect.Descriptor instead.
func (*DeleteResponsibleGamblingConfigRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{49}
}

func (x *DeleteResponsibleGamblingConfigRequest) GetTargetUserId() int64 {
	if x != nil && x.TargetUserId != nil {
		return *x.TargetUserId
	}
	return 0
}

func (x *DeleteResponsibleGamblingConfigRequest) GetOperatorId() int64 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *DeleteResponsibleGamblingConfigRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *DeleteResponsibleGamblingConfigRequest) GetLimitType() string {
	if x != nil {
		return x.LimitType
	}
	return ""
}

func (x *DeleteResponsibleGamblingConfigRequest) GetInitiatorUserId() int64 {
	if x != nil && x.InitiatorUserId != nil {
		return *x.InitiatorUserId
	}
	return 0
}

type DeleteResponsibleGamblingConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponsibleGamblingConfigResponse) Reset() {
	*x = DeleteResponsibleGamblingConfigResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponsibleGamblingConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponsibleGamblingConfigResponse) ProtoMessage() {}

func (x *DeleteResponsibleGamblingConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponsibleGamblingConfigResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponsibleGamblingConfigResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{50}
}

type ResponsibleGamblingConfig struct {
	state                              protoimpl.MessageState `protogen:"open.v1"`
	Currency                           string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	DepositLimit                       string                 `protobuf:"bytes,2,opt,name=deposit_limit,json=depositLimit,proto3" json:"deposit_limit,omitempty"`
	WithdrawalLimit                    string                 `protobuf:"bytes,3,opt,name=withdrawal_limit,json=withdrawalLimit,proto3" json:"withdrawal_limit,omitempty"`
	DailyPlayLimit                     string                 `protobuf:"bytes,4,opt,name=daily_play_limit,json=dailyPlayLimit,proto3" json:"daily_play_limit,omitempty"`
	WeeklyPlayLimit                    string                 `protobuf:"bytes,5,opt,name=weekly_play_limit,json=weeklyPlayLimit,proto3" json:"weekly_play_limit,omitempty"`
	MonthlyPlayLimit                   string                 `protobuf:"bytes,6,opt,name=monthly_play_limit,json=monthlyPlayLimit,proto3" json:"monthly_play_limit,omitempty"`
	DailyLossLimit                     string                 `protobuf:"bytes,7,opt,name=daily_loss_limit,json=dailyLossLimit,proto3" json:"daily_loss_limit,omitempty"`
	WeeklyLossLimit                    string                 `protobuf:"bytes,8,opt,name=weekly_loss_limit,json=weeklyLossLimit,proto3" json:"weekly_loss_limit,omitempty"`
	MonthlyLossLimit                   string                 `protobuf:"bytes,9,opt,name=monthly_loss_limit,json=monthlyLossLimit,proto3" json:"monthly_loss_limit,omitempty"`
	DepositLimitDeleteScheduleTime     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=deposit_limit_delete_schedule_time,json=depositLimitDeleteScheduleTime,proto3" json:"deposit_limit_delete_schedule_time,omitempty"`
	WithdrawalLimitDeleteScheduleTime  *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=withdrawal_limit_delete_schedule_time,json=withdrawalLimitDeleteScheduleTime,proto3" json:"withdrawal_limit_delete_schedule_time,omitempty"`
	DailyPlayLimitDeleteScheduleTime   *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=daily_play_limit_delete_schedule_time,json=dailyPlayLimitDeleteScheduleTime,proto3" json:"daily_play_limit_delete_schedule_time,omitempty"`
	WeeklyPlayLimitDeleteScheduleTime  *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=weekly_play_limit_delete_schedule_time,json=weeklyPlayLimitDeleteScheduleTime,proto3" json:"weekly_play_limit_delete_schedule_time,omitempty"`
	MonthlyPlayLimitDeleteScheduleTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=monthly_play_limit_delete_schedule_time,json=monthlyPlayLimitDeleteScheduleTime,proto3" json:"monthly_play_limit_delete_schedule_time,omitempty"`
	DailyLossLimitDeleteScheduleTime   *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=daily_loss_limit_delete_schedule_time,json=dailyLossLimitDeleteScheduleTime,proto3" json:"daily_loss_limit_delete_schedule_time,omitempty"`
	WeeklyLossLimitDeleteScheduleTime  *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=weekly_loss_limit_delete_schedule_time,json=weeklyLossLimitDeleteScheduleTime,proto3" json:"weekly_loss_limit_delete_schedule_time,omitempty"`
	MonthlyLossLimitDeleteScheduleTime *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=monthly_loss_limit_delete_schedule_time,json=monthlyLossLimitDeleteScheduleTime,proto3" json:"monthly_loss_limit_delete_schedule_time,omitempty"`
	unknownFields                      protoimpl.UnknownFields
	sizeCache                          protoimpl.SizeCache
}

func (x *ResponsibleGamblingConfig) Reset() {
	*x = ResponsibleGamblingConfig{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponsibleGamblingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsibleGamblingConfig) ProtoMessage() {}

func (x *ResponsibleGamblingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsibleGamblingConfig.ProtoReflect.Descriptor instead.
func (*ResponsibleGamblingConfig) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{51}
}

func (x *ResponsibleGamblingConfig) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetDepositLimit() string {
	if x != nil {
		return x.DepositLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetWithdrawalLimit() string {
	if x != nil {
		return x.WithdrawalLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetDailyPlayLimit() string {
	if x != nil {
		return x.DailyPlayLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetWeeklyPlayLimit() string {
	if x != nil {
		return x.WeeklyPlayLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetMonthlyPlayLimit() string {
	if x != nil {
		return x.MonthlyPlayLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetDailyLossLimit() string {
	if x != nil {
		return x.DailyLossLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetWeeklyLossLimit() string {
	if x != nil {
		return x.WeeklyLossLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetMonthlyLossLimit() string {
	if x != nil {
		return x.MonthlyLossLimit
	}
	return ""
}

func (x *ResponsibleGamblingConfig) GetDepositLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DepositLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetWithdrawalLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.WithdrawalLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetDailyPlayLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DailyPlayLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetWeeklyPlayLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.WeeklyPlayLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetMonthlyPlayLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MonthlyPlayLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetDailyLossLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DailyLossLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetWeeklyLossLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.WeeklyLossLimitDeleteScheduleTime
	}
	return nil
}

func (x *ResponsibleGamblingConfig) GetMonthlyLossLimitDeleteScheduleTime() *timestamppb.Timestamp {
	if x != nil {
		return x.MonthlyLossLimitDeleteScheduleTime
	}
	return nil
}

type ResponsibleGamblingStatus struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Currency          string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	WithdrawalAllowed bool                   `protobuf:"varint,2,opt,name=withdrawal_allowed,json=withdrawalAllowed,proto3" json:"withdrawal_allowed,omitempty"`
	WithdrawalUsage   string                 `protobuf:"bytes,3,opt,name=withdrawal_usage,json=withdrawalUsage,proto3" json:"withdrawal_usage,omitempty"`
	DepositAllowed    bool                   `protobuf:"varint,4,opt,name=deposit_allowed,json=depositAllowed,proto3" json:"deposit_allowed,omitempty"`
	DepositUsage      string                 `protobuf:"bytes,5,opt,name=deposit_usage,json=depositUsage,proto3" json:"deposit_usage,omitempty"`
	GameBetAllowed    bool                   `protobuf:"varint,6,opt,name=game_bet_allowed,json=gameBetAllowed,proto3" json:"game_bet_allowed,omitempty"`
	DailyPlayUsage    string                 `protobuf:"bytes,7,opt,name=daily_play_usage,json=dailyPlayUsage,proto3" json:"daily_play_usage,omitempty"`
	WeeklyPlayUsage   string                 `protobuf:"bytes,8,opt,name=weekly_play_usage,json=weeklyPlayUsage,proto3" json:"weekly_play_usage,omitempty"`
	MonthlyPlayUsage  string                 `protobuf:"bytes,9,opt,name=monthly_play_usage,json=monthlyPlayUsage,proto3" json:"monthly_play_usage,omitempty"`
	DailyLossUsage    string                 `protobuf:"bytes,10,opt,name=daily_loss_usage,json=dailyLossUsage,proto3" json:"daily_loss_usage,omitempty"`
	WeeklyLossUsage   string                 `protobuf:"bytes,11,opt,name=weekly_loss_usage,json=weeklyLossUsage,proto3" json:"weekly_loss_usage,omitempty"`
	MonthlyLossUsage  string                 `protobuf:"bytes,12,opt,name=monthly_loss_usage,json=monthlyLossUsage,proto3" json:"monthly_loss_usage,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ResponsibleGamblingStatus) Reset() {
	*x = ResponsibleGamblingStatus{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponsibleGamblingStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsibleGamblingStatus) ProtoMessage() {}

func (x *ResponsibleGamblingStatus) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsibleGamblingStatus.ProtoReflect.Descriptor instead.
func (*ResponsibleGamblingStatus) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{52}
}

func (x *ResponsibleGamblingStatus) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetWithdrawalAllowed() bool {
	if x != nil {
		return x.WithdrawalAllowed
	}
	return false
}

func (x *ResponsibleGamblingStatus) GetWithdrawalUsage() string {
	if x != nil {
		return x.WithdrawalUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetDepositAllowed() bool {
	if x != nil {
		return x.DepositAllowed
	}
	return false
}

func (x *ResponsibleGamblingStatus) GetDepositUsage() string {
	if x != nil {
		return x.DepositUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetGameBetAllowed() bool {
	if x != nil {
		return x.GameBetAllowed
	}
	return false
}

func (x *ResponsibleGamblingStatus) GetDailyPlayUsage() string {
	if x != nil {
		return x.DailyPlayUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetWeeklyPlayUsage() string {
	if x != nil {
		return x.WeeklyPlayUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetMonthlyPlayUsage() string {
	if x != nil {
		return x.MonthlyPlayUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetDailyLossUsage() string {
	if x != nil {
		return x.DailyLossUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetWeeklyLossUsage() string {
	if x != nil {
		return x.WeeklyLossUsage
	}
	return ""
}

func (x *ResponsibleGamblingStatus) GetMonthlyLossUsage() string {
	if x != nil {
		return x.MonthlyLossUsage
	}
	return ""
}

type ListResponsibleGamblingConfigsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        *int64                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	OperatorId    *int64                 `protobuf:"varint,2,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListResponsibleGamblingConfigsRequest) Reset() {
	*x = ListResponsibleGamblingConfigsRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponsibleGamblingConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponsibleGamblingConfigsRequest) ProtoMessage() {}

func (x *ListResponsibleGamblingConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponsibleGamblingConfigsRequest.ProtoReflect.Descriptor instead.
func (*ListResponsibleGamblingConfigsRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{53}
}

func (x *ListResponsibleGamblingConfigsRequest) GetUserId() int64 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ListResponsibleGamblingConfigsRequest) GetOperatorId() int64 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

type ListResponsibleGamblingConfigsResponse struct {
	state                       protoimpl.MessageState       `protogen:"open.v1"`
	ResponsibleGamblingConfigs  []*ResponsibleGamblingConfig `protobuf:"bytes,1,rep,name=responsible_gambling_configs,json=responsibleGamblingConfigs,proto3" json:"responsible_gambling_configs,omitempty"`
	ResponsibleGamblingStatuses []*ResponsibleGamblingStatus `protobuf:"bytes,2,rep,name=responsible_gambling_statuses,json=responsibleGamblingStatuses,proto3" json:"responsible_gambling_statuses,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *ListResponsibleGamblingConfigsResponse) Reset() {
	*x = ListResponsibleGamblingConfigsResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListResponsibleGamblingConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponsibleGamblingConfigsResponse) ProtoMessage() {}

func (x *ListResponsibleGamblingConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponsibleGamblingConfigsResponse.ProtoReflect.Descriptor instead.
func (*ListResponsibleGamblingConfigsResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{54}
}

func (x *ListResponsibleGamblingConfigsResponse) GetResponsibleGamblingConfigs() []*ResponsibleGamblingConfig {
	if x != nil {
		return x.ResponsibleGamblingConfigs
	}
	return nil
}

func (x *ListResponsibleGamblingConfigsResponse) GetResponsibleGamblingStatuses() []*ResponsibleGamblingStatus {
	if x != nil {
		return x.ResponsibleGamblingStatuses
	}
	return nil
}

type GetResponsibleGamblingConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperatorId    *int64                 `protobuf:"varint,2,opt,name=operator_id,json=operatorId,proto3,oneof" json:"operator_id,omitempty"`
	Currency      string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponsibleGamblingConfigRequest) Reset() {
	*x = GetResponsibleGamblingConfigRequest{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponsibleGamblingConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponsibleGamblingConfigRequest) ProtoMessage() {}

func (x *GetResponsibleGamblingConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponsibleGamblingConfigRequest.ProtoReflect.Descriptor instead.
func (*GetResponsibleGamblingConfigRequest) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{55}
}

func (x *GetResponsibleGamblingConfigRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetResponsibleGamblingConfigRequest) GetOperatorId() int64 {
	if x != nil && x.OperatorId != nil {
		return *x.OperatorId
	}
	return 0
}

func (x *GetResponsibleGamblingConfigRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type GetResponsibleGamblingConfigResponse struct {
	state                     protoimpl.MessageState     `protogen:"open.v1"`
	ResponsibleGamblingConfig *ResponsibleGamblingConfig `protobuf:"bytes,1,opt,name=responsible_gambling_config,json=responsibleGamblingConfig,proto3" json:"responsible_gambling_config,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GetResponsibleGamblingConfigResponse) Reset() {
	*x = GetResponsibleGamblingConfigResponse{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponsibleGamblingConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponsibleGamblingConfigResponse) ProtoMessage() {}

func (x *GetResponsibleGamblingConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponsibleGamblingConfigResponse.ProtoReflect.Descriptor instead.
func (*GetResponsibleGamblingConfigResponse) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{56}
}

func (x *GetResponsibleGamblingConfigResponse) GetResponsibleGamblingConfig() *ResponsibleGamblingConfig {
	if x != nil {
		return x.ResponsibleGamblingConfig
	}
	return nil
}

type GetUserBalancesResponse_Balance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Cash          string                 `protobuf:"bytes,2,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorBonus string                 `protobuf:"bytes,3,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	ProviderBonus string                 `protobuf:"bytes,4,opt,name=provider_bonus,json=providerBonus,proto3" json:"provider_bonus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalancesResponse_Balance) Reset() {
	*x = GetUserBalancesResponse_Balance{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalancesResponse_Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalancesResponse_Balance) ProtoMessage() {}

func (x *GetUserBalancesResponse_Balance) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalancesResponse_Balance.ProtoReflect.Descriptor instead.
func (*GetUserBalancesResponse_Balance) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{1, 0}
}

func (x *GetUserBalancesResponse_Balance) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetUserBalancesResponse_Balance) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GetUserBalancesResponse_Balance) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

func (x *GetUserBalancesResponse_Balance) GetProviderBonus() string {
	if x != nil {
		return x.ProviderBonus
	}
	return ""
}

type CreditRequest_Ratio struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cash          string                 `protobuf:"bytes,1,opt,name=cash,proto3" json:"cash,omitempty"`
	OperatorBonus string                 `protobuf:"bytes,2,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreditRequest_Ratio) Reset() {
	*x = CreditRequest_Ratio{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreditRequest_Ratio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreditRequest_Ratio) ProtoMessage() {}

func (x *CreditRequest_Ratio) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreditRequest_Ratio.ProtoReflect.Descriptor instead.
func (*CreditRequest_Ratio) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CreditRequest_Ratio) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *CreditRequest_Ratio) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

type GetWalletsResponse_TotalAssets struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Balance              string                 `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Deposit              string                 `protobuf:"bytes,2,opt,name=deposit,proto3" json:"deposit,omitempty"`
	Withdraw             string                 `protobuf:"bytes,3,opt,name=withdraw,proto3" json:"withdraw,omitempty"`
	DepositMinusWithdraw string                 `protobuf:"bytes,4,opt,name=deposit_minus_withdraw,json=depositMinusWithdraw,proto3" json:"deposit_minus_withdraw,omitempty"`
	ValidTurnover        string                 `protobuf:"bytes,5,opt,name=valid_turnover,json=validTurnover,proto3" json:"valid_turnover,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetWalletsResponse_TotalAssets) Reset() {
	*x = GetWalletsResponse_TotalAssets{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletsResponse_TotalAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletsResponse_TotalAssets) ProtoMessage() {}

func (x *GetWalletsResponse_TotalAssets) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletsResponse_TotalAssets.ProtoReflect.Descriptor instead.
func (*GetWalletsResponse_TotalAssets) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{19, 0}
}

func (x *GetWalletsResponse_TotalAssets) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *GetWalletsResponse_TotalAssets) GetDeposit() string {
	if x != nil {
		return x.Deposit
	}
	return ""
}

func (x *GetWalletsResponse_TotalAssets) GetWithdraw() string {
	if x != nil {
		return x.Withdraw
	}
	return ""
}

func (x *GetWalletsResponse_TotalAssets) GetDepositMinusWithdraw() string {
	if x != nil {
		return x.DepositMinusWithdraw
	}
	return ""
}

func (x *GetWalletsResponse_TotalAssets) GetValidTurnover() string {
	if x != nil {
		return x.ValidTurnover
	}
	return ""
}

type GetWalletsResponse_Credit struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	TransactionId      int64                  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Cash               string                 `protobuf:"bytes,3,opt,name=cash,proto3" json:"cash,omitempty"`
	OriginalCash       string                 `protobuf:"bytes,4,opt,name=original_cash,json=originalCash,proto3" json:"original_cash,omitempty"`
	Bonus              string                 `protobuf:"bytes,5,opt,name=bonus,proto3" json:"bonus,omitempty"`
	OriginalBonus      string                 `protobuf:"bytes,6,opt,name=original_bonus,json=originalBonus,proto3" json:"original_bonus,omitempty"`
	TurnoverThreshold  string                 `protobuf:"bytes,7,opt,name=turnover_threshold,json=turnoverThreshold,proto3" json:"turnover_threshold,omitempty"`
	Turnover           string                 `protobuf:"bytes,8,opt,name=turnover,proto3" json:"turnover,omitempty"`
	CashTurnover       string                 `protobuf:"bytes,9,opt,name=cash_turnover,json=cashTurnover,proto3" json:"cash_turnover,omitempty"`
	BonusTurnover      string                 `protobuf:"bytes,10,opt,name=bonus_turnover,json=bonusTurnover,proto3" json:"bonus_turnover,omitempty"`
	TurnoverMultiplier string                 `protobuf:"bytes,11,opt,name=turnover_multiplier,json=turnoverMultiplier,proto3" json:"turnover_multiplier,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetWalletsResponse_Credit) Reset() {
	*x = GetWalletsResponse_Credit{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletsResponse_Credit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletsResponse_Credit) ProtoMessage() {}

func (x *GetWalletsResponse_Credit) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletsResponse_Credit.ProtoReflect.Descriptor instead.
func (*GetWalletsResponse_Credit) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{19, 1}
}

func (x *GetWalletsResponse_Credit) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetWalletsResponse_Credit) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *GetWalletsResponse_Credit) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetOriginalCash() string {
	if x != nil {
		return x.OriginalCash
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetBonus() string {
	if x != nil {
		return x.Bonus
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetOriginalBonus() string {
	if x != nil {
		return x.OriginalBonus
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetTurnoverThreshold() string {
	if x != nil {
		return x.TurnoverThreshold
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetTurnover() string {
	if x != nil {
		return x.Turnover
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetCashTurnover() string {
	if x != nil {
		return x.CashTurnover
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetBonusTurnover() string {
	if x != nil {
		return x.BonusTurnover
	}
	return ""
}

func (x *GetWalletsResponse_Credit) GetTurnoverMultiplier() string {
	if x != nil {
		return x.TurnoverMultiplier
	}
	return ""
}

type GetWalletsResponse_Wallet struct {
	state              protoimpl.MessageState       `protogen:"open.v1"`
	Currency           string                       `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Cash               string                       `protobuf:"bytes,2,opt,name=cash,proto3" json:"cash,omitempty"`
	OriginalCash       string                       `protobuf:"bytes,3,opt,name=original_cash,json=originalCash,proto3" json:"original_cash,omitempty"`
	Bonus              string                       `protobuf:"bytes,4,opt,name=bonus,proto3" json:"bonus,omitempty"`
	OriginalBonus      string                       `protobuf:"bytes,5,opt,name=original_bonus,json=originalBonus,proto3" json:"original_bonus,omitempty"`
	TurnoverThreshold  string                       `protobuf:"bytes,6,opt,name=turnover_threshold,json=turnoverThreshold,proto3" json:"turnover_threshold,omitempty"`
	Turnover           string                       `protobuf:"bytes,7,opt,name=turnover,proto3" json:"turnover,omitempty"`
	CashTurnover       string                       `protobuf:"bytes,8,opt,name=cash_turnover,json=cashTurnover,proto3" json:"cash_turnover,omitempty"`
	BonusTurnover      string                       `protobuf:"bytes,9,opt,name=bonus_turnover,json=bonusTurnover,proto3" json:"bonus_turnover,omitempty"`
	TurnoverMultiplier string                       `protobuf:"bytes,10,opt,name=turnover_multiplier,json=turnoverMultiplier,proto3" json:"turnover_multiplier,omitempty"`
	Credits            []*GetWalletsResponse_Credit `protobuf:"bytes,11,rep,name=credits,proto3" json:"credits,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetWalletsResponse_Wallet) Reset() {
	*x = GetWalletsResponse_Wallet{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletsResponse_Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletsResponse_Wallet) ProtoMessage() {}

func (x *GetWalletsResponse_Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletsResponse_Wallet.ProtoReflect.Descriptor instead.
func (*GetWalletsResponse_Wallet) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{19, 2}
}

func (x *GetWalletsResponse_Wallet) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetOriginalCash() string {
	if x != nil {
		return x.OriginalCash
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetBonus() string {
	if x != nil {
		return x.Bonus
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetOriginalBonus() string {
	if x != nil {
		return x.OriginalBonus
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetTurnoverThreshold() string {
	if x != nil {
		return x.TurnoverThreshold
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetTurnover() string {
	if x != nil {
		return x.Turnover
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetCashTurnover() string {
	if x != nil {
		return x.CashTurnover
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetBonusTurnover() string {
	if x != nil {
		return x.BonusTurnover
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetTurnoverMultiplier() string {
	if x != nil {
		return x.TurnoverMultiplier
	}
	return ""
}

func (x *GetWalletsResponse_Wallet) GetCredits() []*GetWalletsResponse_Credit {
	if x != nil {
		return x.Credits
	}
	return nil
}

type ListWalletBalanceTransactionsResponse_BalanceTransaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	TransactionId int64                  `protobuf:"varint,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	// Transaction types for different operations
	// Expected values:
	// Credit operations:
	//   - "payment_deposit"    - Payment deposit transaction
	//   - "game_win"          - Game win transaction
	//
	// Debit operations:
	//   - "payment_withdraw"   - Payment withdraw transaction
	//   - "game_bet"          - Game bet transaction
	//   - "payment_withdraw_freeze" - Payment withdraw freeze transaction
	//
	// Settlement operations:
	//   - "payment_withdraw_settle" - Payment withdraw settlement
	//
	// Rollback operations:
	//   - "game_bet_rollback"            - Game bet transaction rollback
	//   - "game_win_rollback"            - Game win transaction rollback
	//   - "payment_withdraw_rollback" - Payment withdraw transaction rollback
	TransactionType      string `protobuf:"bytes,3,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	VipLevel             int32  `protobuf:"varint,4,opt,name=vip_level,json=vipLevel,proto3" json:"vip_level,omitempty"`
	ChangeBalance        string `protobuf:"bytes,5,opt,name=change_balance,json=changeBalance,proto3" json:"change_balance,omitempty"`
	BeforeBalance        string `protobuf:"bytes,6,opt,name=before_balance,json=beforeBalance,proto3" json:"before_balance,omitempty"`
	AfterBalance         string `protobuf:"bytes,7,opt,name=after_balance,json=afterBalance,proto3" json:"after_balance,omitempty"`
	Currency             string `protobuf:"bytes,8,opt,name=currency,proto3" json:"currency,omitempty"`
	RelatedTransactionId int64  `protobuf:"varint,9,opt,name=related_transaction_id,json=relatedTransactionId,proto3" json:"related_transaction_id,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) Reset() {
	*x = ListWalletBalanceTransactionsResponse_BalanceTransaction{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWalletBalanceTransactionsResponse_BalanceTransaction) ProtoMessage() {}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWalletBalanceTransactionsResponse_BalanceTransaction.ProtoReflect.Descriptor instead.
func (*ListWalletBalanceTransactionsResponse_BalanceTransaction) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{21, 0}
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetVipLevel() int32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetChangeBalance() string {
	if x != nil {
		return x.ChangeBalance
	}
	return ""
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetBeforeBalance() string {
	if x != nil {
		return x.BeforeBalance
	}
	return ""
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetAfterBalance() string {
	if x != nil {
		return x.AfterBalance
	}
	return ""
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ListWalletBalanceTransactionsResponse_BalanceTransaction) GetRelatedTransactionId() int64 {
	if x != nil {
		return x.RelatedTransactionId
	}
	return 0
}

type GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Id                       int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId                   int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SettlementCurrency       string                 `protobuf:"bytes,3,opt,name=settlement_currency,json=settlementCurrency,proto3" json:"settlement_currency,omitempty"`
	Currency                 string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	ExchangeRate             string                 `protobuf:"bytes,5,opt,name=exchange_rate,json=exchangeRate,proto3" json:"exchange_rate,omitempty"`
	TransactionType          string                 `protobuf:"bytes,6,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	ExternalTransactionId    int64                  `protobuf:"varint,7,opt,name=external_transaction_id,json=externalTransactionId,proto3" json:"external_transaction_id,omitempty"`
	RelatedTransactionId     int64                  `protobuf:"varint,8,opt,name=related_transaction_id,json=relatedTransactionId,proto3" json:"related_transaction_id,omitempty"`
	OriginalCash             string                 `protobuf:"bytes,9,opt,name=original_cash,json=originalCash,proto3" json:"original_cash,omitempty"`
	OriginalCashUsd          string                 `protobuf:"bytes,10,opt,name=original_cash_usd,json=originalCashUsd,proto3" json:"original_cash_usd,omitempty"`
	Cash                     string                 `protobuf:"bytes,11,opt,name=cash,proto3" json:"cash,omitempty"`
	CashUsd                  string                 `protobuf:"bytes,12,opt,name=cash_usd,json=cashUsd,proto3" json:"cash_usd,omitempty"`
	CashAmount               string                 `protobuf:"bytes,13,opt,name=cash_amount,json=cashAmount,proto3" json:"cash_amount,omitempty"`
	CashAmountUsd            string                 `protobuf:"bytes,14,opt,name=cash_amount_usd,json=cashAmountUsd,proto3" json:"cash_amount_usd,omitempty"`
	OriginalOperatorBonus    string                 `protobuf:"bytes,15,opt,name=original_operator_bonus,json=originalOperatorBonus,proto3" json:"original_operator_bonus,omitempty"`
	OriginalOperatorBonusUsd string                 `protobuf:"bytes,16,opt,name=original_operator_bonus_usd,json=originalOperatorBonusUsd,proto3" json:"original_operator_bonus_usd,omitempty"`
	OperatorBonus            string                 `protobuf:"bytes,17,opt,name=operator_bonus,json=operatorBonus,proto3" json:"operator_bonus,omitempty"`
	OperatorBonusUsd         string                 `protobuf:"bytes,18,opt,name=operator_bonus_usd,json=operatorBonusUsd,proto3" json:"operator_bonus_usd,omitempty"`
	OperatorBonusAmount      string                 `protobuf:"bytes,19,opt,name=operator_bonus_amount,json=operatorBonusAmount,proto3" json:"operator_bonus_amount,omitempty"`
	OperatorBonusAmountUsd   string                 `protobuf:"bytes,20,opt,name=operator_bonus_amount_usd,json=operatorBonusAmountUsd,proto3" json:"operator_bonus_amount_usd,omitempty"`
	OriginalProviderBonus    string                 `protobuf:"bytes,21,opt,name=original_provider_bonus,json=originalProviderBonus,proto3" json:"original_provider_bonus,omitempty"`
	OriginalProviderBonusUsd string                 `protobuf:"bytes,22,opt,name=original_provider_bonus_usd,json=originalProviderBonusUsd,proto3" json:"original_provider_bonus_usd,omitempty"`
	ProviderBonus            string                 `protobuf:"bytes,23,opt,name=provider_bonus,json=providerBonus,proto3" json:"provider_bonus,omitempty"`
	ProviderBonusUsd         string                 `protobuf:"bytes,24,opt,name=provider_bonus_usd,json=providerBonusUsd,proto3" json:"provider_bonus_usd,omitempty"`
	ProviderBonusAmount      string                 `protobuf:"bytes,25,opt,name=provider_bonus_amount,json=providerBonusAmount,proto3" json:"provider_bonus_amount,omitempty"`
	ProviderBonusAmountUsd   string                 `protobuf:"bytes,26,opt,name=provider_bonus_amount_usd,json=providerBonusAmountUsd,proto3" json:"provider_bonus_amount_usd,omitempty"`
	CreatedAt                *timestamppb.Timestamp `protobuf:"bytes,27,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                *timestamppb.Timestamp `protobuf:"bytes,28,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) Reset() {
	*x = GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) ProtoMessage() {}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction.ProtoReflect.Descriptor instead.
func (*GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{23, 0}
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetSettlementCurrency() string {
	if x != nil {
		return x.SettlementCurrency
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetExchangeRate() string {
	if x != nil {
		return x.ExchangeRate
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetExternalTransactionId() int64 {
	if x != nil {
		return x.ExternalTransactionId
	}
	return 0
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetRelatedTransactionId() int64 {
	if x != nil {
		return x.RelatedTransactionId
	}
	return 0
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalCash() string {
	if x != nil {
		return x.OriginalCash
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalCashUsd() string {
	if x != nil {
		return x.OriginalCashUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCashUsd() string {
	if x != nil {
		return x.CashUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCashAmount() string {
	if x != nil {
		return x.CashAmount
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCashAmountUsd() string {
	if x != nil {
		return x.CashAmountUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalOperatorBonus() string {
	if x != nil {
		return x.OriginalOperatorBonus
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalOperatorBonusUsd() string {
	if x != nil {
		return x.OriginalOperatorBonusUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOperatorBonus() string {
	if x != nil {
		return x.OperatorBonus
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOperatorBonusUsd() string {
	if x != nil {
		return x.OperatorBonusUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOperatorBonusAmount() string {
	if x != nil {
		return x.OperatorBonusAmount
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOperatorBonusAmountUsd() string {
	if x != nil {
		return x.OperatorBonusAmountUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalProviderBonus() string {
	if x != nil {
		return x.OriginalProviderBonus
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetOriginalProviderBonusUsd() string {
	if x != nil {
		return x.OriginalProviderBonusUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetProviderBonus() string {
	if x != nil {
		return x.ProviderBonus
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetProviderBonusUsd() string {
	if x != nil {
		return x.ProviderBonusUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetProviderBonusAmount() string {
	if x != nil {
		return x.ProviderBonusAmount
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetProviderBonusAmountUsd() string {
	if x != nil {
		return x.ProviderBonusAmountUsd
	}
	return ""
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetWalletCreditTransactionsResponse_CreditTransaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Cash          string                 `protobuf:"bytes,3,opt,name=cash,proto3" json:"cash,omitempty"`
	Bonus         string                 `protobuf:"bytes,4,opt,name=bonus,proto3" json:"bonus,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) Reset() {
	*x = GetWalletCreditTransactionsResponse_CreditTransaction{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletCreditTransactionsResponse_CreditTransaction) ProtoMessage() {}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletCreditTransactionsResponse_CreditTransaction.ProtoReflect.Descriptor instead.
func (*GetWalletCreditTransactionsResponse_CreditTransaction) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{25, 0}
}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) GetCash() string {
	if x != nil {
		return x.Cash
	}
	return ""
}

func (x *GetWalletCreditTransactionsResponse_CreditTransaction) GetBonus() string {
	if x != nil {
		return x.Bonus
	}
	return ""
}

type GetOverviewDashboardFromWalletResponse_GGR struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Today         string                 `protobuf:"bytes,1,opt,name=today,proto3" json:"today,omitempty"`
	Yesterday     string                 `protobuf:"bytes,2,opt,name=yesterday,proto3" json:"yesterday,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletResponse_GGR) Reset() {
	*x = GetOverviewDashboardFromWalletResponse_GGR{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletResponse_GGR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletResponse_GGR) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletResponse_GGR) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletResponse_GGR.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletResponse_GGR) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{33, 0}
}

func (x *GetOverviewDashboardFromWalletResponse_GGR) GetToday() string {
	if x != nil {
		return x.Today
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_GGR) GetYesterday() string {
	if x != nil {
		return x.Yesterday
	}
	return ""
}

type GetOverviewDashboardFromWalletResponse_NGR struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Today         string                 `protobuf:"bytes,1,opt,name=today,proto3" json:"today,omitempty"`
	Yesterday     string                 `protobuf:"bytes,2,opt,name=yesterday,proto3" json:"yesterday,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletResponse_NGR) Reset() {
	*x = GetOverviewDashboardFromWalletResponse_NGR{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletResponse_NGR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletResponse_NGR) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletResponse_NGR) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletResponse_NGR.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletResponse_NGR) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{33, 1}
}

func (x *GetOverviewDashboardFromWalletResponse_NGR) GetToday() string {
	if x != nil {
		return x.Today
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_NGR) GetYesterday() string {
	if x != nil {
		return x.Yesterday
	}
	return ""
}

type GetOverviewDashboardFromWalletResponse_Deposit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Today         string                 `protobuf:"bytes,1,opt,name=today,proto3" json:"today,omitempty"`
	Yesterday     string                 `protobuf:"bytes,2,opt,name=yesterday,proto3" json:"yesterday,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletResponse_Deposit) Reset() {
	*x = GetOverviewDashboardFromWalletResponse_Deposit{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletResponse_Deposit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletResponse_Deposit) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletResponse_Deposit) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletResponse_Deposit.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletResponse_Deposit) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{33, 2}
}

func (x *GetOverviewDashboardFromWalletResponse_Deposit) GetToday() string {
	if x != nil {
		return x.Today
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_Deposit) GetYesterday() string {
	if x != nil {
		return x.Yesterday
	}
	return ""
}

type GetOverviewDashboardFromWalletResponse_Withdraw struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Today         string                 `protobuf:"bytes,1,opt,name=today,proto3" json:"today,omitempty"`
	Yesterday     string                 `protobuf:"bytes,2,opt,name=yesterday,proto3" json:"yesterday,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletResponse_Withdraw) Reset() {
	*x = GetOverviewDashboardFromWalletResponse_Withdraw{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletResponse_Withdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletResponse_Withdraw) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletResponse_Withdraw) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletResponse_Withdraw.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletResponse_Withdraw) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{33, 3}
}

func (x *GetOverviewDashboardFromWalletResponse_Withdraw) GetToday() string {
	if x != nil {
		return x.Today
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_Withdraw) GetYesterday() string {
	if x != nil {
		return x.Yesterday
	}
	return ""
}

type GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Today         string                 `protobuf:"bytes,1,opt,name=today,proto3" json:"today,omitempty"`
	Yesterday     string                 `protobuf:"bytes,2,opt,name=yesterday,proto3" json:"yesterday,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) Reset() {
	*x = GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw{}
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) ProtoMessage() {}

func (x *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) ProtoReflect() protoreflect.Message {
	mi := &file_wallet_service_v1_wallet_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw.ProtoReflect.Descriptor instead.
func (*GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) Descriptor() ([]byte, []int) {
	return file_wallet_service_v1_wallet_proto_rawDescGZIP(), []int{33, 4}
}

func (x *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) GetToday() string {
	if x != nil {
		return x.Today
	}
	return ""
}

func (x *GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw) GetYesterday() string {
	if x != nil {
		return x.Yesterday
	}
	return ""
}

var File_wallet_service_v1_wallet_proto protoreflect.FileDescriptor

const file_wallet_service_v1_wallet_proto_rawDesc = "" +
	"\n" +
	"\x1ewallet/service/v1/wallet.proto\x12\x15api.wallet.service.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"1\n" +
	"\x16GetUserBalancesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"\xf7\x01\n" +
	"\x17GetUserBalancesResponse\x12R\n" +
	"\bbalances\x18\x01 \x03(\v26.api.wallet.service.v1.GetUserBalancesResponse.BalanceR\bbalances\x1a\x87\x01\n" +
	"\aBalance\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x12\n" +
	"\x04cash\x18\x02 \x01(\tR\x04cash\x12%\n" +
	"\x0eoperator_bonus\x18\x03 \x01(\tR\roperatorBonus\x12%\n" +
	"\x0eprovider_bonus\x18\x04 \x01(\tR\rproviderBonus\"}\n" +
	"\x15GetUserBalanceRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12/\n" +
	"\x13settlement_currency\x18\x03 \x01(\tR\x12settlementCurrency\"\x9f\x01\n" +
	"\x16GetUserBalanceResponse\x12#\n" +
	"\rexchange_rate\x18\x01 \x01(\tR\fexchangeRate\x12\x12\n" +
	"\x04cash\x18\x02 \x01(\tR\x04cash\x12%\n" +
	"\x0eoperator_bonus\x18\x03 \x01(\tR\roperatorBonus\x12%\n" +
	"\x0eprovider_bonus\x18\x04 \x01(\tR\rproviderBonus\"\xee\x01\n" +
	"\rCreditRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12)\n" +
	"\x10transaction_type\x18\x03 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\x04 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x05 \x01(\tR\x04cash\x1aB\n" +
	"\x05Ratio\x12\x12\n" +
	"\x04cash\x18\x01 \x01(\tR\x04cash\x12%\n" +
	"\x0eoperator_bonus\x18\x02 \x01(\tR\roperatorBonus\"7\n" +
	"\x0eCreditResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\"\xa9\x01\n" +
	"\fDebitRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12)\n" +
	"\x10transaction_type\x18\x03 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\x04 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x05 \x01(\tR\x04cash\"6\n" +
	"\rDebitResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\"\xa3\x02\n" +
	"\x10GameDebitRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12/\n" +
	"\x13settlement_currency\x18\x03 \x01(\tR\x12settlementCurrency\x12#\n" +
	"\rexchange_rate\x18\x04 \x01(\tR\fexchangeRate\x12)\n" +
	"\x10transaction_type\x18\x05 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\x06 \x01(\x03R\rtransactionId\x12\x16\n" +
	"\x06amount\x18\a \x01(\tR\x06amount\x12\x1a\n" +
	"\bturnover\x18\b \x01(\tR\bturnover\"\xe8\x03\n" +
	"\x11GameDebitResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\x12#\n" +
	"\rexchange_rate\x18\x02 \x01(\tR\fexchangeRate\x12\x12\n" +
	"\x04cash\x18\x03 \x01(\tR\x04cash\x12%\n" +
	"\x0eoperator_bonus\x18\x04 \x01(\tR\roperatorBonus\x12%\n" +
	"\x0eprovider_bonus\x18\x05 \x01(\tR\rproviderBonus\x12\x1f\n" +
	"\vcash_amount\x18\x06 \x01(\tR\n" +
	"cashAmount\x122\n" +
	"\x15operator_bonus_amount\x18\a \x01(\tR\x13operatorBonusAmount\x122\n" +
	"\x15provider_bonus_amount\x18\b \x01(\tR\x13providerBonusAmount\x12&\n" +
	"\x0fcash_amount_usd\x18\t \x01(\tR\rcashAmountUsd\x129\n" +
	"\x19operator_bonus_amount_usd\x18\n" +
	" \x01(\tR\x16operatorBonusAmountUsd\x129\n" +
	"\x19provider_bonus_amount_usd\x18\v \x01(\tR\x16providerBonusAmountUsd\"\xc0\x02\n" +
	"\x11GameCreditRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12/\n" +
	"\x13settlement_currency\x18\x03 \x01(\tR\x12settlementCurrency\x12#\n" +
	"\rexchange_rate\x18\x04 \x01(\tR\fexchangeRate\x12)\n" +
	"\x10transaction_type\x18\x05 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\x06 \x01(\x03R\rtransactionId\x126\n" +
	"\x17original_transaction_id\x18\a \x01(\x03R\x15originalTransactionId\x12\x16\n" +
	"\x06amount\x18\b \x01(\tR\x06amount\"\xe9\x03\n" +
	"\x12GameCreditResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\x12#\n" +
	"\rexchange_rate\x18\x02 \x01(\tR\fexchangeRate\x12\x12\n" +
	"\x04cash\x18\x03 \x01(\tR\x04cash\x12%\n" +
	"\x0eoperator_bonus\x18\x04 \x01(\tR\roperatorBonus\x12%\n" +
	"\x0eprovider_bonus\x18\x05 \x01(\tR\rproviderBonus\x12\x1f\n" +
	"\vcash_amount\x18\x06 \x01(\tR\n" +
	"cashAmount\x122\n" +
	"\x15operator_bonus_amount\x18\a \x01(\tR\x13operatorBonusAmount\x122\n" +
	"\x15provider_bonus_amount\x18\b \x01(\tR\x13providerBonusAmount\x12&\n" +
	"\x0fcash_amount_usd\x18\t \x01(\tR\rcashAmountUsd\x129\n" +
	"\x19operator_bonus_amount_usd\x18\n" +
	" \x01(\tR\x16operatorBonusAmountUsd\x129\n" +
	"\x19provider_bonus_amount_usd\x18\v \x01(\tR\x16providerBonusAmountUsd\"\xaa\x01\n" +
	"\rFreezeRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12)\n" +
	"\x10transaction_type\x18\x03 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\x04 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x05 \x01(\tR\x04cash\"7\n" +
	"\x0eFreezeResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\"\x99\x01\n" +
	"\rSettleRequest\x12)\n" +
	"\x10transaction_type\x18\x01 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\x03R\rtransactionId\x126\n" +
	"\x17original_transaction_id\x18\x03 \x01(\x03R\x15originalTransactionId\"7\n" +
	"\x0eSettleResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\"\x9b\x01\n" +
	"\x0fRollbackRequest\x12)\n" +
	"\x10transaction_type\x18\x01 \x01(\tR\x0ftransactionType\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\x03R\rtransactionId\x126\n" +
	"\x17original_transaction_id\x18\x03 \x01(\x03R\x15originalTransactionId\"\xc2\x03\n" +
	"\x10RollbackResponse\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x02 \x01(\tR\x04cash\x12%\n" +
	"\x0eoperator_bonus\x18\x03 \x01(\tR\roperatorBonus\x12%\n" +
	"\x0eprovider_bonus\x18\x04 \x01(\tR\rproviderBonus\x12\x1f\n" +
	"\vcash_amount\x18\x05 \x01(\tR\n" +
	"cashAmount\x122\n" +
	"\x15operator_bonus_amount\x18\x06 \x01(\tR\x13operatorBonusAmount\x122\n" +
	"\x15provider_bonus_amount\x18\a \x01(\tR\x13providerBonusAmount\x12&\n" +
	"\x0fcash_amount_usd\x18\b \x01(\tR\rcashAmountUsd\x129\n" +
	"\x19operator_bonus_amount_usd\x18\t \x01(\tR\x16operatorBonusAmountUsd\x129\n" +
	"\x19provider_bonus_amount_usd\x18\n" +
	" \x01(\tR\x16providerBonusAmountUsd\"L\n" +
	"\x11GetWalletsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1e\n" +
	"\n" +
	"currencies\x18\x02 \x03(\tR\n" +
	"currencies\"\xd3\t\n" +
	"\x12GetWalletsResponse\x12X\n" +
	"\ftotal_assets\x18\x01 \x01(\v25.api.wallet.service.v1.GetWalletsResponse.TotalAssetsR\vtotalAssets\x12J\n" +
	"\awallets\x18\x02 \x03(\v20.api.wallet.service.v1.GetWalletsResponse.WalletR\awallets\x1a\xba\x01\n" +
	"\vTotalAssets\x12\x18\n" +
	"\abalance\x18\x01 \x01(\tR\abalance\x12\x18\n" +
	"\adeposit\x18\x02 \x01(\tR\adeposit\x12\x1a\n" +
	"\bwithdraw\x18\x03 \x01(\tR\bwithdraw\x124\n" +
	"\x16deposit_minus_withdraw\x18\x04 \x01(\tR\x14depositMinusWithdraw\x12%\n" +
	"\x0evalid_turnover\x18\x05 \x01(\tR\rvalidTurnover\x1a\xa8\x03\n" +
	"\x06Credit\x129\n" +
	"\n" +
	"created_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\x03R\rtransactionId\x12\x12\n" +
	"\x04cash\x18\x03 \x01(\tR\x04cash\x12#\n" +
	"\roriginal_cash\x18\x04 \x01(\tR\foriginalCash\x12\x14\n" +
	"\x05bonus\x18\x05 \x01(\tR\x05bonus\x12%\n" +
	"\x0eoriginal_bonus\x18\x06 \x01(\tR\roriginalBonus\x12-\n" +
	"\x12turnover_threshold\x18\a \x01(\tR\x11turnoverThreshold\x12\x1a\n" +
	"\bturnover\x18\b \x01(\tR\bturnover\x12#\n" +
	"\rcash_turnover\x18\t \x01(\tR\fcashTurnover\x12%\n" +
	"\x0ebonus_turnover\x18\n" +
	" \x01(\tR\rbonusTurnover\x12/\n" +
	"\x13turnover_multiplier\x18\v \x01(\tR\x12turnoverMultiplier\x1a\xae\x03\n" +
	"\x06Wallet\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x12\n" +
	"\x04cash\x18\x02 \x01(\tR\x04cash\x12#\n" +
	"\roriginal_cash\x18\x03 \x01(\tR\foriginalCash\x12\x14\n" +
	"\x05bonus\x18\x04 \x01(\tR\x05bonus\x12%\n" +
	"\x0eoriginal_bonus\x18\x05 \x01(\tR\roriginalBonus\x12-\n" +
	"\x12turnover_threshold\x18\x06 \x01(\tR\x11turnoverThreshold\x12\x1a\n" +
	"\bturnover\x18\a \x01(\tR\bturnover\x12#\n" +
	"\rcash_turnover\x18\b \x01(\tR\fcashTurnover\x12%\n" +
	"\x0ebonus_turnover\x18\t \x01(\tR\rbonusTurnover\x12/\n" +
	"\x13turnover_multiplier\x18\n" +
	" \x01(\tR\x12turnoverMultiplier\x12J\n" +
	"\acredits\x18\v \x03(\v20.api.wallet.service.v1.GetWalletsResponse.CreditR\acredits\"\x9c\x03\n" +
	"$ListWalletBalanceTransactionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12.\n" +
	"\x10transaction_type\x18\x02 \x01(\tH\x00R\x0ftransactionType\x88\x01\x01\x12\x1f\n" +
	"\bcurrency\x18\x03 \x01(\tH\x01R\bcurrency\x88\x01\x01\x12>\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampH\x02R\tstartTime\x88\x01\x01\x12:\n" +
	"\bend_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampH\x03R\aendTime\x88\x01\x01\x12\x17\n" +
	"\x04page\x18\x06 \x01(\x05H\x04R\x04page\x88\x01\x01\x12 \n" +
	"\tpage_size\x18\a \x01(\x05H\x05R\bpageSize\x88\x01\x01B\x13\n" +
	"\x11_transaction_typeB\v\n" +
	"\t_currencyB\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_timeB\a\n" +
	"\x05_pageB\f\n" +
	"\n" +
	"_page_size\"\xf9\x04\n" +
	"%ListWalletBalanceTransactionsResponse\x12\x82\x01\n" +
	"\x14balance_transactions\x18\x01 \x03(\v2O.api.wallet.service.v1.ListWalletBalanceTransactionsResponse.BalanceTransactionR\x13balanceTransactions\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x1a\x83\x03\n" +
	"\x12BalanceTransaction\x129\n" +
	"\n" +
	"created_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\x03R\rtransactionId\x12)\n" +
	"\x10transaction_type\x18\x03 \x01(\tR\x0ftransactionType\x12\x1b\n" +
	"\tvip_level\x18\x04 \x01(\x05R\bvipLevel\x12%\n" +
	"\x0echange_balance\x18\x05 \x01(\tR\rchangeBalance\x12%\n" +
	"\x0ebefore_balance\x18\x06 \x01(\tR\rbeforeBalance\x12#\n" +
	"\rafter_balance\x18\a \x01(\tR\fafterBalance\x12\x1a\n" +
	"\bcurrency\x18\b \x01(\tR\bcurrency\x124\n" +
	"\x16related_transaction_id\x18\t \x01(\x03R\x14relatedTransactionId\"S\n" +
	"(GetWalletBalanceTransactionsByIdsRequest\x12'\n" +
	"\x0ftransaction_ids\x18\x01 \x03(\x03R\x0etransactionIds\"\xb4\v\n" +
	")GetWalletBalanceTransactionsByIdsResponse\x12\x86\x01\n" +
	"\x14balance_transactions\x18\x01 \x03(\v2S.api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse.BalanceTransactionR\x13balanceTransactions\x1a\xfd\t\n" +
	"\x12BalanceTransaction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12/\n" +
	"\x13settlement_currency\x18\x03 \x01(\tR\x12settlementCurrency\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12#\n" +
	"\rexchange_rate\x18\x05 \x01(\tR\fexchangeRate\x12)\n" +
	"\x10transaction_type\x18\x06 \x01(\tR\x0ftransactionType\x126\n" +
	"\x17external_transaction_id\x18\a \x01(\x03R\x15externalTransactionId\x124\n" +
	"\x16related_transaction_id\x18\b \x01(\x03R\x14relatedTransactionId\x12#\n" +
	"\roriginal_cash\x18\t \x01(\tR\foriginalCash\x12*\n" +
	"\x11original_cash_usd\x18\n" +
	" \x01(\tR\x0foriginalCashUsd\x12\x12\n" +
	"\x04cash\x18\v \x01(\tR\x04cash\x12\x19\n" +
	"\bcash_usd\x18\f \x01(\tR\acashUsd\x12\x1f\n" +
	"\vcash_amount\x18\r \x01(\tR\n" +
	"cashAmount\x12&\n" +
	"\x0fcash_amount_usd\x18\x0e \x01(\tR\rcashAmountUsd\x126\n" +
	"\x17original_operator_bonus\x18\x0f \x01(\tR\x15originalOperatorBonus\x12=\n" +
	"\x1boriginal_operator_bonus_usd\x18\x10 \x01(\tR\x18originalOperatorBonusUsd\x12%\n" +
	"\x0eoperator_bonus\x18\x11 \x01(\tR\roperatorBonus\x12,\n" +
	"\x12operator_bonus_usd\x18\x12 \x01(\tR\x10operatorBonusUsd\x122\n" +
	"\x15operator_bonus_amount\x18\x13 \x01(\tR\x13operatorBonusAmount\x129\n" +
	"\x19operator_bonus_amount_usd\x18\x14 \x01(\tR\x16operatorBonusAmountUsd\x126\n" +
	"\x17original_provider_bonus\x18\x15 \x01(\tR\x15originalProviderBonus\x12=\n" +
	"\x1boriginal_provider_bonus_usd\x18\x16 \x01(\tR\x18originalProviderBonusUsd\x12%\n" +
	"\x0eprovider_bonus\x18\x17 \x01(\tR\rproviderBonus\x12,\n" +
	"\x12provider_bonus_usd\x18\x18 \x01(\tR\x10providerBonusUsd\x122\n" +
	"\x15provider_bonus_amount\x18\x19 \x01(\tR\x13providerBonusAmount\x129\n" +
	"\x19provider_bonus_amount_usd\x18\x1a \x01(\tR\x16providerBonusAmountUsd\x129\n" +
	"\n" +
	"created_at\x18\x1b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x1c \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x93\x01\n" +
	"\"GetWalletCreditTransactionsRequest\x12\x1b\n" +
	"\tcredit_id\x18\x01 \x01(\x03R\bcreditId\x12\x17\n" +
	"\x04page\x18\x02 \x01(\x03H\x00R\x04page\x88\x01\x01\x12 \n" +
	"\tpage_size\x18\x03 \x01(\x03H\x01R\bpageSize\x88\x01\x01B\a\n" +
	"\x05_pageB\f\n" +
	"\n" +
	"_page_size\"\xfa\x02\n" +
	"#GetWalletCreditTransactionsResponse\x12}\n" +
	"\x13credit_transactions\x18\x01 \x03(\v2L.api.wallet.service.v1.GetWalletCreditTransactionsResponse.CreditTransactionR\x12creditTransactions\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x03R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x03R\bpageSize\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x03R\x05total\x1a\x8c\x01\n" +
	"\x11CreditTransaction\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x12\n" +
	"\x04cash\x18\x03 \x01(\tR\x04cash\x12\x14\n" +
	"\x05bonus\x18\x04 \x01(\tR\x05bonus\"9\n" +
	"\x17GetExchangeRatesRequest\x12\x1e\n" +
	"\n" +
	"currencies\x18\x01 \x03(\tR\n" +
	"currencies\"\xc7\x01\n" +
	"\x18GetExchangeRatesResponse\x12i\n" +
	"\x0eexchange_rates\x18\x01 \x03(\v2B.api.wallet.service.v1.GetExchangeRatesResponse.ExchangeRatesEntryR\rexchangeRates\x1a@\n" +
	"\x12ExchangeRatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x81\x02\n" +
	" GetUserTransactionSummaryRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1f\n" +
	"\bcurrency\x18\x02 \x01(\tH\x00R\bcurrency\x88\x01\x01\x12>\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\tstartTime\x88\x01\x01\x12:\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampH\x02R\aendTime\x88\x01\x01B\v\n" +
	"\t_currencyB\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_time\"\xfd\x02\n" +
	"!GetUserTransactionSummaryResponse\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12#\n" +
	"\rtotal_deposit\x18\x02 \x01(\tR\ftotalDeposit\x12%\n" +
	"\x0etotal_withdraw\x18\x03 \x01(\tR\rtotalWithdraw\x124\n" +
	"\x16deposit_minus_withdraw\x18\x04 \x01(\tR\x14depositMinusWithdraw\x12&\n" +
	"\x0ftotal_valid_bet\x18\x05 \x01(\tR\rtotalValidBet\x12.\n" +
	"\x13total_deposit_count\x18\x06 \x01(\x05R\x11totalDepositCount\x120\n" +
	"\x14total_withdraw_count\x18\a \x01(\x05R\x12totalWithdrawCount\x120\n" +
	"\x14today_withdraw_count\x18\b \x01(\x05R\x12todayWithdrawCount\"\xdd\x01\n" +
	"*GetBackofficeUserOverviewFromWalletRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12>\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\tstartTime\x88\x01\x01\x12:\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampH\x01R\aendTime\x88\x01\x01B\r\n" +
	"\v_start_timeB\v\n" +
	"\t_end_time\"\xf1\x06\n" +
	"+GetBackofficeUserOverviewFromWalletResponse\x12\x18\n" +
	"\abalance\x18\x01 \x01(\tR\abalance\x124\n" +
	"\x16deposit_minus_withdraw\x18\x02 \x01(\tR\x14depositMinusWithdraw\x12\x1a\n" +
	"\bturnover\x18\x03 \x01(\tR\bturnover\x12#\n" +
	"\rcash_turnover\x18\x04 \x01(\tR\fcashTurnover\x12%\n" +
	"\x0ebonus_turnover\x18\x05 \x01(\tR\rbonusTurnover\x12\x18\n" +
	"\adeposit\x18\x06 \x01(\tR\adeposit\x12!\n" +
	"\flast_deposit\x18\a \x01(\tR\vlastDeposit\x12#\n" +
	"\rdeposit_count\x18\b \x01(\x05R\fdepositCount\x12\x1a\n" +
	"\bwithdraw\x18\t \x01(\tR\bwithdraw\x12#\n" +
	"\rlast_withdraw\x18\n" +
	" \x01(\tR\flastWithdraw\x12%\n" +
	"\x0ewithdraw_count\x18\v \x01(\x05R\rwithdrawCount\x12\x14\n" +
	"\x05bonus\x18\f \x01(\tR\x05bonus\x12%\n" +
	"\x0evalid_turnover\x18\r \x01(\tR\rvalidTurnover\x12,\n" +
	"\x12average_bet_amount\x18\x0e \x01(\tR\x10averageBetAmount\x12\x10\n" +
	"\x03ggr\x18\x0f \x01(\tR\x03ggr\x12%\n" +
	"\x0eggr_percentage\x18\x10 \x01(\tR\rggrPercentage\x124\n" +
	"\x16manually_added_balance\x18\x11 \x01(\tR\x14manuallyAddedBalance\x12#\n" +
	"\rbonus_claimed\x18\x12 \x01(\tR\fbonusClaimed\x12\x10\n" +
	"\x03ngr\x18\x13 \x01(\tR\x03ngr\x121\n" +
	"\x15ggr_to_ngr_percentage\x18\x14 \x01(\tR\x12ggrToNgrPercentage\x12/\n" +
	"\x13turnover_multiplier\x18\x15 \x01(\tR\x12turnoverMultiplier\x129\n" +
	"\x19deposit_to_withdraw_ratio\x18\x16 \x01(\tR\x16depositToWithdrawRatio\x12\x10\n" +
	"\x03rtp\x18\x17 \x01(\tR\x03rtp\"'\n" +
	"%GetOverviewDashboardFromWalletRequest\"\xe3\x06\n" +
	"&GetOverviewDashboardFromWalletResponse\x12S\n" +
	"\x03ggr\x18\x01 \x01(\v2A.api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.GGRR\x03ggr\x12S\n" +
	"\x03ngr\x18\x02 \x01(\v2A.api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.NGRR\x03ngr\x12_\n" +
	"\adeposit\x18\x03 \x01(\v2E.api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.DepositR\adeposit\x12b\n" +
	"\bwithdraw\x18\x04 \x01(\v2F.api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.WithdrawR\bwithdraw\x12\x88\x01\n" +
	"\x16deposit_minus_withdraw\x18\x05 \x01(\v2R.api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.DepositMinusWithdrawR\x14depositMinusWithdraw\x1a9\n" +
	"\x03GGR\x12\x14\n" +
	"\x05today\x18\x01 \x01(\tR\x05today\x12\x1c\n" +
	"\tyesterday\x18\x02 \x01(\tR\tyesterday\x1a9\n" +
	"\x03NGR\x12\x14\n" +
	"\x05today\x18\x01 \x01(\tR\x05today\x12\x1c\n" +
	"\tyesterday\x18\x02 \x01(\tR\tyesterday\x1a=\n" +
	"\aDeposit\x12\x14\n" +
	"\x05today\x18\x01 \x01(\tR\x05today\x12\x1c\n" +
	"\tyesterday\x18\x02 \x01(\tR\tyesterday\x1a>\n" +
	"\bWithdraw\x12\x14\n" +
	"\x05today\x18\x01 \x01(\tR\x05today\x12\x1c\n" +
	"\tyesterday\x18\x02 \x01(\tR\tyesterday\x1aJ\n" +
	"\x14DepositMinusWithdraw\x12\x14\n" +
	"\x05today\x18\x01 \x01(\tR\x05today\x12\x1c\n" +
	"\tyesterday\x18\x02 \x01(\tR\tyesterday\"\xbf\x01\n" +
	"\bCurrency\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x18\n" +
	"\aenabled\x18\x02 \x01(\bR\aenabled\x12\x16\n" +
	"\x06hidden\x18\x03 \x01(\bR\x06hidden\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x16\n" +
	"\x06symbol\x18\x05 \x01(\tR\x06symbol\x12\x12\n" +
	"\x04icon\x18\x06 \x01(\tR\x04icon\x12%\n" +
	"\x0edecimal_places\x18\a \x01(\x05R\rdecimalPlaces\"Q\n" +
	"\x12AddCurrencyRequest\x12;\n" +
	"\bcurrency\x18\x01 \x01(\v2\x1f.api.wallet.service.v1.CurrencyR\bcurrency\"\x15\n" +
	"\x13AddCurrencyResponse\"\xb1\x02\n" +
	"\x15UpdateCurrencyRequest\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x1d\n" +
	"\aenabled\x18\x02 \x01(\bH\x00R\aenabled\x88\x01\x01\x12\x1b\n" +
	"\x06hidden\x18\x03 \x01(\bH\x01R\x06hidden\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x04 \x01(\tH\x02R\x04type\x88\x01\x01\x12\x1b\n" +
	"\x06symbol\x18\x05 \x01(\tH\x03R\x06symbol\x88\x01\x01\x12\x17\n" +
	"\x04icon\x18\x06 \x01(\tH\x04R\x04icon\x88\x01\x01\x12*\n" +
	"\x0edecimal_places\x18\a \x01(\x05H\x05R\rdecimalPlaces\x88\x01\x01B\n" +
	"\n" +
	"\b_enabledB\t\n" +
	"\a_hiddenB\a\n" +
	"\x05_typeB\t\n" +
	"\a_symbolB\a\n" +
	"\x05_iconB\x11\n" +
	"\x0f_decimal_places\"\x18\n" +
	"\x16UpdateCurrencyResponse\"6\n" +
	"\x14GetCurrenciesRequest\x12\x1e\n" +
	"\n" +
	"currencies\x18\x01 \x03(\tR\n" +
	"currencies\"X\n" +
	"\x15GetCurrenciesResponse\x12?\n" +
	"\n" +
	"currencies\x18\x01 \x03(\v2\x1f.api.wallet.service.v1.CurrencyR\n" +
	"currencies\"\x8a\x01\n" +
	"\x15ListCurrenciesRequest\x12\x1e\n" +
	"\n" +
	"currencies\x18\x01 \x03(\tR\n" +
	"currencies\x12\x1d\n" +
	"\aenabled\x18\x02 \x01(\bH\x00R\aenabled\x88\x01\x01\x12\x1b\n" +
	"\x06hidden\x18\x03 \x01(\bH\x01R\x06hidden\x88\x01\x01B\n" +
	"\n" +
	"\b_enabledB\t\n" +
	"\a_hidden\"\xb7\x01\n" +
	"\x16ListCurrenciesResponse\x12?\n" +
	"\n" +
	"currencies\x18\x01 \x03(\v2\x1f.api.wallet.service.v1.CurrencyR\n" +
	"currencies\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12#\n" +
	"\rtotal_enabled\x18\x03 \x01(\x05R\ftotalEnabled\x12!\n" +
	"\ftotal_hidden\x18\x04 \x01(\x05R\vtotalHidden\"\xda\x02\n" +
	"\x1dUpdateOperatorCurrencyRequest\x12\x1f\n" +
	"\voperator_id\x18\x01 \x01(\x03R\n" +
	"operatorId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x1d\n" +
	"\aenabled\x18\x03 \x01(\bH\x00R\aenabled\x88\x01\x01\x12\x1b\n" +
	"\x06hidden\x18\x04 \x01(\bH\x01R\x06hidden\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x05 \x01(\tH\x02R\x04type\x88\x01\x01\x12\x1b\n" +
	"\x06symbol\x18\x06 \x01(\tH\x03R\x06symbol\x88\x01\x01\x12\x17\n" +
	"\x04icon\x18\a \x01(\tH\x04R\x04icon\x88\x01\x01\x12*\n" +
	"\x0edecimal_places\x18\b \x01(\x05H\x05R\rdecimalPlaces\x88\x01\x01B\n" +
	"\n" +
	"\b_enabledB\t\n" +
	"\a_hiddenB\a\n" +
	"\x05_typeB\t\n" +
	"\a_symbolB\a\n" +
	"\x05_iconB\x11\n" +
	"\x0f_decimal_places\" \n" +
	"\x1eUpdateOperatorCurrencyResponse\"j\n" +
	"\x19UpdateUserCurrencyRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\"\x1c\n" +
	"\x1aUpdateUserCurrencyResponse\"\xec\x04\n" +
	"#AddResponsibleGamblingConfigRequest\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12(\n" +
	"\rdeposit_limit\x18\x02 \x01(\tH\x00R\fdepositLimit\x88\x01\x01\x12.\n" +
	"\x10withdrawal_limit\x18\x03 \x01(\tH\x01R\x0fwithdrawalLimit\x88\x01\x01\x12-\n" +
	"\x10daily_play_limit\x18\x04 \x01(\tH\x02R\x0edailyPlayLimit\x88\x01\x01\x12/\n" +
	"\x11weekly_play_limit\x18\x05 \x01(\tH\x03R\x0fweeklyPlayLimit\x88\x01\x01\x121\n" +
	"\x12monthly_play_limit\x18\x06 \x01(\tH\x04R\x10monthlyPlayLimit\x88\x01\x01\x12-\n" +
	"\x10daily_loss_limit\x18\a \x01(\tH\x05R\x0edailyLossLimit\x88\x01\x01\x12/\n" +
	"\x11weekly_loss_limit\x18\b \x01(\tH\x06R\x0fweeklyLossLimit\x88\x01\x01\x121\n" +
	"\x12monthly_loss_limit\x18\t \x01(\tH\aR\x10monthlyLossLimit\x88\x01\x01B\x10\n" +
	"\x0e_deposit_limitB\x13\n" +
	"\x11_withdrawal_limitB\x13\n" +
	"\x11_daily_play_limitB\x14\n" +
	"\x12_weekly_play_limitB\x15\n" +
	"\x13_monthly_play_limitB\x13\n" +
	"\x11_daily_loss_limitB\x14\n" +
	"\x12_weekly_loss_limitB\x15\n" +
	"\x13_monthly_loss_limit\"&\n" +
	"$AddResponsibleGamblingConfigResponse\"\x9e\x02\n" +
	"&DeleteResponsibleGamblingConfigRequest\x12)\n" +
	"\x0etarget_user_id\x18\x01 \x01(\x03H\x00R\ftargetUserId\x88\x01\x01\x12$\n" +
	"\voperator_id\x18\x02 \x01(\x03H\x01R\n" +
	"operatorId\x88\x01\x01\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12\x1d\n" +
	"\n" +
	"limit_type\x18\x04 \x01(\tR\tlimitType\x12/\n" +
	"\x11initiator_user_id\x18\x05 \x01(\x03H\x02R\x0finitiatorUserId\x88\x01\x01B\x11\n" +
	"\x0f_target_user_idB\x0e\n" +
	"\f_operator_idB\x14\n" +
	"\x12_initiator_user_id\")\n" +
	"'DeleteResponsibleGamblingConfigResponse\"\xff\t\n" +
	"\x19ResponsibleGamblingConfig\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12#\n" +
	"\rdeposit_limit\x18\x02 \x01(\tR\fdepositLimit\x12)\n" +
	"\x10withdrawal_limit\x18\x03 \x01(\tR\x0fwithdrawalLimit\x12(\n" +
	"\x10daily_play_limit\x18\x04 \x01(\tR\x0edailyPlayLimit\x12*\n" +
	"\x11weekly_play_limit\x18\x05 \x01(\tR\x0fweeklyPlayLimit\x12,\n" +
	"\x12monthly_play_limit\x18\x06 \x01(\tR\x10monthlyPlayLimit\x12(\n" +
	"\x10daily_loss_limit\x18\a \x01(\tR\x0edailyLossLimit\x12*\n" +
	"\x11weekly_loss_limit\x18\b \x01(\tR\x0fweeklyLossLimit\x12,\n" +
	"\x12monthly_loss_limit\x18\t \x01(\tR\x10monthlyLossLimit\x12f\n" +
	"\"deposit_limit_delete_schedule_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x1edepositLimitDeleteScheduleTime\x12l\n" +
	"%withdrawal_limit_delete_schedule_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampR!withdrawalLimitDeleteScheduleTime\x12k\n" +
	"%daily_play_limit_delete_schedule_time\x18\f \x01(\v2\x1a.google.protobuf.TimestampR dailyPlayLimitDeleteScheduleTime\x12m\n" +
	"&weekly_play_limit_delete_schedule_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR!weeklyPlayLimitDeleteScheduleTime\x12o\n" +
	"'monthly_play_limit_delete_schedule_time\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\"monthlyPlayLimitDeleteScheduleTime\x12k\n" +
	"%daily_loss_limit_delete_schedule_time\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR dailyLossLimitDeleteScheduleTime\x12m\n" +
	"&weekly_loss_limit_delete_schedule_time\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR!weeklyLossLimitDeleteScheduleTime\x12o\n" +
	"'monthly_loss_limit_delete_schedule_time\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\"monthlyLossLimitDeleteScheduleTime\"\x91\x04\n" +
	"\x19ResponsibleGamblingStatus\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12-\n" +
	"\x12withdrawal_allowed\x18\x02 \x01(\bR\x11withdrawalAllowed\x12)\n" +
	"\x10withdrawal_usage\x18\x03 \x01(\tR\x0fwithdrawalUsage\x12'\n" +
	"\x0fdeposit_allowed\x18\x04 \x01(\bR\x0edepositAllowed\x12#\n" +
	"\rdeposit_usage\x18\x05 \x01(\tR\fdepositUsage\x12(\n" +
	"\x10game_bet_allowed\x18\x06 \x01(\bR\x0egameBetAllowed\x12(\n" +
	"\x10daily_play_usage\x18\a \x01(\tR\x0edailyPlayUsage\x12*\n" +
	"\x11weekly_play_usage\x18\b \x01(\tR\x0fweeklyPlayUsage\x12,\n" +
	"\x12monthly_play_usage\x18\t \x01(\tR\x10monthlyPlayUsage\x12(\n" +
	"\x10daily_loss_usage\x18\n" +
	" \x01(\tR\x0edailyLossUsage\x12*\n" +
	"\x11weekly_loss_usage\x18\v \x01(\tR\x0fweeklyLossUsage\x12,\n" +
	"\x12monthly_loss_usage\x18\f \x01(\tR\x10monthlyLossUsage\"\x87\x01\n" +
	"%ListResponsibleGamblingConfigsRequest\x12\x1c\n" +
	"\auser_id\x18\x01 \x01(\x03H\x00R\x06userId\x88\x01\x01\x12$\n" +
	"\voperator_id\x18\x02 \x01(\x03H\x01R\n" +
	"operatorId\x88\x01\x01B\n" +
	"\n" +
	"\b_user_idB\x0e\n" +
	"\f_operator_id\"\x92\x02\n" +
	"&ListResponsibleGamblingConfigsResponse\x12r\n" +
	"\x1cresponsible_gambling_configs\x18\x01 \x03(\v20.api.wallet.service.v1.ResponsibleGamblingConfigR\x1aresponsibleGamblingConfigs\x12t\n" +
	"\x1dresponsible_gambling_statuses\x18\x02 \x03(\v20.api.wallet.service.v1.ResponsibleGamblingStatusR\x1bresponsibleGamblingStatuses\"\x90\x01\n" +
	"#GetResponsibleGamblingConfigRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12$\n" +
	"\voperator_id\x18\x02 \x01(\x03H\x00R\n" +
	"operatorId\x88\x01\x01\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrencyB\x0e\n" +
	"\f_operator_id\"\x98\x01\n" +
	"$GetResponsibleGamblingConfigResponse\x12p\n" +
	"\x1bresponsible_gambling_config\x18\x01 \x01(\v20.api.wallet.service.v1.ResponsibleGamblingConfigR\x19responsibleGamblingConfig2\xc4\x1c\n" +
	"\x06Wallet\x12\x95\x01\n" +
	"\x0fGetUserBalances\x12-.api.wallet.service.v1.GetUserBalancesRequest\x1a..api.wallet.service.v1.GetUserBalancesResponse\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v1/wallet/balances/list\x12o\n" +
	"\x0eGetUserBalance\x12,.api.wallet.service.v1.GetUserBalanceRequest\x1a-.api.wallet.service.v1.GetUserBalanceResponse\"\x00\x12W\n" +
	"\x06Credit\x12$.api.wallet.service.v1.CreditRequest\x1a%.api.wallet.service.v1.CreditResponse\"\x00\x12T\n" +
	"\x05Debit\x12#.api.wallet.service.v1.DebitRequest\x1a$.api.wallet.service.v1.DebitResponse\"\x00\x12`\n" +
	"\tGameDebit\x12'.api.wallet.service.v1.GameDebitRequest\x1a(.api.wallet.service.v1.GameDebitResponse\"\x00\x12c\n" +
	"\n" +
	"GameCredit\x12(.api.wallet.service.v1.GameCreditRequest\x1a).api.wallet.service.v1.GameCreditResponse\"\x00\x12W\n" +
	"\x06Freeze\x12$.api.wallet.service.v1.FreezeRequest\x1a%.api.wallet.service.v1.FreezeResponse\"\x00\x12W\n" +
	"\x06Settle\x12$.api.wallet.service.v1.SettleRequest\x1a%.api.wallet.service.v1.SettleResponse\"\x00\x12]\n" +
	"\bRollback\x12&.api.wallet.service.v1.RollbackRequest\x1a'.api.wallet.service.v1.RollbackResponse\"\x00\x12c\n" +
	"\n" +
	"GetWallets\x12(.api.wallet.service.v1.GetWalletsRequest\x1a).api.wallet.service.v1.GetWalletsResponse\"\x00\x12\x9c\x01\n" +
	"\x1dListWalletBalanceTransactions\x12;.api.wallet.service.v1.ListWalletBalanceTransactionsRequest\x1a<.api.wallet.service.v1.ListWalletBalanceTransactionsResponse\"\x00\x12\xa8\x01\n" +
	"!GetWalletBalanceTransactionsByIds\x12?.api.wallet.service.v1.GetWalletBalanceTransactionsByIdsRequest\x1a@.api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse\"\x00\x12\x96\x01\n" +
	"\x1bGetWalletCreditTransactions\x129.api.wallet.service.v1.GetWalletCreditTransactionsRequest\x1a:.api.wallet.service.v1.GetWalletCreditTransactionsResponse\"\x00\x12u\n" +
	"\x10GetExchangeRates\x12..api.wallet.service.v1.GetExchangeRatesRequest\x1a/.api.wallet.service.v1.GetExchangeRatesResponse\"\x00\x12\x90\x01\n" +
	"\x19GetUserTransactionSummary\x127.api.wallet.service.v1.GetUserTransactionSummaryRequest\x1a8.api.wallet.service.v1.GetUserTransactionSummaryResponse\"\x00\x12\xae\x01\n" +
	"#GetBackofficeUserOverviewFromWallet\x12A.api.wallet.service.v1.GetBackofficeUserOverviewFromWalletRequest\x1aB.api.wallet.service.v1.GetBackofficeUserOverviewFromWalletResponse\"\x00\x12\x9f\x01\n" +
	"\x1eGetOverviewDashboardFromWallet\x12<.api.wallet.service.v1.GetOverviewDashboardFromWalletRequest\x1a=.api.wallet.service.v1.GetOverviewDashboardFromWalletResponse\"\x00\x12f\n" +
	"\vAddCurrency\x12).api.wallet.service.v1.AddCurrencyRequest\x1a*.api.wallet.service.v1.AddCurrencyResponse\"\x00\x12o\n" +
	"\x0eUpdateCurrency\x12,.api.wallet.service.v1.UpdateCurrencyRequest\x1a-.api.wallet.service.v1.UpdateCurrencyResponse\"\x00\x12\x90\x01\n" +
	"\rGetCurrencies\x12+.api.wallet.service.v1.GetCurrenciesRequest\x1a,.api.wallet.service.v1.GetCurrenciesResponse\"$\x82\xd3\xe4\x93\x02\x1e:\x01*\"\x19/v1/wallet/currencies/get\x12o\n" +
	"\x0eListCurrencies\x12,.api.wallet.service.v1.ListCurrenciesRequest\x1a-.api.wallet.service.v1.ListCurrenciesResponse\"\x00\x12\x87\x01\n" +
	"\x16UpdateOperatorCurrency\x124.api.wallet.service.v1.UpdateOperatorCurrencyRequest\x1a5.api.wallet.service.v1.UpdateOperatorCurrencyResponse\"\x00\x12{\n" +
	"\x12UpdateUserCurrency\x120.api.wallet.service.v1.UpdateUserCurrencyRequest\x1a1.api.wallet.service.v1.UpdateUserCurrencyResponse\"\x00\x12\xce\x01\n" +
	"\x1cAddResponsibleGamblingConfig\x12:.api.wallet.service.v1.AddResponsibleGamblingConfigRequest\x1a;.api.wallet.service.v1.AddResponsibleGamblingConfigResponse\"5\x82\xd3\xe4\x93\x02/:\x01*\"*/v1/wallet/responsible-gambling/config/add\x12\xda\x01\n" +
	"\x1fDeleteResponsibleGamblingConfig\x12=.api.wallet.service.v1.DeleteResponsibleGamblingConfigRequest\x1a>.api.wallet.service.v1.DeleteResponsibleGamblingConfigResponse\"8\x82\xd3\xe4\x93\x022:\x01*\"-/v1/wallet/responsible-gambling/config/delete\x12\xd6\x01\n" +
	"\x1eListResponsibleGamblingConfigs\x12<.api.wallet.service.v1.ListResponsibleGamblingConfigsRequest\x1a=.api.wallet.service.v1.ListResponsibleGamblingConfigsResponse\"7\x82\xd3\xe4\x93\x021:\x01*\",/v1/wallet/responsible-gambling/configs/list\x12\x99\x01\n" +
	"\x1cGetResponsibleGamblingConfig\x12:.api.wallet.service.v1.GetResponsibleGamblingConfigRequest\x1a;.api.wallet.service.v1.GetResponsibleGamblingConfigResponse\"\x00BS\n" +
	"\x15api.wallet.service.v1P\x01Z8github.com/infigaming-com/meepo-api/wallet/service/v1;v1b\x06proto3"

var (
	file_wallet_service_v1_wallet_proto_rawDescOnce sync.Once
	file_wallet_service_v1_wallet_proto_rawDescData []byte
)

func file_wallet_service_v1_wallet_proto_rawDescGZIP() []byte {
	file_wallet_service_v1_wallet_proto_rawDescOnce.Do(func() {
		file_wallet_service_v1_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wallet_service_v1_wallet_proto_rawDesc), len(file_wallet_service_v1_wallet_proto_rawDesc)))
	})
	return file_wallet_service_v1_wallet_proto_rawDescData
}

var file_wallet_service_v1_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 71)
var file_wallet_service_v1_wallet_proto_goTypes = []any{
	(*GetUserBalancesRequest)(nil),                                       // 0: api.wallet.service.v1.GetUserBalancesRequest
	(*GetUserBalancesResponse)(nil),                                      // 1: api.wallet.service.v1.GetUserBalancesResponse
	(*GetUserBalanceRequest)(nil),                                        // 2: api.wallet.service.v1.GetUserBalanceRequest
	(*GetUserBalanceResponse)(nil),                                       // 3: api.wallet.service.v1.GetUserBalanceResponse
	(*CreditRequest)(nil),                                                // 4: api.wallet.service.v1.CreditRequest
	(*CreditResponse)(nil),                                               // 5: api.wallet.service.v1.CreditResponse
	(*DebitRequest)(nil),                                                 // 6: api.wallet.service.v1.DebitRequest
	(*DebitResponse)(nil),                                                // 7: api.wallet.service.v1.DebitResponse
	(*GameDebitRequest)(nil),                                             // 8: api.wallet.service.v1.GameDebitRequest
	(*GameDebitResponse)(nil),                                            // 9: api.wallet.service.v1.GameDebitResponse
	(*GameCreditRequest)(nil),                                            // 10: api.wallet.service.v1.GameCreditRequest
	(*GameCreditResponse)(nil),                                           // 11: api.wallet.service.v1.GameCreditResponse
	(*FreezeRequest)(nil),                                                // 12: api.wallet.service.v1.FreezeRequest
	(*FreezeResponse)(nil),                                               // 13: api.wallet.service.v1.FreezeResponse
	(*SettleRequest)(nil),                                                // 14: api.wallet.service.v1.SettleRequest
	(*SettleResponse)(nil),                                               // 15: api.wallet.service.v1.SettleResponse
	(*RollbackRequest)(nil),                                              // 16: api.wallet.service.v1.RollbackRequest
	(*RollbackResponse)(nil),                                             // 17: api.wallet.service.v1.RollbackResponse
	(*GetWalletsRequest)(nil),                                            // 18: api.wallet.service.v1.GetWalletsRequest
	(*GetWalletsResponse)(nil),                                           // 19: api.wallet.service.v1.GetWalletsResponse
	(*ListWalletBalanceTransactionsRequest)(nil),                         // 20: api.wallet.service.v1.ListWalletBalanceTransactionsRequest
	(*ListWalletBalanceTransactionsResponse)(nil),                        // 21: api.wallet.service.v1.ListWalletBalanceTransactionsResponse
	(*GetWalletBalanceTransactionsByIdsRequest)(nil),                     // 22: api.wallet.service.v1.GetWalletBalanceTransactionsByIdsRequest
	(*GetWalletBalanceTransactionsByIdsResponse)(nil),                    // 23: api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse
	(*GetWalletCreditTransactionsRequest)(nil),                           // 24: api.wallet.service.v1.GetWalletCreditTransactionsRequest
	(*GetWalletCreditTransactionsResponse)(nil),                          // 25: api.wallet.service.v1.GetWalletCreditTransactionsResponse
	(*GetExchangeRatesRequest)(nil),                                      // 26: api.wallet.service.v1.GetExchangeRatesRequest
	(*GetExchangeRatesResponse)(nil),                                     // 27: api.wallet.service.v1.GetExchangeRatesResponse
	(*GetUserTransactionSummaryRequest)(nil),                             // 28: api.wallet.service.v1.GetUserTransactionSummaryRequest
	(*GetUserTransactionSummaryResponse)(nil),                            // 29: api.wallet.service.v1.GetUserTransactionSummaryResponse
	(*GetBackofficeUserOverviewFromWalletRequest)(nil),                   // 30: api.wallet.service.v1.GetBackofficeUserOverviewFromWalletRequest
	(*GetBackofficeUserOverviewFromWalletResponse)(nil),                  // 31: api.wallet.service.v1.GetBackofficeUserOverviewFromWalletResponse
	(*GetOverviewDashboardFromWalletRequest)(nil),                        // 32: api.wallet.service.v1.GetOverviewDashboardFromWalletRequest
	(*GetOverviewDashboardFromWalletResponse)(nil),                       // 33: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse
	(*Currency)(nil),                                                     // 34: api.wallet.service.v1.Currency
	(*AddCurrencyRequest)(nil),                                           // 35: api.wallet.service.v1.AddCurrencyRequest
	(*AddCurrencyResponse)(nil),                                          // 36: api.wallet.service.v1.AddCurrencyResponse
	(*UpdateCurrencyRequest)(nil),                                        // 37: api.wallet.service.v1.UpdateCurrencyRequest
	(*UpdateCurrencyResponse)(nil),                                       // 38: api.wallet.service.v1.UpdateCurrencyResponse
	(*GetCurrenciesRequest)(nil),                                         // 39: api.wallet.service.v1.GetCurrenciesRequest
	(*GetCurrenciesResponse)(nil),                                        // 40: api.wallet.service.v1.GetCurrenciesResponse
	(*ListCurrenciesRequest)(nil),                                        // 41: api.wallet.service.v1.ListCurrenciesRequest
	(*ListCurrenciesResponse)(nil),                                       // 42: api.wallet.service.v1.ListCurrenciesResponse
	(*UpdateOperatorCurrencyRequest)(nil),                                // 43: api.wallet.service.v1.UpdateOperatorCurrencyRequest
	(*UpdateOperatorCurrencyResponse)(nil),                               // 44: api.wallet.service.v1.UpdateOperatorCurrencyResponse
	(*UpdateUserCurrencyRequest)(nil),                                    // 45: api.wallet.service.v1.UpdateUserCurrencyRequest
	(*UpdateUserCurrencyResponse)(nil),                                   // 46: api.wallet.service.v1.UpdateUserCurrencyResponse
	(*AddResponsibleGamblingConfigRequest)(nil),                          // 47: api.wallet.service.v1.AddResponsibleGamblingConfigRequest
	(*AddResponsibleGamblingConfigResponse)(nil),                         // 48: api.wallet.service.v1.AddResponsibleGamblingConfigResponse
	(*DeleteResponsibleGamblingConfigRequest)(nil),                       // 49: api.wallet.service.v1.DeleteResponsibleGamblingConfigRequest
	(*DeleteResponsibleGamblingConfigResponse)(nil),                      // 50: api.wallet.service.v1.DeleteResponsibleGamblingConfigResponse
	(*ResponsibleGamblingConfig)(nil),                                    // 51: api.wallet.service.v1.ResponsibleGamblingConfig
	(*ResponsibleGamblingStatus)(nil),                                    // 52: api.wallet.service.v1.ResponsibleGamblingStatus
	(*ListResponsibleGamblingConfigsRequest)(nil),                        // 53: api.wallet.service.v1.ListResponsibleGamblingConfigsRequest
	(*ListResponsibleGamblingConfigsResponse)(nil),                       // 54: api.wallet.service.v1.ListResponsibleGamblingConfigsResponse
	(*GetResponsibleGamblingConfigRequest)(nil),                          // 55: api.wallet.service.v1.GetResponsibleGamblingConfigRequest
	(*GetResponsibleGamblingConfigResponse)(nil),                         // 56: api.wallet.service.v1.GetResponsibleGamblingConfigResponse
	(*GetUserBalancesResponse_Balance)(nil),                              // 57: api.wallet.service.v1.GetUserBalancesResponse.Balance
	(*CreditRequest_Ratio)(nil),                                          // 58: api.wallet.service.v1.CreditRequest.Ratio
	(*GetWalletsResponse_TotalAssets)(nil),                               // 59: api.wallet.service.v1.GetWalletsResponse.TotalAssets
	(*GetWalletsResponse_Credit)(nil),                                    // 60: api.wallet.service.v1.GetWalletsResponse.Credit
	(*GetWalletsResponse_Wallet)(nil),                                    // 61: api.wallet.service.v1.GetWalletsResponse.Wallet
	(*ListWalletBalanceTransactionsResponse_BalanceTransaction)(nil),     // 62: api.wallet.service.v1.ListWalletBalanceTransactionsResponse.BalanceTransaction
	(*GetWalletBalanceTransactionsByIdsResponse_BalanceTransaction)(nil), // 63: api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse.BalanceTransaction
	(*GetWalletCreditTransactionsResponse_CreditTransaction)(nil),        // 64: api.wallet.service.v1.GetWalletCreditTransactionsResponse.CreditTransaction
	nil, // 65: api.wallet.service.v1.GetExchangeRatesResponse.ExchangeRatesEntry
	(*GetOverviewDashboardFromWalletResponse_GGR)(nil),                  // 66: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.GGR
	(*GetOverviewDashboardFromWalletResponse_NGR)(nil),                  // 67: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.NGR
	(*GetOverviewDashboardFromWalletResponse_Deposit)(nil),              // 68: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.Deposit
	(*GetOverviewDashboardFromWalletResponse_Withdraw)(nil),             // 69: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.Withdraw
	(*GetOverviewDashboardFromWalletResponse_DepositMinusWithdraw)(nil), // 70: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.DepositMinusWithdraw
	(*timestamppb.Timestamp)(nil),                                       // 71: google.protobuf.Timestamp
}
var file_wallet_service_v1_wallet_proto_depIdxs = []int32{
	57, // 0: api.wallet.service.v1.GetUserBalancesResponse.balances:type_name -> api.wallet.service.v1.GetUserBalancesResponse.Balance
	59, // 1: api.wallet.service.v1.GetWalletsResponse.total_assets:type_name -> api.wallet.service.v1.GetWalletsResponse.TotalAssets
	61, // 2: api.wallet.service.v1.GetWalletsResponse.wallets:type_name -> api.wallet.service.v1.GetWalletsResponse.Wallet
	71, // 3: api.wallet.service.v1.ListWalletBalanceTransactionsRequest.start_time:type_name -> google.protobuf.Timestamp
	71, // 4: api.wallet.service.v1.ListWalletBalanceTransactionsRequest.end_time:type_name -> google.protobuf.Timestamp
	62, // 5: api.wallet.service.v1.ListWalletBalanceTransactionsResponse.balance_transactions:type_name -> api.wallet.service.v1.ListWalletBalanceTransactionsResponse.BalanceTransaction
	63, // 6: api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse.balance_transactions:type_name -> api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse.BalanceTransaction
	64, // 7: api.wallet.service.v1.GetWalletCreditTransactionsResponse.credit_transactions:type_name -> api.wallet.service.v1.GetWalletCreditTransactionsResponse.CreditTransaction
	65, // 8: api.wallet.service.v1.GetExchangeRatesResponse.exchange_rates:type_name -> api.wallet.service.v1.GetExchangeRatesResponse.ExchangeRatesEntry
	71, // 9: api.wallet.service.v1.GetUserTransactionSummaryRequest.start_time:type_name -> google.protobuf.Timestamp
	71, // 10: api.wallet.service.v1.GetUserTransactionSummaryRequest.end_time:type_name -> google.protobuf.Timestamp
	71, // 11: api.wallet.service.v1.GetBackofficeUserOverviewFromWalletRequest.start_time:type_name -> google.protobuf.Timestamp
	71, // 12: api.wallet.service.v1.GetBackofficeUserOverviewFromWalletRequest.end_time:type_name -> google.protobuf.Timestamp
	66, // 13: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.ggr:type_name -> api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.GGR
	67, // 14: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.ngr:type_name -> api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.NGR
	68, // 15: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.deposit:type_name -> api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.Deposit
	69, // 16: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.withdraw:type_name -> api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.Withdraw
	70, // 17: api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.deposit_minus_withdraw:type_name -> api.wallet.service.v1.GetOverviewDashboardFromWalletResponse.DepositMinusWithdraw
	34, // 18: api.wallet.service.v1.AddCurrencyRequest.currency:type_name -> api.wallet.service.v1.Currency
	34, // 19: api.wallet.service.v1.GetCurrenciesResponse.currencies:type_name -> api.wallet.service.v1.Currency
	34, // 20: api.wallet.service.v1.ListCurrenciesResponse.currencies:type_name -> api.wallet.service.v1.Currency
	71, // 21: api.wallet.service.v1.ResponsibleGamblingConfig.deposit_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	71, // 22: api.wallet.service.v1.ResponsibleGamblingConfig.withdrawal_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	71, // 23: api.wallet.service.v1.ResponsibleGamblingConfig.daily_play_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	71, // 24: api.wallet.service.v1.ResponsibleGamblingConfig.weekly_play_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	71, // 25: api.wallet.service.v1.ResponsibleGamblingConfig.monthly_play_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	71, // 26: api.wallet.service.v1.ResponsibleGamblingConfig.daily_loss_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	71, // 27: api.wallet.service.v1.ResponsibleGamblingConfig.weekly_loss_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	71, // 28: api.wallet.service.v1.ResponsibleGamblingConfig.monthly_loss_limit_delete_schedule_time:type_name -> google.protobuf.Timestamp
	51, // 29: api.wallet.service.v1.ListResponsibleGamblingConfigsResponse.responsible_gambling_configs:type_name -> api.wallet.service.v1.ResponsibleGamblingConfig
	52, // 30: api.wallet.service.v1.ListResponsibleGamblingConfigsResponse.responsible_gambling_statuses:type_name -> api.wallet.service.v1.ResponsibleGamblingStatus
	51, // 31: api.wallet.service.v1.GetResponsibleGamblingConfigResponse.responsible_gambling_config:type_name -> api.wallet.service.v1.ResponsibleGamblingConfig
	71, // 32: api.wallet.service.v1.GetWalletsResponse.Credit.created_at:type_name -> google.protobuf.Timestamp
	60, // 33: api.wallet.service.v1.GetWalletsResponse.Wallet.credits:type_name -> api.wallet.service.v1.GetWalletsResponse.Credit
	71, // 34: api.wallet.service.v1.ListWalletBalanceTransactionsResponse.BalanceTransaction.created_at:type_name -> google.protobuf.Timestamp
	71, // 35: api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse.BalanceTransaction.created_at:type_name -> google.protobuf.Timestamp
	71, // 36: api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse.BalanceTransaction.updated_at:type_name -> google.protobuf.Timestamp
	71, // 37: api.wallet.service.v1.GetWalletCreditTransactionsResponse.CreditTransaction.created_at:type_name -> google.protobuf.Timestamp
	0,  // 38: api.wallet.service.v1.Wallet.GetUserBalances:input_type -> api.wallet.service.v1.GetUserBalancesRequest
	2,  // 39: api.wallet.service.v1.Wallet.GetUserBalance:input_type -> api.wallet.service.v1.GetUserBalanceRequest
	4,  // 40: api.wallet.service.v1.Wallet.Credit:input_type -> api.wallet.service.v1.CreditRequest
	6,  // 41: api.wallet.service.v1.Wallet.Debit:input_type -> api.wallet.service.v1.DebitRequest
	8,  // 42: api.wallet.service.v1.Wallet.GameDebit:input_type -> api.wallet.service.v1.GameDebitRequest
	10, // 43: api.wallet.service.v1.Wallet.GameCredit:input_type -> api.wallet.service.v1.GameCreditRequest
	12, // 44: api.wallet.service.v1.Wallet.Freeze:input_type -> api.wallet.service.v1.FreezeRequest
	14, // 45: api.wallet.service.v1.Wallet.Settle:input_type -> api.wallet.service.v1.SettleRequest
	16, // 46: api.wallet.service.v1.Wallet.Rollback:input_type -> api.wallet.service.v1.RollbackRequest
	18, // 47: api.wallet.service.v1.Wallet.GetWallets:input_type -> api.wallet.service.v1.GetWalletsRequest
	20, // 48: api.wallet.service.v1.Wallet.ListWalletBalanceTransactions:input_type -> api.wallet.service.v1.ListWalletBalanceTransactionsRequest
	22, // 49: api.wallet.service.v1.Wallet.GetWalletBalanceTransactionsByIds:input_type -> api.wallet.service.v1.GetWalletBalanceTransactionsByIdsRequest
	24, // 50: api.wallet.service.v1.Wallet.GetWalletCreditTransactions:input_type -> api.wallet.service.v1.GetWalletCreditTransactionsRequest
	26, // 51: api.wallet.service.v1.Wallet.GetExchangeRates:input_type -> api.wallet.service.v1.GetExchangeRatesRequest
	28, // 52: api.wallet.service.v1.Wallet.GetUserTransactionSummary:input_type -> api.wallet.service.v1.GetUserTransactionSummaryRequest
	30, // 53: api.wallet.service.v1.Wallet.GetBackofficeUserOverviewFromWallet:input_type -> api.wallet.service.v1.GetBackofficeUserOverviewFromWalletRequest
	32, // 54: api.wallet.service.v1.Wallet.GetOverviewDashboardFromWallet:input_type -> api.wallet.service.v1.GetOverviewDashboardFromWalletRequest
	35, // 55: api.wallet.service.v1.Wallet.AddCurrency:input_type -> api.wallet.service.v1.AddCurrencyRequest
	37, // 56: api.wallet.service.v1.Wallet.UpdateCurrency:input_type -> api.wallet.service.v1.UpdateCurrencyRequest
	39, // 57: api.wallet.service.v1.Wallet.GetCurrencies:input_type -> api.wallet.service.v1.GetCurrenciesRequest
	41, // 58: api.wallet.service.v1.Wallet.ListCurrencies:input_type -> api.wallet.service.v1.ListCurrenciesRequest
	43, // 59: api.wallet.service.v1.Wallet.UpdateOperatorCurrency:input_type -> api.wallet.service.v1.UpdateOperatorCurrencyRequest
	45, // 60: api.wallet.service.v1.Wallet.UpdateUserCurrency:input_type -> api.wallet.service.v1.UpdateUserCurrencyRequest
	47, // 61: api.wallet.service.v1.Wallet.AddResponsibleGamblingConfig:input_type -> api.wallet.service.v1.AddResponsibleGamblingConfigRequest
	49, // 62: api.wallet.service.v1.Wallet.DeleteResponsibleGamblingConfig:input_type -> api.wallet.service.v1.DeleteResponsibleGamblingConfigRequest
	53, // 63: api.wallet.service.v1.Wallet.ListResponsibleGamblingConfigs:input_type -> api.wallet.service.v1.ListResponsibleGamblingConfigsRequest
	55, // 64: api.wallet.service.v1.Wallet.GetResponsibleGamblingConfig:input_type -> api.wallet.service.v1.GetResponsibleGamblingConfigRequest
	1,  // 65: api.wallet.service.v1.Wallet.GetUserBalances:output_type -> api.wallet.service.v1.GetUserBalancesResponse
	3,  // 66: api.wallet.service.v1.Wallet.GetUserBalance:output_type -> api.wallet.service.v1.GetUserBalanceResponse
	5,  // 67: api.wallet.service.v1.Wallet.Credit:output_type -> api.wallet.service.v1.CreditResponse
	7,  // 68: api.wallet.service.v1.Wallet.Debit:output_type -> api.wallet.service.v1.DebitResponse
	9,  // 69: api.wallet.service.v1.Wallet.GameDebit:output_type -> api.wallet.service.v1.GameDebitResponse
	11, // 70: api.wallet.service.v1.Wallet.GameCredit:output_type -> api.wallet.service.v1.GameCreditResponse
	13, // 71: api.wallet.service.v1.Wallet.Freeze:output_type -> api.wallet.service.v1.FreezeResponse
	15, // 72: api.wallet.service.v1.Wallet.Settle:output_type -> api.wallet.service.v1.SettleResponse
	17, // 73: api.wallet.service.v1.Wallet.Rollback:output_type -> api.wallet.service.v1.RollbackResponse
	19, // 74: api.wallet.service.v1.Wallet.GetWallets:output_type -> api.wallet.service.v1.GetWalletsResponse
	21, // 75: api.wallet.service.v1.Wallet.ListWalletBalanceTransactions:output_type -> api.wallet.service.v1.ListWalletBalanceTransactionsResponse
	23, // 76: api.wallet.service.v1.Wallet.GetWalletBalanceTransactionsByIds:output_type -> api.wallet.service.v1.GetWalletBalanceTransactionsByIdsResponse
	25, // 77: api.wallet.service.v1.Wallet.GetWalletCreditTransactions:output_type -> api.wallet.service.v1.GetWalletCreditTransactionsResponse
	27, // 78: api.wallet.service.v1.Wallet.GetExchangeRates:output_type -> api.wallet.service.v1.GetExchangeRatesResponse
	29, // 79: api.wallet.service.v1.Wallet.GetUserTransactionSummary:output_type -> api.wallet.service.v1.GetUserTransactionSummaryResponse
	31, // 80: api.wallet.service.v1.Wallet.GetBackofficeUserOverviewFromWallet:output_type -> api.wallet.service.v1.GetBackofficeUserOverviewFromWalletResponse
	33, // 81: api.wallet.service.v1.Wallet.GetOverviewDashboardFromWallet:output_type -> api.wallet.service.v1.GetOverviewDashboardFromWalletResponse
	36, // 82: api.wallet.service.v1.Wallet.AddCurrency:output_type -> api.wallet.service.v1.AddCurrencyResponse
	38, // 83: api.wallet.service.v1.Wallet.UpdateCurrency:output_type -> api.wallet.service.v1.UpdateCurrencyResponse
	40, // 84: api.wallet.service.v1.Wallet.GetCurrencies:output_type -> api.wallet.service.v1.GetCurrenciesResponse
	42, // 85: api.wallet.service.v1.Wallet.ListCurrencies:output_type -> api.wallet.service.v1.ListCurrenciesResponse
	44, // 86: api.wallet.service.v1.Wallet.UpdateOperatorCurrency:output_type -> api.wallet.service.v1.UpdateOperatorCurrencyResponse
	46, // 87: api.wallet.service.v1.Wallet.UpdateUserCurrency:output_type -> api.wallet.service.v1.UpdateUserCurrencyResponse
	48, // 88: api.wallet.service.v1.Wallet.AddResponsibleGamblingConfig:output_type -> api.wallet.service.v1.AddResponsibleGamblingConfigResponse
	50, // 89: api.wallet.service.v1.Wallet.DeleteResponsibleGamblingConfig:output_type -> api.wallet.service.v1.DeleteResponsibleGamblingConfigResponse
	54, // 90: api.wallet.service.v1.Wallet.ListResponsibleGamblingConfigs:output_type -> api.wallet.service.v1.ListResponsibleGamblingConfigsResponse
	56, // 91: api.wallet.service.v1.Wallet.GetResponsibleGamblingConfig:output_type -> api.wallet.service.v1.GetResponsibleGamblingConfigResponse
	65, // [65:92] is the sub-list for method output_type
	38, // [38:65] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_wallet_service_v1_wallet_proto_init() }
func file_wallet_service_v1_wallet_proto_init() {
	if File_wallet_service_v1_wallet_proto != nil {
		return
	}
	file_wallet_service_v1_wallet_proto_msgTypes[20].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[24].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[28].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[30].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[37].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[41].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[43].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[47].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[49].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[53].OneofWrappers = []any{}
	file_wallet_service_v1_wallet_proto_msgTypes[55].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wallet_service_v1_wallet_proto_rawDesc), len(file_wallet_service_v1_wallet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   71,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wallet_service_v1_wallet_proto_goTypes,
		DependencyIndexes: file_wallet_service_v1_wallet_proto_depIdxs,
		MessageInfos:      file_wallet_service_v1_wallet_proto_msgTypes,
	}.Build()
	File_wallet_service_v1_wallet_proto = out.File
	file_wallet_service_v1_wallet_proto_goTypes = nil
	file_wallet_service_v1_wallet_proto_depIdxs = nil
}
