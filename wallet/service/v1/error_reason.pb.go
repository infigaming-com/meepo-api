// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.6
// source: wallet/service/v1/error_reason.proto

package v1

import (
	_ "github.com/go-kratos/kratos/v2/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorReason int32

const (
	ErrorReason_UNSPECIFIED                                   ErrorReason = 0
	ErrorReason_USER_NOT_FOUND                                ErrorReason = 30001
	ErrorReason_USER_DISABLED                                 ErrorReason = 30002
	ErrorReason_GET_OPERATOR_CURRENCIES_FAILED                ErrorReason = 30003
	ErrorReason_ADD_USER_FAILED                               ErrorReason = 30004
	ErrorReason_ADD_BALANCES_FAILED                           ErrorReason = 30005
	ErrorReason_GET_USER_FAILED                               ErrorReason = 30006
	ErrorReason_LOCK_USER_WITH_USER_ID_FAILED                 ErrorReason = 30007
	ErrorReason_UPDATE_USER_FAILED                            ErrorReason = 30008
	ErrorReason_UPDATE_BALANCES_FAILED                        ErrorReason = 30009
	ErrorReason_UPDATE_BALANCE_FAILED                         ErrorReason = 30010
	ErrorReason_GET_USERS_WITH_OPERATOR_IDS_FAILED            ErrorReason = 30011
	ErrorReason_LOCK_BALANCE_WITH_USER_ID_AND_CURRENCY_FAILED ErrorReason = 30012
	ErrorReason_GET_BALANCE_WITH_USER_ID_AND_CURRENCY_FAILED  ErrorReason = 30013
	ErrorReason_GET_BALANCES_WITH_USER_ID_FAILED              ErrorReason = 30014
	ErrorReason_BALANCE_DISABLED                              ErrorReason = 30015
	ErrorReason_GENERATE_CREDIT_ID_FAILED                     ErrorReason = 30016
	ErrorReason_LOCK_CREDIT_WITH_USER_ID_AND_CURRENCY_FAILED  ErrorReason = 30017
	ErrorReason_ADD_CREDIT_FAILED                             ErrorReason = 30018
	ErrorReason_INVALID_TRANSACTION_TYPE                      ErrorReason = 30019
	ErrorReason_GENERATE_BALANCE_TRANSACTION_ID_FAILED        ErrorReason = 30020
	ErrorReason_GENERATE_CREDIT_TRANSACTION_ID_FAILED         ErrorReason = 30021
	ErrorReason_GET_CREDIT_TRANSACTION_FAILED                 ErrorReason = 30022
	ErrorReason_ADD_BALANCE_TRANSACTION_FAILED                ErrorReason = 30023
	ErrorReason_ADD_CREDIT_TRANSACTION_FAILED                 ErrorReason = 30024
	ErrorReason_GET_CREDITS_WITH_USER_ID_AND_CURRENCY_FAILED  ErrorReason = 30025
	ErrorReason_INSUFFICIENT_BALANCE                          ErrorReason = 30026
	ErrorReason_GET_RATES_FAILED                              ErrorReason = 30027
	ErrorReason_UPDATE_CREDIT_FAILED                          ErrorReason = 30028
	ErrorReason_GET_CREDIT_TRANSACTIONS_FAILED                ErrorReason = 30029
	ErrorReason_NO_CREDIT_TRANSACTION_FOUND_FOR_GAME_BET      ErrorReason = 30030
	ErrorReason_GET_CURRENCIES_FAILED                         ErrorReason = 30031
	ErrorReason_GET_BALANCE_TRANSACTION_FAILED                ErrorReason = 30032
	ErrorReason_UPDATE_BALANCE_TRANSACTION_FAILED             ErrorReason = 30033
	ErrorReason_UPDATE_CREDIT_TRANSACTION_FAILED              ErrorReason = 30034
)

// Enum value maps for ErrorReason.
var (
	ErrorReason_name = map[int32]string{
		0:     "UNSPECIFIED",
		30001: "USER_NOT_FOUND",
		30002: "USER_DISABLED",
		30003: "GET_OPERATOR_CURRENCIES_FAILED",
		30004: "ADD_USER_FAILED",
		30005: "ADD_BALANCES_FAILED",
		30006: "GET_USER_FAILED",
		30007: "LOCK_USER_WITH_USER_ID_FAILED",
		30008: "UPDATE_USER_FAILED",
		30009: "UPDATE_BALANCES_FAILED",
		30010: "UPDATE_BALANCE_FAILED",
		30011: "GET_USERS_WITH_OPERATOR_IDS_FAILED",
		30012: "LOCK_BALANCE_WITH_USER_ID_AND_CURRENCY_FAILED",
		30013: "GET_BALANCE_WITH_USER_ID_AND_CURRENCY_FAILED",
		30014: "GET_BALANCES_WITH_USER_ID_FAILED",
		30015: "BALANCE_DISABLED",
		30016: "GENERATE_CREDIT_ID_FAILED",
		30017: "LOCK_CREDIT_WITH_USER_ID_AND_CURRENCY_FAILED",
		30018: "ADD_CREDIT_FAILED",
		30019: "INVALID_TRANSACTION_TYPE",
		30020: "GENERATE_BALANCE_TRANSACTION_ID_FAILED",
		30021: "GENERATE_CREDIT_TRANSACTION_ID_FAILED",
		30022: "GET_CREDIT_TRANSACTION_FAILED",
		30023: "ADD_BALANCE_TRANSACTION_FAILED",
		30024: "ADD_CREDIT_TRANSACTION_FAILED",
		30025: "GET_CREDITS_WITH_USER_ID_AND_CURRENCY_FAILED",
		30026: "INSUFFICIENT_BALANCE",
		30027: "GET_RATES_FAILED",
		30028: "UPDATE_CREDIT_FAILED",
		30029: "GET_CREDIT_TRANSACTIONS_FAILED",
		30030: "NO_CREDIT_TRANSACTION_FOUND_FOR_GAME_BET",
		30031: "GET_CURRENCIES_FAILED",
		30032: "GET_BALANCE_TRANSACTION_FAILED",
		30033: "UPDATE_BALANCE_TRANSACTION_FAILED",
		30034: "UPDATE_CREDIT_TRANSACTION_FAILED",
	}
	ErrorReason_value = map[string]int32{
		"UNSPECIFIED":                                   0,
		"USER_NOT_FOUND":                                30001,
		"USER_DISABLED":                                 30002,
		"GET_OPERATOR_CURRENCIES_FAILED":                30003,
		"ADD_USER_FAILED":                               30004,
		"ADD_BALANCES_FAILED":                           30005,
		"GET_USER_FAILED":                               30006,
		"LOCK_USER_WITH_USER_ID_FAILED":                 30007,
		"UPDATE_USER_FAILED":                            30008,
		"UPDATE_BALANCES_FAILED":                        30009,
		"UPDATE_BALANCE_FAILED":                         30010,
		"GET_USERS_WITH_OPERATOR_IDS_FAILED":            30011,
		"LOCK_BALANCE_WITH_USER_ID_AND_CURRENCY_FAILED": 30012,
		"GET_BALANCE_WITH_USER_ID_AND_CURRENCY_FAILED":  30013,
		"GET_BALANCES_WITH_USER_ID_FAILED":              30014,
		"BALANCE_DISABLED":                              30015,
		"GENERATE_CREDIT_ID_FAILED":                     30016,
		"LOCK_CREDIT_WITH_USER_ID_AND_CURRENCY_FAILED":  30017,
		"ADD_CREDIT_FAILED":                             30018,
		"INVALID_TRANSACTION_TYPE":                      30019,
		"GENERATE_BALANCE_TRANSACTION_ID_FAILED":        30020,
		"GENERATE_CREDIT_TRANSACTION_ID_FAILED":         30021,
		"GET_CREDIT_TRANSACTION_FAILED":                 30022,
		"ADD_BALANCE_TRANSACTION_FAILED":                30023,
		"ADD_CREDIT_TRANSACTION_FAILED":                 30024,
		"GET_CREDITS_WITH_USER_ID_AND_CURRENCY_FAILED":  30025,
		"INSUFFICIENT_BALANCE":                          30026,
		"GET_RATES_FAILED":                              30027,
		"UPDATE_CREDIT_FAILED":                          30028,
		"GET_CREDIT_TRANSACTIONS_FAILED":                30029,
		"NO_CREDIT_TRANSACTION_FOUND_FOR_GAME_BET":      30030,
		"GET_CURRENCIES_FAILED":                         30031,
		"GET_BALANCE_TRANSACTION_FAILED":                30032,
		"UPDATE_BALANCE_TRANSACTION_FAILED":             30033,
		"UPDATE_CREDIT_TRANSACTION_FAILED":              30034,
	}
)

func (x ErrorReason) Enum() *ErrorReason {
	p := new(ErrorReason)
	*p = x
	return p
}

func (x ErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_wallet_service_v1_error_reason_proto_enumTypes[0].Descriptor()
}

func (ErrorReason) Type() protoreflect.EnumType {
	return &file_wallet_service_v1_error_reason_proto_enumTypes[0]
}

func (x ErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorReason.Descriptor instead.
func (ErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_wallet_service_v1_error_reason_proto_rawDescGZIP(), []int{0}
}

var File_wallet_service_v1_error_reason_proto protoreflect.FileDescriptor

const file_wallet_service_v1_error_reason_proto_rawDesc = "" +
	"\n" +
	"$wallet/service/v1/error_reason.proto\x12\x15api.wallet.service.v1\x1a\x13errors/errors.proto*\xea\t\n" +
	"\vErrorReason\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x0eUSER_NOT_FOUND\x10\xb1\xea\x01\x1a\x04\xa8E\x94\x03\x12\x19\n" +
	"\rUSER_DISABLED\x10\xb2\xea\x01\x1a\x04\xa8E\x91\x03\x12$\n" +
	"\x1eGET_OPERATOR_CURRENCIES_FAILED\x10\xb3\xea\x01\x12\x15\n" +
	"\x0fADD_USER_FAILED\x10\xb4\xea\x01\x12\x19\n" +
	"\x13ADD_BALANCES_FAILED\x10\xb5\xea\x01\x12\x15\n" +
	"\x0fGET_USER_FAILED\x10\xb6\xea\x01\x12#\n" +
	"\x1dLOCK_USER_WITH_USER_ID_FAILED\x10\xb7\xea\x01\x12\x18\n" +
	"\x12UPDATE_USER_FAILED\x10\xb8\xea\x01\x12\x1c\n" +
	"\x16UPDATE_BALANCES_FAILED\x10\xb9\xea\x01\x12\x1b\n" +
	"\x15UPDATE_BALANCE_FAILED\x10\xba\xea\x01\x12(\n" +
	"\"GET_USERS_WITH_OPERATOR_IDS_FAILED\x10\xbb\xea\x01\x123\n" +
	"-LOCK_BALANCE_WITH_USER_ID_AND_CURRENCY_FAILED\x10\xbc\xea\x01\x122\n" +
	",GET_BALANCE_WITH_USER_ID_AND_CURRENCY_FAILED\x10\xbd\xea\x01\x12&\n" +
	" GET_BALANCES_WITH_USER_ID_FAILED\x10\xbe\xea\x01\x12\x1c\n" +
	"\x10BALANCE_DISABLED\x10\xbf\xea\x01\x1a\x04\xa8E\x91\x03\x12\x1f\n" +
	"\x19GENERATE_CREDIT_ID_FAILED\x10\xc0\xea\x01\x122\n" +
	",LOCK_CREDIT_WITH_USER_ID_AND_CURRENCY_FAILED\x10\xc1\xea\x01\x12\x17\n" +
	"\x11ADD_CREDIT_FAILED\x10\xc2\xea\x01\x12$\n" +
	"\x18INVALID_TRANSACTION_TYPE\x10\xc3\xea\x01\x1a\x04\xa8E\x90\x03\x12,\n" +
	"&GENERATE_BALANCE_TRANSACTION_ID_FAILED\x10\xc4\xea\x01\x12+\n" +
	"%GENERATE_CREDIT_TRANSACTION_ID_FAILED\x10\xc5\xea\x01\x12#\n" +
	"\x1dGET_CREDIT_TRANSACTION_FAILED\x10\xc6\xea\x01\x12$\n" +
	"\x1eADD_BALANCE_TRANSACTION_FAILED\x10\xc7\xea\x01\x12#\n" +
	"\x1dADD_CREDIT_TRANSACTION_FAILED\x10\xc8\xea\x01\x122\n" +
	",GET_CREDITS_WITH_USER_ID_AND_CURRENCY_FAILED\x10\xc9\xea\x01\x12\x1a\n" +
	"\x14INSUFFICIENT_BALANCE\x10\xca\xea\x01\x12\x16\n" +
	"\x10GET_RATES_FAILED\x10\xcb\xea\x01\x12\x1a\n" +
	"\x14UPDATE_CREDIT_FAILED\x10\xcc\xea\x01\x12$\n" +
	"\x1eGET_CREDIT_TRANSACTIONS_FAILED\x10\xcd\xea\x01\x12.\n" +
	"(NO_CREDIT_TRANSACTION_FOUND_FOR_GAME_BET\x10\xce\xea\x01\x12\x1b\n" +
	"\x15GET_CURRENCIES_FAILED\x10\xcf\xea\x01\x12$\n" +
	"\x1eGET_BALANCE_TRANSACTION_FAILED\x10\xd0\xea\x01\x12'\n" +
	"!UPDATE_BALANCE_TRANSACTION_FAILED\x10\xd1\xea\x01\x12&\n" +
	" UPDATE_CREDIT_TRANSACTION_FAILED\x10\xd2\xea\x01\x1a\x04\xa0E\xf4\x03BS\n" +
	"\x15api.wallet.service.v1P\x01Z8github.com/infigaming-com/meepo-api/wallet/service/v1;v1b\x06proto3"

var (
	file_wallet_service_v1_error_reason_proto_rawDescOnce sync.Once
	file_wallet_service_v1_error_reason_proto_rawDescData []byte
)

func file_wallet_service_v1_error_reason_proto_rawDescGZIP() []byte {
	file_wallet_service_v1_error_reason_proto_rawDescOnce.Do(func() {
		file_wallet_service_v1_error_reason_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wallet_service_v1_error_reason_proto_rawDesc), len(file_wallet_service_v1_error_reason_proto_rawDesc)))
	})
	return file_wallet_service_v1_error_reason_proto_rawDescData
}

var file_wallet_service_v1_error_reason_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wallet_service_v1_error_reason_proto_goTypes = []any{
	(ErrorReason)(0), // 0: api.wallet.service.v1.ErrorReason
}
var file_wallet_service_v1_error_reason_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_wallet_service_v1_error_reason_proto_init() }
func file_wallet_service_v1_error_reason_proto_init() {
	if File_wallet_service_v1_error_reason_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wallet_service_v1_error_reason_proto_rawDesc), len(file_wallet_service_v1_error_reason_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wallet_service_v1_error_reason_proto_goTypes,
		DependencyIndexes: file_wallet_service_v1_error_reason_proto_depIdxs,
		EnumInfos:         file_wallet_service_v1_error_reason_proto_enumTypes,
	}.Build()
	File_wallet_service_v1_error_reason_proto = out.File
	file_wallet_service_v1_error_reason_proto_goTypes = nil
	file_wallet_service_v1_error_reason_proto_depIdxs = nil
}
