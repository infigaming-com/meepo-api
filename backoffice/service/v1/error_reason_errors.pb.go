// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

func IsUnspecified(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_UNSPECIFIED.String() && e.Code == 500
}

func ErrorUnspecified(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorReason_UNSPECIFIED.String(), fmt.Sprintf(format, args...))
}

func IsCallWalletServiceFailed(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_CALL_WALLET_SERVICE_FAILED.String() && e.Code == 500
}

func ErrorCallWalletServiceFailed(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorReason_CALL_WALLET_SERVICE_FAILED.String(), fmt.Sprintf(format, args...))
}

func IsOperatorIdsNotFoundInContext(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_OPERATOR_IDS_NOT_FOUND_IN_CONTEXT.String() && e.Code == 500
}

func ErrorOperatorIdsNotFoundInContext(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorReason_OPERATOR_IDS_NOT_FOUND_IN_CONTEXT.String(), fmt.Sprintf(format, args...))
}

func IsUserInfoNotFoundInContext(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_USER_INFO_NOT_FOUND_IN_CONTEXT.String() && e.Code == 500
}

func ErrorUserInfoNotFoundInContext(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorReason_USER_INFO_NOT_FOUND_IN_CONTEXT.String(), fmt.Sprintf(format, args...))
}

func IsReportTimeRangeError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_REPORT_TIME_RANGE_ERROR.String() && e.Code == 500
}

func ErrorReportTimeRangeError(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorReason_REPORT_TIME_RANGE_ERROR.String(), fmt.Sprintf(format, args...))
}

func IsReportGetDataError(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_REPORT_GET_DATA_ERROR.String() && e.Code == 500
}

func ErrorReportGetDataError(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorReason_REPORT_GET_DATA_ERROR.String(), fmt.Sprintf(format, args...))
}

func IsOperatorContextPermissionDenied(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_OPERATOR_CONTEXT_PERMISSION_DENIED.String() && e.Code == 500
}

func ErrorOperatorContextPermissionDenied(format string, args ...interface{}) *errors.Error {
	return errors.New(500, ErrorReason_OPERATOR_CONTEXT_PERMISSION_DENIED.String(), fmt.Sprintf(format, args...))
}
