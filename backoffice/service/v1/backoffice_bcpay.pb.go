// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.6
// source: backoffice/service/v1/backoffice_bcpay.proto

package v1

import (
	v1 "github.com/infigaming-com/meepo-api/bcpay/service/v1"
	common "github.com/infigaming-com/meepo-api/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetMerchantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMerchantRequest) Reset() {
	*x = GetMerchantRequest{}
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMerchantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantRequest) ProtoMessage() {}

func (x *GetMerchantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantRequest.ProtoReflect.Descriptor instead.
func (*GetMerchantRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_bcpay_proto_rawDescGZIP(), []int{0}
}

type CreateMerchantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMerchantRequest) Reset() {
	*x = CreateMerchantRequest{}
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMerchantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMerchantRequest) ProtoMessage() {}

func (x *CreateMerchantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMerchantRequest.ProtoReflect.Descriptor instead.
func (*CreateMerchantRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_bcpay_proto_rawDescGZIP(), []int{1}
}

func (x *CreateMerchantRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type BankAccountListRequest struct {
	state                  protoimpl.MessageState         `protogen:"open.v1"`
	Currency               string                         `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	BankAccount            string                         `protobuf:"bytes,2,opt,name=bank_account,json=bankAccount,proto3" json:"bank_account,omitempty"`
	BankAccountFirstname   string                         `protobuf:"bytes,3,opt,name=bank_account_firstname,json=bankAccountFirstname,proto3" json:"bank_account_firstname,omitempty"`
	BankAccountLastname    string                         `protobuf:"bytes,4,opt,name=bank_account_lastname,json=bankAccountLastname,proto3" json:"bank_account_lastname,omitempty"`
	CardId                 string                         `protobuf:"bytes,5,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	OperatorContextFilters *common.OperatorContextFilters `protobuf:"bytes,6,opt,name=operator_context_filters,json=operatorContextFilters,proto3" json:"operator_context_filters,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *BankAccountListRequest) Reset() {
	*x = BankAccountListRequest{}
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BankAccountListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BankAccountListRequest) ProtoMessage() {}

func (x *BankAccountListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BankAccountListRequest.ProtoReflect.Descriptor instead.
func (*BankAccountListRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_bcpay_proto_rawDescGZIP(), []int{2}
}

func (x *BankAccountListRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *BankAccountListRequest) GetBankAccount() string {
	if x != nil {
		return x.BankAccount
	}
	return ""
}

func (x *BankAccountListRequest) GetBankAccountFirstname() string {
	if x != nil {
		return x.BankAccountFirstname
	}
	return ""
}

func (x *BankAccountListRequest) GetBankAccountLastname() string {
	if x != nil {
		return x.BankAccountLastname
	}
	return ""
}

func (x *BankAccountListRequest) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

func (x *BankAccountListRequest) GetOperatorContextFilters() *common.OperatorContextFilters {
	if x != nil {
		return x.OperatorContextFilters
	}
	return nil
}

type AddBankAccountRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Currency          string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Country           string                 `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	MaxAmount         string                 `protobuf:"bytes,3,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	MinAmount         string                 `protobuf:"bytes,4,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	MaxAmountPerTrans string                 `protobuf:"bytes,5,opt,name=max_amount_per_trans,json=maxAmountPerTrans,proto3" json:"max_amount_per_trans,omitempty"`
	MaxTransLimit     int32                  `protobuf:"varint,6,opt,name=max_trans_limit,json=maxTransLimit,proto3" json:"max_trans_limit,omitempty"`
	Priority          int32                  `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
	BankInfo          *structpb.Struct       `protobuf:"bytes,8,opt,name=bank_info,json=bankInfo,proto3" json:"bank_info,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AddBankAccountRequest) Reset() {
	*x = AddBankAccountRequest{}
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddBankAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBankAccountRequest) ProtoMessage() {}

func (x *AddBankAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBankAccountRequest.ProtoReflect.Descriptor instead.
func (*AddBankAccountRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_bcpay_proto_rawDescGZIP(), []int{3}
}

func (x *AddBankAccountRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *AddBankAccountRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *AddBankAccountRequest) GetMaxAmount() string {
	if x != nil {
		return x.MaxAmount
	}
	return ""
}

func (x *AddBankAccountRequest) GetMinAmount() string {
	if x != nil {
		return x.MinAmount
	}
	return ""
}

func (x *AddBankAccountRequest) GetMaxAmountPerTrans() string {
	if x != nil {
		return x.MaxAmountPerTrans
	}
	return ""
}

func (x *AddBankAccountRequest) GetMaxTransLimit() int32 {
	if x != nil {
		return x.MaxTransLimit
	}
	return 0
}

func (x *AddBankAccountRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *AddBankAccountRequest) GetBankInfo() *structpb.Struct {
	if x != nil {
		return x.BankInfo
	}
	return nil
}

type UpdateBankAccountRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Currency          string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Country           string                 `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	MaxAmount         string                 `protobuf:"bytes,4,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	MinAmount         string                 `protobuf:"bytes,5,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	MaxAmountPerTrans string                 `protobuf:"bytes,6,opt,name=max_amount_per_trans,json=maxAmountPerTrans,proto3" json:"max_amount_per_trans,omitempty"`
	MaxTransLimit     int32                  `protobuf:"varint,7,opt,name=max_trans_limit,json=maxTransLimit,proto3" json:"max_trans_limit,omitempty"`
	Priority          int32                  `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`
	BankInfo          *structpb.Struct       `protobuf:"bytes,9,opt,name=bank_info,json=bankInfo,proto3" json:"bank_info,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateBankAccountRequest) Reset() {
	*x = UpdateBankAccountRequest{}
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBankAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBankAccountRequest) ProtoMessage() {}

func (x *UpdateBankAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBankAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateBankAccountRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_bcpay_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateBankAccountRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateBankAccountRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetMaxAmount() string {
	if x != nil {
		return x.MaxAmount
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetMinAmount() string {
	if x != nil {
		return x.MinAmount
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetMaxAmountPerTrans() string {
	if x != nil {
		return x.MaxAmountPerTrans
	}
	return ""
}

func (x *UpdateBankAccountRequest) GetMaxTransLimit() int32 {
	if x != nil {
		return x.MaxTransLimit
	}
	return 0
}

func (x *UpdateBankAccountRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *UpdateBankAccountRequest) GetBankInfo() *structpb.Struct {
	if x != nil {
		return x.BankInfo
	}
	return nil
}

type TransactionListRequest struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	Type                        string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	TransactionId               string                 `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	DepositBankAccountFirstname string                 `protobuf:"bytes,3,opt,name=deposit_bank_account_firstname,json=depositBankAccountFirstname,proto3" json:"deposit_bank_account_firstname,omitempty"`
	DepositBankAccountLastname  string                 `protobuf:"bytes,4,opt,name=deposit_bank_account_lastname,json=depositBankAccountLastname,proto3" json:"deposit_bank_account_lastname,omitempty"`
	UserId                      string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName                    string                 `protobuf:"bytes,6,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	PayerBankAccountFirstname   string                 `protobuf:"bytes,7,opt,name=payer_bank_account_firstname,json=payerBankAccountFirstname,proto3" json:"payer_bank_account_firstname,omitempty"`
	PayerBankAccountLastname    string                 `protobuf:"bytes,8,opt,name=payer_bank_account_lastname,json=payerBankAccountLastname,proto3" json:"payer_bank_account_lastname,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *TransactionListRequest) Reset() {
	*x = TransactionListRequest{}
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionListRequest) ProtoMessage() {}

func (x *TransactionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionListRequest.ProtoReflect.Descriptor instead.
func (*TransactionListRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_bcpay_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionListRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TransactionListRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransactionListRequest) GetDepositBankAccountFirstname() string {
	if x != nil {
		return x.DepositBankAccountFirstname
	}
	return ""
}

func (x *TransactionListRequest) GetDepositBankAccountLastname() string {
	if x != nil {
		return x.DepositBankAccountLastname
	}
	return ""
}

func (x *TransactionListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TransactionListRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *TransactionListRequest) GetPayerBankAccountFirstname() string {
	if x != nil {
		return x.PayerBankAccountFirstname
	}
	return ""
}

func (x *TransactionListRequest) GetPayerBankAccountLastname() string {
	if x != nil {
		return x.PayerBankAccountLastname
	}
	return ""
}

type AuditTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	// audit a transaction "approve" or "deline"
	Audit         string `protobuf:"bytes,2,opt,name=audit,proto3" json:"audit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditTransactionRequest) Reset() {
	*x = AuditTransactionRequest{}
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditTransactionRequest) ProtoMessage() {}

func (x *AuditTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditTransactionRequest.ProtoReflect.Descriptor instead.
func (*AuditTransactionRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_bcpay_proto_rawDescGZIP(), []int{6}
}

func (x *AuditTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *AuditTransactionRequest) GetAudit() string {
	if x != nil {
		return x.Audit
	}
	return ""
}

var File_backoffice_service_v1_backoffice_bcpay_proto protoreflect.FileDescriptor

const file_backoffice_service_v1_backoffice_bcpay_proto_rawDesc = "" +
	"\n" +
	",backoffice/service/v1/backoffice_bcpay.proto\x12\x19api.backoffice.service.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1cbcpay/service/v1/bcpay.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x13common/common.proto\"\x14\n" +
	"\x12GetMerchantRequest\"+\n" +
	"\x15CreateMerchantRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\xb8\x02\n" +
	"\x16BankAccountListRequest\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12!\n" +
	"\fbank_account\x18\x02 \x01(\tR\vbankAccount\x124\n" +
	"\x16bank_account_firstname\x18\x03 \x01(\tR\x14bankAccountFirstname\x122\n" +
	"\x15bank_account_lastname\x18\x04 \x01(\tR\x13bankAccountLastname\x12\x17\n" +
	"\acard_id\x18\x05 \x01(\tR\x06cardId\x12\\\n" +
	"\x18operator_context_filters\x18\x06 \x01(\v2\".api.common.OperatorContextFiltersR\x16operatorContextFilters\"\xb6\x02\n" +
	"\x15AddBankAccountRequest\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x18\n" +
	"\acountry\x18\x02 \x01(\tR\acountry\x12\x1d\n" +
	"\n" +
	"max_amount\x18\x03 \x01(\tR\tmaxAmount\x12\x1d\n" +
	"\n" +
	"min_amount\x18\x04 \x01(\tR\tminAmount\x12/\n" +
	"\x14max_amount_per_trans\x18\x05 \x01(\tR\x11maxAmountPerTrans\x12&\n" +
	"\x0fmax_trans_limit\x18\x06 \x01(\x05R\rmaxTransLimit\x12\x1a\n" +
	"\bpriority\x18\a \x01(\x05R\bpriority\x124\n" +
	"\tbank_info\x18\b \x01(\v2\x17.google.protobuf.StructR\bbankInfo\"\xc9\x02\n" +
	"\x18UpdateBankAccountRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12\x18\n" +
	"\acountry\x18\x03 \x01(\tR\acountry\x12\x1d\n" +
	"\n" +
	"max_amount\x18\x04 \x01(\tR\tmaxAmount\x12\x1d\n" +
	"\n" +
	"min_amount\x18\x05 \x01(\tR\tminAmount\x12/\n" +
	"\x14max_amount_per_trans\x18\x06 \x01(\tR\x11maxAmountPerTrans\x12&\n" +
	"\x0fmax_trans_limit\x18\a \x01(\x05R\rmaxTransLimit\x12\x1a\n" +
	"\bpriority\x18\b \x01(\x05R\bpriority\x124\n" +
	"\tbank_info\x18\t \x01(\v2\x17.google.protobuf.StructR\bbankInfo\"\x91\x03\n" +
	"\x16TransactionListRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\x12C\n" +
	"\x1edeposit_bank_account_firstname\x18\x03 \x01(\tR\x1bdepositBankAccountFirstname\x12A\n" +
	"\x1ddeposit_bank_account_lastname\x18\x04 \x01(\tR\x1adepositBankAccountLastname\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12\x1b\n" +
	"\tuser_name\x18\x06 \x01(\tR\buserName\x12?\n" +
	"\x1cpayer_bank_account_firstname\x18\a \x01(\tR\x19payerBankAccountFirstname\x12=\n" +
	"\x1bpayer_bank_account_lastname\x18\b \x01(\tR\x18payerBankAccountLastname\"V\n" +
	"\x17AuditTransactionRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x12\x14\n" +
	"\x05audit\x18\x02 \x01(\tR\x05audit2\xf0\v\n" +
	"\x0fBackofficeBcpay\x12\x95\x01\n" +
	"\vGetMerchant\x12-.api.backoffice.service.v1.GetMerchantRequest\x1a).api.bcpay.service.v1.GetMerchantResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/v1/backoffice/bcpay/merchant/get\x12\x9e\x01\n" +
	"\x0eCreateMerchant\x120.api.backoffice.service.v1.CreateMerchantRequest\x1a,.api.bcpay.service.v1.CreateMerchantResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/v1/backoffice/bcpay/merchant/add\x12\xa5\x01\n" +
	"\x0fBankAccountList\x121.api.backoffice.service.v1.BankAccountListRequest\x1a-.api.bcpay.service.v1.BankAccountListResponse\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/v1/backoffice/bcpay/bankaccount/list\x12\xa1\x01\n" +
	"\x0eAddBankAccount\x120.api.backoffice.service.v1.AddBankAccountRequest\x1a,.api.bcpay.service.v1.AddBankAccountResponse\"/\x82\xd3\xe4\x93\x02):\x01*\"$/v1/backoffice/bcpay/bankaccount/add\x12\xad\x01\n" +
	"\x11UpdateBankAccount\x123.api.backoffice.service.v1.UpdateBankAccountRequest\x1a/.api.bcpay.service.v1.UpdateBankAccountResponse\"2\x82\xd3\xe4\x93\x02,:\x01*\"'/v1/backoffice/bcpay/bankaccount/update\x12\xa5\x01\n" +
	"\x0fTransactionList\x121.api.backoffice.service.v1.TransactionListRequest\x1a-.api.bcpay.service.v1.TransactionListResponse\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/v1/backoffice/bcpay/transaction/list\x12\xa7\x01\n" +
	"\x10AuditTransaction\x122.api.backoffice.service.v1.AuditTransactionRequest\x1a..api.bcpay.service.v1.AuditTransactionResponse\"/\x82\xd3\xe4\x93\x02):\x01*\"$/v1/backoffice/bcpay/transaction/add\x12\xb6\x01\n" +
	"\x14AddNoteToTransaction\x121.api.bcpay.service.v1.AddNoteToTransactionRequest\x1a2.api.bcpay.service.v1.AddNoteToTransactionResponse\"7\x82\xd3\xe4\x93\x021:\x01*\",/v1/backoffice/bcpay/transaction/note/update\x12\x9c\x01\n" +
	"\rGetBankSchema\x12*.api.bcpay.service.v1.GetBankSchemaRequest\x1a+.api.bcpay.service.v1.GetBankSchemaResponse\"2\x82\xd3\xe4\x93\x02,:\x01*\"'/v1/backoffice/bcpay/bankinfoschema/getB[\n" +
	"\x19api.backoffice.service.v1P\x01Z<github.com/infigaming-com/meepo-api/backoffice/service/v1;v1b\x06proto3"

var (
	file_backoffice_service_v1_backoffice_bcpay_proto_rawDescOnce sync.Once
	file_backoffice_service_v1_backoffice_bcpay_proto_rawDescData []byte
)

func file_backoffice_service_v1_backoffice_bcpay_proto_rawDescGZIP() []byte {
	file_backoffice_service_v1_backoffice_bcpay_proto_rawDescOnce.Do(func() {
		file_backoffice_service_v1_backoffice_bcpay_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backoffice_service_v1_backoffice_bcpay_proto_rawDesc), len(file_backoffice_service_v1_backoffice_bcpay_proto_rawDesc)))
	})
	return file_backoffice_service_v1_backoffice_bcpay_proto_rawDescData
}

var file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_backoffice_service_v1_backoffice_bcpay_proto_goTypes = []any{
	(*GetMerchantRequest)(nil),              // 0: api.backoffice.service.v1.GetMerchantRequest
	(*CreateMerchantRequest)(nil),           // 1: api.backoffice.service.v1.CreateMerchantRequest
	(*BankAccountListRequest)(nil),          // 2: api.backoffice.service.v1.BankAccountListRequest
	(*AddBankAccountRequest)(nil),           // 3: api.backoffice.service.v1.AddBankAccountRequest
	(*UpdateBankAccountRequest)(nil),        // 4: api.backoffice.service.v1.UpdateBankAccountRequest
	(*TransactionListRequest)(nil),          // 5: api.backoffice.service.v1.TransactionListRequest
	(*AuditTransactionRequest)(nil),         // 6: api.backoffice.service.v1.AuditTransactionRequest
	(*common.OperatorContextFilters)(nil),   // 7: api.common.OperatorContextFilters
	(*structpb.Struct)(nil),                 // 8: google.protobuf.Struct
	(*v1.AddNoteToTransactionRequest)(nil),  // 9: api.bcpay.service.v1.AddNoteToTransactionRequest
	(*v1.GetBankSchemaRequest)(nil),         // 10: api.bcpay.service.v1.GetBankSchemaRequest
	(*v1.GetMerchantResponse)(nil),          // 11: api.bcpay.service.v1.GetMerchantResponse
	(*v1.CreateMerchantResponse)(nil),       // 12: api.bcpay.service.v1.CreateMerchantResponse
	(*v1.BankAccountListResponse)(nil),      // 13: api.bcpay.service.v1.BankAccountListResponse
	(*v1.AddBankAccountResponse)(nil),       // 14: api.bcpay.service.v1.AddBankAccountResponse
	(*v1.UpdateBankAccountResponse)(nil),    // 15: api.bcpay.service.v1.UpdateBankAccountResponse
	(*v1.TransactionListResponse)(nil),      // 16: api.bcpay.service.v1.TransactionListResponse
	(*v1.AuditTransactionResponse)(nil),     // 17: api.bcpay.service.v1.AuditTransactionResponse
	(*v1.AddNoteToTransactionResponse)(nil), // 18: api.bcpay.service.v1.AddNoteToTransactionResponse
	(*v1.GetBankSchemaResponse)(nil),        // 19: api.bcpay.service.v1.GetBankSchemaResponse
}
var file_backoffice_service_v1_backoffice_bcpay_proto_depIdxs = []int32{
	7,  // 0: api.backoffice.service.v1.BankAccountListRequest.operator_context_filters:type_name -> api.common.OperatorContextFilters
	8,  // 1: api.backoffice.service.v1.AddBankAccountRequest.bank_info:type_name -> google.protobuf.Struct
	8,  // 2: api.backoffice.service.v1.UpdateBankAccountRequest.bank_info:type_name -> google.protobuf.Struct
	0,  // 3: api.backoffice.service.v1.BackofficeBcpay.GetMerchant:input_type -> api.backoffice.service.v1.GetMerchantRequest
	1,  // 4: api.backoffice.service.v1.BackofficeBcpay.CreateMerchant:input_type -> api.backoffice.service.v1.CreateMerchantRequest
	2,  // 5: api.backoffice.service.v1.BackofficeBcpay.BankAccountList:input_type -> api.backoffice.service.v1.BankAccountListRequest
	3,  // 6: api.backoffice.service.v1.BackofficeBcpay.AddBankAccount:input_type -> api.backoffice.service.v1.AddBankAccountRequest
	4,  // 7: api.backoffice.service.v1.BackofficeBcpay.UpdateBankAccount:input_type -> api.backoffice.service.v1.UpdateBankAccountRequest
	5,  // 8: api.backoffice.service.v1.BackofficeBcpay.TransactionList:input_type -> api.backoffice.service.v1.TransactionListRequest
	6,  // 9: api.backoffice.service.v1.BackofficeBcpay.AuditTransaction:input_type -> api.backoffice.service.v1.AuditTransactionRequest
	9,  // 10: api.backoffice.service.v1.BackofficeBcpay.AddNoteToTransaction:input_type -> api.bcpay.service.v1.AddNoteToTransactionRequest
	10, // 11: api.backoffice.service.v1.BackofficeBcpay.GetBankSchema:input_type -> api.bcpay.service.v1.GetBankSchemaRequest
	11, // 12: api.backoffice.service.v1.BackofficeBcpay.GetMerchant:output_type -> api.bcpay.service.v1.GetMerchantResponse
	12, // 13: api.backoffice.service.v1.BackofficeBcpay.CreateMerchant:output_type -> api.bcpay.service.v1.CreateMerchantResponse
	13, // 14: api.backoffice.service.v1.BackofficeBcpay.BankAccountList:output_type -> api.bcpay.service.v1.BankAccountListResponse
	14, // 15: api.backoffice.service.v1.BackofficeBcpay.AddBankAccount:output_type -> api.bcpay.service.v1.AddBankAccountResponse
	15, // 16: api.backoffice.service.v1.BackofficeBcpay.UpdateBankAccount:output_type -> api.bcpay.service.v1.UpdateBankAccountResponse
	16, // 17: api.backoffice.service.v1.BackofficeBcpay.TransactionList:output_type -> api.bcpay.service.v1.TransactionListResponse
	17, // 18: api.backoffice.service.v1.BackofficeBcpay.AuditTransaction:output_type -> api.bcpay.service.v1.AuditTransactionResponse
	18, // 19: api.backoffice.service.v1.BackofficeBcpay.AddNoteToTransaction:output_type -> api.bcpay.service.v1.AddNoteToTransactionResponse
	19, // 20: api.backoffice.service.v1.BackofficeBcpay.GetBankSchema:output_type -> api.bcpay.service.v1.GetBankSchemaResponse
	12, // [12:21] is the sub-list for method output_type
	3,  // [3:12] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_backoffice_service_v1_backoffice_bcpay_proto_init() }
func file_backoffice_service_v1_backoffice_bcpay_proto_init() {
	if File_backoffice_service_v1_backoffice_bcpay_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backoffice_service_v1_backoffice_bcpay_proto_rawDesc), len(file_backoffice_service_v1_backoffice_bcpay_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backoffice_service_v1_backoffice_bcpay_proto_goTypes,
		DependencyIndexes: file_backoffice_service_v1_backoffice_bcpay_proto_depIdxs,
		MessageInfos:      file_backoffice_service_v1_backoffice_bcpay_proto_msgTypes,
	}.Build()
	File_backoffice_service_v1_backoffice_bcpay_proto = out.File
	file_backoffice_service_v1_backoffice_bcpay_proto_goTypes = nil
	file_backoffice_service_v1_backoffice_bcpay_proto_depIdxs = nil
}
