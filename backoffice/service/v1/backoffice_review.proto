syntax = "proto3";

package api.backoffice.service.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/infigaming-com/meepo-api/backoffice/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.backoffice.service.v1";

service BackofficeReview {
	rpc ListTickets(ListTicketsRequest) returns (ListTicketsResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/review/tickets/list"
            body: "*"
        };
    }
    rpc ReviewTicket(ReviewTicketRequest) returns (ReviewTicketResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/review/ticket/review"
            body: "*"
        };
    }
}

message ListTicketsRequest {
	optional int64 operator_id = 1;
	optional int64 user_id = 2;
	optional int64 ticket_id = 3;
	optional string currency = 4;
	optional string status = 5;	// pending, approved, rejected, manual_payout
	optional google.protobuf.Timestamp start_time = 6;
	optional google.protobuf.Timestamp end_time = 7;
	optional int64 page = 8;
	optional int64 page_size = 9;
}

message ListTicketsResponse {
	message Ticket {
		google.protobuf.Timestamp created_at = 1;
		string operator = 2;
		int64 ticket_id = 3;
		string category = 4;	// ?? what is category
		int32 vip_level = 5;
		repeated string user_tags = 6;
		int64 before_balance = 7;
		int64 after_balance = 8;
		string currency = 9;
		string payment_channel = 10;
		string protocol = 11;
		string fee = 12;
	}
	repeated Ticket tickets = 1;
	int64 page = 2;
	int64 page_size = 3;
	int64 total = 4;
	int64 total_pending = 5;
	int64 total_paying = 6;
	int64 total_paid = 7;
	int64 total_failed = 8;
	int64 total_rejected = 9;
	int64 average_review_time = 10;
}

message ReviewTicketRequest {
	int64 ticket_id = 1;
	int64 reviewer_user_id = 2;
	string action = 3;	// approve, reject, manual_payout
	string review_comment = 4;
}

message ReviewTicketResponse {}
