syntax = "proto3";

package api.backoffice.service.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "common/common.proto";

option go_package = "github.com/infigaming-com/meepo-api/backoffice/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.backoffice.service.v1";

service BackofficeReview {
	rpc CreateOperatorWithdraw(CreateOperatorWithdrawRequest) returns (CreateWithdrawResponse) {
		option (google.api.http) = {
			post: "/v1/backoffice/review/operator/withdraw"
			body: "*"
		};
	}

	rpc ListTickets(ListTicketsRequest) returns (ListTicketsResponse) {
		option (google.api.http) = {
			post: "/v1/backoffice/review/tickets/list"
			body: "*"
		};
	}
	rpc ListOperatorTickets(ListOperatorTicketsRequest) returns (ListTicketsResponse) {
		option (google.api.http) = {
			post: "/v1/backoffice/review/operator/tickets/list"
			body: "*"
		};
	}
	rpc GetTicket(GetTicketRequest) returns (GetTicketResponse) {
		option (google.api.http) = {
			post: "/v1/backoffice/review/tickets/get"
			body: "*"
		};
	}
	rpc GetOperatorTicket(GetOperatorTicketRequest) returns (GetOperatorTicketResponse) {
		option (google.api.http) = {
			post: "/v1/backoffice/review/operator/tickets/get"
			body: "*"
		};
	}
	rpc ReviewTicket(ReviewTicketRequest) returns (ReviewTicketResponse) {
		option (google.api.http) = {
			post: "/v1/backoffice/review/tickets/review"
			body: "*"
		};
	}
	rpc AddComment(AddCommentRequest) returns (AddCommentResponse) {
		option (google.api.http) = {
			post: "/v1/backoffice/review/tickets/comments/add"
			body: "*"
		};
	}
	rpc CancelTicket(CancelTicketRequest) returns (CancelTicketResponse) {
		option (google.api.http) = {
			post: "/v1/backoffice/review/tickets/cancel"
			body: "*"
		};
	}
	rpc GetTicketById(GetTicketByIdRequest) returns (GetTicketByIdResponse) {
		option (google.api.http) = {
			post: "/v1/backoffice/review/tickets/get_by_id"
			body: "*"
		};
	}
}

message CreateOperatorWithdrawRequest {
	google.protobuf.Struct request = 2;  // JSON data for REST API
}

message CreateWithdrawResponse {
	int64 ticket_id = 1;
}

message ListTicketsRequest {
	optional int64 user_id = 1;
	api.common.OperatorContext operator_context = 2;
	optional int64 operator_id = 3;
	optional int64 company_operator_id = 4;
	optional int64 retailer_operator_id = 5;
	optional int64 system_operator_id = 6;
	optional int64 ticket_id = 7;
	optional string currency = 8;
	optional string status = 9;
	optional google.protobuf.Timestamp start_time = 10;
	optional google.protobuf.Timestamp end_time = 11;
	optional int32 page = 12;
	optional int32 page_size = 13;
}

message ListOperatorTicketsRequest {
	api.common.OperatorContext operator_context = 2;
	optional int64 operator_id = 3;
	optional int64 company_operator_id = 4;
	optional int64 retailer_operator_id = 5;
	optional int64 system_operator_id = 6;
	optional int64 ticket_id = 7;
	optional string currency = 8;
	optional string status = 9;
	optional google.protobuf.Timestamp start_time = 10;
	optional google.protobuf.Timestamp end_time = 11;
	optional int32 page = 12;
	optional int32 page_size = 13;
}

message ListTicketsResponse {
	message Ticket {
		google.protobuf.Timestamp created_at = 1;
		string operator_name = 2;
		int64 ticket_id = 3;
		int64 user_id = 4;
		int32 vip_level = 5;
		repeated string user_tags = 6;
		string before_balance = 7;
		string before_balance_usd = 8;
		string amount = 9;
		string amount_usd = 10;
		string after_balance = 11;
		string after_balance_usd = 12;
		string currency = 13;
		string payment_channel = 14;
		string protocol = 15;
		string fee = 16;
		string status = 17;	// pending, approved, rejected, manual_payout, paying, paid, failed
		string reviewer_username = 18;
		int32 review_duration = 19;
	}
	repeated Ticket tickets = 1;
	int32 page = 2;
	int32 page_size = 3;
	int32 total_count = 4;
	string total_amount = 5;
	int32 total_pending_count = 6;
	string total_pending_amount = 7;
	int32 total_paying_count = 8;
	string total_paying_amount = 9;
	int32 total_paid_count = 10;
	string total_paid_amount = 11;
	int32 total_failed_count = 12;
	string total_failed_amount = 13;
	int32 total_rejected_count = 14;
	string total_rejected_amount = 15;
	int32 average_review_time = 16;
}

message GetTicketRequest {
	int64 ticket_id = 1;
}

message GetTicketResponse {
	message WithdrawPaymentInfo {
		google.protobuf.Timestamp created_at = 1;
		string currency = 2;
		string amount = 3;
		string amount_usd = 4;
		string before_balance = 5;
		string after_balance = 6;
		string payment_channel = 7;
		string protocol = 8;
		string fee = 9;
		google.protobuf.Struct extra = 10;
		google.protobuf.Struct schema = 11;
	}
	message UserWalletData {
		string deposit_usd = 1;
		string withdraw_usd = 2;
		string deposit_minus_withdraw_usd = 3;
		string valid_turnover_usd = 4;
		int32 deposit_count = 5;
		int32 withdraw_count = 6;
		int32 today_withdraw_count = 7;
	}
	message Comment {
		string author_username = 1;
		string content = 2;
		google.protobuf.Timestamp created_at = 3;
	}
	string operator_name = 1;
	int64 user_id = 2;
	int32 vip_level = 3;
	int64 ticket_id = 4;
	string status = 5;	// pending, approved, rejected, manual_payout, paying, paid, failed
	repeated string user_tags = 6;
	WithdrawPaymentInfo withdraw_payment_info = 7;
	repeated string linked_accounts = 8;
	UserWalletData user_wallet_data = 9;
	repeated Comment comments = 10;
}

message GetOperatorTicketRequest {
	int64 ticket_id = 1;
}

message GetOperatorTicketResponse {
	message Ticket {
		int64 id = 1;
		string type = 2;
		string operator_name = 3;
		string company_operator_name = 4;
		string retailer_operator_name = 5;
		string system_operator_name = 6;
		google.protobuf.Timestamp created_at = 7;
	}
	message Comment {
		int64 id = 1;
		int64 ticket_id = 2;
		string author_username = 3;
		string content = 4;
		google.protobuf.Timestamp created_at = 5;
	}
	message PaymentWithdrawTransactionInfo {
		string currency = 1;
		string protocol = 2;
		string address = 3;
		string psp = 4;
		string amount = 5;
		string amount_sent = 6;
		string gas = 7;
		string fee = 8;
		google.protobuf.Timestamp created_at = 9;
	}
	message WalletBalanceInfo {
		string balance = 2;
	}
	message WalletTransactionInfo {
		string before_balance = 1;
		string after_balance = 2;
		string amount = 3;
	}
	message WalletTransactionSummary {
		string total_withdraw_usd = 1;
		string total_deposit_usd = 2;
		string total_transfer_usd = 3;
		string total_swap_out_usd = 4;
		string total_swap_in_usd = 5;
		string total_freeze_usd = 6;
		string total_write_off_usd = 7;
		string total_pending_usd = 8;
	}
	Ticket ticket = 1;
	repeated Comment comments = 2;
	PaymentWithdrawTransactionInfo payment_withdraw_transaction_info = 3;
	WalletBalanceInfo wallet_balance_info = 4;
	WalletTransactionInfo wallet_transaction_info = 5;
	WalletTransactionSummary wallet_transaction_summary = 6;
}

message ReviewTicketRequest {
	int64 ticket_id = 1;
	string action = 2;	// approve, reject, manual_payout
	string review_comment = 3;
}

message ReviewTicketResponse {}

message AddCommentRequest {
	int64 ticket_id = 1;
	string content = 2;
}

message AddCommentResponse {
	int64 comment_id = 1;
}

message CancelTicketRequest {
	int64 ticket_id = 1;
}

message CancelTicketResponse {}

message GetTicketByIdRequest {
	int64 ticket_id = 1;
}

message GetTicketByIdResponse {
	message Ticket {
		int64 id = 1;
		string type = 2;
		string request = 3;
		string response = 4;
		int64 user_id = 5;
		int64 canceller_user_id = 6;
		int64 operator_id = 7;
		string currency = 8;
		string ticket_status = 9;
		int64 reviewer_user_id = 10;
		string reviewer_comment = 11;
		string payment_status = 12;
		int64 payment_transaction_id = 13;
		string payment_transaction_error = 14;
		string wallet_status = 15;
		int64 wallet_freeze_transaction_id = 16;
		int64 wallet_settle_transaction_id = 17;
		string wallet_settle_error = 18;
		int64 wallet_rollback_transaction_id = 19;
		string wallet_rollback_error = 20;
		int64 created_at = 21;
		int64 updated_at = 22;
		int64 reviewed_at = 23;
		int64 cancelled_at = 24;
	}
	message Comment {
		int64 id = 1;
		int64 ticket_id = 2;
		int64 author_user_id = 3;
		string content = 4;
		int64 created_at = 5;
	}
	Ticket ticket = 1;
	repeated Comment comments = 2;
}