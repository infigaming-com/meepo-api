syntax = "proto3";

package api.backoffice.service.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/infigaming-com/meepo-api/backoffice/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.backoffice.service.v1";

service BackofficeAccount {
	rpc AddAccount(AddAccountRequest) returns (AddAccountResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/add"
            body: "*"
        };
    }
    rpc SendEmailVerification(SendEmailVerificationRequest) returns (SendEmailVerificationResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/email/verification/send"
            body: "*"
        };
    }
    rpc VerifyEmail(VerifyEmailRequest) returns (VerifyEmailResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/email/verify"
            body: "*"
        };
    }
    rpc SendMobileVerification(SendMobileVerificationRequest) returns (SendMobileVerificationResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/mobile/verification/send"
            body: "*"
        };
    }
    rpc VerifyMobile(VerifyMobileRequest) returns (VerifyMobileResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/mobile/verify"
            body: "*"
        };
    }
    rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/password/reset"
            body: "*"
        };
    }
    rpc Generate2fa(Generate2faRequest) returns (Generate2faResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/2fa/generate"
            body: "*"
        };
    }
    rpc Bind2fa(Bind2faRequest) returns (Bind2faResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/2fa/bind"
            body: "*"
        };
    }
    rpc Unbind2fa(Unbind2faRequest) returns (Unbind2faResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/2fa/unbind"
            body: "*"
        };
    }
    rpc UpdateAccount(UpdateAccountRequest) returns (UpdateAccountResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/update"
            body: "*"
        };
    }
    rpc Login(LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/login"
            body: "*"
        };
    }
    rpc Register(RegisterRequest) returns (RegisterResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/register"
            body: "*"
        };
    }
    rpc SendRegisterVerificationCode(SendRegisterVerificationCodeRequest) returns (SendRegisterVerificationCodeResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/register/verification/send"
            body: "*"
        };
    }
    rpc AccountInfo(AccountInfoRequest) returns (AccountInfoResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/info"
            body: "*"
        };
    }
    rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/list"
            body: "*"
        };
    }
    rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/role/create"
            body: "*"
        };
    }
    rpc ListRoles(ListRolesRequest) returns (ListRolesResponse) {
        option (google.api.http) = {
            post: "/v1/backoffice/accounts/role/list"
            body: "*"
        };
    }
}

// Account related messages
message AddAccountRequest {
	string username = 1;
	string email = 2;
	string mobile = 3;
	string password = 4;
}

message AddAccountResponse {}

message SendEmailVerificationRequest {}

message SendEmailVerificationResponse {}

message VerifyEmailRequest {
	string token = 1;
}

message VerifyEmailResponse {}

message SendMobileVerificationRequest {}

message SendMobileVerificationResponse {}

message VerifyMobileRequest {
	string token = 1;
}

message VerifyMobileResponse {}

message ResetPasswordRequest {
	string email = 1;
}

message ResetPasswordResponse {}

message Generate2faRequest {}

message Generate2faResponse {}

message Bind2faRequest {
	string token = 1;
}

message Bind2faResponse {}

message Unbind2faRequest {
	string token = 1;
}

message Unbind2faResponse {}

message UpdateAccountRequest {
	int64 user_id = 1;
	optional bool enabled = 2;
	optional int64 role_id = 3;
}

message UpdateAccountResponse {}

message LoginRequest {
	string email = 1;
	string password = 2;
}

message LoginResponse {
	string token = 1;
}

message RegisterRequest {
	string username = 1;
	string email = 2;
	string verification_code = 3;
	string password = 4;
	string mobile = 5;
}

message RegisterResponse {
	string token = 1;
}

message SendRegisterVerificationCodeRequest {
	string email = 1;
}

message SendRegisterVerificationCodeResponse {}

message AccountInfoRequest {}

message AccountInfoResponse {
	string username = 1;
	string email = 2;
	string mobile = 3;
	bool email_verified = 4;
	bool mobile_verified = 5;
	bool enabled = 6;
	Role role = 7;
}

message Role {
    string name = 1;
    int64 role_id = 2;
    repeated Permission permissions = 3;
}

message Permission {
    int64 group_id = 1;
    // group name: dashboard, game, user, finance, report, system, etc.
    string group_name = 2;
    // action name: read, write, delete, etc.
    repeated ApiPath api_paths = 4;
}

message ApiPath {
    string path = 1;
    string action = 2;
}

message ListAccountsRequest {
    optional int64 user_id = 1;
    optional int64 role_id = 2;
    optional int64 operator_id = 3;
    optional int32 page = 4;
    optional int32 page_size = 5;
}

message ListAccountsResponse {
    message Account {
        int64 user_id = 1;
        string username = 2;
        string email = 3;
        string mobile = 4;
        bool enabled = 5;
        Role role = 6;
        google.protobuf.Timestamp created_at = 7;
    }
    repeated Account accounts = 1;
    int32 total = 2;
    int32 page = 3;
    int32 page_size = 4;
}

message CreateRoleRequest {
    string name = 1;
    repeated Permission permissions = 2;
}

message CreateRoleResponse {}

message ListRolesRequest {
    optional int32 page = 1;
    optional int32 page_size = 2;
}

message ListRolesResponse {
    repeated Role roles = 1;
    int32 total = 2;
    int32 page = 3;
    int32 page_size = 4;
}