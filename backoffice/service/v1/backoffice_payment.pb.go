// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.6
// source: backoffice/service/v1/backoffice_payment.proto

package v1

import (
	v1 "github.com/infigaming-com/meepo-api/payment/service/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to get address
// Used to get DC address
type GetOperatorAddressRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the channel to use for this deposit
	ChannelId string `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// Additional information needed for the deposit
	// May include clientOrderId, productId, userInfo, etc.
	Extra         *structpb.Struct `protobuf:"bytes,2,opt,name=extra,proto3" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOperatorAddressRequest) Reset() {
	*x = GetOperatorAddressRequest{}
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorAddressRequest) ProtoMessage() {}

func (x *GetOperatorAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorAddressRequest.ProtoReflect.Descriptor instead.
func (*GetOperatorAddressRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_payment_proto_rawDescGZIP(), []int{0}
}

func (x *GetOperatorAddressRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *GetOperatorAddressRequest) GetExtra() *structpb.Struct {
	if x != nil {
		return x.Extra
	}
	return nil
}

// Request to create a payment channel
// Used to create a new payment channel with specified merchant and method
type CreatePaymentMethodRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the payment method to be used
	PaymentMethodId string `protobuf:"bytes,1,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	// Currency Type
	CurrencyType string `protobuf:"bytes,2,opt,name=currency_type,json=currencyType,proto3" json:"currency_type,omitempty"`
	// Contact Info email
	Contact string `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
	// Fixed Fee on the Amount
	FixedFee string `protobuf:"bytes,4,opt,name=fixed_fee,json=fixedFee,proto3" json:"fixed_fee,omitempty"`
	// Rate Fee
	FeeRate string `protobuf:"bytes,5,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	// Min Amount
	MinAmount string `protobuf:"bytes,6,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	// Max Amount
	MaxAmount string `protobuf:"bytes,7,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	// PSP Fixed Fee on the Amount
	PspFixedFee string `protobuf:"bytes,8,opt,name=psp_fixed_fee,json=pspFixedFee,proto3" json:"psp_fixed_fee,omitempty"`
	// PSP Rate Fee
	PspFeeRate string `protobuf:"bytes,9,opt,name=psp_fee_rate,json=pspFeeRate,proto3" json:"psp_fee_rate,omitempty"`
	// PSP Min Amount
	PspMinAmount string `protobuf:"bytes,10,opt,name=psp_min_amount,json=pspMinAmount,proto3" json:"psp_min_amount,omitempty"`
	// PSP Max Amount
	PspMaxAmount string `protobuf:"bytes,11,opt,name=psp_max_amount,json=pspMaxAmount,proto3" json:"psp_max_amount,omitempty"`
	// JSON schema defining the required fields for this payment method
	Key           *structpb.Struct `protobuf:"bytes,12,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePaymentMethodRequest) Reset() {
	*x = CreatePaymentMethodRequest{}
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePaymentMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentMethodRequest) ProtoMessage() {}

func (x *CreatePaymentMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentMethodRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentMethodRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_payment_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePaymentMethodRequest) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetCurrencyType() string {
	if x != nil {
		return x.CurrencyType
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetFixedFee() string {
	if x != nil {
		return x.FixedFee
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetFeeRate() string {
	if x != nil {
		return x.FeeRate
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetMinAmount() string {
	if x != nil {
		return x.MinAmount
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetMaxAmount() string {
	if x != nil {
		return x.MaxAmount
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetPspFixedFee() string {
	if x != nil {
		return x.PspFixedFee
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetPspFeeRate() string {
	if x != nil {
		return x.PspFeeRate
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetPspMinAmount() string {
	if x != nil {
		return x.PspMinAmount
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetPspMaxAmount() string {
	if x != nil {
		return x.PspMaxAmount
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetKey() *structpb.Struct {
	if x != nil {
		return x.Key
	}
	return nil
}

// Request to create a payment channel
// Used to create a new payment channel with specified merchant and method
type CreatePaymentChannelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the merchant creating this channel
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	// ID of the payment method to be used
	PaymentMethodId string `protobuf:"bytes,2,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	// Type of channel (e.g., deposit, withdrawal)
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// Contact Info email
	Contact string `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`
	// PSP Fixed Fee on the Amount
	PspFixedFee string `protobuf:"bytes,5,opt,name=psp_fixed_fee,json=pspFixedFee,proto3" json:"psp_fixed_fee,omitempty"`
	// PSP Rate Fee
	PspFeeRate string `protobuf:"bytes,6,opt,name=psp_fee_rate,json=pspFeeRate,proto3" json:"psp_fee_rate,omitempty"`
	// User Fixed Fee on the Amount
	UserFixedFee string `protobuf:"bytes,7,opt,name=user_fixed_fee,json=userFixedFee,proto3" json:"user_fixed_fee,omitempty"`
	// User Rate Fee
	UserFeeRate string `protobuf:"bytes,8,opt,name=user_fee_rate,json=userFeeRate,proto3" json:"user_fee_rate,omitempty"`
	// Min Amount
	MinAmount string `protobuf:"bytes,9,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	// Max Amount
	MaxAmount string `protobuf:"bytes,10,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	// Configuration fields for the payment channel in JSON format
	Key           *structpb.Struct `protobuf:"bytes,11,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePaymentChannelRequest) Reset() {
	*x = CreatePaymentChannelRequest{}
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePaymentChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentChannelRequest) ProtoMessage() {}

func (x *CreatePaymentChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentChannelRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentChannelRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_payment_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePaymentChannelRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetPspFixedFee() string {
	if x != nil {
		return x.PspFixedFee
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetPspFeeRate() string {
	if x != nil {
		return x.PspFeeRate
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetUserFixedFee() string {
	if x != nil {
		return x.UserFixedFee
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetUserFeeRate() string {
	if x != nil {
		return x.UserFeeRate
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetMinAmount() string {
	if x != nil {
		return x.MinAmount
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetMaxAmount() string {
	if x != nil {
		return x.MaxAmount
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetKey() *structpb.Struct {
	if x != nil {
		return x.Key
	}
	return nil
}

var File_backoffice_service_v1_backoffice_payment_proto protoreflect.FileDescriptor

const file_backoffice_service_v1_backoffice_payment_proto_rawDesc = "" +
	"\n" +
	".backoffice/service/v1/backoffice_payment.proto\x12\x19api.backoffice.service.v1\x1a\x1cgoogle/api/annotations.proto\x1a payment/service/v1/payment.proto\x1a\x1cgoogle/protobuf/struct.proto\"i\n" +
	"\x19GetOperatorAddressRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12-\n" +
	"\x05extra\x18\x02 \x01(\v2\x17.google.protobuf.StructR\x05extra\"\xba\x03\n" +
	"\x1aCreatePaymentMethodRequest\x12*\n" +
	"\x11payment_method_id\x18\x01 \x01(\tR\x0fpaymentMethodId\x12#\n" +
	"\rcurrency_type\x18\x02 \x01(\tR\fcurrencyType\x12\x18\n" +
	"\acontact\x18\x03 \x01(\tR\acontact\x12\x1b\n" +
	"\tfixed_fee\x18\x04 \x01(\tR\bfixedFee\x12\x19\n" +
	"\bfee_rate\x18\x05 \x01(\tR\afeeRate\x12\x1d\n" +
	"\n" +
	"min_amount\x18\x06 \x01(\tR\tminAmount\x12\x1d\n" +
	"\n" +
	"max_amount\x18\a \x01(\tR\tmaxAmount\x12\"\n" +
	"\rpsp_fixed_fee\x18\b \x01(\tR\vpspFixedFee\x12 \n" +
	"\fpsp_fee_rate\x18\t \x01(\tR\n" +
	"pspFeeRate\x12$\n" +
	"\x0epsp_min_amount\x18\n" +
	" \x01(\tR\fpspMinAmount\x12$\n" +
	"\x0epsp_max_amount\x18\v \x01(\tR\fpspMaxAmount\x12)\n" +
	"\x03key\x18\f \x01(\v2\x17.google.protobuf.StructR\x03key\"\x91\x03\n" +
	"\x1bCreatePaymentChannelRequest\x12\x1f\n" +
	"\vmerchant_id\x18\x01 \x01(\tR\n" +
	"merchantId\x12*\n" +
	"\x11payment_method_id\x18\x02 \x01(\tR\x0fpaymentMethodId\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x18\n" +
	"\acontact\x18\x04 \x01(\tR\acontact\x12\"\n" +
	"\rpsp_fixed_fee\x18\x05 \x01(\tR\vpspFixedFee\x12 \n" +
	"\fpsp_fee_rate\x18\x06 \x01(\tR\n" +
	"pspFeeRate\x12$\n" +
	"\x0euser_fixed_fee\x18\a \x01(\tR\fuserFixedFee\x12\"\n" +
	"\ruser_fee_rate\x18\b \x01(\tR\vuserFeeRate\x12\x1d\n" +
	"\n" +
	"min_amount\x18\t \x01(\tR\tminAmount\x12\x1d\n" +
	"\n" +
	"max_amount\x18\n" +
	" \x01(\tR\tmaxAmount\x12)\n" +
	"\x03key\x18\v \x01(\v2\x17.google.protobuf.StructR\x03key2\xf5\f\n" +
	"\x11BackofficePayment\x12\xae\x01\n" +
	"\x19GetPaymentTransactionPage\x12-.payment.service.v1.GetTransactionPageRequest\x1a..payment.service.v1.GetTransactionPageResponse\"2\x82\xd3\xe4\x93\x02,:\x01*\"'/v1/backoffice/payment/transaction/page\x12\xbc\x01\n" +
	"\x19GetPaymentTransactionById\x123.payment.service.v1.GetTransactionDetailByIdRequest\x1a4.payment.service.v1.GetTransactionDetailByIdResponse\"4\x82\xd3\xe4\x93\x02.:\x01*\")/v1/backoffice/payment/transaction/detail\x12\xcc\x01\n" +
	"\x1dGetSupportedPaymentMethodList\x128.payment.service.v1.GetSupportedPaymentMethodListRequest\x1a9.payment.service.v1.GetSupportedPaymentMethodListResponse\"6\x82\xd3\xe4\x93\x020:\x01*\"+/v1/backoffice/payment/supportedmethod/list\x12\xa8\x01\n" +
	"\x14GetPaymentMethodList\x12/.payment.service.v1.GetPaymentMethodListRequest\x1a0.payment.service.v1.GetPaymentMethodListResponse\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v1/backoffice/payment/method/list\x12\xae\x01\n" +
	"\x13CreatePaymentMethod\x125.api.backoffice.service.v1.CreatePaymentMethodRequest\x1a/.payment.service.v1.CreatePaymentMethodResponse\"/\x82\xd3\xe4\x93\x02):\x01*\"$/v1/backoffice/payment/method/create\x12\xab\x01\n" +
	"\x14UpdatePaymentChannel\x12/.payment.service.v1.UpdatePaymentChannelRequest\x1a0.payment.service.v1.UpdatePaymentChannelResponse\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/v1/backoffice/payment/channel/update\x12\xb2\x01\n" +
	"\x14CreatePaymentChannel\x126.api.backoffice.service.v1.CreatePaymentChannelRequest\x1a0.payment.service.v1.CreatePaymentChannelResponse\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/v1/backoffice/payment/channel/create\x12\xb2\x01\n" +
	"\x12GetOperatorAddress\x124.api.backoffice.service.v1.GetOperatorAddressRequest\x1a..payment.service.v1.GetOperatorAddressResponse\"6\x82\xd3\xe4\x93\x020:\x01*\"+/v1/backoffice/payment/operator/address/get\x12\xac\x01\n" +
	"\x15GetPaymentChannelPage\x120.payment.service.v1.GetPaymentChannelPageRequest\x1a1.payment.service.v1.GetPaymentChannelPageResponse\".\x82\xd3\xe4\x93\x02(:\x01*\"#/v1/backoffice/payment/channel/pageB[\n" +
	"\x19api.backoffice.service.v1P\x01Z<github.com/infigaming-com/meepo-api/backoffice/service/v1;v1b\x06proto3"

var (
	file_backoffice_service_v1_backoffice_payment_proto_rawDescOnce sync.Once
	file_backoffice_service_v1_backoffice_payment_proto_rawDescData []byte
)

func file_backoffice_service_v1_backoffice_payment_proto_rawDescGZIP() []byte {
	file_backoffice_service_v1_backoffice_payment_proto_rawDescOnce.Do(func() {
		file_backoffice_service_v1_backoffice_payment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backoffice_service_v1_backoffice_payment_proto_rawDesc), len(file_backoffice_service_v1_backoffice_payment_proto_rawDesc)))
	})
	return file_backoffice_service_v1_backoffice_payment_proto_rawDescData
}

var file_backoffice_service_v1_backoffice_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_backoffice_service_v1_backoffice_payment_proto_goTypes = []any{
	(*GetOperatorAddressRequest)(nil),                // 0: api.backoffice.service.v1.GetOperatorAddressRequest
	(*CreatePaymentMethodRequest)(nil),               // 1: api.backoffice.service.v1.CreatePaymentMethodRequest
	(*CreatePaymentChannelRequest)(nil),              // 2: api.backoffice.service.v1.CreatePaymentChannelRequest
	(*structpb.Struct)(nil),                          // 3: google.protobuf.Struct
	(*v1.GetTransactionPageRequest)(nil),             // 4: payment.service.v1.GetTransactionPageRequest
	(*v1.GetTransactionDetailByIdRequest)(nil),       // 5: payment.service.v1.GetTransactionDetailByIdRequest
	(*v1.GetSupportedPaymentMethodListRequest)(nil),  // 6: payment.service.v1.GetSupportedPaymentMethodListRequest
	(*v1.GetPaymentMethodListRequest)(nil),           // 7: payment.service.v1.GetPaymentMethodListRequest
	(*v1.UpdatePaymentChannelRequest)(nil),           // 8: payment.service.v1.UpdatePaymentChannelRequest
	(*v1.GetPaymentChannelPageRequest)(nil),          // 9: payment.service.v1.GetPaymentChannelPageRequest
	(*v1.GetTransactionPageResponse)(nil),            // 10: payment.service.v1.GetTransactionPageResponse
	(*v1.GetTransactionDetailByIdResponse)(nil),      // 11: payment.service.v1.GetTransactionDetailByIdResponse
	(*v1.GetSupportedPaymentMethodListResponse)(nil), // 12: payment.service.v1.GetSupportedPaymentMethodListResponse
	(*v1.GetPaymentMethodListResponse)(nil),          // 13: payment.service.v1.GetPaymentMethodListResponse
	(*v1.CreatePaymentMethodResponse)(nil),           // 14: payment.service.v1.CreatePaymentMethodResponse
	(*v1.UpdatePaymentChannelResponse)(nil),          // 15: payment.service.v1.UpdatePaymentChannelResponse
	(*v1.CreatePaymentChannelResponse)(nil),          // 16: payment.service.v1.CreatePaymentChannelResponse
	(*v1.GetOperatorAddressResponse)(nil),            // 17: payment.service.v1.GetOperatorAddressResponse
	(*v1.GetPaymentChannelPageResponse)(nil),         // 18: payment.service.v1.GetPaymentChannelPageResponse
}
var file_backoffice_service_v1_backoffice_payment_proto_depIdxs = []int32{
	3,  // 0: api.backoffice.service.v1.GetOperatorAddressRequest.extra:type_name -> google.protobuf.Struct
	3,  // 1: api.backoffice.service.v1.CreatePaymentMethodRequest.key:type_name -> google.protobuf.Struct
	3,  // 2: api.backoffice.service.v1.CreatePaymentChannelRequest.key:type_name -> google.protobuf.Struct
	4,  // 3: api.backoffice.service.v1.BackofficePayment.GetPaymentTransactionPage:input_type -> payment.service.v1.GetTransactionPageRequest
	5,  // 4: api.backoffice.service.v1.BackofficePayment.GetPaymentTransactionById:input_type -> payment.service.v1.GetTransactionDetailByIdRequest
	6,  // 5: api.backoffice.service.v1.BackofficePayment.GetSupportedPaymentMethodList:input_type -> payment.service.v1.GetSupportedPaymentMethodListRequest
	7,  // 6: api.backoffice.service.v1.BackofficePayment.GetPaymentMethodList:input_type -> payment.service.v1.GetPaymentMethodListRequest
	1,  // 7: api.backoffice.service.v1.BackofficePayment.CreatePaymentMethod:input_type -> api.backoffice.service.v1.CreatePaymentMethodRequest
	8,  // 8: api.backoffice.service.v1.BackofficePayment.UpdatePaymentChannel:input_type -> payment.service.v1.UpdatePaymentChannelRequest
	2,  // 9: api.backoffice.service.v1.BackofficePayment.CreatePaymentChannel:input_type -> api.backoffice.service.v1.CreatePaymentChannelRequest
	0,  // 10: api.backoffice.service.v1.BackofficePayment.GetOperatorAddress:input_type -> api.backoffice.service.v1.GetOperatorAddressRequest
	9,  // 11: api.backoffice.service.v1.BackofficePayment.GetPaymentChannelPage:input_type -> payment.service.v1.GetPaymentChannelPageRequest
	10, // 12: api.backoffice.service.v1.BackofficePayment.GetPaymentTransactionPage:output_type -> payment.service.v1.GetTransactionPageResponse
	11, // 13: api.backoffice.service.v1.BackofficePayment.GetPaymentTransactionById:output_type -> payment.service.v1.GetTransactionDetailByIdResponse
	12, // 14: api.backoffice.service.v1.BackofficePayment.GetSupportedPaymentMethodList:output_type -> payment.service.v1.GetSupportedPaymentMethodListResponse
	13, // 15: api.backoffice.service.v1.BackofficePayment.GetPaymentMethodList:output_type -> payment.service.v1.GetPaymentMethodListResponse
	14, // 16: api.backoffice.service.v1.BackofficePayment.CreatePaymentMethod:output_type -> payment.service.v1.CreatePaymentMethodResponse
	15, // 17: api.backoffice.service.v1.BackofficePayment.UpdatePaymentChannel:output_type -> payment.service.v1.UpdatePaymentChannelResponse
	16, // 18: api.backoffice.service.v1.BackofficePayment.CreatePaymentChannel:output_type -> payment.service.v1.CreatePaymentChannelResponse
	17, // 19: api.backoffice.service.v1.BackofficePayment.GetOperatorAddress:output_type -> payment.service.v1.GetOperatorAddressResponse
	18, // 20: api.backoffice.service.v1.BackofficePayment.GetPaymentChannelPage:output_type -> payment.service.v1.GetPaymentChannelPageResponse
	12, // [12:21] is the sub-list for method output_type
	3,  // [3:12] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_backoffice_service_v1_backoffice_payment_proto_init() }
func file_backoffice_service_v1_backoffice_payment_proto_init() {
	if File_backoffice_service_v1_backoffice_payment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backoffice_service_v1_backoffice_payment_proto_rawDesc), len(file_backoffice_service_v1_backoffice_payment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backoffice_service_v1_backoffice_payment_proto_goTypes,
		DependencyIndexes: file_backoffice_service_v1_backoffice_payment_proto_depIdxs,
		MessageInfos:      file_backoffice_service_v1_backoffice_payment_proto_msgTypes,
	}.Build()
	File_backoffice_service_v1_backoffice_payment_proto = out.File
	file_backoffice_service_v1_backoffice_payment_proto_goTypes = nil
	file_backoffice_service_v1_backoffice_payment_proto_depIdxs = nil
}
