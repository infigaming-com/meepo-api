// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.6
// source: backoffice/service/v1/backoffice_payment.proto

package v1

import (
	common "github.com/infigaming-com/meepo-api/common"
	v1 "github.com/infigaming-com/meepo-api/payment/service/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to get address
// Used to get DC address
type GetOperatorAddressRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the channel to use for this deposit
	ChannelId             string                  `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	TargetOperatorContext *common.OperatorContext `protobuf:"bytes,2,opt,name=target_operator_context,json=targetOperatorContext,proto3" json:"target_operator_context,omitempty"`
	// Additional information needed for the deposit
	// May include clientOrderId, productId, userInfo, etc.
	Extra         *structpb.Struct `protobuf:"bytes,3,opt,name=extra,proto3" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOperatorAddressRequest) Reset() {
	*x = GetOperatorAddressRequest{}
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorAddressRequest) ProtoMessage() {}

func (x *GetOperatorAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorAddressRequest.ProtoReflect.Descriptor instead.
func (*GetOperatorAddressRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_payment_proto_rawDescGZIP(), []int{0}
}

func (x *GetOperatorAddressRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *GetOperatorAddressRequest) GetTargetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.TargetOperatorContext
	}
	return nil
}

func (x *GetOperatorAddressRequest) GetExtra() *structpb.Struct {
	if x != nil {
		return x.Extra
	}
	return nil
}

// Request to create a payment channel
// Used to create a new payment channel with specified merchant and method
type CreatePaymentMethodRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the payment method to be used
	PaymentMethodId string `protobuf:"bytes,1,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	// Contact Info email
	Contact string `protobuf:"bytes,2,opt,name=contact,proto3" json:"contact,omitempty"`
	// Fixed Fee on the Amount
	SysFixedFee string `protobuf:"bytes,3,opt,name=sys_fixed_fee,json=sysFixedFee,proto3" json:"sys_fixed_fee,omitempty"`
	// Rate Fee
	SysFeeRate string `protobuf:"bytes,4,opt,name=sys_fee_rate,json=sysFeeRate,proto3" json:"sys_fee_rate,omitempty"`
	// Min Amount
	SysMinAmount string `protobuf:"bytes,5,opt,name=sys_min_amount,json=sysMinAmount,proto3" json:"sys_min_amount,omitempty"`
	// Max Amount
	SysMaxAmount string `protobuf:"bytes,6,opt,name=sys_max_amount,json=sysMaxAmount,proto3" json:"sys_max_amount,omitempty"`
	// Minmum Fee
	SysMinFee     string `protobuf:"bytes,7,opt,name=sys_min_fee,json=sysMinFee,proto3" json:"sys_min_fee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePaymentMethodRequest) Reset() {
	*x = CreatePaymentMethodRequest{}
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePaymentMethodRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentMethodRequest) ProtoMessage() {}

func (x *CreatePaymentMethodRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentMethodRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentMethodRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_payment_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePaymentMethodRequest) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetSysFixedFee() string {
	if x != nil {
		return x.SysFixedFee
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetSysFeeRate() string {
	if x != nil {
		return x.SysFeeRate
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetSysMinAmount() string {
	if x != nil {
		return x.SysMinAmount
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetSysMaxAmount() string {
	if x != nil {
		return x.SysMaxAmount
	}
	return ""
}

func (x *CreatePaymentMethodRequest) GetSysMinFee() string {
	if x != nil {
		return x.SysMinFee
	}
	return ""
}

// Request to create a payment channel
// Used to create a new payment channel with specified merchant and method
type CreatePaymentChannelRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the merchant creating this channel
	MerchantId string `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	// ID of the payment method to be used
	PaymentMethodId string `protobuf:"bytes,2,opt,name=payment_method_id,json=paymentMethodId,proto3" json:"payment_method_id,omitempty"`
	// Contact Info email
	Contact string `protobuf:"bytes,3,opt,name=contact,proto3" json:"contact,omitempty"`
	// PSP Fixed Fee on the Amount
	FixedFee string `protobuf:"bytes,4,opt,name=fixed_fee,json=fixedFee,proto3" json:"fixed_fee,omitempty"`
	// PSP Rate Fee
	FeeRate string `protobuf:"bytes,5,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	// Minimum Fee
	MinFee string `protobuf:"bytes,6,opt,name=min_fee,json=minFee,proto3" json:"min_fee,omitempty"`
	// User Fixed Fee on the Amount
	UserFixedFee string `protobuf:"bytes,7,opt,name=user_fixed_fee,json=userFixedFee,proto3" json:"user_fixed_fee,omitempty"`
	// User Rate Fee
	UserFeeRate string `protobuf:"bytes,8,opt,name=user_fee_rate,json=userFeeRate,proto3" json:"user_fee_rate,omitempty"`
	// Minimum Fee
	UserMinFee string `protobuf:"bytes,9,opt,name=user_min_fee,json=userMinFee,proto3" json:"user_min_fee,omitempty"`
	// Min Amount
	MinAmount string `protobuf:"bytes,10,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	// Max Amount
	MaxAmount string `protobuf:"bytes,11,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	// Configuration fields for the payment channel in JSON format
	Key           *structpb.Struct `protobuf:"bytes,12,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePaymentChannelRequest) Reset() {
	*x = CreatePaymentChannelRequest{}
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePaymentChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentChannelRequest) ProtoMessage() {}

func (x *CreatePaymentChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentChannelRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentChannelRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_payment_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePaymentChannelRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetFixedFee() string {
	if x != nil {
		return x.FixedFee
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetFeeRate() string {
	if x != nil {
		return x.FeeRate
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetMinFee() string {
	if x != nil {
		return x.MinFee
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetUserFixedFee() string {
	if x != nil {
		return x.UserFixedFee
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetUserFeeRate() string {
	if x != nil {
		return x.UserFeeRate
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetUserMinFee() string {
	if x != nil {
		return x.UserMinFee
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetMinAmount() string {
	if x != nil {
		return x.MinAmount
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetMaxAmount() string {
	if x != nil {
		return x.MaxAmount
	}
	return ""
}

func (x *CreatePaymentChannelRequest) GetKey() *structpb.Struct {
	if x != nil {
		return x.Key
	}
	return nil
}

type GetPaymentMethodListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Currency like USD, VND
	Currency      string `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Psp           string `protobuf:"bytes,2,opt,name=psp,proto3" json:"psp,omitempty"`
	Search        string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPaymentMethodListRequest) Reset() {
	*x = GetPaymentMethodListRequest{}
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPaymentMethodListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentMethodListRequest) ProtoMessage() {}

func (x *GetPaymentMethodListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentMethodListRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentMethodListRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_payment_proto_rawDescGZIP(), []int{3}
}

func (x *GetPaymentMethodListRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetPaymentMethodListRequest) GetPsp() string {
	if x != nil {
		return x.Psp
	}
	return ""
}

func (x *GetPaymentMethodListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetTransactionPageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number to retrieve (1-based)
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Number of items per page
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional transaction ID filter
	TransactionId int64 `protobuf:"varint,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	// Optional currency filter
	Currency string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	// Optional payment method filter
	PaymentMethod string `protobuf:"bytes,5,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	// Optional payment channel filter
	PaymentChannel string `protobuf:"bytes,6,opt,name=payment_channel,json=paymentChannel,proto3" json:"payment_channel,omitempty"`
	// Optional crypto protocol filter
	Protocol string `protobuf:"bytes,7,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// Optional crypto network filter
	Network string `protobuf:"bytes,8,opt,name=network,proto3" json:"network,omitempty"`
	// Optional transaction type filter
	Type v1.TransactionType `protobuf:"varint,9,opt,name=type,proto3,enum=payment.service.v1.TransactionType" json:"type,omitempty"`
	// Optional status filter
	Status v1.TransactionStatus `protobuf:"varint,10,opt,name=status,proto3,enum=payment.service.v1.TransactionStatus" json:"status,omitempty"`
	// Optional agent filter
	Agent string `protobuf:"bytes,11,opt,name=agent,proto3" json:"agent,omitempty"`
	// Optional start time for date range filter
	StartTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Optional end time for date range filter
	EndTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Optional sort direction
	Sort v1.Sort `protobuf:"varint,14,opt,name=sort,proto3,enum=payment.service.v1.Sort" json:"sort,omitempty"`
	// Source of the request (frontend or admin)
	Source v1.RequestSource `protobuf:"varint,15,opt,name=source,proto3,enum=payment.service.v1.RequestSource" json:"source,omitempty"`
	// Optional user ID filter
	UserId int64 `protobuf:"varint,16,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Optional minimum amount filter
	MinAmount string `protobuf:"bytes,17,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	// Optional maximum amount filter
	MaxAmount              string                         `protobuf:"bytes,18,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	OperatorContextFilters *common.OperatorContextFilters `protobuf:"bytes,19,opt,name=operator_context_filters,json=operatorContextFilters,proto3" json:"operator_context_filters,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetTransactionPageRequest) Reset() {
	*x = GetTransactionPageRequest{}
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionPageRequest) ProtoMessage() {}

func (x *GetTransactionPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionPageRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionPageRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_payment_proto_rawDescGZIP(), []int{4}
}

func (x *GetTransactionPageRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTransactionPageRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetTransactionPageRequest) GetTransactionId() int64 {
	if x != nil {
		return x.TransactionId
	}
	return 0
}

func (x *GetTransactionPageRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetTransactionPageRequest) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *GetTransactionPageRequest) GetPaymentChannel() string {
	if x != nil {
		return x.PaymentChannel
	}
	return ""
}

func (x *GetTransactionPageRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *GetTransactionPageRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetTransactionPageRequest) GetType() v1.TransactionType {
	if x != nil {
		return x.Type
	}
	return v1.TransactionType(0)
}

func (x *GetTransactionPageRequest) GetStatus() v1.TransactionStatus {
	if x != nil {
		return x.Status
	}
	return v1.TransactionStatus(0)
}

func (x *GetTransactionPageRequest) GetAgent() string {
	if x != nil {
		return x.Agent
	}
	return ""
}

func (x *GetTransactionPageRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetTransactionPageRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *GetTransactionPageRequest) GetSort() v1.Sort {
	if x != nil {
		return x.Sort
	}
	return v1.Sort(0)
}

func (x *GetTransactionPageRequest) GetSource() v1.RequestSource {
	if x != nil {
		return x.Source
	}
	return v1.RequestSource(0)
}

func (x *GetTransactionPageRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetTransactionPageRequest) GetMinAmount() string {
	if x != nil {
		return x.MinAmount
	}
	return ""
}

func (x *GetTransactionPageRequest) GetMaxAmount() string {
	if x != nil {
		return x.MaxAmount
	}
	return ""
}

func (x *GetTransactionPageRequest) GetOperatorContextFilters() *common.OperatorContextFilters {
	if x != nil {
		return x.OperatorContextFilters
	}
	return nil
}

// Used to retrieve a paginated list of payment channels with optional filters
type GetOperatorPaymentChannelPageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Page number to retrieve (1-based)
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// Number of items per page
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Optional channel type filter
	Type v1.ChannelType `protobuf:"varint,3,opt,name=type,proto3,enum=payment.service.v1.ChannelType" json:"type,omitempty"`
	// Optional category filter
	Category string `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	// Optional payment method filter
	PaymentMethod string `protobuf:"bytes,5,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	// Optional currency filter
	Currency string `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	// Optional crypto protocol
	Protocol string `protobuf:"bytes,7,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// Optional crypto network filter
	Network string `protobuf:"bytes,8,opt,name=network,proto3" json:"network,omitempty"`
	// Optional country filter
	Country string `protobuf:"bytes,9,opt,name=country,proto3" json:"country,omitempty"`
	// Source of operator type
	Source string `protobuf:"bytes,10,opt,name=source,proto3" json:"source,omitempty"`
	// Optional sort direction
	Sort v1.Sort `protobuf:"varint,11,opt,name=sort,proto3,enum=payment.service.v1.Sort" json:"sort,omitempty"`
	// ID of the Operator connect with this channel
	OperatorContextFilters *common.OperatorContextFilters `protobuf:"bytes,12,opt,name=operator_context_filters,json=operatorContextFilters,proto3" json:"operator_context_filters,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetOperatorPaymentChannelPageRequest) Reset() {
	*x = GetOperatorPaymentChannelPageRequest{}
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOperatorPaymentChannelPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOperatorPaymentChannelPageRequest) ProtoMessage() {}

func (x *GetOperatorPaymentChannelPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backoffice_service_v1_backoffice_payment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOperatorPaymentChannelPageRequest.ProtoReflect.Descriptor instead.
func (*GetOperatorPaymentChannelPageRequest) Descriptor() ([]byte, []int) {
	return file_backoffice_service_v1_backoffice_payment_proto_rawDescGZIP(), []int{5}
}

func (x *GetOperatorPaymentChannelPageRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetOperatorPaymentChannelPageRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetOperatorPaymentChannelPageRequest) GetType() v1.ChannelType {
	if x != nil {
		return x.Type
	}
	return v1.ChannelType(0)
}

func (x *GetOperatorPaymentChannelPageRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *GetOperatorPaymentChannelPageRequest) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *GetOperatorPaymentChannelPageRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetOperatorPaymentChannelPageRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *GetOperatorPaymentChannelPageRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *GetOperatorPaymentChannelPageRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GetOperatorPaymentChannelPageRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *GetOperatorPaymentChannelPageRequest) GetSort() v1.Sort {
	if x != nil {
		return x.Sort
	}
	return v1.Sort(0)
}

func (x *GetOperatorPaymentChannelPageRequest) GetOperatorContextFilters() *common.OperatorContextFilters {
	if x != nil {
		return x.OperatorContextFilters
	}
	return nil
}

var File_backoffice_service_v1_backoffice_payment_proto protoreflect.FileDescriptor

const file_backoffice_service_v1_backoffice_payment_proto_rawDesc = "" +
	"\n" +
	".backoffice/service/v1/backoffice_payment.proto\x12\x19api.backoffice.service.v1\x1a\x1cgoogle/api/annotations.proto\x1a payment/service/v1/payment.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x13common/common.proto\"\xbe\x01\n" +
	"\x19GetOperatorAddressRequest\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12S\n" +
	"\x17target_operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x15targetOperatorContext\x12-\n" +
	"\x05extra\x18\x03 \x01(\v2\x17.google.protobuf.StructR\x05extra\"\x94\x02\n" +
	"\x1aCreatePaymentMethodRequest\x12*\n" +
	"\x11payment_method_id\x18\x01 \x01(\tR\x0fpaymentMethodId\x12\x18\n" +
	"\acontact\x18\x02 \x01(\tR\acontact\x12\"\n" +
	"\rsys_fixed_fee\x18\x03 \x01(\tR\vsysFixedFee\x12 \n" +
	"\fsys_fee_rate\x18\x04 \x01(\tR\n" +
	"sysFeeRate\x12$\n" +
	"\x0esys_min_amount\x18\x05 \x01(\tR\fsysMinAmount\x12$\n" +
	"\x0esys_max_amount\x18\x06 \x01(\tR\fsysMaxAmount\x12\x1e\n" +
	"\vsys_min_fee\x18\a \x01(\tR\tsysMinFee\"\xaa\x03\n" +
	"\x1bCreatePaymentChannelRequest\x12\x1f\n" +
	"\vmerchant_id\x18\x01 \x01(\tR\n" +
	"merchantId\x12*\n" +
	"\x11payment_method_id\x18\x02 \x01(\tR\x0fpaymentMethodId\x12\x18\n" +
	"\acontact\x18\x03 \x01(\tR\acontact\x12\x1b\n" +
	"\tfixed_fee\x18\x04 \x01(\tR\bfixedFee\x12\x19\n" +
	"\bfee_rate\x18\x05 \x01(\tR\afeeRate\x12\x17\n" +
	"\amin_fee\x18\x06 \x01(\tR\x06minFee\x12$\n" +
	"\x0euser_fixed_fee\x18\a \x01(\tR\fuserFixedFee\x12\"\n" +
	"\ruser_fee_rate\x18\b \x01(\tR\vuserFeeRate\x12 \n" +
	"\fuser_min_fee\x18\t \x01(\tR\n" +
	"userMinFee\x12\x1d\n" +
	"\n" +
	"min_amount\x18\n" +
	" \x01(\tR\tminAmount\x12\x1d\n" +
	"\n" +
	"max_amount\x18\v \x01(\tR\tmaxAmount\x12)\n" +
	"\x03key\x18\f \x01(\v2\x17.google.protobuf.StructR\x03key\"c\n" +
	"\x1bGetPaymentMethodListRequest\x12\x1a\n" +
	"\bcurrency\x18\x01 \x01(\tR\bcurrency\x12\x10\n" +
	"\x03psp\x18\x02 \x01(\tR\x03psp\x12\x16\n" +
	"\x06search\x18\x03 \x01(\tR\x06search\"\xb3\x06\n" +
	"\x19GetTransactionPageRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12%\n" +
	"\x0etransaction_id\x18\x03 \x01(\x03R\rtransactionId\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12%\n" +
	"\x0epayment_method\x18\x05 \x01(\tR\rpaymentMethod\x12'\n" +
	"\x0fpayment_channel\x18\x06 \x01(\tR\x0epaymentChannel\x12\x1a\n" +
	"\bprotocol\x18\a \x01(\tR\bprotocol\x12\x18\n" +
	"\anetwork\x18\b \x01(\tR\anetwork\x127\n" +
	"\x04type\x18\t \x01(\x0e2#.payment.service.v1.TransactionTypeR\x04type\x12=\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2%.payment.service.v1.TransactionStatusR\x06status\x12\x14\n" +
	"\x05agent\x18\v \x01(\tR\x05agent\x129\n" +
	"\n" +
	"start_time\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12,\n" +
	"\x04sort\x18\x0e \x01(\x0e2\x18.payment.service.v1.SortR\x04sort\x129\n" +
	"\x06source\x18\x0f \x01(\x0e2!.payment.service.v1.RequestSourceR\x06source\x12\x17\n" +
	"\auser_id\x18\x10 \x01(\x03R\x06userId\x12\x1d\n" +
	"\n" +
	"min_amount\x18\x11 \x01(\tR\tminAmount\x12\x1d\n" +
	"\n" +
	"max_amount\x18\x12 \x01(\tR\tmaxAmount\x12\\\n" +
	"\x18operator_context_filters\x18\x13 \x01(\v2\".api.common.OperatorContextFiltersR\x16operatorContextFilters\"\xdf\x03\n" +
	"$GetOperatorPaymentChannelPageRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x123\n" +
	"\x04type\x18\x03 \x01(\x0e2\x1f.payment.service.v1.ChannelTypeR\x04type\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12%\n" +
	"\x0epayment_method\x18\x05 \x01(\tR\rpaymentMethod\x12\x1a\n" +
	"\bcurrency\x18\x06 \x01(\tR\bcurrency\x12\x1a\n" +
	"\bprotocol\x18\a \x01(\tR\bprotocol\x12\x18\n" +
	"\anetwork\x18\b \x01(\tR\anetwork\x12\x18\n" +
	"\acountry\x18\t \x01(\tR\acountry\x12\x16\n" +
	"\x06source\x18\n" +
	" \x01(\tR\x06source\x12,\n" +
	"\x04sort\x18\v \x01(\x0e2\x18.payment.service.v1.SortR\x04sort\x12\\\n" +
	"\x18operator_context_filters\x18\f \x01(\v2\".api.common.OperatorContextFiltersR\x16operatorContextFilters2\xdd\x11\n" +
	"\x11BackofficePayment\x12\xb5\x01\n" +
	"\x19GetPaymentTransactionPage\x124.api.backoffice.service.v1.GetTransactionPageRequest\x1a..payment.service.v1.GetTransactionPageResponse\"2\x82\xd3\xe4\x93\x02,:\x01*\"'/v1/backoffice/payment/transaction/page\x12\xbc\x01\n" +
	"\x19GetPaymentTransactionById\x123.payment.service.v1.GetTransactionDetailByIdRequest\x1a4.payment.service.v1.GetTransactionDetailByIdResponse\"4\x82\xd3\xe4\x93\x02.:\x01*\")/v1/backoffice/payment/transaction/detail\x12\xc6\x01\n" +
	"!GetPaymentOperatorTransactionPage\x124.api.backoffice.service.v1.GetTransactionPageRequest\x1a..payment.service.v1.GetTransactionPageResponse\";\x82\xd3\xe4\x93\x025:\x01*\"0/v1/backoffice/payment/operator/transaction/page\x12\xcd\x01\n" +
	"!GetPaymentOperatorTransactionById\x123.payment.service.v1.GetTransactionDetailByIdRequest\x1a4.payment.service.v1.GetTransactionDetailByIdResponse\"=\x82\xd3\xe4\x93\x027:\x01*\"2/v1/backoffice/payment/operator/transaction/detail\x12\xcc\x01\n" +
	"\x1dGetSupportedPaymentMethodList\x128.payment.service.v1.GetSupportedPaymentMethodListRequest\x1a9.payment.service.v1.GetSupportedPaymentMethodListResponse\"6\x82\xd3\xe4\x93\x020:\x01*\"+/v1/backoffice/payment/supportedmethod/list\x12\xaf\x01\n" +
	"\x14GetPaymentMethodList\x126.api.backoffice.service.v1.GetPaymentMethodListRequest\x1a0.payment.service.v1.GetPaymentMethodListResponse\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v1/backoffice/payment/method/list\x12\xae\x01\n" +
	"\x13CreatePaymentMethod\x125.api.backoffice.service.v1.CreatePaymentMethodRequest\x1a/.payment.service.v1.CreatePaymentMethodResponse\"/\x82\xd3\xe4\x93\x02):\x01*\"$/v1/backoffice/payment/method/create\x12\xab\x01\n" +
	"\x14UpdatePaymentChannel\x12/.payment.service.v1.UpdatePaymentChannelRequest\x1a0.payment.service.v1.UpdatePaymentChannelResponse\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/v1/backoffice/payment/channel/update\x12\xb2\x01\n" +
	"\x14CreatePaymentChannel\x126.api.backoffice.service.v1.CreatePaymentChannelRequest\x1a0.payment.service.v1.CreatePaymentChannelResponse\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/v1/backoffice/payment/channel/create\x12\xb2\x01\n" +
	"\x12GetOperatorAddress\x124.api.backoffice.service.v1.GetOperatorAddressRequest\x1a..payment.service.v1.GetOperatorAddressResponse\"6\x82\xd3\xe4\x93\x020:\x01*\"+/v1/backoffice/payment/operator/address/get\x12\xc3\x01\n" +
	"\x1dGetOperatorPaymentChannelPage\x12?.api.backoffice.service.v1.GetOperatorPaymentChannelPageRequest\x1a1.payment.service.v1.GetPaymentChannelPageResponse\".\x82\xd3\xe4\x93\x02(:\x01*\"#/v1/backoffice/payment/channel/page\x12\xa7\x01\n" +
	"\x13UpdatePaymentMethod\x12..payment.service.v1.UpdatePaymentMethodRequest\x1a/.payment.service.v1.CreatePaymentMethodResponse\"/\x82\xd3\xe4\x93\x02):\x01*\"$/v1/backoffice/payment/method/updateB[\n" +
	"\x19api.backoffice.service.v1P\x01Z<github.com/infigaming-com/meepo-api/backoffice/service/v1;v1b\x06proto3"

var (
	file_backoffice_service_v1_backoffice_payment_proto_rawDescOnce sync.Once
	file_backoffice_service_v1_backoffice_payment_proto_rawDescData []byte
)

func file_backoffice_service_v1_backoffice_payment_proto_rawDescGZIP() []byte {
	file_backoffice_service_v1_backoffice_payment_proto_rawDescOnce.Do(func() {
		file_backoffice_service_v1_backoffice_payment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backoffice_service_v1_backoffice_payment_proto_rawDesc), len(file_backoffice_service_v1_backoffice_payment_proto_rawDesc)))
	})
	return file_backoffice_service_v1_backoffice_payment_proto_rawDescData
}

var file_backoffice_service_v1_backoffice_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_backoffice_service_v1_backoffice_payment_proto_goTypes = []any{
	(*GetOperatorAddressRequest)(nil),                // 0: api.backoffice.service.v1.GetOperatorAddressRequest
	(*CreatePaymentMethodRequest)(nil),               // 1: api.backoffice.service.v1.CreatePaymentMethodRequest
	(*CreatePaymentChannelRequest)(nil),              // 2: api.backoffice.service.v1.CreatePaymentChannelRequest
	(*GetPaymentMethodListRequest)(nil),              // 3: api.backoffice.service.v1.GetPaymentMethodListRequest
	(*GetTransactionPageRequest)(nil),                // 4: api.backoffice.service.v1.GetTransactionPageRequest
	(*GetOperatorPaymentChannelPageRequest)(nil),     // 5: api.backoffice.service.v1.GetOperatorPaymentChannelPageRequest
	(*common.OperatorContext)(nil),                   // 6: api.common.OperatorContext
	(*structpb.Struct)(nil),                          // 7: google.protobuf.Struct
	(v1.TransactionType)(0),                          // 8: payment.service.v1.TransactionType
	(v1.TransactionStatus)(0),                        // 9: payment.service.v1.TransactionStatus
	(*timestamppb.Timestamp)(nil),                    // 10: google.protobuf.Timestamp
	(v1.Sort)(0),                                     // 11: payment.service.v1.Sort
	(v1.RequestSource)(0),                            // 12: payment.service.v1.RequestSource
	(*common.OperatorContextFilters)(nil),            // 13: api.common.OperatorContextFilters
	(v1.ChannelType)(0),                              // 14: payment.service.v1.ChannelType
	(*v1.GetTransactionDetailByIdRequest)(nil),       // 15: payment.service.v1.GetTransactionDetailByIdRequest
	(*v1.GetSupportedPaymentMethodListRequest)(nil),  // 16: payment.service.v1.GetSupportedPaymentMethodListRequest
	(*v1.UpdatePaymentChannelRequest)(nil),           // 17: payment.service.v1.UpdatePaymentChannelRequest
	(*v1.UpdatePaymentMethodRequest)(nil),            // 18: payment.service.v1.UpdatePaymentMethodRequest
	(*v1.GetTransactionPageResponse)(nil),            // 19: payment.service.v1.GetTransactionPageResponse
	(*v1.GetTransactionDetailByIdResponse)(nil),      // 20: payment.service.v1.GetTransactionDetailByIdResponse
	(*v1.GetSupportedPaymentMethodListResponse)(nil), // 21: payment.service.v1.GetSupportedPaymentMethodListResponse
	(*v1.GetPaymentMethodListResponse)(nil),          // 22: payment.service.v1.GetPaymentMethodListResponse
	(*v1.CreatePaymentMethodResponse)(nil),           // 23: payment.service.v1.CreatePaymentMethodResponse
	(*v1.UpdatePaymentChannelResponse)(nil),          // 24: payment.service.v1.UpdatePaymentChannelResponse
	(*v1.CreatePaymentChannelResponse)(nil),          // 25: payment.service.v1.CreatePaymentChannelResponse
	(*v1.GetOperatorAddressResponse)(nil),            // 26: payment.service.v1.GetOperatorAddressResponse
	(*v1.GetPaymentChannelPageResponse)(nil),         // 27: payment.service.v1.GetPaymentChannelPageResponse
}
var file_backoffice_service_v1_backoffice_payment_proto_depIdxs = []int32{
	6,  // 0: api.backoffice.service.v1.GetOperatorAddressRequest.target_operator_context:type_name -> api.common.OperatorContext
	7,  // 1: api.backoffice.service.v1.GetOperatorAddressRequest.extra:type_name -> google.protobuf.Struct
	7,  // 2: api.backoffice.service.v1.CreatePaymentChannelRequest.key:type_name -> google.protobuf.Struct
	8,  // 3: api.backoffice.service.v1.GetTransactionPageRequest.type:type_name -> payment.service.v1.TransactionType
	9,  // 4: api.backoffice.service.v1.GetTransactionPageRequest.status:type_name -> payment.service.v1.TransactionStatus
	10, // 5: api.backoffice.service.v1.GetTransactionPageRequest.start_time:type_name -> google.protobuf.Timestamp
	10, // 6: api.backoffice.service.v1.GetTransactionPageRequest.end_time:type_name -> google.protobuf.Timestamp
	11, // 7: api.backoffice.service.v1.GetTransactionPageRequest.sort:type_name -> payment.service.v1.Sort
	12, // 8: api.backoffice.service.v1.GetTransactionPageRequest.source:type_name -> payment.service.v1.RequestSource
	13, // 9: api.backoffice.service.v1.GetTransactionPageRequest.operator_context_filters:type_name -> api.common.OperatorContextFilters
	14, // 10: api.backoffice.service.v1.GetOperatorPaymentChannelPageRequest.type:type_name -> payment.service.v1.ChannelType
	11, // 11: api.backoffice.service.v1.GetOperatorPaymentChannelPageRequest.sort:type_name -> payment.service.v1.Sort
	13, // 12: api.backoffice.service.v1.GetOperatorPaymentChannelPageRequest.operator_context_filters:type_name -> api.common.OperatorContextFilters
	4,  // 13: api.backoffice.service.v1.BackofficePayment.GetPaymentTransactionPage:input_type -> api.backoffice.service.v1.GetTransactionPageRequest
	15, // 14: api.backoffice.service.v1.BackofficePayment.GetPaymentTransactionById:input_type -> payment.service.v1.GetTransactionDetailByIdRequest
	4,  // 15: api.backoffice.service.v1.BackofficePayment.GetPaymentOperatorTransactionPage:input_type -> api.backoffice.service.v1.GetTransactionPageRequest
	15, // 16: api.backoffice.service.v1.BackofficePayment.GetPaymentOperatorTransactionById:input_type -> payment.service.v1.GetTransactionDetailByIdRequest
	16, // 17: api.backoffice.service.v1.BackofficePayment.GetSupportedPaymentMethodList:input_type -> payment.service.v1.GetSupportedPaymentMethodListRequest
	3,  // 18: api.backoffice.service.v1.BackofficePayment.GetPaymentMethodList:input_type -> api.backoffice.service.v1.GetPaymentMethodListRequest
	1,  // 19: api.backoffice.service.v1.BackofficePayment.CreatePaymentMethod:input_type -> api.backoffice.service.v1.CreatePaymentMethodRequest
	17, // 20: api.backoffice.service.v1.BackofficePayment.UpdatePaymentChannel:input_type -> payment.service.v1.UpdatePaymentChannelRequest
	2,  // 21: api.backoffice.service.v1.BackofficePayment.CreatePaymentChannel:input_type -> api.backoffice.service.v1.CreatePaymentChannelRequest
	0,  // 22: api.backoffice.service.v1.BackofficePayment.GetOperatorAddress:input_type -> api.backoffice.service.v1.GetOperatorAddressRequest
	5,  // 23: api.backoffice.service.v1.BackofficePayment.GetOperatorPaymentChannelPage:input_type -> api.backoffice.service.v1.GetOperatorPaymentChannelPageRequest
	18, // 24: api.backoffice.service.v1.BackofficePayment.UpdatePaymentMethod:input_type -> payment.service.v1.UpdatePaymentMethodRequest
	19, // 25: api.backoffice.service.v1.BackofficePayment.GetPaymentTransactionPage:output_type -> payment.service.v1.GetTransactionPageResponse
	20, // 26: api.backoffice.service.v1.BackofficePayment.GetPaymentTransactionById:output_type -> payment.service.v1.GetTransactionDetailByIdResponse
	19, // 27: api.backoffice.service.v1.BackofficePayment.GetPaymentOperatorTransactionPage:output_type -> payment.service.v1.GetTransactionPageResponse
	20, // 28: api.backoffice.service.v1.BackofficePayment.GetPaymentOperatorTransactionById:output_type -> payment.service.v1.GetTransactionDetailByIdResponse
	21, // 29: api.backoffice.service.v1.BackofficePayment.GetSupportedPaymentMethodList:output_type -> payment.service.v1.GetSupportedPaymentMethodListResponse
	22, // 30: api.backoffice.service.v1.BackofficePayment.GetPaymentMethodList:output_type -> payment.service.v1.GetPaymentMethodListResponse
	23, // 31: api.backoffice.service.v1.BackofficePayment.CreatePaymentMethod:output_type -> payment.service.v1.CreatePaymentMethodResponse
	24, // 32: api.backoffice.service.v1.BackofficePayment.UpdatePaymentChannel:output_type -> payment.service.v1.UpdatePaymentChannelResponse
	25, // 33: api.backoffice.service.v1.BackofficePayment.CreatePaymentChannel:output_type -> payment.service.v1.CreatePaymentChannelResponse
	26, // 34: api.backoffice.service.v1.BackofficePayment.GetOperatorAddress:output_type -> payment.service.v1.GetOperatorAddressResponse
	27, // 35: api.backoffice.service.v1.BackofficePayment.GetOperatorPaymentChannelPage:output_type -> payment.service.v1.GetPaymentChannelPageResponse
	23, // 36: api.backoffice.service.v1.BackofficePayment.UpdatePaymentMethod:output_type -> payment.service.v1.CreatePaymentMethodResponse
	25, // [25:37] is the sub-list for method output_type
	13, // [13:25] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_backoffice_service_v1_backoffice_payment_proto_init() }
func file_backoffice_service_v1_backoffice_payment_proto_init() {
	if File_backoffice_service_v1_backoffice_payment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backoffice_service_v1_backoffice_payment_proto_rawDesc), len(file_backoffice_service_v1_backoffice_payment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backoffice_service_v1_backoffice_payment_proto_goTypes,
		DependencyIndexes: file_backoffice_service_v1_backoffice_payment_proto_depIdxs,
		MessageInfos:      file_backoffice_service_v1_backoffice_payment_proto_msgTypes,
	}.Build()
	File_backoffice_service_v1_backoffice_payment_proto = out.File
	file_backoffice_service_v1_backoffice_payment_proto_goTypes = nil
	file_backoffice_service_v1_backoffice_payment_proto_depIdxs = nil
}
