syntax = "proto3";

package api.backoffice.service.v1;

import "google/api/annotations.proto";
import "bcpay/service/v1/bcpay.proto";
import "google/protobuf/struct.proto";
// import "common/common.proto";

option go_package = "github.com/infigaming-com/meepo-api/backoffice/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.backoffice.service.v1";

// BackofficeBcpay service
// Provides methods for backoffice bcpay management
service BackofficeBcpay {
  
	rpc GetMerchant(GetMerchantRequest) returns (bcpay.service.v1.GetMerchantResponse) {
    option (google.api.http) = {
      post: "/v1/backoffice/bcpay/merchant/get"
      body: "*"
    };
  }

	rpc CreateMerchant(CreateMerchantRequest) returns (bcpay.service.v1.CreateMerchantResponse) {
    option (google.api.http) = {
      post: "/v1/backoffice/bcpay/merchant/add"
      body: "*"
    };
  }

	rpc BankAccountList(BankAccountListRequest) returns (bcpay.service.v1.BankAccountListResponse) {
    option (google.api.http) = {
      post: "/v1/backoffice/bcpay/bankaccount/list"
      body: "*"
    };
	}

	rpc AddBankAccount(AddBankAccountRequest) returns (bcpay.service.v1.AddBankAccountResponse) {
    option (google.api.http) = {
      post: "/v1/backoffice/bcpay/bankaccount/add"
      body: "*"
    };
	}

	rpc UpdateBankAccount(UpdateBankAccountRequest) returns (bcpay.service.v1.UpdateBankAccountResponse) {
    option (google.api.http) = {
      post: "/v1/backoffice/bcpay/bankaccount/update"
      body: "*"
    };
	}

	rpc DeleteBankAccount(bcpay.service.v1.DeleteBankAccountRequest) returns (bcpay.service.v1.DeleteBankAccountResponse) {
    option (google.api.http) = {
      post: "/v1/backoffice/bcpay/bankaccount/delete"
      body: "*"
    };
	}

	rpc TransactionList(TransactionListRequest) returns (bcpay.service.v1.TransactionListResponse) {
    option (google.api.http) = {
      post: "/v1/backoffice/bcpay/transaction/list"
      body: "*"
    };
	}

	rpc AuditTransaction(AuditTransactionRequest) returns (bcpay.service.v1.AuditTransactionResponse) {
    option (google.api.http) = {
      post: "/v1/backoffice/bcpay/transaction/add"
      body: "*"
    };
	}

	rpc AddNoteToTransaction(bcpay.service.v1.AddNoteToTransactionRequest) returns (bcpay.service.v1.AddNoteToTransactionResponse) {
    option (google.api.http) = {
      post: "/v1/backoffice/bcpay/transaction/note/update"
      body: "*"
    };
  }

	rpc GetBankSchema(bcpay.service.v1.GetBankSchemaRequest) returns (bcpay.service.v1.GetBankSchemaResponse) {
    option (google.api.http) = {
      post: "/v1/backoffice/bcpay/bankinfoschema/get"
      body: "*"
    };
	}
}


message GetMerchantRequest {
}

message CreateMerchantRequest {
	string name = 1;
}

message BankAccountListRequest {
  // Page number to retrieve (1-based)
  int32 page = 1;
  // Number of items per page
  int32 page_size = 2;
	string currency = 3;
	string bank_account = 4;
	string bank_account_firstname = 5;
	string bank_account_lastname = 6;
	string card_id = 7;
	bool enabled = 8;
}

message AddBankAccountRequest {
	string currency = 1;
	string country = 2;
	string max_amount = 3;
	string max_amount_per_trans = 4;
	int32 max_trans_limit = 5;
	int32 priority = 6;
  google.protobuf.Struct bank_info = 7;
}

message UpdateBankAccountRequest {
	int64 id = 1;
	string currency = 2;
	string country = 3;
	string max_amount = 4;
	string max_amount_per_trans = 5;
	int32 max_trans_limit = 6;
	int32 priority = 7;
  google.protobuf.Struct bank_info = 8;
}

message TransactionListRequest {
  // Page number to retrieve (1-based)
  int32 page = 1;
  // Number of items per page
  int32 page_size = 2;
  // type "payin" "payout"
	string type = 3;
	// status "pending" "approved" "declined"
	string status = 4;
	int64 transaction_id = 5;
	string deposit_bank_account_firstname = 6;
	string deposit_bank_account_lastname = 7;
	string user_id = 8;
	string user_name = 9;
	string user_bank_account_firstname = 10;
	string user_bank_account_lastname = 11;
}

message AuditTransactionRequest {
	string transaction_id = 1;
	// audit a transaction "approved" or "delined"
	string audit = 2;
}
