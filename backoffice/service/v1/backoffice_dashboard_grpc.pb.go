// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v4.25.6
// source: backoffice/service/v1/backoffice_dashboard.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	BackofficeDashboard_GetOverviewDashboard_FullMethodName     = "/api.backoffice.service.v1.BackofficeDashboard/GetOverviewDashboard"
	BackofficeDashboard_GetTimeRangedDashboard_FullMethodName   = "/api.backoffice.service.v1.BackofficeDashboard/GetTimeRangedDashboard"
	BackofficeDashboard_GetTopOperatorsDashboard_FullMethodName = "/api.backoffice.service.v1.BackofficeDashboard/GetTopOperatorsDashboard"
)

// BackofficeDashboardClient is the client API for BackofficeDashboard service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BackofficeDashboardClient interface {
	GetOverviewDashboard(ctx context.Context, in *GetOverviewDashboardRequest, opts ...grpc.CallOption) (*GetOverviewDashboardResponse, error)
	GetTimeRangedDashboard(ctx context.Context, in *GetTimeRangedDashboardRequest, opts ...grpc.CallOption) (*GetTimeRangedDashboardResponse, error)
	GetTopOperatorsDashboard(ctx context.Context, in *GetTopOperatorsDashboardRequest, opts ...grpc.CallOption) (*GetTopOperatorsDashboardResponse, error)
}

type backofficeDashboardClient struct {
	cc grpc.ClientConnInterface
}

func NewBackofficeDashboardClient(cc grpc.ClientConnInterface) BackofficeDashboardClient {
	return &backofficeDashboardClient{cc}
}

func (c *backofficeDashboardClient) GetOverviewDashboard(ctx context.Context, in *GetOverviewDashboardRequest, opts ...grpc.CallOption) (*GetOverviewDashboardResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetOverviewDashboardResponse)
	err := c.cc.Invoke(ctx, BackofficeDashboard_GetOverviewDashboard_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backofficeDashboardClient) GetTimeRangedDashboard(ctx context.Context, in *GetTimeRangedDashboardRequest, opts ...grpc.CallOption) (*GetTimeRangedDashboardResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetTimeRangedDashboardResponse)
	err := c.cc.Invoke(ctx, BackofficeDashboard_GetTimeRangedDashboard_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backofficeDashboardClient) GetTopOperatorsDashboard(ctx context.Context, in *GetTopOperatorsDashboardRequest, opts ...grpc.CallOption) (*GetTopOperatorsDashboardResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetTopOperatorsDashboardResponse)
	err := c.cc.Invoke(ctx, BackofficeDashboard_GetTopOperatorsDashboard_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BackofficeDashboardServer is the server API for BackofficeDashboard service.
// All implementations must embed UnimplementedBackofficeDashboardServer
// for forward compatibility.
type BackofficeDashboardServer interface {
	GetOverviewDashboard(context.Context, *GetOverviewDashboardRequest) (*GetOverviewDashboardResponse, error)
	GetTimeRangedDashboard(context.Context, *GetTimeRangedDashboardRequest) (*GetTimeRangedDashboardResponse, error)
	GetTopOperatorsDashboard(context.Context, *GetTopOperatorsDashboardRequest) (*GetTopOperatorsDashboardResponse, error)
	mustEmbedUnimplementedBackofficeDashboardServer()
}

// UnimplementedBackofficeDashboardServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedBackofficeDashboardServer struct{}

func (UnimplementedBackofficeDashboardServer) GetOverviewDashboard(context.Context, *GetOverviewDashboardRequest) (*GetOverviewDashboardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOverviewDashboard not implemented")
}
func (UnimplementedBackofficeDashboardServer) GetTimeRangedDashboard(context.Context, *GetTimeRangedDashboardRequest) (*GetTimeRangedDashboardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTimeRangedDashboard not implemented")
}
func (UnimplementedBackofficeDashboardServer) GetTopOperatorsDashboard(context.Context, *GetTopOperatorsDashboardRequest) (*GetTopOperatorsDashboardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopOperatorsDashboard not implemented")
}
func (UnimplementedBackofficeDashboardServer) mustEmbedUnimplementedBackofficeDashboardServer() {}
func (UnimplementedBackofficeDashboardServer) testEmbeddedByValue()                             {}

// UnsafeBackofficeDashboardServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BackofficeDashboardServer will
// result in compilation errors.
type UnsafeBackofficeDashboardServer interface {
	mustEmbedUnimplementedBackofficeDashboardServer()
}

func RegisterBackofficeDashboardServer(s grpc.ServiceRegistrar, srv BackofficeDashboardServer) {
	// If the following call pancis, it indicates UnimplementedBackofficeDashboardServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&BackofficeDashboard_ServiceDesc, srv)
}

func _BackofficeDashboard_GetOverviewDashboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOverviewDashboardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackofficeDashboardServer).GetOverviewDashboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BackofficeDashboard_GetOverviewDashboard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackofficeDashboardServer).GetOverviewDashboard(ctx, req.(*GetOverviewDashboardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackofficeDashboard_GetTimeRangedDashboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTimeRangedDashboardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackofficeDashboardServer).GetTimeRangedDashboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BackofficeDashboard_GetTimeRangedDashboard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackofficeDashboardServer).GetTimeRangedDashboard(ctx, req.(*GetTimeRangedDashboardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackofficeDashboard_GetTopOperatorsDashboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTopOperatorsDashboardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackofficeDashboardServer).GetTopOperatorsDashboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BackofficeDashboard_GetTopOperatorsDashboard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackofficeDashboardServer).GetTopOperatorsDashboard(ctx, req.(*GetTopOperatorsDashboardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BackofficeDashboard_ServiceDesc is the grpc.ServiceDesc for BackofficeDashboard service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BackofficeDashboard_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.backoffice.service.v1.BackofficeDashboard",
	HandlerType: (*BackofficeDashboardServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOverviewDashboard",
			Handler:    _BackofficeDashboard_GetOverviewDashboard_Handler,
		},
		{
			MethodName: "GetTimeRangedDashboard",
			Handler:    _BackofficeDashboard_GetTimeRangedDashboard_Handler,
		},
		{
			MethodName: "GetTopOperatorsDashboard",
			Handler:    _BackofficeDashboard_GetTopOperatorsDashboard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backoffice/service/v1/backoffice_dashboard.proto",
}
