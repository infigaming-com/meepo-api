syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "common/common.proto";

package api.bcpay.service.v1;

option go_package = "github.com/infigaming-com/meepo-api/bcpay/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.bcpay.service.v1";

// User service provides authentication and user management functionality.
service Bcpay {
	rpc GetBankAccount(GetBankAccountRequest) returns (GetBankAccountResponse) {
    option (google.api.http) = {
      post: "/v1/bcpay/bankaccount/get"
      body: "*"
    };
	}

	rpc CreateWithdraw(CreateWithdrawRequest) returns (CreateWithdrawResponse) {
    option (google.api.http) = {
      post: "/v1/bcpay/withdraw/add"
      body: "*"
    };
	}
	
	rpc GetBankSchema(GetBankSchemaRequest) returns (GetBankSchemaResponse) {}

	rpc GetMerchant(GetMerchantRequest) returns (GetMerchantResponse) { }

	rpc CreateMerchant(CreateMerchantRequest) returns (CreateMerchantResponse) { }

	rpc BankAccountList(BankAccountListRequest) returns (BankAccountListResponse) { }

	rpc AddBankAccount(AddBankAccountRequest) returns (AddBankAccountResponse) { }

	rpc UpdateBankAccount(UpdateBankAccountRequest) returns (UpdateBankAccountResponse) { }

	rpc TransactionList(TransactionListRequest) returns (TransactionListResponse) { }

	rpc AuditTransaction(AuditTransactionRequest) returns (AuditTransactionResponse) { }

	rpc AddNoteToTransaction(AddNoteToTransactionRequest) returns (AddNoteToTransactionResponse) { }
}

message GetBankAccountRequest {
	string operator_id = 1;
	string merchant_id  = 2;
	string payer_id = 3;
	string notify_url = 4;
}

message GetBankAccountResponse {
	// operator id allocated by operator service
	string notify_url = 1;
	string reference_number = 2;
	string bank_account_name = 3;
	string bank_account_number = 4;
}

message CreateWithdrawRequest {
	string operator_order_no = 1;
	string merchant_id = 2;
	string amount = 3;
	string notify_url = 4;
	string payer_id = 5;
	string account_name = 6;
	string iban = 7;
	string bank_code = 8;
}

message CreateWithdrawResponse {
	string status = 1;
	string transaction_id = 2;
}



message GetMerchantRequest {
  api.common.OperatorContext operator_context = 1;
}

message GetMerchantResponse {
	string merchant_id = 1;
	string api_key_public = 2;
	// string api_key_secret = 3;
}

message CreateMerchantRequest {
	string name = 1;
  api.common.OperatorContext operator_context = 2;
}

message CreateMerchantResponse {
	string merchant_id = 1;
	string api_key_public = 2;
	// string api_key_secret = 3;
}

message GetBankSchemaRequest {
	string currency = 1;
}

message GetBankSchemaResponse {
  google.protobuf.ListValue schema = 1;
}

message DepositBankAccount {
	int64 id = 1;
	string merchant_id = 2;
	string bank_account = 3;
	string bank_first_name = 4;
	string bank_last_name = 5;
	string currency = 6;
	string country = 7;
	string max_amount = 8;
	string min_amount = 9;
	string max_amount_per_trans = 10;
	int32 max_trans_limit = 11;
	int32 current_trans_time = 12;
	int32 priority = 13;
	bool enable = 14;
}

message BankAccountListRequest {
	string currency = 1;
	string bank_account = 2;
	string bank_account_firstname = 3;
	string bank_account_lastname = 4;
	string card_id = 5;
  api.common.OperatorContextFilters operator_context_filters = 6;
  api.common.OperatorContext operator_context = 7;
}

message BankAccountListResponse {
	repeated DepositBankAccount bank_accounts = 1;
}

message AddBankAccountRequest {
	string currency = 1;
	string country = 2;
	string max_amount = 3;
	string min_amount = 4;
	string max_amount_per_trans = 5;
	int32 max_trans_limit = 6;
	int32 priority = 7;
  google.protobuf.Struct bank_info = 8;
  api.common.OperatorContext operator_context = 9;
}

message AddBankAccountResponse {
	DepositBankAccount bank_account = 1;
}

message UpdateBankAccountRequest {
	int64 id = 1;
	string currency = 2;
	string country = 3;
	string max_amount = 4;
	string min_amount = 5;
	string max_amount_per_trans = 6;
	int32 max_trans_limit = 7;
	int32 priority = 8;
  google.protobuf.Struct bank_info = 9;
  api.common.OperatorContext operator_context = 10;
}

message UpdateBankAccountResponse {
	DepositBankAccount bank_account = 1;
}

message TransactionListRequest {
	string type = 1;
	string transaction_id = 2;
	string deposit_bank_account_firstname = 3;
	string deposit_bank_account_lastname = 4;
	string user_id = 5;
	string user_name = 6;
	string payer_bank_account_firstname = 7;
	string payer_bank_account_lastname = 8;
  api.common.OperatorContext operator_context = 9;
}

message Transaction {
	string id = 1;
	string merchant_id = 2;
	string user_id = 3;
	string user_name = 4;
	string bank_account = 5;
	string bank_account_first_name = 6;
	string bank_account_last_name = 7;
	string type = 8;
	string card_id = 9;
	string amount = 10;
	string currency = 11;
	string country = 12;
 	string status = 13;
	// audit a transaction "approve" or "deline"
	string audit = 14;
 	string auditor = 15;
	string audit_time = 16;
 	string audit_note = 17;
	string create_time = 18;
	string update_time = 19;
}

message TransactionListResponse {
	repeated Transaction transaction = 1;
}

message AuditTransactionRequest {
	string transaction_id = 1;
	string audit = 2;
  api.common.OperatorContext operator_context = 3;
}

message AuditTransactionResponse {
	Transaction transaction = 1;
}

message AddNoteToTransactionRequest {
	string transaction_id = 1;
	// note
	string note = 2;
	
}

message AddNoteToTransactionResponse {
	Transaction transaction = 1;
}
