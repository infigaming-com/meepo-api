syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "common/common.proto";

package api.bcpay.service.v1;

option go_package = "github.com/infigaming-com/meepo-api/bcpay/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.bcpay.service.v1";

// User service provides authentication and user management functionality.
service Bcpay {
	rpc CreateDeposit(CreateDepositRequest) returns (CreateDepositResponse) {
    option (google.api.http) = {
      post: "/v1/bcpay/deposit/add"
      body: "*"
    };
	}

	rpc CreateWithdraw(CreateWithdrawRequest) returns (CreateWithdrawResponse) {
    option (google.api.http) = {
      post: "/v1/bcpay/withdraw/add"
      body: "*"
    };
	}
	
	rpc GetBankSchema(GetBankSchemaRequest) returns (GetBankSchemaResponse) {}

	rpc GetMerchant(GetMerchantRequest) returns (GetMerchantResponse) { }

	rpc CreateMerchant(CreateMerchantRequest) returns (CreateMerchantResponse) { }

	rpc BankAccountList(BankAccountListRequest) returns (BankAccountListResponse) { }

	rpc AddBankAccount(AddBankAccountRequest) returns (AddBankAccountResponse) { }

	rpc UpdateBankAccount(UpdateBankAccountRequest) returns (UpdateBankAccountResponse) { }

	rpc DeleteBankAccount(DeleteBankAccountRequest) returns (DeleteBankAccountResponse) { }

	rpc TransactionList(TransactionListRequest) returns (TransactionListResponse) { }

	rpc AuditTransaction(AuditTransactionRequest) returns (AuditTransactionResponse) { }

	rpc AddNoteToTransaction(AddNoteToTransactionRequest) returns (AddNoteToTransactionResponse) { }
}

message CreateDepositRequest {
	string merchant_id  = 1;
	string user_id  = 2;
	string user_name  = 3;
	string currency = 4;
	string country = 5;
	string notifyUrl = 6;
	string amount = 7;
	string bank_account = 8;
	string bank_account_firstname = 9;
	string bank_account_lastname = 10;
	string bank_iban = 11;
}

message CreateDepositResponse {
	// operator id allocated by operator service
	string transactionID = 1;
	string deposit_reference = 2;
	string bank_account = 3;
	string bank_account_name = 4;
	string bank_iban = 5;
}

message CreateWithdrawRequest {
	string operator_order_no = 1;
	string merchant_id = 2;
	string amount = 3;
	string currency = 4;
	string country = 5;
	string notifyUrl = 6;
	string user_id  = 7;
	string user_name  = 8;
	string bank_account = 9;
	string bank_account_firstname = 10;
	string bank_account_lastname = 11;
	string bank_iban = 12;
}

message CreateWithdrawResponse {
	string transaction_id = 1;
}



message GetMerchantRequest {
  api.common.OperatorContext operator_context = 1;
}

message GetMerchantResponse {
	string merchant_id = 1;
	string api_key_public = 2;
	// string api_key_secret = 3;
}

message CreateMerchantRequest {
	string name = 1;
  api.common.OperatorContext operator_context = 2;
}

message CreateMerchantResponse {
	string merchant_id = 1;
	string api_key_public = 2;
	// string api_key_secret = 3;
}

message GetBankSchemaRequest {
	string currency = 1;
	string country = 2;
}

message GetBankSchemaResponse {
  google.protobuf.ListValue schema = 1;
}

message DepositBankAccount {
	int64 id = 1;
	string merchant_id = 2;
	string bank_account = 3;
	string bank_first_name = 4;
	string bank_last_name = 5;
	string iban = 6;
	string currency = 7;
	string country = 8;
	string max_amount = 9;
	string max_amount_per_trans = 10;
	int32 max_trans_limit = 11;
	int32 current_trans_time = 12;
	int32 priority = 13;
	bool enable = 14;
}

message BankAccountListRequest {
  // Page number to retrieve (1-based)
  int32 page = 1;
  // Number of items per page
  int32 page_size = 2;
	string currency = 3;
	string bank_account = 4;
	string bank_account_firstname = 5;
	string bank_account_lastname = 6;
	string card_id = 7;
	bool enabled = 8;
  api.common.OperatorContext operator_context = 9;
}

message BankAccountListResponse {
	repeated DepositBankAccount bank_accounts = 1;
  // Current page number
  int32 page = 2;
  // Number of items per page
  int32 page_size = 3;
  // Total number of pages available
  int32 total_pages = 4;
  // Total number of enabled bank account
  int32 total_enabled = 5;
  // Total number of disabled bank account
  int32 total_disabled = 6;
  int32 total_count = 7;
}

message AddBankAccountRequest {
	string currency = 1;
	string country = 2;
	string max_amount = 3;
	string max_amount_per_trans = 4;
	int32 max_trans_limit = 5;
	int32 priority = 6;
  google.protobuf.Struct bank_info = 7;
  api.common.OperatorContext operator_context = 8;
}

message AddBankAccountResponse {
	DepositBankAccount bank_account = 1;
}

message UpdateBankAccountRequest {
	int64 id = 1;
	string currency = 2;
	string country = 3;
	string max_amount = 4;
	string max_amount_per_trans = 5;
	int32 max_trans_limit = 6;
	int32 priority = 7;
	bool enabled = 8;
  google.protobuf.Struct bank_info = 9;
  api.common.OperatorContext operator_context = 10;
}

message UpdateBankAccountResponse {
	DepositBankAccount bank_account = 1;
}

message DeleteBankAccountRequest {
	int64 id = 1;
}

message DeleteBankAccountResponse { }


message TransactionListRequest {
  // Page number to retrieve (1-based)
  int32 page = 1;
  // Number of items per page
  int32 page_size = 2;
	string type = 3;
	string status = 4;
	int64 transaction_id = 5;
	string deposit_bank_account_firstname = 6;
	string deposit_bank_account_lastname = 7;
	string user_id = 8;
	string user_name = 9;
	string user_bank_account_firstname = 10;
	string user_bank_account_lastname = 11;
  api.common.OperatorContext operator_context = 12;
}

message Transaction {
	int64 id = 1;
	string merchant_id = 2;
	string user_id = 3;
	string user_name = 4;
	string deposit_bank_account = 5;
	string deposit_bank_account_first_name = 6;
	string deposit_bank_account_last_name = 7;
	string user_bank_account = 8;
	string user_bank_account_first_name = 9;
	string user_bank_account_last_name = 10;
	string type = 11;
	string card_id = 12;
	string amount = 13;
	string currency = 14;
	string country = 15;
 	string status = 16;
	// audit a transaction "approve" or "decline"
 	string auditor = 17;
	string audit_time = 18;
 	string audit_note = 19;
	string create_time = 20;
	string update_time = 21;
}

message TransactionListResponse {
	repeated Transaction transaction = 1;
  // Current page number
  int32 page = 2;
  // Number of items per page
  int32 page_size = 3;
  // Total number of pages available
  int32 total_pages = 4;
  // Total number of approved transactions
  int32 total_approved = 5;
  // Total number of failed transactions
  int32 total_failed = 6;
  // Total number of pending transactions
  int32 total_pending = 7;
  int32 total_count = 8;
}

message AuditTransactionRequest {
	int64 transaction_id = 1;
	string audit = 2;
  api.common.OperatorContext operator_context = 3;
}

message AuditTransactionResponse {
	Transaction transaction = 1;
}

message AddNoteToTransactionRequest {
	int64 transaction_id = 1;
	// note
	string note = 2;
}

message AddNoteToTransactionResponse {
	Transaction transaction = 1;
}
