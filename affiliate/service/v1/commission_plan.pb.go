// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.6
// source: affiliate/service/v1/commission_plan.proto

package v1

import (
	common "github.com/infigaming-com/meepo-api/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCommissionPlanRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	UserId          int64                   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,2,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	Title           string                  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Status          string                  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	BaseCurrency    string                  `protobuf:"bytes,5,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	PlanConfig      *CommissionPlanConfig   `protobuf:"bytes,6,opt,name=plan_config,json=planConfig,proto3" json:"plan_config,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateCommissionPlanRequest) Reset() {
	*x = CreateCommissionPlanRequest{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommissionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommissionPlanRequest) ProtoMessage() {}

func (x *CreateCommissionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommissionPlanRequest.ProtoReflect.Descriptor instead.
func (*CreateCommissionPlanRequest) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCommissionPlanRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateCommissionPlanRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *CreateCommissionPlanRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateCommissionPlanRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateCommissionPlanRequest) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *CreateCommissionPlanRequest) GetPlanConfig() *CommissionPlanConfig {
	if x != nil {
		return x.PlanConfig
	}
	return nil
}

type CreateCommissionPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommissionPlanResponse) Reset() {
	*x = CreateCommissionPlanResponse{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommissionPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommissionPlanResponse) ProtoMessage() {}

func (x *CreateCommissionPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommissionPlanResponse.ProtoReflect.Descriptor instead.
func (*CreateCommissionPlanResponse) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{1}
}

type UpdateCommissionPlanRequest struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	UserId           int64                   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperatorContext  *common.OperatorContext `protobuf:"bytes,2,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	Title            string                  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Status           string                  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	BaseCurrency     string                  `protobuf:"bytes,5,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	PlanConfig       *CommissionPlanConfig   `protobuf:"bytes,6,opt,name=plan_config,json=planConfig,proto3" json:"plan_config,omitempty"`
	CommissionPlanId int64                   `protobuf:"varint,7,opt,name=commission_plan_id,json=commissionPlanId,proto3" json:"commission_plan_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateCommissionPlanRequest) Reset() {
	*x = UpdateCommissionPlanRequest{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCommissionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommissionPlanRequest) ProtoMessage() {}

func (x *UpdateCommissionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommissionPlanRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommissionPlanRequest) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateCommissionPlanRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateCommissionPlanRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *UpdateCommissionPlanRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateCommissionPlanRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateCommissionPlanRequest) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *UpdateCommissionPlanRequest) GetPlanConfig() *CommissionPlanConfig {
	if x != nil {
		return x.PlanConfig
	}
	return nil
}

func (x *UpdateCommissionPlanRequest) GetCommissionPlanId() int64 {
	if x != nil {
		return x.CommissionPlanId
	}
	return 0
}

type UpdateCommissionPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCommissionPlanResponse) Reset() {
	*x = UpdateCommissionPlanResponse{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCommissionPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommissionPlanResponse) ProtoMessage() {}

func (x *UpdateCommissionPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommissionPlanResponse.ProtoReflect.Descriptor instead.
func (*UpdateCommissionPlanResponse) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{3}
}

type GetCommissionPlanRequest struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext  *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	CommissionPlanId int64                   `protobuf:"varint,2,opt,name=commission_plan_id,json=commissionPlanId,proto3" json:"commission_plan_id,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetCommissionPlanRequest) Reset() {
	*x = GetCommissionPlanRequest{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommissionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionPlanRequest) ProtoMessage() {}

func (x *GetCommissionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionPlanRequest.ProtoReflect.Descriptor instead.
func (*GetCommissionPlanRequest) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{4}
}

func (x *GetCommissionPlanRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *GetCommissionPlanRequest) GetCommissionPlanId() int64 {
	if x != nil {
		return x.CommissionPlanId
	}
	return 0
}

type GetCommissionPlanResponse struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	UserId          int64                   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,2,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	Title           string                  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Status          string                  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	BaseCurrency    string                  `protobuf:"bytes,5,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	PlanConfig      *CommissionPlanConfig   `protobuf:"bytes,6,opt,name=plan_config,json=planConfig,proto3" json:"plan_config,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetCommissionPlanResponse) Reset() {
	*x = GetCommissionPlanResponse{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommissionPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommissionPlanResponse) ProtoMessage() {}

func (x *GetCommissionPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommissionPlanResponse.ProtoReflect.Descriptor instead.
func (*GetCommissionPlanResponse) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{5}
}

func (x *GetCommissionPlanResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetCommissionPlanResponse) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *GetCommissionPlanResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetCommissionPlanResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetCommissionPlanResponse) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *GetCommissionPlanResponse) GetPlanConfig() *CommissionPlanConfig {
	if x != nil {
		return x.PlanConfig
	}
	return nil
}

type ListCommissionPlansRequest struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	OperatorContext *common.OperatorContext `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	Countries       []string                `protobuf:"bytes,2,rep,name=countries,proto3" json:"countries,omitempty"` // not supported yet
	Page            *int32                  `protobuf:"varint,3,opt,name=page,proto3,oneof" json:"page,omitempty"`
	PageSize        *int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
	Status          *string                 `protobuf:"bytes,5,opt,name=status,proto3,oneof" json:"status,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListCommissionPlansRequest) Reset() {
	*x = ListCommissionPlansRequest{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommissionPlansRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommissionPlansRequest) ProtoMessage() {}

func (x *ListCommissionPlansRequest) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommissionPlansRequest.ProtoReflect.Descriptor instead.
func (*ListCommissionPlansRequest) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{6}
}

func (x *ListCommissionPlansRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *ListCommissionPlansRequest) GetCountries() []string {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *ListCommissionPlansRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *ListCommissionPlansRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *ListCommissionPlansRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type ListCommissionPlansResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CommissionPlans []*CommissionPlan      `protobuf:"bytes,1,rep,name=commission_plans,json=commissionPlans,proto3" json:"commission_plans,omitempty"`
	TotalCount      int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	ActiveCount     int32                  `protobuf:"varint,3,opt,name=active_count,json=activeCount,proto3" json:"active_count,omitempty"`
	PausedCount     int32                  `protobuf:"varint,4,opt,name=paused_count,json=pausedCount,proto3" json:"paused_count,omitempty"`
	Page            int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize        int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListCommissionPlansResponse) Reset() {
	*x = ListCommissionPlansResponse{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommissionPlansResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommissionPlansResponse) ProtoMessage() {}

func (x *ListCommissionPlansResponse) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommissionPlansResponse.ProtoReflect.Descriptor instead.
func (*ListCommissionPlansResponse) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{7}
}

func (x *ListCommissionPlansResponse) GetCommissionPlans() []*CommissionPlan {
	if x != nil {
		return x.CommissionPlans
	}
	return nil
}

func (x *ListCommissionPlansResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListCommissionPlansResponse) GetActiveCount() int32 {
	if x != nil {
		return x.ActiveCount
	}
	return 0
}

func (x *ListCommissionPlansResponse) GetPausedCount() int32 {
	if x != nil {
		return x.PausedCount
	}
	return 0
}

func (x *ListCommissionPlansResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListCommissionPlansResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type CommissionPlan struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CommissionPlanId   int64                  `protobuf:"varint,1,opt,name=commission_plan_id,json=commissionPlanId,proto3" json:"commission_plan_id,omitempty"`
	Title              string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Status             string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Source             string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`                                     // system/retailer/company/operator
	Types              []string               `protobuf:"bytes,5,rep,name=types,proto3" json:"types,omitempty"`                                       // cpa/revshare/cpl/cpc/flat_fee, multiple types are allowed
	AssignedCount      int32                  `protobuf:"varint,6,opt,name=assigned_count,json=assignedCount,proto3" json:"assigned_count,omitempty"` // not supported yet
	BaseCurrency       string                 `protobuf:"bytes,7,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	SourceOperatorName string                 `protobuf:"bytes,8,opt,name=source_operator_name,json=sourceOperatorName,proto3" json:"source_operator_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CommissionPlan) Reset() {
	*x = CommissionPlan{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommissionPlan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionPlan) ProtoMessage() {}

func (x *CommissionPlan) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionPlan.ProtoReflect.Descriptor instead.
func (*CommissionPlan) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{8}
}

func (x *CommissionPlan) GetCommissionPlanId() int64 {
	if x != nil {
		return x.CommissionPlanId
	}
	return 0
}

func (x *CommissionPlan) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CommissionPlan) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CommissionPlan) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CommissionPlan) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *CommissionPlan) GetAssignedCount() int32 {
	if x != nil {
		return x.AssignedCount
	}
	return 0
}

func (x *CommissionPlan) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *CommissionPlan) GetSourceOperatorName() string {
	if x != nil {
		return x.SourceOperatorName
	}
	return ""
}

type DeleteCommissionPlanRequest struct {
	state                       protoimpl.MessageState  `protogen:"open.v1"`
	UserId                      int64                   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	OperatorContext             *common.OperatorContext `protobuf:"bytes,2,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	CommissionPlanId            int64                   `protobuf:"varint,3,opt,name=commission_plan_id,json=commissionPlanId,proto3" json:"commission_plan_id,omitempty"`
	AlternativeCommissionPlanId *int64                  `protobuf:"varint,4,opt,name=alternative_commission_plan_id,json=alternativeCommissionPlanId,proto3,oneof" json:"alternative_commission_plan_id,omitempty"` // not supported yet
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *DeleteCommissionPlanRequest) Reset() {
	*x = DeleteCommissionPlanRequest{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommissionPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommissionPlanRequest) ProtoMessage() {}

func (x *DeleteCommissionPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommissionPlanRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommissionPlanRequest) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteCommissionPlanRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteCommissionPlanRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *DeleteCommissionPlanRequest) GetCommissionPlanId() int64 {
	if x != nil {
		return x.CommissionPlanId
	}
	return 0
}

func (x *DeleteCommissionPlanRequest) GetAlternativeCommissionPlanId() int64 {
	if x != nil && x.AlternativeCommissionPlanId != nil {
		return *x.AlternativeCommissionPlanId
	}
	return 0
}

type DeleteCommissionPlanResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommissionPlanResponse) Reset() {
	*x = DeleteCommissionPlanResponse{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommissionPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommissionPlanResponse) ProtoMessage() {}

func (x *DeleteCommissionPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommissionPlanResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommissionPlanResponse) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{10}
}

type CommissionPlanConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpa           *CPAConfig             `protobuf:"bytes,1,opt,name=cpa,proto3" json:"cpa,omitempty"`
	Revshare      *RevShareConfig        `protobuf:"bytes,2,opt,name=revshare,proto3" json:"revshare,omitempty"`
	Cpl           *CPLConfig             `protobuf:"bytes,3,opt,name=cpl,proto3" json:"cpl,omitempty"`
	Cpc           *CPCConfig             `protobuf:"bytes,4,opt,name=cpc,proto3" json:"cpc,omitempty"`
	FlatFee       *FlatFeeConfig         `protobuf:"bytes,5,opt,name=flat_fee,json=flatFee,proto3" json:"flat_fee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommissionPlanConfig) Reset() {
	*x = CommissionPlanConfig{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommissionPlanConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommissionPlanConfig) ProtoMessage() {}

func (x *CommissionPlanConfig) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommissionPlanConfig.ProtoReflect.Descriptor instead.
func (*CommissionPlanConfig) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{11}
}

func (x *CommissionPlanConfig) GetCpa() *CPAConfig {
	if x != nil {
		return x.Cpa
	}
	return nil
}

func (x *CommissionPlanConfig) GetRevshare() *RevShareConfig {
	if x != nil {
		return x.Revshare
	}
	return nil
}

func (x *CommissionPlanConfig) GetCpl() *CPLConfig {
	if x != nil {
		return x.Cpl
	}
	return nil
}

func (x *CommissionPlanConfig) GetCpc() *CPCConfig {
	if x != nil {
		return x.Cpc
	}
	return nil
}

func (x *CommissionPlanConfig) GetFlatFee() *FlatFeeConfig {
	if x != nil {
		return x.FlatFee
	}
	return nil
}

type CPAConfig struct {
	state                  protoimpl.MessageState            `protogen:"open.v1"`
	Enabled                bool                              `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CommissionType         string                            `protobuf:"bytes,2,opt,name=commission_type,json=commissionType,proto3" json:"commission_type,omitempty"` // flat/flat_by_countries/progressive/progressive_by_countries
	Flat                   *FlatCommission                   `protobuf:"bytes,3,opt,name=flat,proto3,oneof" json:"flat,omitempty"`
	FlatByCountries        *FlatByCountriesCommission        `protobuf:"bytes,4,opt,name=flat_by_countries,json=flatByCountries,proto3,oneof" json:"flat_by_countries,omitempty"`
	Progressive            *ProgressiveCommission            `protobuf:"bytes,5,opt,name=progressive,proto3,oneof" json:"progressive,omitempty"`
	ProgressiveByCountries *ProgressiveByCountriesCommission `protobuf:"bytes,6,opt,name=progressive_by_countries,json=progressiveByCountries,proto3,oneof" json:"progressive_by_countries,omitempty"`
	Qualification          *Qualification                    `protobuf:"bytes,7,opt,name=qualification,proto3,oneof" json:"qualification,omitempty"`
	AdvancedOptions        *AdvancedOptions                  `protobuf:"bytes,8,opt,name=advanced_options,json=advancedOptions,proto3,oneof" json:"advanced_options,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CPAConfig) Reset() {
	*x = CPAConfig{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPAConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPAConfig) ProtoMessage() {}

func (x *CPAConfig) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPAConfig.ProtoReflect.Descriptor instead.
func (*CPAConfig) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{12}
}

func (x *CPAConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CPAConfig) GetCommissionType() string {
	if x != nil {
		return x.CommissionType
	}
	return ""
}

func (x *CPAConfig) GetFlat() *FlatCommission {
	if x != nil {
		return x.Flat
	}
	return nil
}

func (x *CPAConfig) GetFlatByCountries() *FlatByCountriesCommission {
	if x != nil {
		return x.FlatByCountries
	}
	return nil
}

func (x *CPAConfig) GetProgressive() *ProgressiveCommission {
	if x != nil {
		return x.Progressive
	}
	return nil
}

func (x *CPAConfig) GetProgressiveByCountries() *ProgressiveByCountriesCommission {
	if x != nil {
		return x.ProgressiveByCountries
	}
	return nil
}

func (x *CPAConfig) GetQualification() *Qualification {
	if x != nil {
		return x.Qualification
	}
	return nil
}

func (x *CPAConfig) GetAdvancedOptions() *AdvancedOptions {
	if x != nil {
		return x.AdvancedOptions
	}
	return nil
}

type FlatCommission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commission    string                 `protobuf:"bytes,1,opt,name=commission,proto3" json:"commission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlatCommission) Reset() {
	*x = FlatCommission{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlatCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlatCommission) ProtoMessage() {}

func (x *FlatCommission) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlatCommission.ProtoReflect.Descriptor instead.
func (*FlatCommission) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{13}
}

func (x *FlatCommission) GetCommission() string {
	if x != nil {
		return x.Commission
	}
	return ""
}

type FlatByCountriesCommission struct {
	state                    protoimpl.MessageState    `protogen:"open.v1"`
	CountryGroups            []*CountryCommissionGroup `protobuf:"bytes,1,rep,name=country_groups,json=countryGroups,proto3" json:"country_groups,omitempty"`
	OtherCountriesCommission *string                   `protobuf:"bytes,2,opt,name=other_countries_commission,json=otherCountriesCommission,proto3,oneof" json:"other_countries_commission,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *FlatByCountriesCommission) Reset() {
	*x = FlatByCountriesCommission{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlatByCountriesCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlatByCountriesCommission) ProtoMessage() {}

func (x *FlatByCountriesCommission) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlatByCountriesCommission.ProtoReflect.Descriptor instead.
func (*FlatByCountriesCommission) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{14}
}

func (x *FlatByCountriesCommission) GetCountryGroups() []*CountryCommissionGroup {
	if x != nil {
		return x.CountryGroups
	}
	return nil
}

func (x *FlatByCountriesCommission) GetOtherCountriesCommission() string {
	if x != nil && x.OtherCountriesCommission != nil {
		return *x.OtherCountriesCommission
	}
	return ""
}

type CountryCommissionGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Countries     []string               `protobuf:"bytes,1,rep,name=countries,proto3" json:"countries,omitempty"`
	Commission    string                 `protobuf:"bytes,2,opt,name=commission,proto3" json:"commission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountryCommissionGroup) Reset() {
	*x = CountryCommissionGroup{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountryCommissionGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryCommissionGroup) ProtoMessage() {}

func (x *CountryCommissionGroup) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryCommissionGroup.ProtoReflect.Descriptor instead.
func (*CountryCommissionGroup) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{15}
}

func (x *CountryCommissionGroup) GetCountries() []string {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *CountryCommissionGroup) GetCommission() string {
	if x != nil {
		return x.Commission
	}
	return ""
}

type ProgressiveCommission struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Metric        string                        `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"` // ftd_amount/monthly_ftd_count/total_deposits/deposits_amount
	Ranges        []*ProgressiveCommissionRange `protobuf:"bytes,2,rep,name=ranges,proto3" json:"ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProgressiveCommission) Reset() {
	*x = ProgressiveCommission{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgressiveCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressiveCommission) ProtoMessage() {}

func (x *ProgressiveCommission) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressiveCommission.ProtoReflect.Descriptor instead.
func (*ProgressiveCommission) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{16}
}

func (x *ProgressiveCommission) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *ProgressiveCommission) GetRanges() []*ProgressiveCommissionRange {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type ProgressiveCommissionRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            *string                `protobuf:"bytes,2,opt,name=to,proto3,oneof" json:"to,omitempty"`
	Commission    string                 `protobuf:"bytes,3,opt,name=commission,proto3" json:"commission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProgressiveCommissionRange) Reset() {
	*x = ProgressiveCommissionRange{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgressiveCommissionRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressiveCommissionRange) ProtoMessage() {}

func (x *ProgressiveCommissionRange) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressiveCommissionRange.ProtoReflect.Descriptor instead.
func (*ProgressiveCommissionRange) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{17}
}

func (x *ProgressiveCommissionRange) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ProgressiveCommissionRange) GetTo() string {
	if x != nil && x.To != nil {
		return *x.To
	}
	return ""
}

func (x *ProgressiveCommissionRange) GetCommission() string {
	if x != nil {
		return x.Commission
	}
	return ""
}

type ProgressiveByCountriesCommission struct {
	state                protoimpl.MessageState        `protogen:"open.v1"`
	Metric               string                        `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"` // ftd_amount/monthly_ftd_count/total_deposits/deposits_amount
	CountryGroups        []*CountryProgressiveGroup    `protobuf:"bytes,2,rep,name=country_groups,json=countryGroups,proto3" json:"country_groups,omitempty"`
	OtherCountriesRanges []*ProgressiveCommissionRange `protobuf:"bytes,3,rep,name=other_countries_ranges,json=otherCountriesRanges,proto3" json:"other_countries_ranges,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ProgressiveByCountriesCommission) Reset() {
	*x = ProgressiveByCountriesCommission{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgressiveByCountriesCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressiveByCountriesCommission) ProtoMessage() {}

func (x *ProgressiveByCountriesCommission) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressiveByCountriesCommission.ProtoReflect.Descriptor instead.
func (*ProgressiveByCountriesCommission) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{18}
}

func (x *ProgressiveByCountriesCommission) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *ProgressiveByCountriesCommission) GetCountryGroups() []*CountryProgressiveGroup {
	if x != nil {
		return x.CountryGroups
	}
	return nil
}

func (x *ProgressiveByCountriesCommission) GetOtherCountriesRanges() []*ProgressiveCommissionRange {
	if x != nil {
		return x.OtherCountriesRanges
	}
	return nil
}

type CountryProgressiveGroup struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Countries     []string                      `protobuf:"bytes,1,rep,name=countries,proto3" json:"countries,omitempty"`
	Ranges        []*ProgressiveCommissionRange `protobuf:"bytes,2,rep,name=ranges,proto3" json:"ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountryProgressiveGroup) Reset() {
	*x = CountryProgressiveGroup{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountryProgressiveGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryProgressiveGroup) ProtoMessage() {}

func (x *CountryProgressiveGroup) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryProgressiveGroup.ProtoReflect.Descriptor instead.
func (*CountryProgressiveGroup) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{19}
}

func (x *CountryProgressiveGroup) GetCountries() []string {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *CountryProgressiveGroup) GetRanges() []*ProgressiveCommissionRange {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type Qualification struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	MinFtdAmount                   *string                `protobuf:"bytes,1,opt,name=min_ftd_amount,json=minFtdAmount,proto3,oneof" json:"min_ftd_amount,omitempty"`
	MinDepositsCount               *int32                 `protobuf:"varint,2,opt,name=min_deposits_count,json=minDepositsCount,proto3,oneof" json:"min_deposits_count,omitempty"`
	MinDepositsAmount              *string                `protobuf:"bytes,3,opt,name=min_deposits_amount,json=minDepositsAmount,proto3,oneof" json:"min_deposits_amount,omitempty"`
	MinBetsCount                   *int32                 `protobuf:"varint,4,opt,name=min_bets_count,json=minBetsCount,proto3,oneof" json:"min_bets_count,omitempty"`
	MinBetsAmount                  *string                `protobuf:"bytes,5,opt,name=min_bets_amount,json=minBetsAmount,proto3,oneof" json:"min_bets_amount,omitempty"`
	TimeLimitAfterRegistrationDays *int32                 `protobuf:"varint,6,opt,name=time_limit_after_registration_days,json=timeLimitAfterRegistrationDays,proto3,oneof" json:"time_limit_after_registration_days,omitempty"`
	TimeLimitAfterFtdDays          *int32                 `protobuf:"varint,7,opt,name=time_limit_after_ftd_days,json=timeLimitAfterFtdDays,proto3,oneof" json:"time_limit_after_ftd_days,omitempty"`
	AllowedPlayerStatuses          *string                `protobuf:"bytes,8,opt,name=allowed_player_statuses,json=allowedPlayerStatuses,proto3,oneof" json:"allowed_player_statuses,omitempty"` // not available yet
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *Qualification) Reset() {
	*x = Qualification{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Qualification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qualification) ProtoMessage() {}

func (x *Qualification) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qualification.ProtoReflect.Descriptor instead.
func (*Qualification) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{20}
}

func (x *Qualification) GetMinFtdAmount() string {
	if x != nil && x.MinFtdAmount != nil {
		return *x.MinFtdAmount
	}
	return ""
}

func (x *Qualification) GetMinDepositsCount() int32 {
	if x != nil && x.MinDepositsCount != nil {
		return *x.MinDepositsCount
	}
	return 0
}

func (x *Qualification) GetMinDepositsAmount() string {
	if x != nil && x.MinDepositsAmount != nil {
		return *x.MinDepositsAmount
	}
	return ""
}

func (x *Qualification) GetMinBetsCount() int32 {
	if x != nil && x.MinBetsCount != nil {
		return *x.MinBetsCount
	}
	return 0
}

func (x *Qualification) GetMinBetsAmount() string {
	if x != nil && x.MinBetsAmount != nil {
		return *x.MinBetsAmount
	}
	return ""
}

func (x *Qualification) GetTimeLimitAfterRegistrationDays() int32 {
	if x != nil && x.TimeLimitAfterRegistrationDays != nil {
		return *x.TimeLimitAfterRegistrationDays
	}
	return 0
}

func (x *Qualification) GetTimeLimitAfterFtdDays() int32 {
	if x != nil && x.TimeLimitAfterFtdDays != nil {
		return *x.TimeLimitAfterFtdDays
	}
	return 0
}

func (x *Qualification) GetAllowedPlayerStatuses() string {
	if x != nil && x.AllowedPlayerStatuses != nil {
		return *x.AllowedPlayerStatuses
	}
	return ""
}

type AdvancedOptions struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	HoldPeriodDays *int32                 `protobuf:"varint,1,opt,name=hold_period_days,json=holdPeriodDays,proto3,oneof" json:"hold_period_days,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AdvancedOptions) Reset() {
	*x = AdvancedOptions{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdvancedOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvancedOptions) ProtoMessage() {}

func (x *AdvancedOptions) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvancedOptions.ProtoReflect.Descriptor instead.
func (*AdvancedOptions) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{21}
}

func (x *AdvancedOptions) GetHoldPeriodDays() int32 {
	if x != nil && x.HoldPeriodDays != nil {
		return *x.HoldPeriodDays
	}
	return 0
}

type RevShareConfig struct {
	state                  protoimpl.MessageState                `protogen:"open.v1"`
	Enabled                bool                                  `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	BasedOn                string                                `protobuf:"bytes,2,opt,name=based_on,json=basedOn,proto3" json:"based_on,omitempty"`                               // ggr/ngr
	NegativeCarryover      string                                `protobuf:"bytes,3,opt,name=negative_carryover,json=negativeCarryover,proto3" json:"negative_carryover,omitempty"` // discard/carry_to_next_period
	CommissionType         string                                `protobuf:"bytes,4,opt,name=commission_type,json=commissionType,proto3" json:"commission_type,omitempty"`
	Flat                   *FlatRateCommission                   `protobuf:"bytes,5,opt,name=flat,proto3,oneof" json:"flat,omitempty"`
	FlatByCountries        *FlatByCountriesRateCommission        `protobuf:"bytes,6,opt,name=flat_by_countries,json=flatByCountries,proto3,oneof" json:"flat_by_countries,omitempty"`
	Progressive            *ProgressiveRateCommission            `protobuf:"bytes,7,opt,name=progressive,proto3,oneof" json:"progressive,omitempty"`
	ProgressiveByCountries *ProgressiveByCountriesRateCommission `protobuf:"bytes,8,opt,name=progressive_by_countries,json=progressiveByCountries,proto3,oneof" json:"progressive_by_countries,omitempty"`
	Qualification          *Qualification                        `protobuf:"bytes,9,opt,name=qualification,proto3,oneof" json:"qualification,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *RevShareConfig) Reset() {
	*x = RevShareConfig{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevShareConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevShareConfig) ProtoMessage() {}

func (x *RevShareConfig) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevShareConfig.ProtoReflect.Descriptor instead.
func (*RevShareConfig) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{22}
}

func (x *RevShareConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *RevShareConfig) GetBasedOn() string {
	if x != nil {
		return x.BasedOn
	}
	return ""
}

func (x *RevShareConfig) GetNegativeCarryover() string {
	if x != nil {
		return x.NegativeCarryover
	}
	return ""
}

func (x *RevShareConfig) GetCommissionType() string {
	if x != nil {
		return x.CommissionType
	}
	return ""
}

func (x *RevShareConfig) GetFlat() *FlatRateCommission {
	if x != nil {
		return x.Flat
	}
	return nil
}

func (x *RevShareConfig) GetFlatByCountries() *FlatByCountriesRateCommission {
	if x != nil {
		return x.FlatByCountries
	}
	return nil
}

func (x *RevShareConfig) GetProgressive() *ProgressiveRateCommission {
	if x != nil {
		return x.Progressive
	}
	return nil
}

func (x *RevShareConfig) GetProgressiveByCountries() *ProgressiveByCountriesRateCommission {
	if x != nil {
		return x.ProgressiveByCountries
	}
	return nil
}

func (x *RevShareConfig) GetQualification() *Qualification {
	if x != nil {
		return x.Qualification
	}
	return nil
}

type FlatRateCommission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rate          string                 `protobuf:"bytes,1,opt,name=rate,proto3" json:"rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlatRateCommission) Reset() {
	*x = FlatRateCommission{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlatRateCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlatRateCommission) ProtoMessage() {}

func (x *FlatRateCommission) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlatRateCommission.ProtoReflect.Descriptor instead.
func (*FlatRateCommission) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{23}
}

func (x *FlatRateCommission) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

type FlatByCountriesRateCommission struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CountryGroups      []*CountryRateGroup    `protobuf:"bytes,1,rep,name=country_groups,json=countryGroups,proto3" json:"country_groups,omitempty"`
	OtherCountriesRate *string                `protobuf:"bytes,2,opt,name=other_countries_rate,json=otherCountriesRate,proto3,oneof" json:"other_countries_rate,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *FlatByCountriesRateCommission) Reset() {
	*x = FlatByCountriesRateCommission{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlatByCountriesRateCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlatByCountriesRateCommission) ProtoMessage() {}

func (x *FlatByCountriesRateCommission) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlatByCountriesRateCommission.ProtoReflect.Descriptor instead.
func (*FlatByCountriesRateCommission) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{24}
}

func (x *FlatByCountriesRateCommission) GetCountryGroups() []*CountryRateGroup {
	if x != nil {
		return x.CountryGroups
	}
	return nil
}

func (x *FlatByCountriesRateCommission) GetOtherCountriesRate() string {
	if x != nil && x.OtherCountriesRate != nil {
		return *x.OtherCountriesRate
	}
	return ""
}

type CountryRateGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Countries     []string               `protobuf:"bytes,1,rep,name=countries,proto3" json:"countries,omitempty"`
	Rate          string                 `protobuf:"bytes,2,opt,name=rate,proto3" json:"rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountryRateGroup) Reset() {
	*x = CountryRateGroup{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountryRateGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryRateGroup) ProtoMessage() {}

func (x *CountryRateGroup) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryRateGroup.ProtoReflect.Descriptor instead.
func (*CountryRateGroup) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{25}
}

func (x *CountryRateGroup) GetCountries() []string {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *CountryRateGroup) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

type ProgressiveRateCommission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metric        string                 `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	Ranges        []*RateRange           `protobuf:"bytes,2,rep,name=ranges,proto3" json:"ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProgressiveRateCommission) Reset() {
	*x = ProgressiveRateCommission{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgressiveRateCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressiveRateCommission) ProtoMessage() {}

func (x *ProgressiveRateCommission) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressiveRateCommission.ProtoReflect.Descriptor instead.
func (*ProgressiveRateCommission) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{26}
}

func (x *ProgressiveRateCommission) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *ProgressiveRateCommission) GetRanges() []*RateRange {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type RateRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            *string                `protobuf:"bytes,2,opt,name=to,proto3,oneof" json:"to,omitempty"` // nil indicates no upper limit
	Rate          string                 `protobuf:"bytes,3,opt,name=rate,proto3" json:"rate,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateRange) Reset() {
	*x = RateRange{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateRange) ProtoMessage() {}

func (x *RateRange) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateRange.ProtoReflect.Descriptor instead.
func (*RateRange) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{27}
}

func (x *RateRange) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *RateRange) GetTo() string {
	if x != nil && x.To != nil {
		return *x.To
	}
	return ""
}

func (x *RateRange) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

type ProgressiveByCountriesRateCommission struct {
	state                protoimpl.MessageState         `protogen:"open.v1"`
	Metric               string                         `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	CountryGroups        []*CountryProgressiveRateGroup `protobuf:"bytes,2,rep,name=country_groups,json=countryGroups,proto3" json:"country_groups,omitempty"`
	OtherCountriesRanges []*RateRange                   `protobuf:"bytes,3,rep,name=other_countries_ranges,json=otherCountriesRanges,proto3" json:"other_countries_ranges,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ProgressiveByCountriesRateCommission) Reset() {
	*x = ProgressiveByCountriesRateCommission{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgressiveByCountriesRateCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressiveByCountriesRateCommission) ProtoMessage() {}

func (x *ProgressiveByCountriesRateCommission) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressiveByCountriesRateCommission.ProtoReflect.Descriptor instead.
func (*ProgressiveByCountriesRateCommission) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{28}
}

func (x *ProgressiveByCountriesRateCommission) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *ProgressiveByCountriesRateCommission) GetCountryGroups() []*CountryProgressiveRateGroup {
	if x != nil {
		return x.CountryGroups
	}
	return nil
}

func (x *ProgressiveByCountriesRateCommission) GetOtherCountriesRanges() []*RateRange {
	if x != nil {
		return x.OtherCountriesRanges
	}
	return nil
}

type CountryProgressiveRateGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Countries     []string               `protobuf:"bytes,1,rep,name=countries,proto3" json:"countries,omitempty"`
	Ranges        []*RateRange           `protobuf:"bytes,2,rep,name=ranges,proto3" json:"ranges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountryProgressiveRateGroup) Reset() {
	*x = CountryProgressiveRateGroup{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountryProgressiveRateGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryProgressiveRateGroup) ProtoMessage() {}

func (x *CountryProgressiveRateGroup) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryProgressiveRateGroup.ProtoReflect.Descriptor instead.
func (*CountryProgressiveRateGroup) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{29}
}

func (x *CountryProgressiveRateGroup) GetCountries() []string {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *CountryProgressiveRateGroup) GetRanges() []*RateRange {
	if x != nil {
		return x.Ranges
	}
	return nil
}

type CPLConfig struct {
	state                  protoimpl.MessageState            `protogen:"open.v1"`
	Enabled                bool                              `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CommissionType         string                            `protobuf:"bytes,2,opt,name=commission_type,json=commissionType,proto3" json:"commission_type,omitempty"`
	Flat                   *FlatCommission                   `protobuf:"bytes,3,opt,name=flat,proto3,oneof" json:"flat,omitempty"`
	FlatByCountries        *FlatByCountriesCommission        `protobuf:"bytes,4,opt,name=flat_by_countries,json=flatByCountries,proto3,oneof" json:"flat_by_countries,omitempty"`
	Progressive            *ProgressiveCommission            `protobuf:"bytes,5,opt,name=progressive,proto3,oneof" json:"progressive,omitempty"`
	ProgressiveByCountries *ProgressiveByCountriesCommission `protobuf:"bytes,6,opt,name=progressive_by_countries,json=progressiveByCountries,proto3,oneof" json:"progressive_by_countries,omitempty"`
	Qualification          *Qualification                    `protobuf:"bytes,7,opt,name=qualification,proto3,oneof" json:"qualification,omitempty"`
	AdvancedOptions        *AdvancedOptions                  `protobuf:"bytes,8,opt,name=advanced_options,json=advancedOptions,proto3,oneof" json:"advanced_options,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CPLConfig) Reset() {
	*x = CPLConfig{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPLConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPLConfig) ProtoMessage() {}

func (x *CPLConfig) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPLConfig.ProtoReflect.Descriptor instead.
func (*CPLConfig) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{30}
}

func (x *CPLConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CPLConfig) GetCommissionType() string {
	if x != nil {
		return x.CommissionType
	}
	return ""
}

func (x *CPLConfig) GetFlat() *FlatCommission {
	if x != nil {
		return x.Flat
	}
	return nil
}

func (x *CPLConfig) GetFlatByCountries() *FlatByCountriesCommission {
	if x != nil {
		return x.FlatByCountries
	}
	return nil
}

func (x *CPLConfig) GetProgressive() *ProgressiveCommission {
	if x != nil {
		return x.Progressive
	}
	return nil
}

func (x *CPLConfig) GetProgressiveByCountries() *ProgressiveByCountriesCommission {
	if x != nil {
		return x.ProgressiveByCountries
	}
	return nil
}

func (x *CPLConfig) GetQualification() *Qualification {
	if x != nil {
		return x.Qualification
	}
	return nil
}

func (x *CPLConfig) GetAdvancedOptions() *AdvancedOptions {
	if x != nil {
		return x.AdvancedOptions
	}
	return nil
}

type CPCConfig struct {
	state           protoimpl.MessageState     `protogen:"open.v1"`
	Enabled         bool                       `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CommissionType  string                     `protobuf:"bytes,2,opt,name=commission_type,json=commissionType,proto3" json:"commission_type,omitempty"` // flat/flat_by_countries
	Flat            *FlatCommission            `protobuf:"bytes,3,opt,name=flat,proto3,oneof" json:"flat,omitempty"`
	FlatByCountries *FlatByCountriesCommission `protobuf:"bytes,4,opt,name=flat_by_countries,json=flatByCountries,proto3,oneof" json:"flat_by_countries,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CPCConfig) Reset() {
	*x = CPCConfig{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPCConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPCConfig) ProtoMessage() {}

func (x *CPCConfig) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPCConfig.ProtoReflect.Descriptor instead.
func (*CPCConfig) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{31}
}

func (x *CPCConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CPCConfig) GetCommissionType() string {
	if x != nil {
		return x.CommissionType
	}
	return ""
}

func (x *CPCConfig) GetFlat() *FlatCommission {
	if x != nil {
		return x.Flat
	}
	return nil
}

func (x *CPCConfig) GetFlatByCountries() *FlatByCountriesCommission {
	if x != nil {
		return x.FlatByCountries
	}
	return nil
}

type FlatFeeConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Period        string                 `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"` // one_time/monthly/yearly
	Amount        string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlatFeeConfig) Reset() {
	*x = FlatFeeConfig{}
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlatFeeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlatFeeConfig) ProtoMessage() {}

func (x *FlatFeeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_affiliate_service_v1_commission_plan_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlatFeeConfig.ProtoReflect.Descriptor instead.
func (*FlatFeeConfig) Descriptor() ([]byte, []int) {
	return file_affiliate_service_v1_commission_plan_proto_rawDescGZIP(), []int{32}
}

func (x *FlatFeeConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *FlatFeeConfig) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *FlatFeeConfig) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *FlatFeeConfig) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

var File_affiliate_service_v1_commission_plan_proto protoreflect.FileDescriptor

const file_affiliate_service_v1_commission_plan_proto_rawDesc = "" +
	"\n" +
	"*affiliate/service/v1/commission_plan.proto\x12\x18api.affiliate.service.v1\x1a\x13common/common.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa2\x02\n" +
	"\x1bCreateCommissionPlanRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12F\n" +
	"\x10operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12#\n" +
	"\rbase_currency\x18\x05 \x01(\tR\fbaseCurrency\x12O\n" +
	"\vplan_config\x18\x06 \x01(\v2..api.affiliate.service.v1.CommissionPlanConfigR\n" +
	"planConfig\"\x1e\n" +
	"\x1cCreateCommissionPlanResponse\"\xd0\x02\n" +
	"\x1bUpdateCommissionPlanRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12F\n" +
	"\x10operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12#\n" +
	"\rbase_currency\x18\x05 \x01(\tR\fbaseCurrency\x12O\n" +
	"\vplan_config\x18\x06 \x01(\v2..api.affiliate.service.v1.CommissionPlanConfigR\n" +
	"planConfig\x12,\n" +
	"\x12commission_plan_id\x18\a \x01(\x03R\x10commissionPlanId\"\x1e\n" +
	"\x1cUpdateCommissionPlanResponse\"\x90\x01\n" +
	"\x18GetCommissionPlanRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12,\n" +
	"\x12commission_plan_id\x18\x02 \x01(\x03R\x10commissionPlanId\"\xa0\x02\n" +
	"\x19GetCommissionPlanResponse\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12F\n" +
	"\x10operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12#\n" +
	"\rbase_currency\x18\x05 \x01(\tR\fbaseCurrency\x12O\n" +
	"\vplan_config\x18\x06 \x01(\v2..api.affiliate.service.v1.CommissionPlanConfigR\n" +
	"planConfig\"\xfc\x01\n" +
	"\x1aListCommissionPlansRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\x1c\n" +
	"\tcountries\x18\x02 \x03(\tR\tcountries\x12\x17\n" +
	"\x04page\x18\x03 \x01(\x05H\x00R\x04page\x88\x01\x01\x12 \n" +
	"\tpage_size\x18\x04 \x01(\x05H\x01R\bpageSize\x88\x01\x01\x12\x1b\n" +
	"\x06status\x18\x05 \x01(\tH\x02R\x06status\x88\x01\x01B\a\n" +
	"\x05_pageB\f\n" +
	"\n" +
	"_page_sizeB\t\n" +
	"\a_status\"\x8a\x02\n" +
	"\x1bListCommissionPlansResponse\x12S\n" +
	"\x10commission_plans\x18\x01 \x03(\v2(.api.affiliate.service.v1.CommissionPlanR\x0fcommissionPlans\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12!\n" +
	"\factive_count\x18\x03 \x01(\x05R\vactiveCount\x12!\n" +
	"\fpaused_count\x18\x04 \x01(\x05R\vpausedCount\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\"\x98\x02\n" +
	"\x0eCommissionPlan\x12,\n" +
	"\x12commission_plan_id\x18\x01 \x01(\x03R\x10commissionPlanId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source\x12\x14\n" +
	"\x05types\x18\x05 \x03(\tR\x05types\x12%\n" +
	"\x0eassigned_count\x18\x06 \x01(\x05R\rassignedCount\x12#\n" +
	"\rbase_currency\x18\a \x01(\tR\fbaseCurrency\x120\n" +
	"\x14source_operator_name\x18\b \x01(\tR\x12sourceOperatorName\"\x99\x02\n" +
	"\x1bDeleteCommissionPlanRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12F\n" +
	"\x10operator_context\x18\x02 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12,\n" +
	"\x12commission_plan_id\x18\x03 \x01(\x03R\x10commissionPlanId\x12H\n" +
	"\x1ealternative_commission_plan_id\x18\x04 \x01(\x03H\x00R\x1balternativeCommissionPlanId\x88\x01\x01B!\n" +
	"\x1f_alternative_commission_plan_id\"\x1e\n" +
	"\x1cDeleteCommissionPlanResponse\"\xc5\x02\n" +
	"\x14CommissionPlanConfig\x125\n" +
	"\x03cpa\x18\x01 \x01(\v2#.api.affiliate.service.v1.CPAConfigR\x03cpa\x12D\n" +
	"\brevshare\x18\x02 \x01(\v2(.api.affiliate.service.v1.RevShareConfigR\brevshare\x125\n" +
	"\x03cpl\x18\x03 \x01(\v2#.api.affiliate.service.v1.CPLConfigR\x03cpl\x125\n" +
	"\x03cpc\x18\x04 \x01(\v2#.api.affiliate.service.v1.CPCConfigR\x03cpc\x12B\n" +
	"\bflat_fee\x18\x05 \x01(\v2'.api.affiliate.service.v1.FlatFeeConfigR\aflatFee\"\xec\x05\n" +
	"\tCPAConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12'\n" +
	"\x0fcommission_type\x18\x02 \x01(\tR\x0ecommissionType\x12A\n" +
	"\x04flat\x18\x03 \x01(\v2(.api.affiliate.service.v1.FlatCommissionH\x00R\x04flat\x88\x01\x01\x12d\n" +
	"\x11flat_by_countries\x18\x04 \x01(\v23.api.affiliate.service.v1.FlatByCountriesCommissionH\x01R\x0fflatByCountries\x88\x01\x01\x12V\n" +
	"\vprogressive\x18\x05 \x01(\v2/.api.affiliate.service.v1.ProgressiveCommissionH\x02R\vprogressive\x88\x01\x01\x12y\n" +
	"\x18progressive_by_countries\x18\x06 \x01(\v2:.api.affiliate.service.v1.ProgressiveByCountriesCommissionH\x03R\x16progressiveByCountries\x88\x01\x01\x12R\n" +
	"\rqualification\x18\a \x01(\v2'.api.affiliate.service.v1.QualificationH\x04R\rqualification\x88\x01\x01\x12Y\n" +
	"\x10advanced_options\x18\b \x01(\v2).api.affiliate.service.v1.AdvancedOptionsH\x05R\x0fadvancedOptions\x88\x01\x01B\a\n" +
	"\x05_flatB\x14\n" +
	"\x12_flat_by_countriesB\x0e\n" +
	"\f_progressiveB\x1b\n" +
	"\x19_progressive_by_countriesB\x10\n" +
	"\x0e_qualificationB\x13\n" +
	"\x11_advanced_options\"0\n" +
	"\x0eFlatCommission\x12\x1e\n" +
	"\n" +
	"commission\x18\x01 \x01(\tR\n" +
	"commission\"\xd6\x01\n" +
	"\x19FlatByCountriesCommission\x12W\n" +
	"\x0ecountry_groups\x18\x01 \x03(\v20.api.affiliate.service.v1.CountryCommissionGroupR\rcountryGroups\x12A\n" +
	"\x1aother_countries_commission\x18\x02 \x01(\tH\x00R\x18otherCountriesCommission\x88\x01\x01B\x1d\n" +
	"\x1b_other_countries_commission\"V\n" +
	"\x16CountryCommissionGroup\x12\x1c\n" +
	"\tcountries\x18\x01 \x03(\tR\tcountries\x12\x1e\n" +
	"\n" +
	"commission\x18\x02 \x01(\tR\n" +
	"commission\"}\n" +
	"\x15ProgressiveCommission\x12\x16\n" +
	"\x06metric\x18\x01 \x01(\tR\x06metric\x12L\n" +
	"\x06ranges\x18\x02 \x03(\v24.api.affiliate.service.v1.ProgressiveCommissionRangeR\x06ranges\"l\n" +
	"\x1aProgressiveCommissionRange\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x13\n" +
	"\x02to\x18\x02 \x01(\tH\x00R\x02to\x88\x01\x01\x12\x1e\n" +
	"\n" +
	"commission\x18\x03 \x01(\tR\n" +
	"commissionB\x05\n" +
	"\x03_to\"\x80\x02\n" +
	" ProgressiveByCountriesCommission\x12\x16\n" +
	"\x06metric\x18\x01 \x01(\tR\x06metric\x12X\n" +
	"\x0ecountry_groups\x18\x02 \x03(\v21.api.affiliate.service.v1.CountryProgressiveGroupR\rcountryGroups\x12j\n" +
	"\x16other_countries_ranges\x18\x03 \x03(\v24.api.affiliate.service.v1.ProgressiveCommissionRangeR\x14otherCountriesRanges\"\x85\x01\n" +
	"\x17CountryProgressiveGroup\x12\x1c\n" +
	"\tcountries\x18\x01 \x03(\tR\tcountries\x12L\n" +
	"\x06ranges\x18\x02 \x03(\v24.api.affiliate.service.v1.ProgressiveCommissionRangeR\x06ranges\"\x91\x05\n" +
	"\rQualification\x12)\n" +
	"\x0emin_ftd_amount\x18\x01 \x01(\tH\x00R\fminFtdAmount\x88\x01\x01\x121\n" +
	"\x12min_deposits_count\x18\x02 \x01(\x05H\x01R\x10minDepositsCount\x88\x01\x01\x123\n" +
	"\x13min_deposits_amount\x18\x03 \x01(\tH\x02R\x11minDepositsAmount\x88\x01\x01\x12)\n" +
	"\x0emin_bets_count\x18\x04 \x01(\x05H\x03R\fminBetsCount\x88\x01\x01\x12+\n" +
	"\x0fmin_bets_amount\x18\x05 \x01(\tH\x04R\rminBetsAmount\x88\x01\x01\x12O\n" +
	"\"time_limit_after_registration_days\x18\x06 \x01(\x05H\x05R\x1etimeLimitAfterRegistrationDays\x88\x01\x01\x12=\n" +
	"\x19time_limit_after_ftd_days\x18\a \x01(\x05H\x06R\x15timeLimitAfterFtdDays\x88\x01\x01\x12;\n" +
	"\x17allowed_player_statuses\x18\b \x01(\tH\aR\x15allowedPlayerStatuses\x88\x01\x01B\x11\n" +
	"\x0f_min_ftd_amountB\x15\n" +
	"\x13_min_deposits_countB\x16\n" +
	"\x14_min_deposits_amountB\x11\n" +
	"\x0f_min_bets_countB\x12\n" +
	"\x10_min_bets_amountB%\n" +
	"#_time_limit_after_registration_daysB\x1c\n" +
	"\x1a_time_limit_after_ftd_daysB\x1a\n" +
	"\x18_allowed_player_statuses\"U\n" +
	"\x0fAdvancedOptions\x12-\n" +
	"\x10hold_period_days\x18\x01 \x01(\x05H\x00R\x0eholdPeriodDays\x88\x01\x01B\x13\n" +
	"\x11_hold_period_days\"\xdb\x05\n" +
	"\x0eRevShareConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x19\n" +
	"\bbased_on\x18\x02 \x01(\tR\abasedOn\x12-\n" +
	"\x12negative_carryover\x18\x03 \x01(\tR\x11negativeCarryover\x12'\n" +
	"\x0fcommission_type\x18\x04 \x01(\tR\x0ecommissionType\x12E\n" +
	"\x04flat\x18\x05 \x01(\v2,.api.affiliate.service.v1.FlatRateCommissionH\x00R\x04flat\x88\x01\x01\x12h\n" +
	"\x11flat_by_countries\x18\x06 \x01(\v27.api.affiliate.service.v1.FlatByCountriesRateCommissionH\x01R\x0fflatByCountries\x88\x01\x01\x12Z\n" +
	"\vprogressive\x18\a \x01(\v23.api.affiliate.service.v1.ProgressiveRateCommissionH\x02R\vprogressive\x88\x01\x01\x12}\n" +
	"\x18progressive_by_countries\x18\b \x01(\v2>.api.affiliate.service.v1.ProgressiveByCountriesRateCommissionH\x03R\x16progressiveByCountries\x88\x01\x01\x12R\n" +
	"\rqualification\x18\t \x01(\v2'.api.affiliate.service.v1.QualificationH\x04R\rqualification\x88\x01\x01B\a\n" +
	"\x05_flatB\x14\n" +
	"\x12_flat_by_countriesB\x0e\n" +
	"\f_progressiveB\x1b\n" +
	"\x19_progressive_by_countriesB\x10\n" +
	"\x0e_qualification\"(\n" +
	"\x12FlatRateCommission\x12\x12\n" +
	"\x04rate\x18\x01 \x01(\tR\x04rate\"\xc2\x01\n" +
	"\x1dFlatByCountriesRateCommission\x12Q\n" +
	"\x0ecountry_groups\x18\x01 \x03(\v2*.api.affiliate.service.v1.CountryRateGroupR\rcountryGroups\x125\n" +
	"\x14other_countries_rate\x18\x02 \x01(\tH\x00R\x12otherCountriesRate\x88\x01\x01B\x17\n" +
	"\x15_other_countries_rate\"D\n" +
	"\x10CountryRateGroup\x12\x1c\n" +
	"\tcountries\x18\x01 \x03(\tR\tcountries\x12\x12\n" +
	"\x04rate\x18\x02 \x01(\tR\x04rate\"p\n" +
	"\x19ProgressiveRateCommission\x12\x16\n" +
	"\x06metric\x18\x01 \x01(\tR\x06metric\x12;\n" +
	"\x06ranges\x18\x02 \x03(\v2#.api.affiliate.service.v1.RateRangeR\x06ranges\"O\n" +
	"\tRateRange\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x13\n" +
	"\x02to\x18\x02 \x01(\tH\x00R\x02to\x88\x01\x01\x12\x12\n" +
	"\x04rate\x18\x03 \x01(\tR\x04rateB\x05\n" +
	"\x03_to\"\xf7\x01\n" +
	"$ProgressiveByCountriesRateCommission\x12\x16\n" +
	"\x06metric\x18\x01 \x01(\tR\x06metric\x12\\\n" +
	"\x0ecountry_groups\x18\x02 \x03(\v25.api.affiliate.service.v1.CountryProgressiveRateGroupR\rcountryGroups\x12Y\n" +
	"\x16other_countries_ranges\x18\x03 \x03(\v2#.api.affiliate.service.v1.RateRangeR\x14otherCountriesRanges\"x\n" +
	"\x1bCountryProgressiveRateGroup\x12\x1c\n" +
	"\tcountries\x18\x01 \x03(\tR\tcountries\x12;\n" +
	"\x06ranges\x18\x02 \x03(\v2#.api.affiliate.service.v1.RateRangeR\x06ranges\"\xec\x05\n" +
	"\tCPLConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12'\n" +
	"\x0fcommission_type\x18\x02 \x01(\tR\x0ecommissionType\x12A\n" +
	"\x04flat\x18\x03 \x01(\v2(.api.affiliate.service.v1.FlatCommissionH\x00R\x04flat\x88\x01\x01\x12d\n" +
	"\x11flat_by_countries\x18\x04 \x01(\v23.api.affiliate.service.v1.FlatByCountriesCommissionH\x01R\x0fflatByCountries\x88\x01\x01\x12V\n" +
	"\vprogressive\x18\x05 \x01(\v2/.api.affiliate.service.v1.ProgressiveCommissionH\x02R\vprogressive\x88\x01\x01\x12y\n" +
	"\x18progressive_by_countries\x18\x06 \x01(\v2:.api.affiliate.service.v1.ProgressiveByCountriesCommissionH\x03R\x16progressiveByCountries\x88\x01\x01\x12R\n" +
	"\rqualification\x18\a \x01(\v2'.api.affiliate.service.v1.QualificationH\x04R\rqualification\x88\x01\x01\x12Y\n" +
	"\x10advanced_options\x18\b \x01(\v2).api.affiliate.service.v1.AdvancedOptionsH\x05R\x0fadvancedOptions\x88\x01\x01B\a\n" +
	"\x05_flatB\x14\n" +
	"\x12_flat_by_countriesB\x0e\n" +
	"\f_progressiveB\x1b\n" +
	"\x19_progressive_by_countriesB\x10\n" +
	"\x0e_qualificationB\x13\n" +
	"\x11_advanced_options\"\x96\x02\n" +
	"\tCPCConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12'\n" +
	"\x0fcommission_type\x18\x02 \x01(\tR\x0ecommissionType\x12A\n" +
	"\x04flat\x18\x03 \x01(\v2(.api.affiliate.service.v1.FlatCommissionH\x00R\x04flat\x88\x01\x01\x12d\n" +
	"\x11flat_by_countries\x18\x04 \x01(\v23.api.affiliate.service.v1.FlatByCountriesCommissionH\x01R\x0fflatByCountries\x88\x01\x01B\a\n" +
	"\x05_flatB\x14\n" +
	"\x12_flat_by_countries\"\x94\x01\n" +
	"\rFlatFeeConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x16\n" +
	"\x06period\x18\x02 \x01(\tR\x06period\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\tR\x06amount\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTimeBY\n" +
	"\x18api.affiliate.service.v1P\x01Z;github.com/infigaming-com/meepo-api/affiliate/service/v1;v1b\x06proto3"

var (
	file_affiliate_service_v1_commission_plan_proto_rawDescOnce sync.Once
	file_affiliate_service_v1_commission_plan_proto_rawDescData []byte
)

func file_affiliate_service_v1_commission_plan_proto_rawDescGZIP() []byte {
	file_affiliate_service_v1_commission_plan_proto_rawDescOnce.Do(func() {
		file_affiliate_service_v1_commission_plan_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_affiliate_service_v1_commission_plan_proto_rawDesc), len(file_affiliate_service_v1_commission_plan_proto_rawDesc)))
	})
	return file_affiliate_service_v1_commission_plan_proto_rawDescData
}

var file_affiliate_service_v1_commission_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_affiliate_service_v1_commission_plan_proto_goTypes = []any{
	(*CreateCommissionPlanRequest)(nil),          // 0: api.affiliate.service.v1.CreateCommissionPlanRequest
	(*CreateCommissionPlanResponse)(nil),         // 1: api.affiliate.service.v1.CreateCommissionPlanResponse
	(*UpdateCommissionPlanRequest)(nil),          // 2: api.affiliate.service.v1.UpdateCommissionPlanRequest
	(*UpdateCommissionPlanResponse)(nil),         // 3: api.affiliate.service.v1.UpdateCommissionPlanResponse
	(*GetCommissionPlanRequest)(nil),             // 4: api.affiliate.service.v1.GetCommissionPlanRequest
	(*GetCommissionPlanResponse)(nil),            // 5: api.affiliate.service.v1.GetCommissionPlanResponse
	(*ListCommissionPlansRequest)(nil),           // 6: api.affiliate.service.v1.ListCommissionPlansRequest
	(*ListCommissionPlansResponse)(nil),          // 7: api.affiliate.service.v1.ListCommissionPlansResponse
	(*CommissionPlan)(nil),                       // 8: api.affiliate.service.v1.CommissionPlan
	(*DeleteCommissionPlanRequest)(nil),          // 9: api.affiliate.service.v1.DeleteCommissionPlanRequest
	(*DeleteCommissionPlanResponse)(nil),         // 10: api.affiliate.service.v1.DeleteCommissionPlanResponse
	(*CommissionPlanConfig)(nil),                 // 11: api.affiliate.service.v1.CommissionPlanConfig
	(*CPAConfig)(nil),                            // 12: api.affiliate.service.v1.CPAConfig
	(*FlatCommission)(nil),                       // 13: api.affiliate.service.v1.FlatCommission
	(*FlatByCountriesCommission)(nil),            // 14: api.affiliate.service.v1.FlatByCountriesCommission
	(*CountryCommissionGroup)(nil),               // 15: api.affiliate.service.v1.CountryCommissionGroup
	(*ProgressiveCommission)(nil),                // 16: api.affiliate.service.v1.ProgressiveCommission
	(*ProgressiveCommissionRange)(nil),           // 17: api.affiliate.service.v1.ProgressiveCommissionRange
	(*ProgressiveByCountriesCommission)(nil),     // 18: api.affiliate.service.v1.ProgressiveByCountriesCommission
	(*CountryProgressiveGroup)(nil),              // 19: api.affiliate.service.v1.CountryProgressiveGroup
	(*Qualification)(nil),                        // 20: api.affiliate.service.v1.Qualification
	(*AdvancedOptions)(nil),                      // 21: api.affiliate.service.v1.AdvancedOptions
	(*RevShareConfig)(nil),                       // 22: api.affiliate.service.v1.RevShareConfig
	(*FlatRateCommission)(nil),                   // 23: api.affiliate.service.v1.FlatRateCommission
	(*FlatByCountriesRateCommission)(nil),        // 24: api.affiliate.service.v1.FlatByCountriesRateCommission
	(*CountryRateGroup)(nil),                     // 25: api.affiliate.service.v1.CountryRateGroup
	(*ProgressiveRateCommission)(nil),            // 26: api.affiliate.service.v1.ProgressiveRateCommission
	(*RateRange)(nil),                            // 27: api.affiliate.service.v1.RateRange
	(*ProgressiveByCountriesRateCommission)(nil), // 28: api.affiliate.service.v1.ProgressiveByCountriesRateCommission
	(*CountryProgressiveRateGroup)(nil),          // 29: api.affiliate.service.v1.CountryProgressiveRateGroup
	(*CPLConfig)(nil),                            // 30: api.affiliate.service.v1.CPLConfig
	(*CPCConfig)(nil),                            // 31: api.affiliate.service.v1.CPCConfig
	(*FlatFeeConfig)(nil),                        // 32: api.affiliate.service.v1.FlatFeeConfig
	(*common.OperatorContext)(nil),               // 33: api.common.OperatorContext
	(*timestamppb.Timestamp)(nil),                // 34: google.protobuf.Timestamp
}
var file_affiliate_service_v1_commission_plan_proto_depIdxs = []int32{
	33, // 0: api.affiliate.service.v1.CreateCommissionPlanRequest.operator_context:type_name -> api.common.OperatorContext
	11, // 1: api.affiliate.service.v1.CreateCommissionPlanRequest.plan_config:type_name -> api.affiliate.service.v1.CommissionPlanConfig
	33, // 2: api.affiliate.service.v1.UpdateCommissionPlanRequest.operator_context:type_name -> api.common.OperatorContext
	11, // 3: api.affiliate.service.v1.UpdateCommissionPlanRequest.plan_config:type_name -> api.affiliate.service.v1.CommissionPlanConfig
	33, // 4: api.affiliate.service.v1.GetCommissionPlanRequest.operator_context:type_name -> api.common.OperatorContext
	33, // 5: api.affiliate.service.v1.GetCommissionPlanResponse.operator_context:type_name -> api.common.OperatorContext
	11, // 6: api.affiliate.service.v1.GetCommissionPlanResponse.plan_config:type_name -> api.affiliate.service.v1.CommissionPlanConfig
	33, // 7: api.affiliate.service.v1.ListCommissionPlansRequest.operator_context:type_name -> api.common.OperatorContext
	8,  // 8: api.affiliate.service.v1.ListCommissionPlansResponse.commission_plans:type_name -> api.affiliate.service.v1.CommissionPlan
	33, // 9: api.affiliate.service.v1.DeleteCommissionPlanRequest.operator_context:type_name -> api.common.OperatorContext
	12, // 10: api.affiliate.service.v1.CommissionPlanConfig.cpa:type_name -> api.affiliate.service.v1.CPAConfig
	22, // 11: api.affiliate.service.v1.CommissionPlanConfig.revshare:type_name -> api.affiliate.service.v1.RevShareConfig
	30, // 12: api.affiliate.service.v1.CommissionPlanConfig.cpl:type_name -> api.affiliate.service.v1.CPLConfig
	31, // 13: api.affiliate.service.v1.CommissionPlanConfig.cpc:type_name -> api.affiliate.service.v1.CPCConfig
	32, // 14: api.affiliate.service.v1.CommissionPlanConfig.flat_fee:type_name -> api.affiliate.service.v1.FlatFeeConfig
	13, // 15: api.affiliate.service.v1.CPAConfig.flat:type_name -> api.affiliate.service.v1.FlatCommission
	14, // 16: api.affiliate.service.v1.CPAConfig.flat_by_countries:type_name -> api.affiliate.service.v1.FlatByCountriesCommission
	16, // 17: api.affiliate.service.v1.CPAConfig.progressive:type_name -> api.affiliate.service.v1.ProgressiveCommission
	18, // 18: api.affiliate.service.v1.CPAConfig.progressive_by_countries:type_name -> api.affiliate.service.v1.ProgressiveByCountriesCommission
	20, // 19: api.affiliate.service.v1.CPAConfig.qualification:type_name -> api.affiliate.service.v1.Qualification
	21, // 20: api.affiliate.service.v1.CPAConfig.advanced_options:type_name -> api.affiliate.service.v1.AdvancedOptions
	15, // 21: api.affiliate.service.v1.FlatByCountriesCommission.country_groups:type_name -> api.affiliate.service.v1.CountryCommissionGroup
	17, // 22: api.affiliate.service.v1.ProgressiveCommission.ranges:type_name -> api.affiliate.service.v1.ProgressiveCommissionRange
	19, // 23: api.affiliate.service.v1.ProgressiveByCountriesCommission.country_groups:type_name -> api.affiliate.service.v1.CountryProgressiveGroup
	17, // 24: api.affiliate.service.v1.ProgressiveByCountriesCommission.other_countries_ranges:type_name -> api.affiliate.service.v1.ProgressiveCommissionRange
	17, // 25: api.affiliate.service.v1.CountryProgressiveGroup.ranges:type_name -> api.affiliate.service.v1.ProgressiveCommissionRange
	23, // 26: api.affiliate.service.v1.RevShareConfig.flat:type_name -> api.affiliate.service.v1.FlatRateCommission
	24, // 27: api.affiliate.service.v1.RevShareConfig.flat_by_countries:type_name -> api.affiliate.service.v1.FlatByCountriesRateCommission
	26, // 28: api.affiliate.service.v1.RevShareConfig.progressive:type_name -> api.affiliate.service.v1.ProgressiveRateCommission
	28, // 29: api.affiliate.service.v1.RevShareConfig.progressive_by_countries:type_name -> api.affiliate.service.v1.ProgressiveByCountriesRateCommission
	20, // 30: api.affiliate.service.v1.RevShareConfig.qualification:type_name -> api.affiliate.service.v1.Qualification
	25, // 31: api.affiliate.service.v1.FlatByCountriesRateCommission.country_groups:type_name -> api.affiliate.service.v1.CountryRateGroup
	27, // 32: api.affiliate.service.v1.ProgressiveRateCommission.ranges:type_name -> api.affiliate.service.v1.RateRange
	29, // 33: api.affiliate.service.v1.ProgressiveByCountriesRateCommission.country_groups:type_name -> api.affiliate.service.v1.CountryProgressiveRateGroup
	27, // 34: api.affiliate.service.v1.ProgressiveByCountriesRateCommission.other_countries_ranges:type_name -> api.affiliate.service.v1.RateRange
	27, // 35: api.affiliate.service.v1.CountryProgressiveRateGroup.ranges:type_name -> api.affiliate.service.v1.RateRange
	13, // 36: api.affiliate.service.v1.CPLConfig.flat:type_name -> api.affiliate.service.v1.FlatCommission
	14, // 37: api.affiliate.service.v1.CPLConfig.flat_by_countries:type_name -> api.affiliate.service.v1.FlatByCountriesCommission
	16, // 38: api.affiliate.service.v1.CPLConfig.progressive:type_name -> api.affiliate.service.v1.ProgressiveCommission
	18, // 39: api.affiliate.service.v1.CPLConfig.progressive_by_countries:type_name -> api.affiliate.service.v1.ProgressiveByCountriesCommission
	20, // 40: api.affiliate.service.v1.CPLConfig.qualification:type_name -> api.affiliate.service.v1.Qualification
	21, // 41: api.affiliate.service.v1.CPLConfig.advanced_options:type_name -> api.affiliate.service.v1.AdvancedOptions
	13, // 42: api.affiliate.service.v1.CPCConfig.flat:type_name -> api.affiliate.service.v1.FlatCommission
	14, // 43: api.affiliate.service.v1.CPCConfig.flat_by_countries:type_name -> api.affiliate.service.v1.FlatByCountriesCommission
	34, // 44: api.affiliate.service.v1.FlatFeeConfig.start_time:type_name -> google.protobuf.Timestamp
	45, // [45:45] is the sub-list for method output_type
	45, // [45:45] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_affiliate_service_v1_commission_plan_proto_init() }
func file_affiliate_service_v1_commission_plan_proto_init() {
	if File_affiliate_service_v1_commission_plan_proto != nil {
		return
	}
	file_affiliate_service_v1_commission_plan_proto_msgTypes[6].OneofWrappers = []any{}
	file_affiliate_service_v1_commission_plan_proto_msgTypes[9].OneofWrappers = []any{}
	file_affiliate_service_v1_commission_plan_proto_msgTypes[12].OneofWrappers = []any{}
	file_affiliate_service_v1_commission_plan_proto_msgTypes[14].OneofWrappers = []any{}
	file_affiliate_service_v1_commission_plan_proto_msgTypes[17].OneofWrappers = []any{}
	file_affiliate_service_v1_commission_plan_proto_msgTypes[20].OneofWrappers = []any{}
	file_affiliate_service_v1_commission_plan_proto_msgTypes[21].OneofWrappers = []any{}
	file_affiliate_service_v1_commission_plan_proto_msgTypes[22].OneofWrappers = []any{}
	file_affiliate_service_v1_commission_plan_proto_msgTypes[24].OneofWrappers = []any{}
	file_affiliate_service_v1_commission_plan_proto_msgTypes[27].OneofWrappers = []any{}
	file_affiliate_service_v1_commission_plan_proto_msgTypes[30].OneofWrappers = []any{}
	file_affiliate_service_v1_commission_plan_proto_msgTypes[31].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_affiliate_service_v1_commission_plan_proto_rawDesc), len(file_affiliate_service_v1_commission_plan_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_affiliate_service_v1_commission_plan_proto_goTypes,
		DependencyIndexes: file_affiliate_service_v1_commission_plan_proto_depIdxs,
		MessageInfos:      file_affiliate_service_v1_commission_plan_proto_msgTypes,
	}.Build()
	File_affiliate_service_v1_commission_plan_proto = out.File
	file_affiliate_service_v1_commission_plan_proto_goTypes = nil
	file_affiliate_service_v1_commission_plan_proto_depIdxs = nil
}
