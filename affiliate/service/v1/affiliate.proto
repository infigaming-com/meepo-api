syntax = "proto3";

package api.affiliate.service.v1;

import "affiliate/service/v1/commission_plan.proto";
import "common/common.proto";

option go_package = "github.com/infigaming-com/meepo-api/affiliate/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.affiliate.service.v1";

import "google/protobuf/timestamp.proto";

service Affiliate {

    // -------------- Commission Plan --------------

    rpc CreateCommissionPlan(CreateCommissionPlanRequest) returns (CreateCommissionPlanResponse) {}

    rpc UpdateCommissionPlan(UpdateCommissionPlanRequest) returns (UpdateCommissionPlanResponse) {}

    rpc GetCommissionPlan(GetCommissionPlanRequest) returns (GetCommissionPlanResponse) {}

    rpc ListCommissionPlans(ListCommissionPlansRequest) returns (ListCommissionPlansResponse) {}

    rpc DeleteCommissionPlan(DeleteCommissionPlanRequest) returns (DeleteCommissionPlanResponse) {}

    rpc ListAllCommissionPlans(ListAllCommissionPlansRequest) returns (ListAllCommissionPlansResponse) {}

    // -------------- Affiliate --------------

    rpc CreateAffiliate(CreateAffiliateRequest) returns (CreateAffiliateResponse) {}

    rpc UpdateAffiliate(UpdateAffiliateRequest) returns (UpdateAffiliateResponse) {}

    rpc GetAffiliate(GetAffiliateRequest) returns (GetAffiliateResponse) {}

    rpc ListAffiliates(ListAffiliatesRequest) returns (ListAffiliatesResponse) {}
    
    rpc DeleteAffiliate(DeleteAffiliateRequest) returns (DeleteAffiliateResponse) {}

    // -------------- Campaign --------------

    rpc CreateCampaign(CreateCampaignRequest) returns (CreateCampaignResponse) {}

    rpc UpdateCampaign(UpdateCampaignRequest) returns (UpdateCampaignResponse) {}

    rpc ListCampaigns(ListCampaignsRequest) returns (ListCampaignsResponse) {}

    rpc DeleteCampaign(DeleteCampaignRequest) returns (DeleteCampaignResponse) {}

    // -------------- Event --------------

    rpc ListEvents(ListEventsRequest) returns (ListEventsResponse) {}

    // -------------- Commission --------------

    rpc ListCommissions(ListCommissionsRequest) returns (ListCommissionsResponse) {}

    // -------------- User --------------

    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}
}

message ContactType {
    string label = 1;
    string contact_value = 2;
}

message AffiliateInfo {
    string company_name = 1;
    string status = 2;
    repeated int64 commission_plan_ids = 3;
    string invoice_period = 4;
    string photo_url = 5;
    string email = 6;
    string password = 7;
    bool two_fa_enabled = 8;
    string firstname = 9;
    string lastname = 10;
    string phone = 11;
    repeated ContactType contact_types = 12;
    string country = 13; // country code
    string region = 14;
    string city = 15;
    string post_code = 16;
    string street = 17;
    repeated int64 traffic_source_ids = 18; // not implemented
    repeated int64 teammate_ids = 19; // not implemented
    string internal_info = 20;
}

message CreateAffiliateRequest {
    AffiliateInfo affiliate = 1;
    api.common.OperatorContext target_operator_context = 2;
    api.common.OperatorContext initiator_operator_context = 3;
    int64 initiator_user_id = 4;
}

message CreateAffiliateResponse {
}

message UpdateAffiliateRequest {
    AffiliateInfo affiliate = 1;
    int64 affiliate_id = 2;
    api.common.OperatorContext initiator_operator_context = 3;
    int64 initiator_user_id = 4;
}

message UpdateAffiliateResponse {
}

message GetAffiliateRequest {
    int64 affiliate_id = 1;
    api.common.OperatorContext initiator_operator_context = 2;
}

message GetAffiliateResponse {
    AffiliateInfo affiliate = 1;
    int64 affiliate_id = 2;
}

message ListAffiliatesRequest {
    repeated string countries = 1;
    repeated string traffic_source_ids = 2; // not implemented
    repeated string teammate_ids = 3; // not implemented
    string status = 4; // pending, active, inactive
    optional int32 page = 5;
    optional int32 page_size = 6;
    api.common.OperatorContext target_operator_context = 7;
    api.common.OperatorContext initiator_operator_context = 8;
}

message ListAffiliatesResponse {
    message Affiliate {
        int64 affiliate_id = 1;
        string photo_url = 2;
        string company_name = 3;
        string first_name = 4;
        string last_name = 5;
        string retailer_operator_name = 6;
        string company_operator_name = 7;
        string operator_name = 8;
        repeated string traffic_source_names = 9; // not implemented
        string status = 10;
        repeated string commission_plan_names = 11;
        repeated string teammate_names = 12; // not implemented
        string last_login_ip = 13;
        string balance_usd = 14;
        string balance_reporting_currency = 15;
        string commisions_usd = 16;
        string commisions_reporting_currency = 17;
    }
    repeated Affiliate affiliates = 1;
    int32 total = 2;
    int32 active_count = 3;
    int32 inactive_count = 4;
    int32 pending_count = 5;
    int32 page = 6;
    int32 page_size = 7;
}

message DeleteAffiliateRequest {
    int64 affiliate_id = 1;
    api.common.OperatorContext initiator_operator_context = 2;
    int64 initiator_user_id = 3;
}

message DeleteAffiliateResponse {
}

// -------------- Campaign --------------

message Campaign {
    string domain = 1;
    string campaign_name = 2;
    string channel_type = 3; // facebook/tiktok/kwai/appsflyer/adjust/agency/google_ads
    ChannelConfig channel_config = 4;
    Params params = 5;
    EventMappings event_mappings = 6;    
}

message Params {
    message Parameter {
        string name = 1;
        string value = 2;
    }
    repeated Parameter predefined_parameters = 1;
    repeated Parameter custom_parameters = 2;
}

message ChannelConfig {
    message FacebookChannelConfig {
        string pixel_id = 1;
        string access_token = 2;
    }
    message TiktokChannelConfig {
        string pixel_id = 1;
        string access_token = 2;
    }
    message KwaiChannelConfig {
        string pixel_id = 1;
        string access_token = 2;
        bool track_flag = 3;
    }
    message AppsflyerChannelConfig {
        string app_platform = 1;
        string bundle_id = 2;
        string dev_key = 3;
    }
    message AdjustChannelConfig {
        string app_platform = 1;
        string app_token = 2;
        string bundle_id = 3;
    }
    message AgencyChannelConfig {
        string campaign_id = 1;
    }
    message GoogleAdsChannelConfig {
        string customer_id = 1;
        string conversion_action = 2;
    }
    optional FacebookChannelConfig facebook_channel_config = 1;
    optional TiktokChannelConfig tiktok_channel_config = 2;
    optional KwaiChannelConfig kwai_channel_config = 3;
    optional AppsflyerChannelConfig appsflyer_channel_config = 4;
    optional AdjustChannelConfig adjust_channel_config = 5;
    optional AgencyChannelConfig agency_channel_config = 6;
    optional GoogleAdsChannelConfig google_ads_channel_config = 7;
}

message CustomParams {
    message CustomParam {
        string name = 1;
        string value = 2;
    }
    repeated CustomParam custom_params = 1;
}

message EventMappings {
    message EventMapping {
        optional string channel_event = 1;
        optional string custom_name = 2;
    }
    EventMapping register = 1;
    EventMapping first_deposit = 2;
    EventMapping second_deposit = 3;
    EventMapping third_deposit = 4;
    EventMapping withdrawal = 5;
    EventMapping game_start = 6;
    EventMapping game_bet = 7;
}

message CreateCampaignRequest {
    message Campaign {
        string domain = 1;
        string campaign_name = 2;
        string channel_type = 3; // facebook/tiktok/kwai/appsflyer/adjust/agency/google_ads
        ChannelConfig channel_config = 4;
    }
    Campaign campaign = 1;
    api.common.OperatorContext initiator_operator_context = 2;
    int64 initiator_user_id = 3;
}

message CreateCampaignResponse {
    int64 campaign_id = 1;
}

message UpdateCampaignRequest {
    int64 campaign_id = 1;
    optional Campaign campaign = 2;
    optional bool enabled = 3;
    int64 initiator_user_id = 4;
}

message UpdateCampaignResponse {
}

message ListCampaignsRequest {
    optional string campaign_name = 1;
    optional int64 campaign_id = 2;
    optional bool enabled = 3;
    optional int32 page = 4;
    optional int32 page_size = 5;
    optional int64 initiator_user_id = 6;
    api.common.OperatorContext initiator_operator_context = 7;
    api.common.OperatorContextFilters operator_context_filters = 8;
}

message ListCampaignsResponse {
    message CampaignInfo {
        int64 campaign_id = 1;
        string affiliate_company_name = 2;
        int64 affiliate_id = 3;
        string system_operator_name = 4;
        string retailer_operator_name = 5;
        string company_operator_name = 6;
        string operator_name = 7;
        string campaign_name = 8;
        string event_mappings_status = 9; // configured/not_configured/not_required
        int32 event_mappings_count = 10;
        bool enabled = 11;
        Campaign campaign = 12;
    }
    repeated CampaignInfo campaigns = 1;
    int32 total = 2;
    int32 total_enabled = 3;
    int32 total_disabled = 4;
    int32 page = 5;
    int32 page_size = 6;
}

message DeleteCampaignRequest {
    int64 campaign_id = 1;
    int64 initiator_user_id = 2;
}

message DeleteCampaignResponse {
}

message ListEventsRequest {
    optional int64 affiliate_id = 1;
    repeated string event_types = 2;
    repeated string countries = 3;
    repeated string currencies = 4;
    google.protobuf.Timestamp start_time = 5;
    google.protobuf.Timestamp end_time = 6;
    optional int32 page = 7;
    optional int32 page_size = 8;
    int64 initiator_user_id = 9;
    int64 initiator_role_id = 10;
    api.common.OperatorContext initiator_operator_context = 11;
    api.common.OperatorContextFilters operator_context_filters = 12;
}

message ListEventsResponse {
    message Event {
        message CommissionPlan {
            int64 commission_plan_id = 1;
            string commission_plan_name = 2;
        }
        string country = 1;
        string campaign_name = 2;
        int64 campaign_id = 3;
        google.protobuf.Timestamp created_at = 4;
        string event_type = 5;	// "register", "first_deposit", "first_qualification_deposit", "deposit", "withdrawal", "game_start", "game_bet", "game_win", "click_deposit"
        repeated CommissionPlan commission_plans = 6;
        string currency = 7;
        string amount = 8;
        string amount_usd = 9;
        string amount_reporting_currency = 10;
        int64 user_id = 11;
        int64 event_id = 12;
        int64 affiliate_id = 13;
        string affiliate_name = 14;
        string retailer_operator_name = 15;
        string company_operator_name = 16;
        string operator_name = 17;
    }
    repeated Event events = 1; 
    int32 total = 2;
    int32 page = 3;
    int32 page_size = 4;
}

// -------------- Commission --------------

message ListCommissionsRequest {
    repeated int64 commission_plan_ids = 1; // OR logic: filter by commission plan IDs, match if ID is any of these values
    optional int64 user_id = 2;
    optional int64 affiliate_id = 3;
    repeated string commission_subtypes = 4; // cpa/revshare/cpl/cpc/flat_fee, multiple subtypes are allowed
    repeated string countries = 5;
    optional int64 commission_id = 6;
    google.protobuf.Timestamp start_time = 7;
    google.protobuf.Timestamp end_time = 8;
    optional string status = 9; // pending/approved/rejected
    optional int32 page = 10;
    optional int32 page_size = 11;
    int64 initiator_user_id = 12;
    int64 initiator_role_id = 13;
    api.common.OperatorContext initiator_operator_context = 14;
    api.common.OperatorContextFilters operator_context_filters = 15;
}

message ListCommissionsResponse {
    message Commission {
        int64 commission_id = 1;
        string country = 2;
        google.protobuf.Timestamp created_at = 3;
        string status = 4; // pending/approved/rejected
        bool paid = 5;
        int64 commission_plan_id = 6;
        string commission_plan_name = 7;
        string commission_subtype = 8; // cpa/revshare/cpl/cpc/flat_fee
        string reporting_currency = 9;
        string revenue_usd = 10;
        string revenue_reporting_currency = 11;
        string commission_usd = 12;
        string commission_reporting_currency = 13;
        string adjust_amount_usd = 14;
        string adjust_amount_reporting_currency = 15;
        int64 affiliate_id = 16;
        string affiliate_name = 17;
        int64 user_id = 18;
        string retailer_operator_name = 19;
        string company_operator_name = 20;
        string operator_name = 21;
    }
    repeated Commission commissions = 1;
    int32 total = 2;
    int32 total_pending = 3;
    int32 total_approved = 4;
    int32 total_rejected = 5;
    int32 page = 6;
    int32 page_size = 7;
}

// -------------- User --------------

message ListUsersRequest {
    repeated string countries = 1;
    google.protobuf.Timestamp ftd_start_time = 2;
    google.protobuf.Timestamp ftd_end_time = 3;
    optional int64 affiliate_id = 4;
    google.protobuf.Timestamp registration_start_time = 5;
    google.protobuf.Timestamp registration_end_time = 6;
    optional int32 page = 7;
    optional int32 page_size = 8;
    int64 initiator_user_id = 9;
    int64 initiator_role_id = 10;
    api.common.OperatorContext initiator_operator_context = 11;
    api.common.OperatorContextFilters operator_context_filters = 12;
}

message ListUsersResponse {
    message User {
        int64 user_id = 1;
        string country = 2;
        int64 affiliate_id = 3;
        string affiliate_name = 4;
        string affiliate_company_name = 5;
        string reporting_currency = 6;
        string campaign_url = 7;
        google.protobuf.Timestamp registered_at = 8;
        google.protobuf.Timestamp ftd_at = 9;
        string ftd_amount_usd = 10;
        string ftd_amount_reporting_currency = 11;
        int32 deposit_count = 12;
        string deposit_amount_usd = 13;
        string deposit_amount_reporting_currency = 14;
        int32 withdrawal_count = 15;
        string withdrawal_amount_usd = 16;
        string withdrawal_amount_reporting_currency = 17;
        string deposit_minus_withdrawal_amount_usd = 18; // deposit_amount - withdrawal_amount
        string deposit_minus_withdrawal_amount_reporting_currency = 19; // deposit_amount - withdrawal_amount
        int32 bet_count = 20;
        string bet_amount_usd = 21;
        string bet_amount_reporting_currency = 22;
        string win_amount_usd = 23;
        string win_amount_reporting_currency = 24;
        string ggr_usd = 25;
        string ggr_reporting_currency = 26;
        string ngr_usd = 27;
        string ngr_reporting_currency = 28;
        string commission_usd = 29;
        string commission_reporting_currency = 30;
        string roi = 31; // percentage, ngr / commission
    }
    repeated User users = 1;
    int32 total = 2;
    int32 page = 3;
    int32 page_size = 4;
}