// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.6
// source: affiliate/service/v1/error_reason.proto

package v1

import (
	_ "github.com/go-kratos/kratos/v2/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorReason int32

const (
	ErrorReason_UNSPECIFIED                              ErrorReason = 0
	ErrorReason_CREATE_COMMISSION_PLAN_FAILED            ErrorReason = 130001
	ErrorReason_UPDATE_COMMISSION_PLAN_FAILED            ErrorReason = 130002
	ErrorReason_DELETE_COMMISSION_PLAN_FAILED            ErrorReason = 130003
	ErrorReason_CREATE_COMMISSION_PLAN_PERMISSION_DENIED ErrorReason = 130004
	ErrorReason_UPDATE_COMMISSION_PLAN_PERMISSION_DENIED ErrorReason = 130005
	ErrorReason_DELETE_COMMISSION_PLAN_PERMISSION_DENIED ErrorReason = 130006
	ErrorReason_COMMISSION_PLAN_NOT_FOUND                ErrorReason = 130007
	ErrorReason_GET_COMMISSION_PLAN_FAILED               ErrorReason = 130008
	ErrorReason_GET_COMMISSION_PLAN_PERMISSION_DENIED    ErrorReason = 130009
	ErrorReason_LIST_COMMISSION_PLANS_FAILED             ErrorReason = 130010
	ErrorReason_USER_ROLE_INVALID                        ErrorReason = 130011
	ErrorReason_INVALID_COMMISSION_PLAN_CONFIG           ErrorReason = 130012
	ErrorReason_CREATE_AFFILIATE_FAILED                  ErrorReason = 130013
	ErrorReason_GET_AFFILIATE_FAILED                     ErrorReason = 130014
	ErrorReason_AFFILIATE_NOT_FOUND                      ErrorReason = 130015
	ErrorReason_DELETE_AFFILIATE_FAILED                  ErrorReason = 130016
	ErrorReason_LIST_AFFILIATES_FAILED                   ErrorReason = 130017
	ErrorReason_UPDATE_AFFILIATE_FAILED                  ErrorReason = 130018
	ErrorReason_CONVERT_CHANNEL_CONFIG_FAILED            ErrorReason = 130019
	ErrorReason_CREATE_CAMPAIGN_FAILED                   ErrorReason = 130020
	ErrorReason_CAMPAIGN_NOT_FOUND                       ErrorReason = 130021
	ErrorReason_GET_CAMPAIGN_FAILED                      ErrorReason = 130022
	ErrorReason_DELETE_CAMPAIGN_FAILED                   ErrorReason = 130023
	ErrorReason_LIST_CAMPAIGNS_FAILED                    ErrorReason = 130024
	ErrorReason_UPDATE_CAMPAIGN_FAILED                   ErrorReason = 130025
	ErrorReason_PROCESS_USER_REGISTRATION_FAILED         ErrorReason = 130026
)

// Enum value maps for ErrorReason.
var (
	ErrorReason_name = map[int32]string{
		0:      "UNSPECIFIED",
		130001: "CREATE_COMMISSION_PLAN_FAILED",
		130002: "UPDATE_COMMISSION_PLAN_FAILED",
		130003: "DELETE_COMMISSION_PLAN_FAILED",
		130004: "CREATE_COMMISSION_PLAN_PERMISSION_DENIED",
		130005: "UPDATE_COMMISSION_PLAN_PERMISSION_DENIED",
		130006: "DELETE_COMMISSION_PLAN_PERMISSION_DENIED",
		130007: "COMMISSION_PLAN_NOT_FOUND",
		130008: "GET_COMMISSION_PLAN_FAILED",
		130009: "GET_COMMISSION_PLAN_PERMISSION_DENIED",
		130010: "LIST_COMMISSION_PLANS_FAILED",
		130011: "USER_ROLE_INVALID",
		130012: "INVALID_COMMISSION_PLAN_CONFIG",
		130013: "CREATE_AFFILIATE_FAILED",
		130014: "GET_AFFILIATE_FAILED",
		130015: "AFFILIATE_NOT_FOUND",
		130016: "DELETE_AFFILIATE_FAILED",
		130017: "LIST_AFFILIATES_FAILED",
		130018: "UPDATE_AFFILIATE_FAILED",
		130019: "CONVERT_CHANNEL_CONFIG_FAILED",
		130020: "CREATE_CAMPAIGN_FAILED",
		130021: "CAMPAIGN_NOT_FOUND",
		130022: "GET_CAMPAIGN_FAILED",
		130023: "DELETE_CAMPAIGN_FAILED",
		130024: "LIST_CAMPAIGNS_FAILED",
		130025: "UPDATE_CAMPAIGN_FAILED",
		130026: "PROCESS_USER_REGISTRATION_FAILED",
	}
	ErrorReason_value = map[string]int32{
		"UNSPECIFIED":                              0,
		"CREATE_COMMISSION_PLAN_FAILED":            130001,
		"UPDATE_COMMISSION_PLAN_FAILED":            130002,
		"DELETE_COMMISSION_PLAN_FAILED":            130003,
		"CREATE_COMMISSION_PLAN_PERMISSION_DENIED": 130004,
		"UPDATE_COMMISSION_PLAN_PERMISSION_DENIED": 130005,
		"DELETE_COMMISSION_PLAN_PERMISSION_DENIED": 130006,
		"COMMISSION_PLAN_NOT_FOUND":                130007,
		"GET_COMMISSION_PLAN_FAILED":               130008,
		"GET_COMMISSION_PLAN_PERMISSION_DENIED":    130009,
		"LIST_COMMISSION_PLANS_FAILED":             130010,
		"USER_ROLE_INVALID":                        130011,
		"INVALID_COMMISSION_PLAN_CONFIG":           130012,
		"CREATE_AFFILIATE_FAILED":                  130013,
		"GET_AFFILIATE_FAILED":                     130014,
		"AFFILIATE_NOT_FOUND":                      130015,
		"DELETE_AFFILIATE_FAILED":                  130016,
		"LIST_AFFILIATES_FAILED":                   130017,
		"UPDATE_AFFILIATE_FAILED":                  130018,
		"CONVERT_CHANNEL_CONFIG_FAILED":            130019,
		"CREATE_CAMPAIGN_FAILED":                   130020,
		"CAMPAIGN_NOT_FOUND":                       130021,
		"GET_CAMPAIGN_FAILED":                      130022,
		"DELETE_CAMPAIGN_FAILED":                   130023,
		"LIST_CAMPAIGNS_FAILED":                    130024,
		"UPDATE_CAMPAIGN_FAILED":                   130025,
		"PROCESS_USER_REGISTRATION_FAILED":         130026,
	}
)

func (x ErrorReason) Enum() *ErrorReason {
	p := new(ErrorReason)
	*p = x
	return p
}

func (x ErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_affiliate_service_v1_error_reason_proto_enumTypes[0].Descriptor()
}

func (ErrorReason) Type() protoreflect.EnumType {
	return &file_affiliate_service_v1_error_reason_proto_enumTypes[0]
}

func (x ErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorReason.Descriptor instead.
func (ErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_affiliate_service_v1_error_reason_proto_rawDescGZIP(), []int{0}
}

var File_affiliate_service_v1_error_reason_proto protoreflect.FileDescriptor

const file_affiliate_service_v1_error_reason_proto_rawDesc = "" +
	"\n" +
	"'affiliate/service/v1/error_reason.proto\x12\x18api.affiliate.service.v1\x1a\x13errors/errors.proto*\xa1\a\n" +
	"\vErrorReason\x12\x0f\n" +
	"\vUNSPECIFIED\x10\x00\x12#\n" +
	"\x1dCREATE_COMMISSION_PLAN_FAILED\x10\xd1\xf7\a\x12#\n" +
	"\x1dUPDATE_COMMISSION_PLAN_FAILED\x10\xd2\xf7\a\x12#\n" +
	"\x1dDELETE_COMMISSION_PLAN_FAILED\x10\xd3\xf7\a\x12.\n" +
	"(CREATE_COMMISSION_PLAN_PERMISSION_DENIED\x10\xd4\xf7\a\x12.\n" +
	"(UPDATE_COMMISSION_PLAN_PERMISSION_DENIED\x10\xd5\xf7\a\x12.\n" +
	"(DELETE_COMMISSION_PLAN_PERMISSION_DENIED\x10\xd6\xf7\a\x12\x1f\n" +
	"\x19COMMISSION_PLAN_NOT_FOUND\x10\xd7\xf7\a\x12 \n" +
	"\x1aGET_COMMISSION_PLAN_FAILED\x10\xd8\xf7\a\x12+\n" +
	"%GET_COMMISSION_PLAN_PERMISSION_DENIED\x10\xd9\xf7\a\x12\"\n" +
	"\x1cLIST_COMMISSION_PLANS_FAILED\x10\xda\xf7\a\x12\x17\n" +
	"\x11USER_ROLE_INVALID\x10\xdb\xf7\a\x12$\n" +
	"\x1eINVALID_COMMISSION_PLAN_CONFIG\x10\xdc\xf7\a\x12\x1d\n" +
	"\x17CREATE_AFFILIATE_FAILED\x10\xdd\xf7\a\x12\x1a\n" +
	"\x14GET_AFFILIATE_FAILED\x10\xde\xf7\a\x12\x19\n" +
	"\x13AFFILIATE_NOT_FOUND\x10\xdf\xf7\a\x12\x1d\n" +
	"\x17DELETE_AFFILIATE_FAILED\x10\xe0\xf7\a\x12\x1c\n" +
	"\x16LIST_AFFILIATES_FAILED\x10\xe1\xf7\a\x12\x1d\n" +
	"\x17UPDATE_AFFILIATE_FAILED\x10\xe2\xf7\a\x12#\n" +
	"\x1dCONVERT_CHANNEL_CONFIG_FAILED\x10\xe3\xf7\a\x12\x1c\n" +
	"\x16CREATE_CAMPAIGN_FAILED\x10\xe4\xf7\a\x12\x18\n" +
	"\x12CAMPAIGN_NOT_FOUND\x10\xe5\xf7\a\x12\x19\n" +
	"\x13GET_CAMPAIGN_FAILED\x10\xe6\xf7\a\x12\x1c\n" +
	"\x16DELETE_CAMPAIGN_FAILED\x10\xe7\xf7\a\x12\x1b\n" +
	"\x15LIST_CAMPAIGNS_FAILED\x10\xe8\xf7\a\x12\x1c\n" +
	"\x16UPDATE_CAMPAIGN_FAILED\x10\xe9\xf7\a\x12&\n" +
	" PROCESS_USER_REGISTRATION_FAILED\x10\xea\xf7\a\x1a\x04\xa0E\xf4\x03BY\n" +
	"\x18api.affiliate.service.v1P\x01Z;github.com/infigaming-com/meepo-api/affiliate/service/v1;v1b\x06proto3"

var (
	file_affiliate_service_v1_error_reason_proto_rawDescOnce sync.Once
	file_affiliate_service_v1_error_reason_proto_rawDescData []byte
)

func file_affiliate_service_v1_error_reason_proto_rawDescGZIP() []byte {
	file_affiliate_service_v1_error_reason_proto_rawDescOnce.Do(func() {
		file_affiliate_service_v1_error_reason_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_affiliate_service_v1_error_reason_proto_rawDesc), len(file_affiliate_service_v1_error_reason_proto_rawDesc)))
	})
	return file_affiliate_service_v1_error_reason_proto_rawDescData
}

var file_affiliate_service_v1_error_reason_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_affiliate_service_v1_error_reason_proto_goTypes = []any{
	(ErrorReason)(0), // 0: api.affiliate.service.v1.ErrorReason
}
var file_affiliate_service_v1_error_reason_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_affiliate_service_v1_error_reason_proto_init() }
func file_affiliate_service_v1_error_reason_proto_init() {
	if File_affiliate_service_v1_error_reason_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_affiliate_service_v1_error_reason_proto_rawDesc), len(file_affiliate_service_v1_error_reason_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_affiliate_service_v1_error_reason_proto_goTypes,
		DependencyIndexes: file_affiliate_service_v1_error_reason_proto_depIdxs,
		EnumInfos:         file_affiliate_service_v1_error_reason_proto_enumTypes,
	}.Build()
	File_affiliate_service_v1_error_reason_proto = out.File
	file_affiliate_service_v1_error_reason_proto_goTypes = nil
	file_affiliate_service_v1_error_reason_proto_depIdxs = nil
}
