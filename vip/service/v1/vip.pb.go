// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.6
// source: vip/service/v1/vip.proto

package v1

import (
	common "github.com/infigaming-com/meepo-api/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VipDisplayRule int32

const (
	VipDisplayRule_VIP_DISPLAY_RULE_UNSPECIFIED VipDisplayRule = 0
	VipDisplayRule_VIP_DISPLAY_RULE_CUMULATIVE  VipDisplayRule = 1 // cumulative
	VipDisplayRule_VIP_DISPLAY_RULE_CURRENT     VipDisplayRule = 2 // current
)

// Enum value maps for VipDisplayRule.
var (
	VipDisplayRule_name = map[int32]string{
		0: "VIP_DISPLAY_RULE_UNSPECIFIED",
		1: "VIP_DISPLAY_RULE_CUMULATIVE",
		2: "VIP_DISPLAY_RULE_CURRENT",
	}
	VipDisplayRule_value = map[string]int32{
		"VIP_DISPLAY_RULE_UNSPECIFIED": 0,
		"VIP_DISPLAY_RULE_CUMULATIVE":  1,
		"VIP_DISPLAY_RULE_CURRENT":     2,
	}
)

func (x VipDisplayRule) Enum() *VipDisplayRule {
	p := new(VipDisplayRule)
	*p = x
	return p
}

func (x VipDisplayRule) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VipDisplayRule) Descriptor() protoreflect.EnumDescriptor {
	return file_vip_service_v1_vip_proto_enumTypes[0].Descriptor()
}

func (VipDisplayRule) Type() protoreflect.EnumType {
	return &file_vip_service_v1_vip_proto_enumTypes[0]
}

func (x VipDisplayRule) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VipDisplayRule.Descriptor instead.
func (VipDisplayRule) EnumDescriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{0}
}

type VipRewardKind int32

const (
	VipRewardKind_VIP_REWARD_KIND_UNSPECIFIED         VipRewardKind = 0
	VipRewardKind_VIP_REWARD_KIND_UPGRADE_BASE        VipRewardKind = 1 // upgrade_base
	VipRewardKind_VIP_REWARD_KIND_UPGRADE_INCREMENTAL VipRewardKind = 2 // upgrade_incremental
	VipRewardKind_VIP_REWARD_KIND_RAKEBACK_INSTANT    VipRewardKind = 3 // rakeback_instant
	VipRewardKind_VIP_REWARD_KIND_RAKEBACK_DAILY      VipRewardKind = 4 // rakeback_daily
	VipRewardKind_VIP_REWARD_KIND_RAKEBACK_WEEKLY     VipRewardKind = 5 // rakeback_weekly
	VipRewardKind_VIP_REWARD_KIND_RAKEBACK_MONTHLY    VipRewardKind = 6 // rakeback_monthly
)

// Enum value maps for VipRewardKind.
var (
	VipRewardKind_name = map[int32]string{
		0: "VIP_REWARD_KIND_UNSPECIFIED",
		1: "VIP_REWARD_KIND_UPGRADE_BASE",
		2: "VIP_REWARD_KIND_UPGRADE_INCREMENTAL",
		3: "VIP_REWARD_KIND_RAKEBACK_INSTANT",
		4: "VIP_REWARD_KIND_RAKEBACK_DAILY",
		5: "VIP_REWARD_KIND_RAKEBACK_WEEKLY",
		6: "VIP_REWARD_KIND_RAKEBACK_MONTHLY",
	}
	VipRewardKind_value = map[string]int32{
		"VIP_REWARD_KIND_UNSPECIFIED":         0,
		"VIP_REWARD_KIND_UPGRADE_BASE":        1,
		"VIP_REWARD_KIND_UPGRADE_INCREMENTAL": 2,
		"VIP_REWARD_KIND_RAKEBACK_INSTANT":    3,
		"VIP_REWARD_KIND_RAKEBACK_DAILY":      4,
		"VIP_REWARD_KIND_RAKEBACK_WEEKLY":     5,
		"VIP_REWARD_KIND_RAKEBACK_MONTHLY":    6,
	}
)

func (x VipRewardKind) Enum() *VipRewardKind {
	p := new(VipRewardKind)
	*p = x
	return p
}

func (x VipRewardKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VipRewardKind) Descriptor() protoreflect.EnumDescriptor {
	return file_vip_service_v1_vip_proto_enumTypes[1].Descriptor()
}

func (VipRewardKind) Type() protoreflect.EnumType {
	return &file_vip_service_v1_vip_proto_enumTypes[1]
}

func (x VipRewardKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VipRewardKind.Descriptor instead.
func (VipRewardKind) EnumDescriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{1}
}

type VipPayoutType int32

const (
	VipPayoutType_VIP_PAYOUT_TYPE_UNSPECIFIED VipPayoutType = 0
	VipPayoutType_VIP_PAYOUT_TYPE_CASH        VipPayoutType = 1 // cash
	VipPayoutType_VIP_PAYOUT_TYPE_BONUS       VipPayoutType = 2 // bonus
)

// Enum value maps for VipPayoutType.
var (
	VipPayoutType_name = map[int32]string{
		0: "VIP_PAYOUT_TYPE_UNSPECIFIED",
		1: "VIP_PAYOUT_TYPE_CASH",
		2: "VIP_PAYOUT_TYPE_BONUS",
	}
	VipPayoutType_value = map[string]int32{
		"VIP_PAYOUT_TYPE_UNSPECIFIED": 0,
		"VIP_PAYOUT_TYPE_CASH":        1,
		"VIP_PAYOUT_TYPE_BONUS":       2,
	}
)

func (x VipPayoutType) Enum() *VipPayoutType {
	p := new(VipPayoutType)
	*p = x
	return p
}

func (x VipPayoutType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VipPayoutType) Descriptor() protoreflect.EnumDescriptor {
	return file_vip_service_v1_vip_proto_enumTypes[2].Descriptor()
}

func (VipPayoutType) Type() protoreflect.EnumType {
	return &file_vip_service_v1_vip_proto_enumTypes[2]
}

func (x VipPayoutType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VipPayoutType.Descriptor instead.
func (VipPayoutType) EnumDescriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{2}
}

type VipResetPolicy int32

const (
	VipResetPolicy_VIP_RESET_POLICY_UNSPECIFIED      VipResetPolicy = 0
	VipResetPolicy_VIP_RESET_POLICY_NONE             VipResetPolicy = 1 // none
	VipResetPolicy_VIP_RESET_POLICY_RESET_ON_UPGRADE VipResetPolicy = 2 // reset_on_upgrade
	VipResetPolicy_VIP_RESET_POLICY_RESET_NEXT_WEEK  VipResetPolicy = 3 // reset_next_week
	VipResetPolicy_VIP_RESET_POLICY_RESET_NEXT_MONTH VipResetPolicy = 4 // reset_next_month
)

// Enum value maps for VipResetPolicy.
var (
	VipResetPolicy_name = map[int32]string{
		0: "VIP_RESET_POLICY_UNSPECIFIED",
		1: "VIP_RESET_POLICY_NONE",
		2: "VIP_RESET_POLICY_RESET_ON_UPGRADE",
		3: "VIP_RESET_POLICY_RESET_NEXT_WEEK",
		4: "VIP_RESET_POLICY_RESET_NEXT_MONTH",
	}
	VipResetPolicy_value = map[string]int32{
		"VIP_RESET_POLICY_UNSPECIFIED":      0,
		"VIP_RESET_POLICY_NONE":             1,
		"VIP_RESET_POLICY_RESET_ON_UPGRADE": 2,
		"VIP_RESET_POLICY_RESET_NEXT_WEEK":  3,
		"VIP_RESET_POLICY_RESET_NEXT_MONTH": 4,
	}
)

func (x VipResetPolicy) Enum() *VipResetPolicy {
	p := new(VipResetPolicy)
	*p = x
	return p
}

func (x VipResetPolicy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VipResetPolicy) Descriptor() protoreflect.EnumDescriptor {
	return file_vip_service_v1_vip_proto_enumTypes[3].Descriptor()
}

func (VipResetPolicy) Type() protoreflect.EnumType {
	return &file_vip_service_v1_vip_proto_enumTypes[3]
}

func (x VipResetPolicy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VipResetPolicy.Descriptor instead.
func (VipResetPolicy) EnumDescriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{3}
}

type VipRewardStatus int32

const (
	VipRewardStatus_VIP_REWARD_STATUS_UNSPECIFIED VipRewardStatus = 0
	VipRewardStatus_VIP_REWARD_STATUS_PENDING     VipRewardStatus = 1 // pending
	VipRewardStatus_VIP_REWARD_STATUS_ISSUED      VipRewardStatus = 2 // issued
	VipRewardStatus_VIP_REWARD_STATUS_EXPIRED     VipRewardStatus = 3 // expired
	VipRewardStatus_VIP_REWARD_STATUS_REVOKED     VipRewardStatus = 4 // revoked
)

// Enum value maps for VipRewardStatus.
var (
	VipRewardStatus_name = map[int32]string{
		0: "VIP_REWARD_STATUS_UNSPECIFIED",
		1: "VIP_REWARD_STATUS_PENDING",
		2: "VIP_REWARD_STATUS_ISSUED",
		3: "VIP_REWARD_STATUS_EXPIRED",
		4: "VIP_REWARD_STATUS_REVOKED",
	}
	VipRewardStatus_value = map[string]int32{
		"VIP_REWARD_STATUS_UNSPECIFIED": 0,
		"VIP_REWARD_STATUS_PENDING":     1,
		"VIP_REWARD_STATUS_ISSUED":      2,
		"VIP_REWARD_STATUS_EXPIRED":     3,
		"VIP_REWARD_STATUS_REVOKED":     4,
	}
)

func (x VipRewardStatus) Enum() *VipRewardStatus {
	p := new(VipRewardStatus)
	*p = x
	return p
}

func (x VipRewardStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VipRewardStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_vip_service_v1_vip_proto_enumTypes[4].Descriptor()
}

func (VipRewardStatus) Type() protoreflect.EnumType {
	return &file_vip_service_v1_vip_proto_enumTypes[4]
}

func (x VipRewardStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VipRewardStatus.Descriptor instead.
func (VipRewardStatus) EnumDescriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{4}
}

type VipSetting struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Id                        int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SystemOperatorId          int64                  `protobuf:"varint,2,opt,name=system_operator_id,json=systemOperatorId,proto3" json:"system_operator_id,omitempty"`
	RetailerOperatorId        int64                  `protobuf:"varint,3,opt,name=retailer_operator_id,json=retailerOperatorId,proto3" json:"retailer_operator_id,omitempty"`
	CompanyOperatorId         int64                  `protobuf:"varint,4,opt,name=company_operator_id,json=companyOperatorId,proto3" json:"company_operator_id,omitempty"`
	OperatorId                int64                  `protobuf:"varint,5,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	BaseCurrency              string                 `protobuf:"bytes,6,opt,name=base_currency,json=baseCurrency,proto3" json:"base_currency,omitempty"`
	DisplayRule               VipDisplayRule         `protobuf:"varint,7,opt,name=display_rule,json=displayRule,proto3,enum=api.vip.service.v1.VipDisplayRule" json:"display_rule,omitempty"`
	RewardsSlider             bool                   `protobuf:"varint,8,opt,name=rewards_slider,json=rewardsSlider,proto3" json:"rewards_slider,omitempty"`
	UpgradePayoutType         VipPayoutType          `protobuf:"varint,9,opt,name=upgrade_payout_type,json=upgradePayoutType,proto3,enum=api.vip.service.v1.VipPayoutType" json:"upgrade_payout_type,omitempty"`
	RakebackInstantPayoutType VipPayoutType          `protobuf:"varint,10,opt,name=rakeback_instant_payout_type,json=rakebackInstantPayoutType,proto3,enum=api.vip.service.v1.VipPayoutType" json:"rakeback_instant_payout_type,omitempty"`
	RakebackDailyPayoutType   VipPayoutType          `protobuf:"varint,11,opt,name=rakeback_daily_payout_type,json=rakebackDailyPayoutType,proto3,enum=api.vip.service.v1.VipPayoutType" json:"rakeback_daily_payout_type,omitempty"`
	WeeklyRewardPayoutType    VipPayoutType          `protobuf:"varint,12,opt,name=weekly_reward_payout_type,json=weeklyRewardPayoutType,proto3,enum=api.vip.service.v1.VipPayoutType" json:"weekly_reward_payout_type,omitempty"`
	MonthlyRewardPayoutType   VipPayoutType          `protobuf:"varint,13,opt,name=monthly_reward_payout_type,json=monthlyRewardPayoutType,proto3,enum=api.vip.service.v1.VipPayoutType" json:"monthly_reward_payout_type,omitempty"`
	DepositXpRate             float64                `protobuf:"fixed64,14,opt,name=deposit_xp_rate,json=depositXpRate,proto3" json:"deposit_xp_rate,omitempty"`
	WageringXpRate            float64                `protobuf:"fixed64,15,opt,name=wagering_xp_rate,json=wageringXpRate,proto3" json:"wagering_xp_rate,omitempty"`
	MaxHouseEdgeLimitPercent  float64                `protobuf:"fixed64,16,opt,name=max_house_edge_limit_percent,json=maxHouseEdgeLimitPercent,proto3" json:"max_house_edge_limit_percent,omitempty"`
	StandardXpMultiplier      float64                `protobuf:"fixed64,17,opt,name=standard_xp_multiplier,json=standardXpMultiplier,proto3" json:"standard_xp_multiplier,omitempty"`
	Timezone                  string                 `protobuf:"bytes,18,opt,name=timezone,proto3" json:"timezone,omitempty"`
	DailyIssueAt              string                 `protobuf:"bytes,19,opt,name=daily_issue_at,json=dailyIssueAt,proto3" json:"daily_issue_at,omitempty"`
	WeeklyIssueDow            int32                  `protobuf:"varint,20,opt,name=weekly_issue_dow,json=weeklyIssueDow,proto3" json:"weekly_issue_dow,omitempty"`
	WeeklyIssueAt             string                 `protobuf:"bytes,21,opt,name=weekly_issue_at,json=weeklyIssueAt,proto3" json:"weekly_issue_at,omitempty"`
	MonthlyIssueDom           int32                  `protobuf:"varint,22,opt,name=monthly_issue_dom,json=monthlyIssueDom,proto3" json:"monthly_issue_dom,omitempty"`
	MonthlyIssueAt            string                 `protobuf:"bytes,23,opt,name=monthly_issue_at,json=monthlyIssueAt,proto3" json:"monthly_issue_at,omitempty"`
	CreatedAt                 int64                  `protobuf:"varint,24,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt                 int64                  `protobuf:"varint,25,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *VipSetting) Reset() {
	*x = VipSetting{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VipSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipSetting) ProtoMessage() {}

func (x *VipSetting) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipSetting.ProtoReflect.Descriptor instead.
func (*VipSetting) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{0}
}

func (x *VipSetting) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipSetting) GetSystemOperatorId() int64 {
	if x != nil {
		return x.SystemOperatorId
	}
	return 0
}

func (x *VipSetting) GetRetailerOperatorId() int64 {
	if x != nil {
		return x.RetailerOperatorId
	}
	return 0
}

func (x *VipSetting) GetCompanyOperatorId() int64 {
	if x != nil {
		return x.CompanyOperatorId
	}
	return 0
}

func (x *VipSetting) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *VipSetting) GetBaseCurrency() string {
	if x != nil {
		return x.BaseCurrency
	}
	return ""
}

func (x *VipSetting) GetDisplayRule() VipDisplayRule {
	if x != nil {
		return x.DisplayRule
	}
	return VipDisplayRule_VIP_DISPLAY_RULE_UNSPECIFIED
}

func (x *VipSetting) GetRewardsSlider() bool {
	if x != nil {
		return x.RewardsSlider
	}
	return false
}

func (x *VipSetting) GetUpgradePayoutType() VipPayoutType {
	if x != nil {
		return x.UpgradePayoutType
	}
	return VipPayoutType_VIP_PAYOUT_TYPE_UNSPECIFIED
}

func (x *VipSetting) GetRakebackInstantPayoutType() VipPayoutType {
	if x != nil {
		return x.RakebackInstantPayoutType
	}
	return VipPayoutType_VIP_PAYOUT_TYPE_UNSPECIFIED
}

func (x *VipSetting) GetRakebackDailyPayoutType() VipPayoutType {
	if x != nil {
		return x.RakebackDailyPayoutType
	}
	return VipPayoutType_VIP_PAYOUT_TYPE_UNSPECIFIED
}

func (x *VipSetting) GetWeeklyRewardPayoutType() VipPayoutType {
	if x != nil {
		return x.WeeklyRewardPayoutType
	}
	return VipPayoutType_VIP_PAYOUT_TYPE_UNSPECIFIED
}

func (x *VipSetting) GetMonthlyRewardPayoutType() VipPayoutType {
	if x != nil {
		return x.MonthlyRewardPayoutType
	}
	return VipPayoutType_VIP_PAYOUT_TYPE_UNSPECIFIED
}

func (x *VipSetting) GetDepositXpRate() float64 {
	if x != nil {
		return x.DepositXpRate
	}
	return 0
}

func (x *VipSetting) GetWageringXpRate() float64 {
	if x != nil {
		return x.WageringXpRate
	}
	return 0
}

func (x *VipSetting) GetMaxHouseEdgeLimitPercent() float64 {
	if x != nil {
		return x.MaxHouseEdgeLimitPercent
	}
	return 0
}

func (x *VipSetting) GetStandardXpMultiplier() float64 {
	if x != nil {
		return x.StandardXpMultiplier
	}
	return 0
}

func (x *VipSetting) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *VipSetting) GetDailyIssueAt() string {
	if x != nil {
		return x.DailyIssueAt
	}
	return ""
}

func (x *VipSetting) GetWeeklyIssueDow() int32 {
	if x != nil {
		return x.WeeklyIssueDow
	}
	return 0
}

func (x *VipSetting) GetWeeklyIssueAt() string {
	if x != nil {
		return x.WeeklyIssueAt
	}
	return ""
}

func (x *VipSetting) GetMonthlyIssueDom() int32 {
	if x != nil {
		return x.MonthlyIssueDom
	}
	return 0
}

func (x *VipSetting) GetMonthlyIssueAt() string {
	if x != nil {
		return x.MonthlyIssueAt
	}
	return ""
}

func (x *VipSetting) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *VipSetting) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetVipSettingRequest struct {
	state                  protoimpl.MessageState         `protogen:"open.v1"`
	OperatorContext        *common.OperatorContext        `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	OperatorContextFilters *common.OperatorContextFilters `protobuf:"bytes,2,opt,name=operator_context_filters,json=operatorContextFilters,proto3" json:"operator_context_filters,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetVipSettingRequest) Reset() {
	*x = GetVipSettingRequest{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVipSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipSettingRequest) ProtoMessage() {}

func (x *GetVipSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipSettingRequest.ProtoReflect.Descriptor instead.
func (*GetVipSettingRequest) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{1}
}

func (x *GetVipSettingRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *GetVipSettingRequest) GetOperatorContextFilters() *common.OperatorContextFilters {
	if x != nil {
		return x.OperatorContextFilters
	}
	return nil
}

type GetVipSettingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Setting       *VipSetting            `protobuf:"bytes,1,opt,name=setting,proto3" json:"setting,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVipSettingResponse) Reset() {
	*x = GetVipSettingResponse{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVipSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipSettingResponse) ProtoMessage() {}

func (x *GetVipSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipSettingResponse.ProtoReflect.Descriptor instead.
func (*GetVipSettingResponse) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{2}
}

func (x *GetVipSettingResponse) GetSetting() *VipSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

type UpdateVipSettingRequest struct {
	state                  protoimpl.MessageState         `protogen:"open.v1"`
	OperatorContext        *common.OperatorContext        `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	OperatorContextFilters *common.OperatorContextFilters `protobuf:"bytes,2,opt,name=operator_context_filters,json=operatorContextFilters,proto3" json:"operator_context_filters,omitempty"`
	Setting                *VipSetting                    `protobuf:"bytes,3,opt,name=setting,proto3" json:"setting,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateVipSettingRequest) Reset() {
	*x = UpdateVipSettingRequest{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVipSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVipSettingRequest) ProtoMessage() {}

func (x *UpdateVipSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVipSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateVipSettingRequest) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateVipSettingRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *UpdateVipSettingRequest) GetOperatorContextFilters() *common.OperatorContextFilters {
	if x != nil {
		return x.OperatorContextFilters
	}
	return nil
}

func (x *UpdateVipSettingRequest) GetSetting() *VipSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

type UpdateVipSettingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVipSettingResponse) Reset() {
	*x = UpdateVipSettingResponse{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVipSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVipSettingResponse) ProtoMessage() {}

func (x *UpdateVipSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVipSettingResponse.ProtoReflect.Descriptor instead.
func (*UpdateVipSettingResponse) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{4}
}

type VipLevelConfigTemplate struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SystemOperatorId   int64                  `protobuf:"varint,2,opt,name=system_operator_id,json=systemOperatorId,proto3" json:"system_operator_id,omitempty"`
	RetailerOperatorId int64                  `protobuf:"varint,3,opt,name=retailer_operator_id,json=retailerOperatorId,proto3" json:"retailer_operator_id,omitempty"`
	CompanyOperatorId  int64                  `protobuf:"varint,4,opt,name=company_operator_id,json=companyOperatorId,proto3" json:"company_operator_id,omitempty"`
	OperatorId         int64                  `protobuf:"varint,5,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	Name               string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	StartLevel         int64                  `protobuf:"varint,7,opt,name=start_level,json=startLevel,proto3" json:"start_level,omitempty"`
	EndLevel           int64                  `protobuf:"varint,8,opt,name=end_level,json=endLevel,proto3" json:"end_level,omitempty"`
	// 升级设置
	BaseLevelUpgradeXp     float64 `protobuf:"fixed64,9,opt,name=base_level_upgrade_xp,json=baseLevelUpgradeXp,proto3" json:"base_level_upgrade_xp,omitempty"`
	IncrLevelUpgradeXp     float64 `protobuf:"fixed64,10,opt,name=incr_level_upgrade_xp,json=incrLevelUpgradeXp,proto3" json:"incr_level_upgrade_xp,omitempty"`
	BaseUpgradeRewardAmt   float64 `protobuf:"fixed64,11,opt,name=base_upgrade_reward_amt,json=baseUpgradeRewardAmt,proto3" json:"base_upgrade_reward_amt,omitempty"`
	IncrUpgradeRewardAmt   float64 `protobuf:"fixed64,12,opt,name=incr_upgrade_reward_amt,json=incrUpgradeRewardAmt,proto3" json:"incr_upgrade_reward_amt,omitempty"`
	UpgradeRewardWageringX float64 `protobuf:"fixed64,13,opt,name=upgrade_reward_wagering_x,json=upgradeRewardWageringX,proto3" json:"upgrade_reward_wagering_x,omitempty"`
	// 等级维护要求
	WeeklyXpLoss  float64 `protobuf:"fixed64,14,opt,name=weekly_xp_loss,json=weeklyXpLoss,proto3" json:"weekly_xp_loss,omitempty"`
	MonthlyXpLoss float64 `protobuf:"fixed64,15,opt,name=monthly_xp_loss,json=monthlyXpLoss,proto3" json:"monthly_xp_loss,omitempty"`
	// 即时返水
	RakebackInstantEnabled bool    `protobuf:"varint,16,opt,name=rakeback_instant_enabled,json=rakebackInstantEnabled,proto3" json:"rakeback_instant_enabled,omitempty"`
	RakebackInstantRate    float64 `protobuf:"fixed64,17,opt,name=rakeback_instant_rate,json=rakebackInstantRate,proto3" json:"rakeback_instant_rate,omitempty"`
	RakebackInstantReq     float64 `protobuf:"fixed64,18,opt,name=rakeback_instant_req,json=rakebackInstantReq,proto3" json:"rakeback_instant_req,omitempty"`
	// 每日返水
	RakebackDailyEnabled bool    `protobuf:"varint,19,opt,name=rakeback_daily_enabled,json=rakebackDailyEnabled,proto3" json:"rakeback_daily_enabled,omitempty"`
	RakebackDailyRate    float64 `protobuf:"fixed64,20,opt,name=rakeback_daily_rate,json=rakebackDailyRate,proto3" json:"rakeback_daily_rate,omitempty"`
	RakebackDailyReq     float64 `protobuf:"fixed64,21,opt,name=rakeback_daily_req,json=rakebackDailyReq,proto3" json:"rakeback_daily_req,omitempty"`
	// 每周奖励
	WeeklyRewardEnabled    bool    `protobuf:"varint,22,opt,name=weekly_reward_enabled,json=weeklyRewardEnabled,proto3" json:"weekly_reward_enabled,omitempty"`
	WeeklyFixedRewardAmt   float64 `protobuf:"fixed64,23,opt,name=weekly_fixed_reward_amt,json=weeklyFixedRewardAmt,proto3" json:"weekly_fixed_reward_amt,omitempty"`
	WeeklyTurnoverRate     float64 `protobuf:"fixed64,24,opt,name=weekly_turnover_rate,json=weeklyTurnoverRate,proto3" json:"weekly_turnover_rate,omitempty"`
	WeeklyNetLossAmt       float64 `protobuf:"fixed64,25,opt,name=weekly_net_loss_amt,json=weeklyNetLossAmt,proto3" json:"weekly_net_loss_amt,omitempty"`
	WeeklyAdjustRangePct   float64 `protobuf:"fixed64,26,opt,name=weekly_adjust_range_pct,json=weeklyAdjustRangePct,proto3" json:"weekly_adjust_range_pct,omitempty"`
	WeeklyActiveDaysReward int32   `protobuf:"varint,27,opt,name=weekly_active_days_reward,json=weeklyActiveDaysReward,proto3" json:"weekly_active_days_reward,omitempty"`
	WeeklyWageringReq      float64 `protobuf:"fixed64,28,opt,name=weekly_wagering_req,json=weeklyWageringReq,proto3" json:"weekly_wagering_req,omitempty"`
	CreatedAt              int64   `protobuf:"varint,29,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt              int64   `protobuf:"varint,30,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *VipLevelConfigTemplate) Reset() {
	*x = VipLevelConfigTemplate{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VipLevelConfigTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipLevelConfigTemplate) ProtoMessage() {}

func (x *VipLevelConfigTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipLevelConfigTemplate.ProtoReflect.Descriptor instead.
func (*VipLevelConfigTemplate) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{5}
}

func (x *VipLevelConfigTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetSystemOperatorId() int64 {
	if x != nil {
		return x.SystemOperatorId
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetRetailerOperatorId() int64 {
	if x != nil {
		return x.RetailerOperatorId
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetCompanyOperatorId() int64 {
	if x != nil {
		return x.CompanyOperatorId
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VipLevelConfigTemplate) GetStartLevel() int64 {
	if x != nil {
		return x.StartLevel
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetEndLevel() int64 {
	if x != nil {
		return x.EndLevel
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetBaseLevelUpgradeXp() float64 {
	if x != nil {
		return x.BaseLevelUpgradeXp
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetIncrLevelUpgradeXp() float64 {
	if x != nil {
		return x.IncrLevelUpgradeXp
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetBaseUpgradeRewardAmt() float64 {
	if x != nil {
		return x.BaseUpgradeRewardAmt
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetIncrUpgradeRewardAmt() float64 {
	if x != nil {
		return x.IncrUpgradeRewardAmt
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetUpgradeRewardWageringX() float64 {
	if x != nil {
		return x.UpgradeRewardWageringX
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetWeeklyXpLoss() float64 {
	if x != nil {
		return x.WeeklyXpLoss
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetMonthlyXpLoss() float64 {
	if x != nil {
		return x.MonthlyXpLoss
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetRakebackInstantEnabled() bool {
	if x != nil {
		return x.RakebackInstantEnabled
	}
	return false
}

func (x *VipLevelConfigTemplate) GetRakebackInstantRate() float64 {
	if x != nil {
		return x.RakebackInstantRate
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetRakebackInstantReq() float64 {
	if x != nil {
		return x.RakebackInstantReq
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetRakebackDailyEnabled() bool {
	if x != nil {
		return x.RakebackDailyEnabled
	}
	return false
}

func (x *VipLevelConfigTemplate) GetRakebackDailyRate() float64 {
	if x != nil {
		return x.RakebackDailyRate
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetRakebackDailyReq() float64 {
	if x != nil {
		return x.RakebackDailyReq
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetWeeklyRewardEnabled() bool {
	if x != nil {
		return x.WeeklyRewardEnabled
	}
	return false
}

func (x *VipLevelConfigTemplate) GetWeeklyFixedRewardAmt() float64 {
	if x != nil {
		return x.WeeklyFixedRewardAmt
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetWeeklyTurnoverRate() float64 {
	if x != nil {
		return x.WeeklyTurnoverRate
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetWeeklyNetLossAmt() float64 {
	if x != nil {
		return x.WeeklyNetLossAmt
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetWeeklyAdjustRangePct() float64 {
	if x != nil {
		return x.WeeklyAdjustRangePct
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetWeeklyActiveDaysReward() int32 {
	if x != nil {
		return x.WeeklyActiveDaysReward
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetWeeklyWageringReq() float64 {
	if x != nil {
		return x.WeeklyWageringReq
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *VipLevelConfigTemplate) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type ListVipLevelConfigTemplatesRequest struct {
	state                  protoimpl.MessageState         `protogen:"open.v1"`
	OperatorContext        *common.OperatorContext        `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	OperatorContextFilters *common.OperatorContextFilters `protobuf:"bytes,2,opt,name=operator_context_filters,json=operatorContextFilters,proto3" json:"operator_context_filters,omitempty"`
	Page                   int32                          `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize               int32                          `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ListVipLevelConfigTemplatesRequest) Reset() {
	*x = ListVipLevelConfigTemplatesRequest{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVipLevelConfigTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVipLevelConfigTemplatesRequest) ProtoMessage() {}

func (x *ListVipLevelConfigTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVipLevelConfigTemplatesRequest.ProtoReflect.Descriptor instead.
func (*ListVipLevelConfigTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{6}
}

func (x *ListVipLevelConfigTemplatesRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *ListVipLevelConfigTemplatesRequest) GetOperatorContextFilters() *common.OperatorContextFilters {
	if x != nil {
		return x.OperatorContextFilters
	}
	return nil
}

func (x *ListVipLevelConfigTemplatesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListVipLevelConfigTemplatesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListVipLevelConfigTemplatesResponse struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Templates     []*VipLevelConfigTemplate `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
	Total         int32                     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Page          int32                     `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                     `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVipLevelConfigTemplatesResponse) Reset() {
	*x = ListVipLevelConfigTemplatesResponse{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVipLevelConfigTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVipLevelConfigTemplatesResponse) ProtoMessage() {}

func (x *ListVipLevelConfigTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVipLevelConfigTemplatesResponse.ProtoReflect.Descriptor instead.
func (*ListVipLevelConfigTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{7}
}

func (x *ListVipLevelConfigTemplatesResponse) GetTemplates() []*VipLevelConfigTemplate {
	if x != nil {
		return x.Templates
	}
	return nil
}

func (x *ListVipLevelConfigTemplatesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListVipLevelConfigTemplatesResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListVipLevelConfigTemplatesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetVipLevelConfigTemplateRequest struct {
	state                  protoimpl.MessageState         `protogen:"open.v1"`
	OperatorContext        *common.OperatorContext        `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	OperatorContextFilters *common.OperatorContextFilters `protobuf:"bytes,2,opt,name=operator_context_filters,json=operatorContextFilters,proto3" json:"operator_context_filters,omitempty"`
	TemplateId             int64                          `protobuf:"varint,3,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetVipLevelConfigTemplateRequest) Reset() {
	*x = GetVipLevelConfigTemplateRequest{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVipLevelConfigTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipLevelConfigTemplateRequest) ProtoMessage() {}

func (x *GetVipLevelConfigTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipLevelConfigTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetVipLevelConfigTemplateRequest) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{8}
}

func (x *GetVipLevelConfigTemplateRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *GetVipLevelConfigTemplateRequest) GetOperatorContextFilters() *common.OperatorContextFilters {
	if x != nil {
		return x.OperatorContextFilters
	}
	return nil
}

func (x *GetVipLevelConfigTemplateRequest) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

type GetVipLevelConfigTemplateResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Template      *VipLevelConfigTemplate `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVipLevelConfigTemplateResponse) Reset() {
	*x = GetVipLevelConfigTemplateResponse{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVipLevelConfigTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVipLevelConfigTemplateResponse) ProtoMessage() {}

func (x *GetVipLevelConfigTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVipLevelConfigTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetVipLevelConfigTemplateResponse) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{9}
}

func (x *GetVipLevelConfigTemplateResponse) GetTemplate() *VipLevelConfigTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

type CreateVipLevelConfigTemplateRequest struct {
	state                  protoimpl.MessageState         `protogen:"open.v1"`
	OperatorContext        *common.OperatorContext        `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	OperatorContextFilters *common.OperatorContextFilters `protobuf:"bytes,2,opt,name=operator_context_filters,json=operatorContextFilters,proto3" json:"operator_context_filters,omitempty"`
	Template               *VipLevelConfigTemplate        `protobuf:"bytes,3,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CreateVipLevelConfigTemplateRequest) Reset() {
	*x = CreateVipLevelConfigTemplateRequest{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVipLevelConfigTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVipLevelConfigTemplateRequest) ProtoMessage() {}

func (x *CreateVipLevelConfigTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVipLevelConfigTemplateRequest.ProtoReflect.Descriptor instead.
func (*CreateVipLevelConfigTemplateRequest) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{10}
}

func (x *CreateVipLevelConfigTemplateRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *CreateVipLevelConfigTemplateRequest) GetOperatorContextFilters() *common.OperatorContextFilters {
	if x != nil {
		return x.OperatorContextFilters
	}
	return nil
}

func (x *CreateVipLevelConfigTemplateRequest) GetTemplate() *VipLevelConfigTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

type CreateVipLevelConfigTemplateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVipLevelConfigTemplateResponse) Reset() {
	*x = CreateVipLevelConfigTemplateResponse{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVipLevelConfigTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVipLevelConfigTemplateResponse) ProtoMessage() {}

func (x *CreateVipLevelConfigTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVipLevelConfigTemplateResponse.ProtoReflect.Descriptor instead.
func (*CreateVipLevelConfigTemplateResponse) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{11}
}

type UpdateVipLevelConfigTemplateRequest struct {
	state                  protoimpl.MessageState         `protogen:"open.v1"`
	OperatorContext        *common.OperatorContext        `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	OperatorContextFilters *common.OperatorContextFilters `protobuf:"bytes,2,opt,name=operator_context_filters,json=operatorContextFilters,proto3" json:"operator_context_filters,omitempty"`
	Template               *VipLevelConfigTemplate        `protobuf:"bytes,3,opt,name=template,proto3" json:"template,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UpdateVipLevelConfigTemplateRequest) Reset() {
	*x = UpdateVipLevelConfigTemplateRequest{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVipLevelConfigTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVipLevelConfigTemplateRequest) ProtoMessage() {}

func (x *UpdateVipLevelConfigTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVipLevelConfigTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateVipLevelConfigTemplateRequest) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateVipLevelConfigTemplateRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *UpdateVipLevelConfigTemplateRequest) GetOperatorContextFilters() *common.OperatorContextFilters {
	if x != nil {
		return x.OperatorContextFilters
	}
	return nil
}

func (x *UpdateVipLevelConfigTemplateRequest) GetTemplate() *VipLevelConfigTemplate {
	if x != nil {
		return x.Template
	}
	return nil
}

type UpdateVipLevelConfigTemplateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVipLevelConfigTemplateResponse) Reset() {
	*x = UpdateVipLevelConfigTemplateResponse{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVipLevelConfigTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVipLevelConfigTemplateResponse) ProtoMessage() {}

func (x *UpdateVipLevelConfigTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVipLevelConfigTemplateResponse.ProtoReflect.Descriptor instead.
func (*UpdateVipLevelConfigTemplateResponse) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{13}
}

type DeleteVipLevelConfigTemplateRequest struct {
	state                  protoimpl.MessageState         `protogen:"open.v1"`
	OperatorContext        *common.OperatorContext        `protobuf:"bytes,1,opt,name=operator_context,json=operatorContext,proto3" json:"operator_context,omitempty"`
	OperatorContextFilters *common.OperatorContextFilters `protobuf:"bytes,2,opt,name=operator_context_filters,json=operatorContextFilters,proto3" json:"operator_context_filters,omitempty"`
	TemplateId             int64                          `protobuf:"varint,3,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DeleteVipLevelConfigTemplateRequest) Reset() {
	*x = DeleteVipLevelConfigTemplateRequest{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVipLevelConfigTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVipLevelConfigTemplateRequest) ProtoMessage() {}

func (x *DeleteVipLevelConfigTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVipLevelConfigTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteVipLevelConfigTemplateRequest) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteVipLevelConfigTemplateRequest) GetOperatorContext() *common.OperatorContext {
	if x != nil {
		return x.OperatorContext
	}
	return nil
}

func (x *DeleteVipLevelConfigTemplateRequest) GetOperatorContextFilters() *common.OperatorContextFilters {
	if x != nil {
		return x.OperatorContextFilters
	}
	return nil
}

func (x *DeleteVipLevelConfigTemplateRequest) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

type DeleteVipLevelConfigTemplateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVipLevelConfigTemplateResponse) Reset() {
	*x = DeleteVipLevelConfigTemplateResponse{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVipLevelConfigTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVipLevelConfigTemplateResponse) ProtoMessage() {}

func (x *DeleteVipLevelConfigTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVipLevelConfigTemplateResponse.ProtoReflect.Descriptor instead.
func (*DeleteVipLevelConfigTemplateResponse) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{15}
}

type VipMember struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Id                   int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SystemOperatorId     int64                  `protobuf:"varint,2,opt,name=system_operator_id,json=systemOperatorId,proto3" json:"system_operator_id,omitempty"`
	RetailerOperatorId   int64                  `protobuf:"varint,3,opt,name=retailer_operator_id,json=retailerOperatorId,proto3" json:"retailer_operator_id,omitempty"`
	CompanyOperatorId    int64                  `protobuf:"varint,4,opt,name=company_operator_id,json=companyOperatorId,proto3" json:"company_operator_id,omitempty"`
	OperatorId           int64                  `protobuf:"varint,5,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	UserId               int64                  `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CurrentLevelId       int64                  `protobuf:"varint,7,opt,name=current_level_id,json=currentLevelId,proto3" json:"current_level_id,omitempty"`
	CurrentXp            int64                  `protobuf:"varint,8,opt,name=current_xp,json=currentXp,proto3" json:"current_xp,omitempty"`
	TotalXp              int64                  `protobuf:"varint,9,opt,name=total_xp,json=totalXp,proto3" json:"total_xp,omitempty"`
	LastLevelUpAt        int64                  `protobuf:"varint,10,opt,name=last_level_up_at,json=lastLevelUpAt,proto3" json:"last_level_up_at,omitempty"`
	LastInstantUpgradeAt int64                  `protobuf:"varint,11,opt,name=last_instant_upgrade_at,json=lastInstantUpgradeAt,proto3" json:"last_instant_upgrade_at,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *VipMember) Reset() {
	*x = VipMember{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VipMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipMember) ProtoMessage() {}

func (x *VipMember) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipMember.ProtoReflect.Descriptor instead.
func (*VipMember) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{16}
}

func (x *VipMember) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipMember) GetSystemOperatorId() int64 {
	if x != nil {
		return x.SystemOperatorId
	}
	return 0
}

func (x *VipMember) GetRetailerOperatorId() int64 {
	if x != nil {
		return x.RetailerOperatorId
	}
	return 0
}

func (x *VipMember) GetCompanyOperatorId() int64 {
	if x != nil {
		return x.CompanyOperatorId
	}
	return 0
}

func (x *VipMember) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *VipMember) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *VipMember) GetCurrentLevelId() int64 {
	if x != nil {
		return x.CurrentLevelId
	}
	return 0
}

func (x *VipMember) GetCurrentXp() int64 {
	if x != nil {
		return x.CurrentXp
	}
	return 0
}

func (x *VipMember) GetTotalXp() int64 {
	if x != nil {
		return x.TotalXp
	}
	return 0
}

func (x *VipMember) GetLastLevelUpAt() int64 {
	if x != nil {
		return x.LastLevelUpAt
	}
	return 0
}

func (x *VipMember) GetLastInstantUpgradeAt() int64 {
	if x != nil {
		return x.LastInstantUpgradeAt
	}
	return 0
}

type GetUserVipLevelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserVipLevelRequest) Reset() {
	*x = GetUserVipLevelRequest{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserVipLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserVipLevelRequest) ProtoMessage() {}

func (x *GetUserVipLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserVipLevelRequest.ProtoReflect.Descriptor instead.
func (*GetUserVipLevelRequest) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{17}
}

type GetUserVipLevelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VipMember     *VipMember             `protobuf:"bytes,1,opt,name=vip_member,json=vipMember,proto3" json:"vip_member,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserVipLevelResponse) Reset() {
	*x = GetUserVipLevelResponse{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserVipLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserVipLevelResponse) ProtoMessage() {}

func (x *GetUserVipLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserVipLevelResponse.ProtoReflect.Descriptor instead.
func (*GetUserVipLevelResponse) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserVipLevelResponse) GetVipMember() *VipMember {
	if x != nil {
		return x.VipMember
	}
	return nil
}

type UpdateVipRewardSliderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rackback      int64                  `protobuf:"varint,1,opt,name=rackback,proto3" json:"rackback,omitempty"`
	Lossback      int64                  `protobuf:"varint,2,opt,name=lossback,proto3" json:"lossback,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVipRewardSliderRequest) Reset() {
	*x = UpdateVipRewardSliderRequest{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVipRewardSliderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVipRewardSliderRequest) ProtoMessage() {}

func (x *UpdateVipRewardSliderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVipRewardSliderRequest.ProtoReflect.Descriptor instead.
func (*UpdateVipRewardSliderRequest) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateVipRewardSliderRequest) GetRackback() int64 {
	if x != nil {
		return x.Rackback
	}
	return 0
}

func (x *UpdateVipRewardSliderRequest) GetLossback() int64 {
	if x != nil {
		return x.Lossback
	}
	return 0
}

type UpdateVipRewardSliderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVipRewardSliderResponse) Reset() {
	*x = UpdateVipRewardSliderResponse{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVipRewardSliderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVipRewardSliderResponse) ProtoMessage() {}

func (x *UpdateVipRewardSliderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVipRewardSliderResponse.ProtoReflect.Descriptor instead.
func (*UpdateVipRewardSliderResponse) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{20}
}

type GetClaimableVipRewardsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RewardKind    VipRewardKind          `protobuf:"varint,1,opt,name=reward_kind,json=rewardKind,proto3,enum=api.vip.service.v1.VipRewardKind" json:"reward_kind,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClaimableVipRewardsRequest) Reset() {
	*x = GetClaimableVipRewardsRequest{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClaimableVipRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimableVipRewardsRequest) ProtoMessage() {}

func (x *GetClaimableVipRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimableVipRewardsRequest.ProtoReflect.Descriptor instead.
func (*GetClaimableVipRewardsRequest) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{21}
}

func (x *GetClaimableVipRewardsRequest) GetRewardKind() VipRewardKind {
	if x != nil {
		return x.RewardKind
	}
	return VipRewardKind_VIP_REWARD_KIND_UNSPECIFIED
}

func (x *GetClaimableVipRewardsRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type GetClaimableVipRewardsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ClaimableAmount int64                  `protobuf:"varint,1,opt,name=claimable_amount,json=claimableAmount,proto3" json:"claimable_amount,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetClaimableVipRewardsResponse) Reset() {
	*x = GetClaimableVipRewardsResponse{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClaimableVipRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClaimableVipRewardsResponse) ProtoMessage() {}

func (x *GetClaimableVipRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClaimableVipRewardsResponse.ProtoReflect.Descriptor instead.
func (*GetClaimableVipRewardsResponse) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{22}
}

func (x *GetClaimableVipRewardsResponse) GetClaimableAmount() int64 {
	if x != nil {
		return x.ClaimableAmount
	}
	return 0
}

type ClaimVipRewardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RewardKind    VipRewardKind          `protobuf:"varint,1,opt,name=reward_kind,json=rewardKind,proto3,enum=api.vip.service.v1.VipRewardKind" json:"reward_kind,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClaimVipRewardRequest) Reset() {
	*x = ClaimVipRewardRequest{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimVipRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimVipRewardRequest) ProtoMessage() {}

func (x *ClaimVipRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimVipRewardRequest.ProtoReflect.Descriptor instead.
func (*ClaimVipRewardRequest) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{23}
}

func (x *ClaimVipRewardRequest) GetRewardKind() VipRewardKind {
	if x != nil {
		return x.RewardKind
	}
	return VipRewardKind_VIP_REWARD_KIND_UNSPECIFIED
}

func (x *ClaimVipRewardRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type ClaimVipRewardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClaimVipRewardResponse) Reset() {
	*x = ClaimVipRewardResponse{}
	mi := &file_vip_service_v1_vip_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClaimVipRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimVipRewardResponse) ProtoMessage() {}

func (x *ClaimVipRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vip_service_v1_vip_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimVipRewardResponse.ProtoReflect.Descriptor instead.
func (*ClaimVipRewardResponse) Descriptor() ([]byte, []int) {
	return file_vip_service_v1_vip_proto_rawDescGZIP(), []int{24}
}

var File_vip_service_v1_vip_proto protoreflect.FileDescriptor

const file_vip_service_v1_vip_proto_rawDesc = "" +
	"\n" +
	"\x18vip/service/v1/vip.proto\x12\x12api.vip.service.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x13common/common.proto\"\xa5\n" +
	"\n" +
	"\n" +
	"VipSetting\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12,\n" +
	"\x12system_operator_id\x18\x02 \x01(\x03R\x10systemOperatorId\x120\n" +
	"\x14retailer_operator_id\x18\x03 \x01(\x03R\x12retailerOperatorId\x12.\n" +
	"\x13company_operator_id\x18\x04 \x01(\x03R\x11companyOperatorId\x12\x1f\n" +
	"\voperator_id\x18\x05 \x01(\x03R\n" +
	"operatorId\x12#\n" +
	"\rbase_currency\x18\x06 \x01(\tR\fbaseCurrency\x12E\n" +
	"\fdisplay_rule\x18\a \x01(\x0e2\".api.vip.service.v1.VipDisplayRuleR\vdisplayRule\x12%\n" +
	"\x0erewards_slider\x18\b \x01(\bR\rrewardsSlider\x12Q\n" +
	"\x13upgrade_payout_type\x18\t \x01(\x0e2!.api.vip.service.v1.VipPayoutTypeR\x11upgradePayoutType\x12b\n" +
	"\x1crakeback_instant_payout_type\x18\n" +
	" \x01(\x0e2!.api.vip.service.v1.VipPayoutTypeR\x19rakebackInstantPayoutType\x12^\n" +
	"\x1arakeback_daily_payout_type\x18\v \x01(\x0e2!.api.vip.service.v1.VipPayoutTypeR\x17rakebackDailyPayoutType\x12\\\n" +
	"\x19weekly_reward_payout_type\x18\f \x01(\x0e2!.api.vip.service.v1.VipPayoutTypeR\x16weeklyRewardPayoutType\x12^\n" +
	"\x1amonthly_reward_payout_type\x18\r \x01(\x0e2!.api.vip.service.v1.VipPayoutTypeR\x17monthlyRewardPayoutType\x12&\n" +
	"\x0fdeposit_xp_rate\x18\x0e \x01(\x01R\rdepositXpRate\x12(\n" +
	"\x10wagering_xp_rate\x18\x0f \x01(\x01R\x0ewageringXpRate\x12>\n" +
	"\x1cmax_house_edge_limit_percent\x18\x10 \x01(\x01R\x18maxHouseEdgeLimitPercent\x124\n" +
	"\x16standard_xp_multiplier\x18\x11 \x01(\x01R\x14standardXpMultiplier\x12\x1a\n" +
	"\btimezone\x18\x12 \x01(\tR\btimezone\x12$\n" +
	"\x0edaily_issue_at\x18\x13 \x01(\tR\fdailyIssueAt\x12(\n" +
	"\x10weekly_issue_dow\x18\x14 \x01(\x05R\x0eweeklyIssueDow\x12&\n" +
	"\x0fweekly_issue_at\x18\x15 \x01(\tR\rweeklyIssueAt\x12*\n" +
	"\x11monthly_issue_dom\x18\x16 \x01(\x05R\x0fmonthlyIssueDom\x12(\n" +
	"\x10monthly_issue_at\x18\x17 \x01(\tR\x0emonthlyIssueAt\x12\x1d\n" +
	"\n" +
	"created_at\x18\x18 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x19 \x01(\x03R\tupdatedAt\"\xbc\x01\n" +
	"\x14GetVipSettingRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\\\n" +
	"\x18operator_context_filters\x18\x02 \x01(\v2\".api.common.OperatorContextFiltersR\x16operatorContextFilters\"Q\n" +
	"\x15GetVipSettingResponse\x128\n" +
	"\asetting\x18\x01 \x01(\v2\x1e.api.vip.service.v1.VipSettingR\asetting\"\xf9\x01\n" +
	"\x17UpdateVipSettingRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\\\n" +
	"\x18operator_context_filters\x18\x02 \x01(\v2\".api.common.OperatorContextFiltersR\x16operatorContextFilters\x128\n" +
	"\asetting\x18\x03 \x01(\v2\x1e.api.vip.service.v1.VipSettingR\asetting\"\x1a\n" +
	"\x18UpdateVipSettingResponse\"\xe8\n" +
	"\n" +
	"\x16VipLevelConfigTemplate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12,\n" +
	"\x12system_operator_id\x18\x02 \x01(\x03R\x10systemOperatorId\x120\n" +
	"\x14retailer_operator_id\x18\x03 \x01(\x03R\x12retailerOperatorId\x12.\n" +
	"\x13company_operator_id\x18\x04 \x01(\x03R\x11companyOperatorId\x12\x1f\n" +
	"\voperator_id\x18\x05 \x01(\x03R\n" +
	"operatorId\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x12\x1f\n" +
	"\vstart_level\x18\a \x01(\x03R\n" +
	"startLevel\x12\x1b\n" +
	"\tend_level\x18\b \x01(\x03R\bendLevel\x121\n" +
	"\x15base_level_upgrade_xp\x18\t \x01(\x01R\x12baseLevelUpgradeXp\x121\n" +
	"\x15incr_level_upgrade_xp\x18\n" +
	" \x01(\x01R\x12incrLevelUpgradeXp\x125\n" +
	"\x17base_upgrade_reward_amt\x18\v \x01(\x01R\x14baseUpgradeRewardAmt\x125\n" +
	"\x17incr_upgrade_reward_amt\x18\f \x01(\x01R\x14incrUpgradeRewardAmt\x129\n" +
	"\x19upgrade_reward_wagering_x\x18\r \x01(\x01R\x16upgradeRewardWageringX\x12$\n" +
	"\x0eweekly_xp_loss\x18\x0e \x01(\x01R\fweeklyXpLoss\x12&\n" +
	"\x0fmonthly_xp_loss\x18\x0f \x01(\x01R\rmonthlyXpLoss\x128\n" +
	"\x18rakeback_instant_enabled\x18\x10 \x01(\bR\x16rakebackInstantEnabled\x122\n" +
	"\x15rakeback_instant_rate\x18\x11 \x01(\x01R\x13rakebackInstantRate\x120\n" +
	"\x14rakeback_instant_req\x18\x12 \x01(\x01R\x12rakebackInstantReq\x124\n" +
	"\x16rakeback_daily_enabled\x18\x13 \x01(\bR\x14rakebackDailyEnabled\x12.\n" +
	"\x13rakeback_daily_rate\x18\x14 \x01(\x01R\x11rakebackDailyRate\x12,\n" +
	"\x12rakeback_daily_req\x18\x15 \x01(\x01R\x10rakebackDailyReq\x122\n" +
	"\x15weekly_reward_enabled\x18\x16 \x01(\bR\x13weeklyRewardEnabled\x125\n" +
	"\x17weekly_fixed_reward_amt\x18\x17 \x01(\x01R\x14weeklyFixedRewardAmt\x120\n" +
	"\x14weekly_turnover_rate\x18\x18 \x01(\x01R\x12weeklyTurnoverRate\x12-\n" +
	"\x13weekly_net_loss_amt\x18\x19 \x01(\x01R\x10weeklyNetLossAmt\x125\n" +
	"\x17weekly_adjust_range_pct\x18\x1a \x01(\x01R\x14weeklyAdjustRangePct\x129\n" +
	"\x19weekly_active_days_reward\x18\x1b \x01(\x05R\x16weeklyActiveDaysReward\x12.\n" +
	"\x13weekly_wagering_req\x18\x1c \x01(\x01R\x11weeklyWageringReq\x12\x1d\n" +
	"\n" +
	"created_at\x18\x1d \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x1e \x01(\x03R\tupdatedAt\"\xfb\x01\n" +
	"\"ListVipLevelConfigTemplatesRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\\\n" +
	"\x18operator_context_filters\x18\x02 \x01(\v2\".api.common.OperatorContextFiltersR\x16operatorContextFilters\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"\xb6\x01\n" +
	"#ListVipLevelConfigTemplatesResponse\x12H\n" +
	"\ttemplates\x18\x01 \x03(\v2*.api.vip.service.v1.VipLevelConfigTemplateR\ttemplates\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"\xe9\x01\n" +
	" GetVipLevelConfigTemplateRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\\\n" +
	"\x18operator_context_filters\x18\x02 \x01(\v2\".api.common.OperatorContextFiltersR\x16operatorContextFilters\x12\x1f\n" +
	"\vtemplate_id\x18\x03 \x01(\x03R\n" +
	"templateId\"k\n" +
	"!GetVipLevelConfigTemplateResponse\x12F\n" +
	"\btemplate\x18\x01 \x01(\v2*.api.vip.service.v1.VipLevelConfigTemplateR\btemplate\"\x93\x02\n" +
	"#CreateVipLevelConfigTemplateRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\\\n" +
	"\x18operator_context_filters\x18\x02 \x01(\v2\".api.common.OperatorContextFiltersR\x16operatorContextFilters\x12F\n" +
	"\btemplate\x18\x03 \x01(\v2*.api.vip.service.v1.VipLevelConfigTemplateR\btemplate\"&\n" +
	"$CreateVipLevelConfigTemplateResponse\"\x93\x02\n" +
	"#UpdateVipLevelConfigTemplateRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\\\n" +
	"\x18operator_context_filters\x18\x02 \x01(\v2\".api.common.OperatorContextFiltersR\x16operatorContextFilters\x12F\n" +
	"\btemplate\x18\x03 \x01(\v2*.api.vip.service.v1.VipLevelConfigTemplateR\btemplate\"&\n" +
	"$UpdateVipLevelConfigTemplateResponse\"\xec\x01\n" +
	"#DeleteVipLevelConfigTemplateRequest\x12F\n" +
	"\x10operator_context\x18\x01 \x01(\v2\x1b.api.common.OperatorContextR\x0foperatorContext\x12\\\n" +
	"\x18operator_context_filters\x18\x02 \x01(\v2\".api.common.OperatorContextFiltersR\x16operatorContextFilters\x12\x1f\n" +
	"\vtemplate_id\x18\x03 \x01(\x03R\n" +
	"templateId\"&\n" +
	"$DeleteVipLevelConfigTemplateResponse\"\xa9\x03\n" +
	"\tVipMember\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12,\n" +
	"\x12system_operator_id\x18\x02 \x01(\x03R\x10systemOperatorId\x120\n" +
	"\x14retailer_operator_id\x18\x03 \x01(\x03R\x12retailerOperatorId\x12.\n" +
	"\x13company_operator_id\x18\x04 \x01(\x03R\x11companyOperatorId\x12\x1f\n" +
	"\voperator_id\x18\x05 \x01(\x03R\n" +
	"operatorId\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\x03R\x06userId\x12(\n" +
	"\x10current_level_id\x18\a \x01(\x03R\x0ecurrentLevelId\x12\x1d\n" +
	"\n" +
	"current_xp\x18\b \x01(\x03R\tcurrentXp\x12\x19\n" +
	"\btotal_xp\x18\t \x01(\x03R\atotalXp\x12'\n" +
	"\x10last_level_up_at\x18\n" +
	" \x01(\x03R\rlastLevelUpAt\x125\n" +
	"\x17last_instant_upgrade_at\x18\v \x01(\x03R\x14lastInstantUpgradeAt\"\x18\n" +
	"\x16GetUserVipLevelRequest\"W\n" +
	"\x17GetUserVipLevelResponse\x12<\n" +
	"\n" +
	"vip_member\x18\x01 \x01(\v2\x1d.api.vip.service.v1.VipMemberR\tvipMember\"V\n" +
	"\x1cUpdateVipRewardSliderRequest\x12\x1a\n" +
	"\brackback\x18\x01 \x01(\x03R\brackback\x12\x1a\n" +
	"\blossback\x18\x02 \x01(\x03R\blossback\"\x1f\n" +
	"\x1dUpdateVipRewardSliderResponse\"\x7f\n" +
	"\x1dGetClaimableVipRewardsRequest\x12B\n" +
	"\vreward_kind\x18\x01 \x01(\x0e2!.api.vip.service.v1.VipRewardKindR\n" +
	"rewardKind\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\"K\n" +
	"\x1eGetClaimableVipRewardsResponse\x12)\n" +
	"\x10claimable_amount\x18\x01 \x01(\x03R\x0fclaimableAmount\"w\n" +
	"\x15ClaimVipRewardRequest\x12B\n" +
	"\vreward_kind\x18\x01 \x01(\x0e2!.api.vip.service.v1.VipRewardKindR\n" +
	"rewardKind\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\"\x18\n" +
	"\x16ClaimVipRewardResponse*q\n" +
	"\x0eVipDisplayRule\x12 \n" +
	"\x1cVIP_DISPLAY_RULE_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bVIP_DISPLAY_RULE_CUMULATIVE\x10\x01\x12\x1c\n" +
	"\x18VIP_DISPLAY_RULE_CURRENT\x10\x02*\x90\x02\n" +
	"\rVipRewardKind\x12\x1f\n" +
	"\x1bVIP_REWARD_KIND_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cVIP_REWARD_KIND_UPGRADE_BASE\x10\x01\x12'\n" +
	"#VIP_REWARD_KIND_UPGRADE_INCREMENTAL\x10\x02\x12$\n" +
	" VIP_REWARD_KIND_RAKEBACK_INSTANT\x10\x03\x12\"\n" +
	"\x1eVIP_REWARD_KIND_RAKEBACK_DAILY\x10\x04\x12#\n" +
	"\x1fVIP_REWARD_KIND_RAKEBACK_WEEKLY\x10\x05\x12$\n" +
	" VIP_REWARD_KIND_RAKEBACK_MONTHLY\x10\x06*e\n" +
	"\rVipPayoutType\x12\x1f\n" +
	"\x1bVIP_PAYOUT_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14VIP_PAYOUT_TYPE_CASH\x10\x01\x12\x19\n" +
	"\x15VIP_PAYOUT_TYPE_BONUS\x10\x02*\xc1\x01\n" +
	"\x0eVipResetPolicy\x12 \n" +
	"\x1cVIP_RESET_POLICY_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15VIP_RESET_POLICY_NONE\x10\x01\x12%\n" +
	"!VIP_RESET_POLICY_RESET_ON_UPGRADE\x10\x02\x12$\n" +
	" VIP_RESET_POLICY_RESET_NEXT_WEEK\x10\x03\x12%\n" +
	"!VIP_RESET_POLICY_RESET_NEXT_MONTH\x10\x04*\xaf\x01\n" +
	"\x0fVipRewardStatus\x12!\n" +
	"\x1dVIP_REWARD_STATUS_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19VIP_REWARD_STATUS_PENDING\x10\x01\x12\x1c\n" +
	"\x18VIP_REWARD_STATUS_ISSUED\x10\x02\x12\x1d\n" +
	"\x19VIP_REWARD_STATUS_EXPIRED\x10\x03\x12\x1d\n" +
	"\x19VIP_REWARD_STATUS_REVOKED\x10\x042\x9b\r\n" +
	"\x03Vip\x12\x84\x01\n" +
	"\rGetVipSetting\x12(.api.vip.service.v1.GetVipSettingRequest\x1a).api.vip.service.v1.GetVipSettingResponse\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v1/vip/setting/get\x12m\n" +
	"\x10UpdateVipSetting\x12+.api.vip.service.v1.UpdateVipSettingRequest\x1a,.api.vip.service.v1.UpdateVipSettingResponse\x12\xbe\x01\n" +
	"\x1bListVipLevelConfigTemplates\x126.api.vip.service.v1.ListVipLevelConfigTemplatesRequest\x1a7.api.vip.service.v1.ListVipLevelConfigTemplatesResponse\".\x82\xd3\xe4\x93\x02(:\x01*\"#/v1/vip/level-config-templates/list\x12\xb6\x01\n" +
	"\x19GetVipLevelConfigTemplate\x124.api.vip.service.v1.GetVipLevelConfigTemplateRequest\x1a5.api.vip.service.v1.GetVipLevelConfigTemplateResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/v1/vip/level-config-template/get\x12\x91\x01\n" +
	"\x1cCreateVipLevelConfigTemplate\x127.api.vip.service.v1.CreateVipLevelConfigTemplateRequest\x1a8.api.vip.service.v1.CreateVipLevelConfigTemplateResponse\x12\x91\x01\n" +
	"\x1cUpdateVipLevelConfigTemplate\x127.api.vip.service.v1.UpdateVipLevelConfigTemplateRequest\x1a8.api.vip.service.v1.UpdateVipLevelConfigTemplateResponse\x12\x91\x01\n" +
	"\x1cDeleteVipLevelConfigTemplate\x127.api.vip.service.v1.DeleteVipLevelConfigTemplateRequest\x1a8.api.vip.service.v1.DeleteVipLevelConfigTemplateResponse\x12\x8d\x01\n" +
	"\x0fGetUserVipLevel\x12*.api.vip.service.v1.GetUserVipLevelRequest\x1a+.api.vip.service.v1.GetUserVipLevelResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v1/vip/user-level/get\x12\xa5\x01\n" +
	"\x15UpdateVipRewardSlider\x120.api.vip.service.v1.UpdateVipRewardSliderRequest\x1a1.api.vip.service.v1.UpdateVipRewardSliderResponse\"'\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/v1/vip/reward-slider/update\x12\xa4\x01\n" +
	"\x16GetClaimableVipRewards\x121.api.vip.service.v1.GetClaimableVipRewardsRequest\x1a2.api.vip.service.v1.GetClaimableVipRewardsResponse\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v1/vip/reward/claimable\x12\x88\x01\n" +
	"\x0eClaimVipReward\x12).api.vip.service.v1.ClaimVipRewardRequest\x1a*.api.vip.service.v1.ClaimVipRewardResponse\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/v1/vip/reward/claimBM\n" +
	"\x12api.vip.service.v1P\x01Z5github.com/infigaming-com/meepo-api/vip/service/v1;v1b\x06proto3"

var (
	file_vip_service_v1_vip_proto_rawDescOnce sync.Once
	file_vip_service_v1_vip_proto_rawDescData []byte
)

func file_vip_service_v1_vip_proto_rawDescGZIP() []byte {
	file_vip_service_v1_vip_proto_rawDescOnce.Do(func() {
		file_vip_service_v1_vip_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vip_service_v1_vip_proto_rawDesc), len(file_vip_service_v1_vip_proto_rawDesc)))
	})
	return file_vip_service_v1_vip_proto_rawDescData
}

var file_vip_service_v1_vip_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_vip_service_v1_vip_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_vip_service_v1_vip_proto_goTypes = []any{
	(VipDisplayRule)(0),                          // 0: api.vip.service.v1.VipDisplayRule
	(VipRewardKind)(0),                           // 1: api.vip.service.v1.VipRewardKind
	(VipPayoutType)(0),                           // 2: api.vip.service.v1.VipPayoutType
	(VipResetPolicy)(0),                          // 3: api.vip.service.v1.VipResetPolicy
	(VipRewardStatus)(0),                         // 4: api.vip.service.v1.VipRewardStatus
	(*VipSetting)(nil),                           // 5: api.vip.service.v1.VipSetting
	(*GetVipSettingRequest)(nil),                 // 6: api.vip.service.v1.GetVipSettingRequest
	(*GetVipSettingResponse)(nil),                // 7: api.vip.service.v1.GetVipSettingResponse
	(*UpdateVipSettingRequest)(nil),              // 8: api.vip.service.v1.UpdateVipSettingRequest
	(*UpdateVipSettingResponse)(nil),             // 9: api.vip.service.v1.UpdateVipSettingResponse
	(*VipLevelConfigTemplate)(nil),               // 10: api.vip.service.v1.VipLevelConfigTemplate
	(*ListVipLevelConfigTemplatesRequest)(nil),   // 11: api.vip.service.v1.ListVipLevelConfigTemplatesRequest
	(*ListVipLevelConfigTemplatesResponse)(nil),  // 12: api.vip.service.v1.ListVipLevelConfigTemplatesResponse
	(*GetVipLevelConfigTemplateRequest)(nil),     // 13: api.vip.service.v1.GetVipLevelConfigTemplateRequest
	(*GetVipLevelConfigTemplateResponse)(nil),    // 14: api.vip.service.v1.GetVipLevelConfigTemplateResponse
	(*CreateVipLevelConfigTemplateRequest)(nil),  // 15: api.vip.service.v1.CreateVipLevelConfigTemplateRequest
	(*CreateVipLevelConfigTemplateResponse)(nil), // 16: api.vip.service.v1.CreateVipLevelConfigTemplateResponse
	(*UpdateVipLevelConfigTemplateRequest)(nil),  // 17: api.vip.service.v1.UpdateVipLevelConfigTemplateRequest
	(*UpdateVipLevelConfigTemplateResponse)(nil), // 18: api.vip.service.v1.UpdateVipLevelConfigTemplateResponse
	(*DeleteVipLevelConfigTemplateRequest)(nil),  // 19: api.vip.service.v1.DeleteVipLevelConfigTemplateRequest
	(*DeleteVipLevelConfigTemplateResponse)(nil), // 20: api.vip.service.v1.DeleteVipLevelConfigTemplateResponse
	(*VipMember)(nil),                            // 21: api.vip.service.v1.VipMember
	(*GetUserVipLevelRequest)(nil),               // 22: api.vip.service.v1.GetUserVipLevelRequest
	(*GetUserVipLevelResponse)(nil),              // 23: api.vip.service.v1.GetUserVipLevelResponse
	(*UpdateVipRewardSliderRequest)(nil),         // 24: api.vip.service.v1.UpdateVipRewardSliderRequest
	(*UpdateVipRewardSliderResponse)(nil),        // 25: api.vip.service.v1.UpdateVipRewardSliderResponse
	(*GetClaimableVipRewardsRequest)(nil),        // 26: api.vip.service.v1.GetClaimableVipRewardsRequest
	(*GetClaimableVipRewardsResponse)(nil),       // 27: api.vip.service.v1.GetClaimableVipRewardsResponse
	(*ClaimVipRewardRequest)(nil),                // 28: api.vip.service.v1.ClaimVipRewardRequest
	(*ClaimVipRewardResponse)(nil),               // 29: api.vip.service.v1.ClaimVipRewardResponse
	(*common.OperatorContext)(nil),               // 30: api.common.OperatorContext
	(*common.OperatorContextFilters)(nil),        // 31: api.common.OperatorContextFilters
}
var file_vip_service_v1_vip_proto_depIdxs = []int32{
	0,  // 0: api.vip.service.v1.VipSetting.display_rule:type_name -> api.vip.service.v1.VipDisplayRule
	2,  // 1: api.vip.service.v1.VipSetting.upgrade_payout_type:type_name -> api.vip.service.v1.VipPayoutType
	2,  // 2: api.vip.service.v1.VipSetting.rakeback_instant_payout_type:type_name -> api.vip.service.v1.VipPayoutType
	2,  // 3: api.vip.service.v1.VipSetting.rakeback_daily_payout_type:type_name -> api.vip.service.v1.VipPayoutType
	2,  // 4: api.vip.service.v1.VipSetting.weekly_reward_payout_type:type_name -> api.vip.service.v1.VipPayoutType
	2,  // 5: api.vip.service.v1.VipSetting.monthly_reward_payout_type:type_name -> api.vip.service.v1.VipPayoutType
	30, // 6: api.vip.service.v1.GetVipSettingRequest.operator_context:type_name -> api.common.OperatorContext
	31, // 7: api.vip.service.v1.GetVipSettingRequest.operator_context_filters:type_name -> api.common.OperatorContextFilters
	5,  // 8: api.vip.service.v1.GetVipSettingResponse.setting:type_name -> api.vip.service.v1.VipSetting
	30, // 9: api.vip.service.v1.UpdateVipSettingRequest.operator_context:type_name -> api.common.OperatorContext
	31, // 10: api.vip.service.v1.UpdateVipSettingRequest.operator_context_filters:type_name -> api.common.OperatorContextFilters
	5,  // 11: api.vip.service.v1.UpdateVipSettingRequest.setting:type_name -> api.vip.service.v1.VipSetting
	30, // 12: api.vip.service.v1.ListVipLevelConfigTemplatesRequest.operator_context:type_name -> api.common.OperatorContext
	31, // 13: api.vip.service.v1.ListVipLevelConfigTemplatesRequest.operator_context_filters:type_name -> api.common.OperatorContextFilters
	10, // 14: api.vip.service.v1.ListVipLevelConfigTemplatesResponse.templates:type_name -> api.vip.service.v1.VipLevelConfigTemplate
	30, // 15: api.vip.service.v1.GetVipLevelConfigTemplateRequest.operator_context:type_name -> api.common.OperatorContext
	31, // 16: api.vip.service.v1.GetVipLevelConfigTemplateRequest.operator_context_filters:type_name -> api.common.OperatorContextFilters
	10, // 17: api.vip.service.v1.GetVipLevelConfigTemplateResponse.template:type_name -> api.vip.service.v1.VipLevelConfigTemplate
	30, // 18: api.vip.service.v1.CreateVipLevelConfigTemplateRequest.operator_context:type_name -> api.common.OperatorContext
	31, // 19: api.vip.service.v1.CreateVipLevelConfigTemplateRequest.operator_context_filters:type_name -> api.common.OperatorContextFilters
	10, // 20: api.vip.service.v1.CreateVipLevelConfigTemplateRequest.template:type_name -> api.vip.service.v1.VipLevelConfigTemplate
	30, // 21: api.vip.service.v1.UpdateVipLevelConfigTemplateRequest.operator_context:type_name -> api.common.OperatorContext
	31, // 22: api.vip.service.v1.UpdateVipLevelConfigTemplateRequest.operator_context_filters:type_name -> api.common.OperatorContextFilters
	10, // 23: api.vip.service.v1.UpdateVipLevelConfigTemplateRequest.template:type_name -> api.vip.service.v1.VipLevelConfigTemplate
	30, // 24: api.vip.service.v1.DeleteVipLevelConfigTemplateRequest.operator_context:type_name -> api.common.OperatorContext
	31, // 25: api.vip.service.v1.DeleteVipLevelConfigTemplateRequest.operator_context_filters:type_name -> api.common.OperatorContextFilters
	21, // 26: api.vip.service.v1.GetUserVipLevelResponse.vip_member:type_name -> api.vip.service.v1.VipMember
	1,  // 27: api.vip.service.v1.GetClaimableVipRewardsRequest.reward_kind:type_name -> api.vip.service.v1.VipRewardKind
	1,  // 28: api.vip.service.v1.ClaimVipRewardRequest.reward_kind:type_name -> api.vip.service.v1.VipRewardKind
	6,  // 29: api.vip.service.v1.Vip.GetVipSetting:input_type -> api.vip.service.v1.GetVipSettingRequest
	8,  // 30: api.vip.service.v1.Vip.UpdateVipSetting:input_type -> api.vip.service.v1.UpdateVipSettingRequest
	11, // 31: api.vip.service.v1.Vip.ListVipLevelConfigTemplates:input_type -> api.vip.service.v1.ListVipLevelConfigTemplatesRequest
	13, // 32: api.vip.service.v1.Vip.GetVipLevelConfigTemplate:input_type -> api.vip.service.v1.GetVipLevelConfigTemplateRequest
	15, // 33: api.vip.service.v1.Vip.CreateVipLevelConfigTemplate:input_type -> api.vip.service.v1.CreateVipLevelConfigTemplateRequest
	17, // 34: api.vip.service.v1.Vip.UpdateVipLevelConfigTemplate:input_type -> api.vip.service.v1.UpdateVipLevelConfigTemplateRequest
	19, // 35: api.vip.service.v1.Vip.DeleteVipLevelConfigTemplate:input_type -> api.vip.service.v1.DeleteVipLevelConfigTemplateRequest
	22, // 36: api.vip.service.v1.Vip.GetUserVipLevel:input_type -> api.vip.service.v1.GetUserVipLevelRequest
	24, // 37: api.vip.service.v1.Vip.UpdateVipRewardSlider:input_type -> api.vip.service.v1.UpdateVipRewardSliderRequest
	26, // 38: api.vip.service.v1.Vip.GetClaimableVipRewards:input_type -> api.vip.service.v1.GetClaimableVipRewardsRequest
	28, // 39: api.vip.service.v1.Vip.ClaimVipReward:input_type -> api.vip.service.v1.ClaimVipRewardRequest
	7,  // 40: api.vip.service.v1.Vip.GetVipSetting:output_type -> api.vip.service.v1.GetVipSettingResponse
	9,  // 41: api.vip.service.v1.Vip.UpdateVipSetting:output_type -> api.vip.service.v1.UpdateVipSettingResponse
	12, // 42: api.vip.service.v1.Vip.ListVipLevelConfigTemplates:output_type -> api.vip.service.v1.ListVipLevelConfigTemplatesResponse
	14, // 43: api.vip.service.v1.Vip.GetVipLevelConfigTemplate:output_type -> api.vip.service.v1.GetVipLevelConfigTemplateResponse
	16, // 44: api.vip.service.v1.Vip.CreateVipLevelConfigTemplate:output_type -> api.vip.service.v1.CreateVipLevelConfigTemplateResponse
	18, // 45: api.vip.service.v1.Vip.UpdateVipLevelConfigTemplate:output_type -> api.vip.service.v1.UpdateVipLevelConfigTemplateResponse
	20, // 46: api.vip.service.v1.Vip.DeleteVipLevelConfigTemplate:output_type -> api.vip.service.v1.DeleteVipLevelConfigTemplateResponse
	23, // 47: api.vip.service.v1.Vip.GetUserVipLevel:output_type -> api.vip.service.v1.GetUserVipLevelResponse
	25, // 48: api.vip.service.v1.Vip.UpdateVipRewardSlider:output_type -> api.vip.service.v1.UpdateVipRewardSliderResponse
	27, // 49: api.vip.service.v1.Vip.GetClaimableVipRewards:output_type -> api.vip.service.v1.GetClaimableVipRewardsResponse
	29, // 50: api.vip.service.v1.Vip.ClaimVipReward:output_type -> api.vip.service.v1.ClaimVipRewardResponse
	40, // [40:51] is the sub-list for method output_type
	29, // [29:40] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_vip_service_v1_vip_proto_init() }
func file_vip_service_v1_vip_proto_init() {
	if File_vip_service_v1_vip_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vip_service_v1_vip_proto_rawDesc), len(file_vip_service_v1_vip_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vip_service_v1_vip_proto_goTypes,
		DependencyIndexes: file_vip_service_v1_vip_proto_depIdxs,
		EnumInfos:         file_vip_service_v1_vip_proto_enumTypes,
		MessageInfos:      file_vip_service_v1_vip_proto_msgTypes,
	}.Build()
	File_vip_service_v1_vip_proto = out.File
	file_vip_service_v1_vip_proto_goTypes = nil
	file_vip_service_v1_vip_proto_depIdxs = nil
}
