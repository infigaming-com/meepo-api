syntax = "proto3";

package api.review.service.v1;

import "google/api/annotations.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/infigaming-com/meepo-api/review/service/v1;v1";
option java_multiple_files = true;
option java_package = "api.review.service.v1";

// Review service provides review functionality.
service Review {
	rpc CreateWithdraw(CreateWithdrawRequest) returns (CreateWithdrawResponse) {
		option (google.api.http) = {
			post: "/v1/review/withdraw"
			body: "*"
		};
	}
	rpc ReviewTicket(ReviewTicketRequest) returns (ReviewTicketResponse) {}
	rpc AddComment(AddCommentRequest) returns (AddCommentResponse) {}
	rpc ListTickets(ListTicketsRequest) returns (ListTicketsResponse) {}
	rpc GetTicket(GetTicketRequest) returns (GetTicketResponse) {}
}

message CreateWithdrawRequest {
	google.protobuf.Struct request = 1;  // JSON data for REST API
}

message CreateWithdrawResponse {}

message ReviewTicketRequest {
	int64 ticket_id = 1;
	int64 reviewer_user_id = 2;
	// action: approve, reject, manual_payout
	string action = 3;
	string review_comment = 4;
}

message ReviewTicketResponse {}

message AddCommentRequest {
	int64 ticket_id = 1;
	int64 author_user_id = 2;
	string content = 3;
}

message AddCommentResponse {}

message ListTicketsRequest {
	optional int64 user_id = 2;
	optional int64 operator_id = 3;
	optional int64 ticket_id = 4;
	optional string currency = 5;
	optional string status = 6;
	optional google.protobuf.Timestamp start_time = 7;
	optional google.protobuf.Timestamp end_time = 8;
	optional int32 page = 9;
	optional int32 page_size = 10;
}

message ListTicketsResponse {}

message GetTicketRequest {
	int64 ticket_id = 1;
}

message Comment {
	int64 author_user_name = 1;
	string content = 2;
	google.protobuf.Timestamp created_at = 3;
}

message GetTicketResponse {
	repeated Comment comments = 1;
}