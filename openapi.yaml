# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/backoffice/accounts/2fa/bind:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_Bind2Fa
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.Bind2faRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.Bind2faResponse'
    /v1/backoffice/accounts/2fa/generate:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_Generate2Fa
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.Generate2faRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.Generate2faResponse'
    /v1/backoffice/accounts/2fa/unbind:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_Unbind2Fa
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.Unbind2faRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.Unbind2faResponse'
    /v1/backoffice/accounts/add:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_AddAccount
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddAccountRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AddAccountResponse'
    /v1/backoffice/accounts/email/check_exists:
        post:
            tags:
                - BackofficeAccount
            description: CheckEmailExists checks if the email exists in the user table.
            operationId: BackofficeAccount_CheckEmailExists
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CheckEmailExistsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CheckEmailExistsResponse'
    /v1/backoffice/accounts/email/verification/send:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_SendEmailVerification
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SendEmailVerificationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SendEmailVerificationResponse'
    /v1/backoffice/accounts/email/verify:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_VerifyEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.VerifyEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.VerifyEmailResponse'
    /v1/backoffice/accounts/info:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_AccountInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AccountInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AccountInfoResponse'
    /v1/backoffice/accounts/list:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_ListAccounts
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAccountsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListAccountsResponse'
    /v1/backoffice/accounts/login:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.LoginResponse'
    /v1/backoffice/accounts/mobile/verification/send:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_SendMobileVerification
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SendMobileVerificationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SendMobileVerificationResponse'
    /v1/backoffice/accounts/mobile/verify:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_VerifyMobile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.VerifyMobileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.VerifyMobileResponse'
    /v1/backoffice/accounts/password/reset:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_ResetPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ResetPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ResetPasswordResponse'
    /v1/backoffice/accounts/register:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.RegisterResponse'
    /v1/backoffice/accounts/register/verification/send:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_SendRegisterVerificationCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SendRegisterVerificationCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SendRegisterVerificationCodeResponse'
    /v1/backoffice/accounts/role/create:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_CreateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CreateRoleResponse'
    /v1/backoffice/accounts/role/delete:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_DeleteRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.DeleteRoleResponse'
    /v1/backoffice/accounts/role/list:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_ListRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListRolesResponse'
    /v1/backoffice/accounts/role/update:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_UpdateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateRoleResponse'
    /v1/backoffice/accounts/subdomain/check_exists:
        post:
            tags:
                - BackofficeAccount
            description: CheckSubdomainExists checks if the subdomain exists in the origin_to_operator table.
            operationId: BackofficeAccount_CheckSubdomainExists
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CheckSubdomainExistsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CheckSubdomainExistsResponse'
    /v1/backoffice/accounts/update:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_UpdateAccount
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateAccountRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateAccountResponse'
    /v1/backoffice/audit/actions/list:
        post:
            tags:
                - BackofficeAudit
            operationId: BackofficeAudit_ListAuditActions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAuditActionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListAuditActionsResponse'
    /v1/backoffice/audit/logs/list:
        post:
            tags:
                - BackofficeAudit
            operationId: BackofficeAudit_ListAuditLogs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAuditLogsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListAuditLogsResponse'
    /v1/backoffice/company/register:
        post:
            tags:
                - BackofficeCompany
            description: Create a company's owner account and related data
            operationId: BackofficeCompany_CreateCompany
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateCompanyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CreateCompanyResponse'
    /v1/backoffice/dashboard/get:
        post:
            tags:
                - BackofficeDashboard
            operationId: BackofficeDashboard_GetOverviewDashboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse'
    /v1/backoffice/dashboard/time-ranged/get:
        post:
            tags:
                - BackofficeDashboard
            operationId: BackofficeDashboard_GetTimeRangedDashboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetTimeRangedDashboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetTimeRangedDashboardResponse'
    /v1/backoffice/dashboard/top-operators/get:
        post:
            tags:
                - BackofficeDashboard
            operationId: BackofficeDashboard_GetTopOperatorsDashboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse'
    /v1/backoffice/dashboard/top-users/get:
        post:
            tags:
                - BackofficeDashboard
            operationId: BackofficeDashboard_GetTopUsersDashboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetTopUsersDashboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetTopUsersDashboardResponse'
    /v1/backoffice/filestore/operator-static-files/upload:
        post:
            tags:
                - BackofficeFileStore
            operationId: BackofficeFileStore_UploadOperatorStaticFile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UploadOperatorStaticFileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UploadOperatorStaticFileResponse'
    /v1/backoffice/finance/adjustment-configs/create:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_CreateAdjustmentConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateAdjustmentConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CreateAdjustmentConfigResponse'
    /v1/backoffice/finance/adjustment-configs/delete:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_DeleteAdjustmentConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteAdjustmentConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.DeleteAdjustmentConfigResponse'
    /v1/backoffice/finance/adjustment-configs/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListAdjustmentConfigs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAdjustmentConfigsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListAdjustmentConfigsResponse'
    /v1/backoffice/finance/adjustment-configs/update:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_UpdateAdjustmentConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateAdjustmentConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateAdjustmentConfigResponse'
    /v1/backoffice/finance/adjustment/add:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_AddAdjustment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddAdjustmentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AddAdjustmentResponse'
    /v1/backoffice/finance/adjustments/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListAdjustments
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAdjustmentsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListAdjustmentsResponse'
    /v1/backoffice/finance/balance/summary:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_GetBalanceSummary
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetBalanceSummaryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetBalanceSummaryResponse'
    /v1/backoffice/finance/balances/summary:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_GetBalancesSummary
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetBalancesSummaryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetBalancesSummaryResponse'
    /v1/backoffice/finance/invoice/detail:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_GetInvoiceDetail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetInvoiceDetailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetInvoiceDetailResponse'
    /v1/backoffice/finance/invoices/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListInvoices
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListInvoicesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListInvoicesResponse'
    /v1/backoffice/finance/invoices/send:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_SendInvoices
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SendInvoicesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SendInvoicesResponse'
    /v1/backoffice/finance/invoices/summary:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_GetInvoiceSummary
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetInvoiceSummaryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetInvoiceSummaryResponse'
    /v1/backoffice/finance/monthly-revenue-shares/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListMonthlyRevenueShare
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListMonthlyRevenueShareRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListMonthlyRevenueShareResponse'
    /v1/backoffice/finance/revenue-shares/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListOperatorRevenueShare
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorRevenueShareRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorRevenueShareResponse'
    /v1/backoffice/finance/third-party-fees/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListThirdPartyFees
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListThirdPartyFeesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListThirdPartyFeesResponse'
    /v1/backoffice/game/bets/get:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_GetBetById
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetBetByIdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetBetByIdResponse'
    /v1/backoffice/game/bets/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListBets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListBetsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListBetsResponse'
    /v1/backoffice/game/bets/overview/get:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_GetUserBetsOverview
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetUserBetsOverviewRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetUserBetsOverviewResponse'
    /v1/backoffice/game/bets/transactions/get:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_GetGameTransactionsForBet
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetGameTransactionsForBetRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetGameTransactionsForBetResponse'
    /v1/backoffice/game/categories/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListCategories
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListCategoriesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListCategoriesResponse'
    /v1/backoffice/game/currencies/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListCurrencies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListCurrenciesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListCurrenciesResponse'
    /v1/backoffice/game/fee-groups/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListFeeGroups
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListFeeGroupsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListFeeGroupsResponse'
    /v1/backoffice/game/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListGames
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListGamesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListGamesResponse'
    /v1/backoffice/game/provider/rates/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListProviderRates
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListProviderRatesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListProviderRatesResponse'
    /v1/backoffice/game/provider/update:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_UpdateProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateProviderResponse'
    /v1/backoffice/game/providers-with-detail/list:
        post:
            tags:
                - BackofficeGame
            description: |-
                ListProvidersWithDetail returns all providers with detailed information,
                 including game count and enabled status.
                 ListProvidersWithDetail is used for the providers page.
            operationId: BackofficeGame_ListProvidersWithDetail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListProvidersWithDetailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListProvidersWithDetailResponse'
    /v1/backoffice/game/providers/list:
        post:
            tags:
                - BackofficeGame
            description: |-
                ListProviders returns all providers with optional filter for enabled status.
                 If not provided, all providers will be returned.
                 ListProviders is used for the providers drop down list and provider search.
            operationId: BackofficeGame_ListProviders
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListProvidersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListProvidersResponse'
    /v1/backoffice/game/tags/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListTags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListTagsResponse'
    /v1/backoffice/game/themes/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListThemes
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListThemesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListThemesResponse'
    /v1/backoffice/game/transaction/get:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_GetGameTransactionById
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetGameTransactionByIdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetGameTransactionByIdResponse'
    /v1/backoffice/game/update:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_UpdateGame
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateGameRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateGameResponse'
    /v1/backoffice/operator/create:
        post:
            tags:
                - BackofficeOperator
            operationId: BackofficeOperator_CreateOperator
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateOperatorRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CreateOperatorResponse'
    /v1/backoffice/operator/current:
        post:
            tags:
                - BackofficeOperator
            description: GetCurrentOperatorDetails returns the current operator details.
            operationId: BackofficeOperator_GetCurrentOperatorDetails
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetCurrentOperatorDetailsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetCurrentOperatorDetailsResponse'
    /v1/backoffice/operator/key/check_exists:
        post:
            tags:
                - BackofficeAccount
            description: CheckOperatorKeyExists checks if the operator key exists in the operator table.
            operationId: BackofficeAccount_CheckOperatorKeyExists
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CheckOperatorKeyExistsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CheckOperatorKeyExistsResponse'
    /v1/backoffice/operator/list/all:
        post:
            tags:
                - BackofficeOperator
            operationId: BackofficeOperator_ListAllOperators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAllOperatorsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListAllOperatorsResponse'
    /v1/backoffice/operator/list/bottom:
        post:
            tags:
                - BackofficeOperator
            description: ListBottomOperators returns a list of bottom operators by operator context in the middleware
            operationId: BackofficeOperator_ListBottomOperators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListBottomOperatorsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListBottomOperatorsResponse'
    /v1/backoffice/operator/list/by-parent:
        post:
            tags:
                - BackofficeOperator
            description: ListOperatorsByParentOperatorId returns a list of operators by parent operator ID.
            operationId: BackofficeOperator_ListOperatorsByParentOperatorId
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorsByParentOperatorIdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorsByParentOperatorIdResponse'
    /v1/backoffice/operator/list/company:
        post:
            tags:
                - BackofficeOperator
            description: ListCompanies returns a list of companies by operator context in the middleware
            operationId: BackofficeOperator_ListCompanyOperators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListCompanyOperatorsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListCompanyOperatorsResponse'
    /v1/backoffice/operator/list/retailer:
        post:
            tags:
                - BackofficeOperator
            description: ListRetailers returns a list of retailers by operator context in the middleware
            operationId: BackofficeOperator_ListRetailerOperators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListRetailerOperatorsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListRetailerOperatorsResponse'
    /v1/backoffice/operator/status/update:
        post:
            tags:
                - BackofficeOperator
            description: UpdateOperatorStatus updates the status of an operator
            operationId: BackofficeOperator_UpdateOperatorStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateOperatorStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateOperatorStatusResponse'
    /v1/backoffice/payment/channel/create:
        post:
            tags:
                - BackofficePayment
            description: |-
                Create payment channel
                 Creates a new payment channel with specified configuration
                 Error code: CREATE_PAYMENT_CHANNEL_FAILED(50002) - Failed to create payment channel
            operationId: BackofficePayment_CreatePaymentChannel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreatePaymentChannelRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.CreatePaymentChannelResponse'
    /v1/backoffice/payment/channel/page:
        post:
            tags:
                - BackofficePayment
            description: |-
                Get payment channel page with pagination and filters
                 Retrieves a paginated list of payment channels with optional filtering
                 Error code: GET_PAYMENT_CHANNEL_PAGE_FAILED(50003) - Failed to get payment channel page
            operationId: BackofficePayment_GetPaymentChannelPage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetPaymentChannelPageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetPaymentChannelPageResponse'
    /v1/backoffice/payment/channel/update:
        post:
            tags:
                - BackofficePayment
            description: |-
                Create payment channel
                 Creates a new payment channel with specified configuration
                 Error code: CREATE_PAYMENT_CHANNEL_FAILED(50002) - Failed to create payment channel
            operationId: BackofficePayment_UpdatePaymentChannel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.UpdatePaymentChannelRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.UpdatePaymentChannelResponse'
    /v1/backoffice/payment/method/create:
        post:
            tags:
                - BackofficePayment
            description: |-
                Create payment channel
                 Creates a new payment channel with specified configuration
                 Error code: CREATE_PAYMENT_CHANNEL_FAILED(50002) - Failed to create payment channel
            operationId: BackofficePayment_CreatePaymentMethod
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreatePaymentMethodRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.CreatePaymentMethodResponse'
    /v1/backoffice/payment/method/list:
        post:
            tags:
                - BackofficePayment
            description: |-
                Get list of payment methods
                 Retrieves all available payment methods supported by the system
                 Error code: GET_PAYMENT_METHOD_LIST_FAILED(50001) - Failed to get payment method list
            operationId: BackofficePayment_GetPaymentMethodList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetPaymentMethodListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetPaymentMethodListResponse'
    /v1/backoffice/payment/method/update:
        post:
            tags:
                - BackofficePayment
            description: Update payment channel
            operationId: BackofficePayment_UpdatePaymentMethod
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.UpdatePaymentMethodRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.CreatePaymentMethodResponse'
    /v1/backoffice/payment/operator/address/get:
        post:
            tags:
                - BackofficePayment
            operationId: BackofficePayment_GetOperatorAddress
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorAddressRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetOperatorAddressResponse'
    /v1/backoffice/payment/operator/transaction/detail:
        post:
            tags:
                - BackofficePayment
            description: |-
                Get transaction detail
                 Retrieves detailed information about a specific transaction
                 Error code: GET_TRANSACTION_DETAIL_FAILED(50009) - Failed to get transaction detail
            operationId: BackofficePayment_GetPaymentOperatorTransactionById
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetTransactionDetailByIdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetTransactionDetailByIdResponse'
    /v1/backoffice/payment/operator/transaction/page:
        post:
            tags:
                - BackofficePayment
            operationId: BackofficePayment_GetPaymentOperatorTransactionPage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetTransactionPageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetTransactionPageResponse'
    /v1/backoffice/payment/supportedmethod/list:
        post:
            tags:
                - BackofficePayment
            description: |-
                Get list of payment methods
                 Retrieves all available payment methods supported by the system
                 Error code: GET_PAYMENT_METHOD_LIST_FAILED(50001) - Failed to get payment method list
            operationId: BackofficePayment_GetSupportedPaymentMethodList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetSupportedPaymentMethodListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetSupportedPaymentMethodListResponse'
    /v1/backoffice/payment/transaction/detail:
        post:
            tags:
                - BackofficePayment
            description: |-
                Get transaction detail
                 Retrieves detailed information about a specific transaction
                 Error code: GET_TRANSACTION_DETAIL_FAILED(50009) - Failed to get transaction detail
            operationId: BackofficePayment_GetPaymentTransactionById
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetTransactionDetailByIdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetTransactionDetailByIdResponse'
    /v1/backoffice/payment/transaction/page:
        post:
            tags:
                - BackofficePayment
            description: |-
                Get payment transaction page
                 Retrieves a paginated list of payment transactions with optional filtering
            operationId: BackofficePayment_GetPaymentTransactionPage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetTransactionPageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetTransactionPageResponse'
    /v1/backoffice/report/deposit-details/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListDepositDetails
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListDepositDetailsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListDepositDetailsResponse'
    /v1/backoffice/report/deposit-summaries/get:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_GetDepositSummaries
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetDepositSummariesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetDepositSummariesResponse'
    /v1/backoffice/report/deposit-vtg-details/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListDepositVtgDetails
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListDepositVtgDetailsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListDepositVtgDetailsResponse'
    /v1/backoffice/report/game-data/get:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_GetGameDataSummary
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetGameSummaryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetGameSummaryResponse'
    /v1/backoffice/report/game-data/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListGameData
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetGameDataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetGameDataResponse'
    /v1/backoffice/report/player-game-data/get:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_GetPlayerGameDataSummary
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetPlayerGameSummaryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetPlayerGameSummaryResponse'
    /v1/backoffice/report/player-game-data/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListPlayerGameData
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetPlayerGameDataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetPlayerGameDataResponse'
    /v1/backoffice/report/register-retention/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListRegisterRetention
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListRegisterRetentionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListRegisterRetentionResponse'
    /v1/backoffice/report/summary/get:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_GetSummary
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetSummaryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetSummaryResponse'
    /v1/backoffice/report/summary/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListSummaries
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListSummariesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListSummariesResponse'
    /v1/backoffice/report/withdraw-details/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListWithdrawDetails
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListWithdrawDetailsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListWithdrawDetailsResponse'
    /v1/backoffice/report/withdraw-summaries/get:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_GetWithdrawSummaries
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetWithdrawSummariesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetWithdrawSummariesResponse'
    /v1/backoffice/report/withdraw-vtg-details/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListWithdrawVtgDetails
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListWithdrawVtgDetailsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListWithdrawVtgDetailsResponse'
    /v1/backoffice/review/operator/tickets/list:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_ListOperatorTickets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorTicketsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListTicketsResponse'
    /v1/backoffice/review/operator/withdraw:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_CreateOperatorWithdraw
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateOperatorWithdrawRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CreateWithdrawResponse'
    /v1/backoffice/review/tickets/cancel:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_CancelTicket
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CancelTicketRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CancelTicketResponse'
    /v1/backoffice/review/tickets/comments/add:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_AddComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AddCommentResponse'
    /v1/backoffice/review/tickets/get:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_GetTicket
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetTicketRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetTicketResponse'
    /v1/backoffice/review/tickets/get_by_id:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_GetTicketById
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetTicketByIdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetTicketByIdResponse'
    /v1/backoffice/review/tickets/list:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_ListTickets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListTicketsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListTicketsResponse'
    /v1/backoffice/review/tickets/review:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_ReviewTicket
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ReviewTicketRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ReviewTicketResponse'
    /v1/backoffice/system/currencies/add:
        post:
            tags:
                - BackofficeSystem
            operationId: BackofficeSystem_AddSystemCurrency
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddSystemCurrencyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AddSystemCurrencyResponse'
    /v1/backoffice/system/currencies/list:
        post:
            tags:
                - BackofficeSystem
            operationId: BackofficeSystem_ListSystemCurrencies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListSystemCurrenciesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListSystemCurrenciesResponse'
    /v1/backoffice/system/currencies/update:
        post:
            tags:
                - BackofficeSystem
            operationId: BackofficeSystem_UpdateSystemCurrency
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateSystemCurrencyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateSystemCurrencyResponse'
    /v1/backoffice/user/comments/add:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_AddUserComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddUserCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AddUserCommentResponse'
    /v1/backoffice/user/comments/list:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_ListUserComments
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListUserCommentsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListUserCommentsResponse'
    /v1/backoffice/user/list:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_ListUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListUsersResponse'
    /v1/backoffice/user/operator-tags/config/get:
        post:
            tags:
                - BackofficeUser
            description: GetOperatorTagConfig returns follow-parent flag for the given operator ID.
            operationId: BackofficeUser_GetOperatorTagsConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorTagsConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorTagsConfigResponse'
    /v1/backoffice/user/operator-tags/config/set:
        post:
            tags:
                - BackofficeUser
            description: |-
                SetOperatorTagConfig sets or updates the follow_parent flag for an operator.
                 It will reverse the follow_parent flag if the record exists.
                 If the record doesn't exist, it will create a new one with follow_parent set to false.
            operationId: BackofficeUser_SetOperatorTagsConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SetOperatorTagsConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SetOperatorTagsConfigResponse'
    /v1/backoffice/user/operator-tags/get:
        post:
            tags:
                - BackofficeUser
            description: GetOperatorTags retrieves all tags of an operator or parent operator if follow_parent is true.
            operationId: BackofficeUser_GetOperatorTags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorTagsResponse'
    /v1/backoffice/user/operator-tags/set:
        post:
            tags:
                - BackofficeUser
            description: SetOperatorTags sets or updates the tags for an operator.
            operationId: BackofficeUser_SetOperatorTags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SetOperatorTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SetOperatorTagsResponse'
    /v1/backoffice/user/overview/get:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_GetUserOverview
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetUserOverviewRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetUserOverviewResponse'
    /v1/backoffice/user/profile/get:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_GetUserProfile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetUserProfileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetUserProfileResponse'
    /v1/backoffice/user/send-email-verification-code:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_SendEmailVerificationCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SendEmailVerificationCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SendEmailVerificationCodeResponse'
    /v1/backoffice/user/tags/get:
        post:
            tags:
                - BackofficeUser
            description: GetUserTags retrieves all active tags associated with a user and also exists in the related operator's tag list.
            operationId: BackofficeUser_GetUserTags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetUserTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetUserTagsResponse'
    /v1/backoffice/user/tags/set:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_SetUserTags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SetUserTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SetUserTagsResponse'
    /v1/backoffice/user/update:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateUserResponse'
    /v1/backoffice/wallet/balance-transactions/list:
        post:
            tags:
                - BackofficeWallet
            description: ListWalletBalanceTransactions provides balance transactions for a specific user in User transactions page.
            operationId: BackofficeWallet_ListWalletBalanceTransactions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListWalletBalanceTransactionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListWalletBalanceTransactionsResponse'
    /v1/backoffice/wallet/credit-transactions/get:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_GetWalletCreditTransactions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletCreditTransactionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletCreditTransactionsResponse'
    /v1/backoffice/wallet/credits/get:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_GetWalletCredits
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletCreditsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletCreditsResponse'
    /v1/backoffice/wallet/currencies/add:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_AddWalletCurrency
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddWalletCurrencyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AddWalletCurrencyResponse'
    /v1/backoffice/wallet/currencies/list:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_ListWalletCurrencies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListWalletCurrenciesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListWalletCurrenciesResponse'
    /v1/backoffice/wallet/currencies/update:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_UpdateWalletCurrency
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateWalletCurrencyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateWalletCurrencyResponse'
    /v1/backoffice/wallet/exchange-rates/get:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_GetExchangeRates
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetExchangeRatesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetExchangeRatesResponse'
    /v1/backoffice/wallet/get:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_GetWallets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletsResponse'
    /v1/backoffice/wallet/operator/balance-freeze:
        post:
            tags:
                - BackofficeWallet
            description: OperatorFreeze freezes cash of an operator
            operationId: BackofficeWallet_OperatorBalanceFreeze
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceFreezeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceFreezeResponse'
    /v1/backoffice/wallet/operator/balance-rollback:
        post:
            tags:
                - BackofficeWallet
            description: OperatorRollback rolls back frozen cash of an operator
            operationId: BackofficeWallet_OperatorBalanceRollback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceRollbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceRollbackResponse'
    /v1/backoffice/wallet/operator/balance-settle:
        post:
            tags:
                - BackofficeWallet
            description: OperatorSettle settles frozen cash of an operator
            operationId: BackofficeWallet_OperatorBalanceSettle
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceSettleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceSettleResponse'
    /v1/backoffice/wallet/operator/balance/update:
        post:
            tags:
                - BackofficeWallet
            description: UpdateOperatorBalance updates an operator balance， now only support update the enabled status
            operationId: BackofficeWallet_UpdateOperatorBalance
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateOperatorBalanceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateOperatorBalanceResponse'
    /v1/backoffice/wallet/operator/balances/list:
        post:
            tags:
                - BackofficeWallet
            description: ListOperatorBalances lists all operator balances which belong to the backoffice operator
            operationId: BackofficeWallet_ListOperatorBalances
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorBalancesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorBalancesResponse'
    /v1/backoffice/wallet/operator/swap:
        post:
            tags:
                - BackofficeWallet
            description: OperatorSwap swaps cash between two balances of the same company's operator
            operationId: BackofficeWallet_OperatorSwap
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.OperatorSwapRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.OperatorSwapResponse'
    /v1/backoffice/wallet/operator/transactions/list:
        post:
            tags:
                - BackofficeWallet
            description: ListOperatorBalanceTransactions lists the balance transactions of an operator
            operationId: BackofficeWallet_ListOperatorBalanceTransactions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorBalanceTransactionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorBalanceTransactionsResponse'
    /v1/backoffice/wallet/operator/transfer:
        post:
            tags:
                - BackofficeWallet
            description: OperatorTransfer transfers cash from one operator to its company operator, only allow USD, USDT, USDC, 1:1 exchange
            operationId: BackofficeWallet_OperatorTransfer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.OperatorTransferRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.OperatorTransferResponse'
    /v1/backoffice/wallet/update:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_UpdateWallet
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateWalletRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateWalletResponse'
    /v1/game/backoffice/games/list:
        post:
            tags:
                - Game
            operationId: Game_BackofficeListGames
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.BackofficeListGamesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.BackofficeListGamesResponse'
    /v1/game/balance:
        post:
            tags:
                - Game
            operationId: Game_Balance
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.BalanceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.BalanceResponse'
    /v1/game/bets/list:
        post:
            tags:
                - Game
            operationId: Game_ListBets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.ListBetsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ListBetsResponse'
    /v1/game/categories/list:
        post:
            tags:
                - Game
            operationId: Game_ListCategories
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.ListCategoriesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ListCategoriesResponse'
    /v1/game/create-session:
        post:
            tags:
                - Game
            operationId: Game_CreateSession
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.CreateSessionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.CreateSessionResponse'
    /v1/game/get:
        post:
            tags:
                - Game
            operationId: Game_GetGame
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.GetGameRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.GetGameResponse'
    /v1/game/list:
        post:
            tags:
                - Game
            operationId: Game_ListGames
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.ListGamesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ListGamesResponse'
    /v1/game/play:
        post:
            tags:
                - Game
            operationId: Game_Play
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.PlayRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.PlayResponse'
    /v1/game/providers/list:
        post:
            tags:
                - Game
            operationId: Game_ListProviders
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.ListProvidersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ListProvidersResponse'
    /v1/game/rollback:
        post:
            tags:
                - Game
            operationId: Game_Rollback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.RollbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.RollbackResponse'
    /v1/payment/address/get:
        post:
            tags:
                - Payment
            operationId: Payment_GetAddress
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetAddressRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetAddressResponse'
    /v1/payment/channel/create:
        post:
            tags:
                - Payment
            description: |-
                Create payment channel
                 Creates a new payment channel with specified configuration
                 Error code: CREATE_PAYMENT_CHANNEL_FAILED(50002) - Failed to create payment channel
            operationId: Payment_CreatePaymentChannel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.CreatePaymentChannelRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.CreatePaymentChannelResponse'
    /v1/payment/channel/page:
        post:
            tags:
                - Payment
            description: |-
                Get payment channel page with pagination and filters
                 Retrieves a paginated list of payment channels with optional filtering
                 Error code: GET_PAYMENT_CHANNEL_PAGE_FAILED(50003) - Failed to get payment channel page
            operationId: Payment_GetPaymentChannelPage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetPaymentChannelPageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetPaymentChannelPageResponse'
    /v1/payment/channel/update:
        post:
            tags:
                - Payment
            description: |-
                Create payment channel
                 Creates a new payment channel with specified configuration
                 Error code: CREATE_PAYMENT_CHANNEL_FAILED(50002) - Failed to create payment channel
            operationId: Payment_UpdatePaymentChannel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.UpdatePaymentChannelRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.UpdatePaymentChannelResponse'
    /v1/payment/deposit/callback:
        post:
            tags:
                - Payment
            description: |-
                Deposit callback
                 Handles callbacks from payment gateways for deposit status updates
                 This endpoint is called by payment providers to notify of completed or failed deposits
                 Error code: DEPOSIT_CALLBACK_FAILED(50006) - Failed to process deposit callback
            operationId: Payment_DepositCallback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.DepositCallbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.DepositCallbackResponse'
    /v1/payment/deposit/initiate:
        post:
            tags:
                - Payment
            description: |-
                Initiate a deposit transaction
                 Starts a new deposit process and returns payment information
                 Error code: INITIATE_DEPOSIT_FAILED(50004) - Failed to initiate deposit transaction
            operationId: Payment_InitiateDeposit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.InitiateDepositRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.InitiateDepositResponse'
    /v1/payment/method/create:
        post:
            tags:
                - Payment
            description: |-
                Create payment channel
                 Creates a new payment channel with specified configuration
                 Error code: CREATE_PAYMENT_CHANNEL_FAILED(50002) - Failed to create payment channel
            operationId: Payment_CreatePaymentMethod
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.CreatePaymentMethodRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.CreatePaymentMethodResponse'
    /v1/payment/method/list:
        post:
            tags:
                - Payment
            description: |-
                Get list of payment methods
                 Retrieves all available payment methods supported by the system
                 Error code: GET_PAYMENT_METHOD_LIST_FAILED(50001) - Failed to get payment method list
            operationId: Payment_GetPaymentMethodList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetPaymentMethodListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetPaymentMethodListResponse'
    /v1/payment/operator/deposit/callback:
        post:
            tags:
                - Payment
            description: |-
                Deposit callback
                 Handles callbacks from payment gateways for deposit status updates
                 This endpoint is called by payment providers to notify of completed or failed deposits
                 Error code: DEPOSIT_CALLBACK_FAILED(50006) - Failed to process deposit callback
            operationId: Payment_OperatorDepositCallback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.DepositCallbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.DepositCallbackResponse'
    /v1/payment/operator/withdraw/callback:
        post:
            tags:
                - Payment
            description: |-
                Withdraw callback
                 Handles callbacks from payment gateways for withdrawal status updates
                 This endpoint is called by payment providers to notify of completed or failed withdrawals
                 Error code: WITHDRAW_CALLBACK_FAILED(50007) - Failed to process withdrawal callback
            operationId: Payment_OperatorWithdrawCallback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.WithdrawCallbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.WithdrawCallbackResponse'
    /v1/payment/supportedmethod/list:
        post:
            tags:
                - Payment
            description: |-
                Get list of payment methods
                 Retrieves all available payment methods supported by the system
                 Error code: GET_PAYMENT_METHOD_LIST_FAILED(50001) - Failed to get payment method list
            operationId: Payment_GetSupportedPaymentMethodList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetSupportedPaymentMethodListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetSupportedPaymentMethodListResponse'
    /v1/payment/transaction/page:
        post:
            tags:
                - Payment
            description: |-
                Get transaction page with pagination and filters
                 Retrieves a paginated list of transactions with optional filtering
                 Error code: GET_TRANSACTION_PAGE_FAILED(50008) - Failed to get transaction page
            operationId: Payment_GetTransactionPage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetTransactionPageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetTransactionPageResponse'
    /v1/payment/withdraw/callback:
        post:
            tags:
                - Payment
            description: |-
                Withdraw callback
                 Handles callbacks from payment gateways for withdrawal status updates
                 This endpoint is called by payment providers to notify of completed or failed withdrawals
                 Error code: WITHDRAW_CALLBACK_FAILED(50007) - Failed to process withdrawal callback
            operationId: Payment_WithdrawCallback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.WithdrawCallbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.WithdrawCallbackResponse'
    /v1/review/withdraw:
        post:
            tags:
                - Review
            operationId: Review_CreateWithdraw
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.review.service.v1.CreateWithdrawRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.review.service.v1.CreateWithdrawResponse'
    /v1/user/auth/login:
        post:
            tags:
                - User
            description: |-
                Login an existing user with password-based authentication.
                 Users can login using their registered credentials.
            operationId: User_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/logout:
        post:
            tags:
                - User
            description: |-
                Logout the current user.
                 Invalidates the current session and refresh token.
            operationId: User_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.LogoutResponse'
    /v1/user/auth/oauth:
        post:
            tags:
                - User
            description: |-
                Register or login using OAuth provider.
                 Supports multiple OAuth providers like Google, Facebook, and Twitter.
            operationId: User_RegisterOrLoginWithOAuth
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.OAuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/refresh:
        post:
            tags:
                - User
            description: |-
                Refresh the access token using a refresh token.
                 Used to obtain a new access token when the current one expires.
            operationId: User_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.RefreshTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.RefreshTokenResponse'
    /v1/user/auth/register:
        post:
            tags:
                - User
            description: |-
                Register a new user with password-based authentication.
                 This endpoint allows users to create a new account using various identity providers.
            operationId: User_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/telegram:
        post:
            tags:
                - User
            description: |-
                Register or login using Telegram authentication.
                 Uses Telegram's login widget for authentication.
            operationId: User_RegisterOrLoginWithTelegram
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.TelegramAuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/email/verification-code/send:
        post:
            tags:
                - User
            operationId: User_SendEmailVerificationCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.SendEmailVerificationCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.SendEmailVerificationCodeResponse'
    /v1/user/get:
        post:
            tags:
                - User
            description: |-
                Get user information by userId.
                 Returns basic user information for the specified user.
            operationId: User_GetUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.GetUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetUserResponse'
    /v1/user/tags/get:
        post:
            tags:
                - User
            description: |-
                GetUserTags retrieves all active tags associated for the current user
                 and also exists in the related operator's tag list.
            operationId: User_GetUserTags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.GetUserTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetUserTagsResponse'
    /v1/wallet/balances/list:
        post:
            tags:
                - Wallet
            description: GetUserBalances returns the balances of all currencies of the user
            operationId: Wallet_GetUserBalances
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.GetUserBalancesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetUserBalancesResponse'
    /v1/wallet/currencies/get:
        post:
            tags:
                - Wallet
            operationId: Wallet_GetCurrencies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.GetCurrenciesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetCurrenciesResponse'
components:
    schemas:
        api.backoffice.service.v1.AccountInfoRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.AccountInfoResponse:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                mobile:
                    type: string
                emailVerified:
                    type: boolean
                mobileVerified:
                    type: boolean
                enabled:
                    type: boolean
                role:
                    $ref: '#/components/schemas/api.backoffice.service.v1.Role'
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.ActiveUsersData_Data:
            type: object
            properties:
                activeUsers:
                    type: integer
                    format: int32
        api.backoffice.service.v1.AddAccountRequest:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                mobile:
                    type: string
                password:
                    type: string
                roleId:
                    type: string
            description: Account related messages
        api.backoffice.service.v1.AddAccountResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.AddAdjustmentRequest:
            type: object
            properties:
                item:
                    type: string
                    description: Basic information
                retailerId:
                    type: string
                companyId:
                    type: string
                operatorId:
                    type: string
                appliedDate:
                    type: string
                    description: Financial information
                currency:
                    type: string
                amount:
                    type: string
                description:
                    type: string
        api.backoffice.service.v1.AddAdjustmentResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.AddCommentRequest:
            type: object
            properties:
                ticketId:
                    type: string
                content:
                    type: string
        api.backoffice.service.v1.AddCommentResponse:
            type: object
            properties:
                commentId:
                    type: string
        api.backoffice.service.v1.AddSystemCurrencyRequest:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                type:
                    type: string
                symbol:
                    type: string
                icon:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
                currencyDecimalPlaces:
                    type: integer
                    format: int32
        api.backoffice.service.v1.AddSystemCurrencyResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.AddUserCommentRequest:
            type: object
            properties:
                userId:
                    type: string
                content:
                    type: string
        api.backoffice.service.v1.AddUserCommentResponse:
            type: object
            properties:
                commentId:
                    type: string
        api.backoffice.service.v1.AddWalletCurrencyRequest:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                type:
                    type: string
                symbol:
                    type: string
                icon:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
                currencyDecimalPlaces:
                    type: integer
                    format: int32
        api.backoffice.service.v1.AddWalletCurrencyResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.AuditLog:
            type: object
            properties:
                auditId:
                    type: string
                userId:
                    type: string
                userName:
                    type: string
                userEmail:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                requestInfo:
                    type: string
                requestBody:
                    type: string
                responseBody:
                    type: string
                clientIp:
                    type: string
                apiPath:
                    type: string
                action:
                    type: string
                errorMessage:
                    type: string
        api.backoffice.service.v1.Bet:
            type: object
            properties:
                operatorBetId:
                    type: string
                providerBetId:
                    type: string
                roundId:
                    type: string
                providerRoundId:
                    type: string
                providerId:
                    type: string
                providerName:
                    type: string
                operatorId:
                    type: string
                operatorName:
                    type: string
                currency:
                    type: string
                settlementCurrency:
                    type: string
                status:
                    type: string
                userId:
                    type: string
                gameId:
                    type: string
                gameName:
                    type: string
                gameCategory:
                    type: string
                winCount:
                    type: integer
                    format: int32
                betAmount:
                    type: string
                validBetAmount:
                    type: string
                settlementBetAmount:
                    type: string
                winAmount:
                    type: string
                settlementWinAmount:
                    type: string
                turnover:
                    type: string
                odds:
                    type: string
                rollbackBetAmount:
                    type: string
                rollbackWinAmount:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        api.backoffice.service.v1.Bind2faRequest:
            type: object
            properties:
                token:
                    type: string
        api.backoffice.service.v1.Bind2faResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.CancelTicketRequest:
            type: object
            properties:
                ticketId:
                    type: string
        api.backoffice.service.v1.CancelTicketResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.CheckEmailExistsRequest:
            type: object
            properties:
                email:
                    type: string
        api.backoffice.service.v1.CheckEmailExistsResponse:
            type: object
            properties:
                exists:
                    type: boolean
        api.backoffice.service.v1.CheckOperatorKeyExistsRequest:
            type: object
            properties:
                operatorKey:
                    type: string
        api.backoffice.service.v1.CheckOperatorKeyExistsResponse:
            type: object
            properties:
                exists:
                    type: boolean
        api.backoffice.service.v1.CheckSubdomainExistsRequest:
            type: object
            properties:
                subdomain:
                    type: string
        api.backoffice.service.v1.CheckSubdomainExistsResponse:
            type: object
            properties:
                exists:
                    type: boolean
        api.backoffice.service.v1.CreateAdjustmentConfigRequest:
            type: object
            properties:
                item:
                    type: string
                description:
                    type: string
        api.backoffice.service.v1.CreateAdjustmentConfigResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.CreateCompanyRequest:
            type: object
            properties:
                companyName:
                    type: string
                email:
                    type: string
                mobile:
                    type: string
                operatorKey:
                    type: string
                password:
                    type: string
                contact:
                    type: string
                contactMethods:
                    type: string
                affiliate:
                    type: string
                verificationCode:
                    type: string
        api.backoffice.service.v1.CreateCompanyResponse:
            type: object
            properties:
                token:
                    type: string
                backofficeSubdomain:
                    type: string
        api.backoffice.service.v1.CreateOperatorRequest:
            type: object
            properties:
                mode:
                    type: string
                operatorName:
                    type: string
                operatorKey:
                    type: string
                reportingCurrency:
                    type: string
                backofficeTimezone:
                    type: string
                operatorAdminEmail:
                    type: string
                verificationCode:
                    type: string
                supportedLanguages:
                    type: array
                    items:
                        type: string
                supportedCurrencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.CreateOperatorResponse:
            type: object
            properties:
                subdomain:
                    type: string
                backofficeSubdomain:
                    type: string
                operatorAdminEmail:
                    type: string
                password:
                    type: string
        api.backoffice.service.v1.CreateOperatorWithdrawRequest:
            type: object
            properties:
                request:
                    type: object
        api.backoffice.service.v1.CreatePaymentChannelRequest:
            type: object
            properties:
                merchantId:
                    type: string
                    description: ID of the merchant creating this channel
                paymentMethodId:
                    type: string
                    description: ID of the payment method to be used
                type:
                    type: string
                    description: Type of channel (e.g., deposit, withdrawal)
                contact:
                    type: string
                    description: Contact Info email
                pspFixedFee:
                    type: string
                    description: PSP Fixed Fee on the Amount
                pspFeeRate:
                    type: string
                    description: PSP Rate Fee
                userFixedFee:
                    type: string
                    description: User Fixed Fee on the Amount
                userFeeRate:
                    type: string
                    description: User Rate Fee
                minAmount:
                    type: string
                    description: Min Amount
                maxAmount:
                    type: string
                    description: Max Amount
                key:
                    type: object
                    description: Configuration fields for the payment channel in JSON format
            description: |-
                Request to create a payment channel
                 Used to create a new payment channel with specified merchant and method
        api.backoffice.service.v1.CreatePaymentMethodRequest:
            type: object
            properties:
                paymentMethodId:
                    type: string
                    description: ID of the payment method to be used
                currencyType:
                    type: string
                    description: Currency Type
                contact:
                    type: string
                    description: Contact Info email
                fixedFee:
                    type: string
                    description: Fixed Fee on the Amount
                feeRate:
                    type: string
                    description: Rate Fee
                minAmount:
                    type: string
                    description: Min Amount
                maxAmount:
                    type: string
                    description: Max Amount
                pspFixedFee:
                    type: string
                    description: PSP Fixed Fee on the Amount
                pspFeeRate:
                    type: string
                    description: PSP Rate Fee
                pspMinAmount:
                    type: string
                    description: PSP Min Amount
                pspMaxAmount:
                    type: string
                    description: PSP Max Amount
                key:
                    type: object
                    description: JSON schema defining the required fields for this payment method
            description: |-
                Request to create a payment channel
                 Used to create a new payment channel with specified merchant and method
        api.backoffice.service.v1.CreateRoleRequest:
            type: object
            properties:
                name:
                    type: string
                permissions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.Permission'
        api.backoffice.service.v1.CreateRoleResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.CreateWithdrawResponse:
            type: object
            properties:
                ticketId:
                    type: string
        api.backoffice.service.v1.DeleteAdjustmentConfigRequest:
            type: object
            properties:
                id:
                    type: string
        api.backoffice.service.v1.DeleteAdjustmentConfigResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.DeleteRoleRequest:
            type: object
            properties:
                roleId:
                    type: string
        api.backoffice.service.v1.DeleteRoleResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.GameData_Data:
            type: object
            properties:
                ggr:
                    type: string
                ngr:
                    type: string
        api.backoffice.service.v1.GameTransaction_Amount:
            type: object
            properties:
                amountInCurrency:
                    type: string
                amountInSettlementCurrency:
                    type: string
        api.backoffice.service.v1.Generate2faRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.Generate2faResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.GetBalanceSummaryRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.GetBalanceSummaryResponse:
            type: object
            properties:
                balance:
                    type: string
                estNetShare:
                    type: string
                estNetCost:
                    type: string
        api.backoffice.service.v1.GetBalancesSummaryRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.GetBalancesSummaryResponse:
            type: object
            properties:
                deposits:
                    type: string
                withdrawals:
                    type: string
                balance:
                    type: string
                ngr:
                    type: string
                gameProviderRs:
                    type: string
                thirdPartyFees:
                    type: string
                adjustments:
                    type: string
                estNetProfit:
                    type: string
                revenueShareDisburse:
                    type: string
                revenueShareCollect:
                    type: string
                estNetCosts:
                    type: string
        api.backoffice.service.v1.GetBetByIdRequest:
            type: object
            properties:
                betId:
                    type: string
                includeActions:
                    type: boolean
        api.backoffice.service.v1.GetBetByIdResponse:
            type: object
            properties:
                bet:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetBetByIdResponse_Bet'
        api.backoffice.service.v1.GetBetByIdResponse_Action:
            type: object
            properties:
                id:
                    type: string
                roundId:
                    type: string
                action:
                    type: string
                betId:
                    type: string
                providerBetId:
                    type: string
                providerTransactionId:
                    type: string
                providerExternalTransactionId:
                    type: string
                providerId:
                    type: string
                providerName:
                    type: string
                operatorId:
                    type: string
                operatorName:
                    type: string
                updateBalance:
                    type: boolean
                takeAll:
                    type: boolean
                isRefund:
                    type: boolean
                amount:
                    type: string
                amountUsd:
                    type: string
                settlementAmount:
                    type: string
                settlementAmountUsd:
                    type: string
                turnover:
                    type: string
                turnoverUsd:
                    type: string
                userId:
                    type: string
                currency:
                    type: string
                settlementCurrency:
                    type: string
                gameId:
                    type: string
                gameName:
                    type: string
                gameCategory:
                    type: string
                jackpotContribution:
                    type: string
                jackpotContributionUsd:
                    type: string
                jackpotWin:
                    type: string
                jackpotWinUsd:
                    type: string
                betTime:
                    type: string
                    format: date-time
                settleTime:
                    type: string
                    format: date-time
                providerTimestamp:
                    type: string
                    format: date-time
                bonusAmount:
                    type: string
                bonusAmountUsd:
                    type: string
                operatorTimestamp:
                    type: string
                    format: date-time
                processedAt:
                    type: string
                    format: date-time
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        api.backoffice.service.v1.GetBetByIdResponse_Bet:
            type: object
            properties:
                id:
                    type: string
                providerBetId:
                    type: string
                roundId:
                    type: string
                providerRoundId:
                    type: string
                providerId:
                    type: string
                providerName:
                    type: string
                operatorId:
                    type: string
                operatorName:
                    type: string
                currency:
                    type: string
                settlementCurrency:
                    type: string
                status:
                    type: string
                userId:
                    type: string
                gameId:
                    type: string
                gameName:
                    type: string
                gameCategory:
                    type: string
                winCount:
                    type: integer
                    format: int32
                betAmount:
                    type: string
                betAmountUsd:
                    type: string
                settlementBetAmount:
                    type: string
                settlementBetAmountUsd:
                    type: string
                winAmount:
                    type: string
                winAmountUsd:
                    type: string
                settlementWinAmount:
                    type: string
                settlementWinAmountUsd:
                    type: string
                turnover:
                    type: string
                turnoverUsd:
                    type: string
                rollbackBetAmount:
                    type: string
                rollbackBetAmountUsd:
                    type: string
                rollbackWinAmount:
                    type: string
                rollbackWinAmountUsd:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                actions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetBetByIdResponse_Action'
        api.backoffice.service.v1.GetCurrentOperatorDetailsRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.GetCurrentOperatorDetailsResponse:
            type: object
            properties:
                operatorDetails:
                    $ref: '#/components/schemas/api.backoffice.service.v1.OperatorDetails'
        api.backoffice.service.v1.GetDepositSummariesRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                groupOperatorIds:
                    type: array
                    items:
                        type: string
                operatorIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetDepositSummariesResponse:
            type: object
            properties:
                depositSummaries:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetDepositSummariesResponse_DepositSummary'
        api.backoffice.service.v1.GetDepositSummariesResponse_DepositSummary:
            type: object
            properties:
                date:
                    type: string
                currency:
                    type: string
                depositSuccessRate:
                    type: string
                depositAmount:
                    type: string
        api.backoffice.service.v1.GetExchangeRatesRequest:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetExchangeRatesResponse:
            type: object
            properties:
                exchangeRates:
                    type: object
                    additionalProperties:
                        type: string
                    description: map key is source currency, value is target currency rate
        api.backoffice.service.v1.GetGameDataRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorIds:
                    type: array
                    items:
                        type: string
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                groupOperatorIds:
                    type: array
                    items:
                        type: string
                providerIds:
                    type: array
                    items:
                        type: string
                gameCategories:
                    type: array
                    items:
                        type: string
                gameNames:
                    type: array
                    items:
                        type: string
                gameIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetGameDataResponse:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetGameDataResponse_List'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetGameDataResponse_List:
            type: object
            properties:
                date:
                    type: string
                operator:
                    type: string
                provider:
                    type: string
                gameType:
                    type: string
                gameName:
                    type: string
                gameId:
                    type: string
                playerCount:
                    type: integer
                    format: int32
                turnover:
                    type: string
                turnoverUsd:
                    type: string
                turnoverPercentage:
                    type: string
                winAmount:
                    type: string
                winAmountUsd:
                    type: string
                ggr:
                    type: string
                ggrUsd:
                    type: string
                ggrPercentage:
                    type: string
                betCount:
                    type: integer
                    format: int32
                averageBetAmount:
                    type: string
                rtpPercentage:
                    type: string
                settlementCurrency:
                    type: string
        api.backoffice.service.v1.GetGameSummaryRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorIds:
                    type: array
                    items:
                        type: string
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                groupOperatorIds:
                    type: array
                    items:
                        type: string
                providerIds:
                    type: array
                    items:
                        type: string
                gameCategories:
                    type: array
                    items:
                        type: string
                gameNames:
                    type: array
                    items:
                        type: string
                gameIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetGameSummaryResponse:
            type: object
            properties:
                turnover:
                    type: string
                winAmount:
                    type: string
                ggr:
                    type: string
                betCount:
                    type: integer
                    format: int32
                averageBetAmount:
                    type: string
                rtpPercentage:
                    type: string
        api.backoffice.service.v1.GetGameTransactionByIdRequest:
            type: object
            properties:
                transactionId:
                    type: string
        api.backoffice.service.v1.GetGameTransactionByIdResponse:
            type: object
            properties:
                id:
                    type: string
                roundId:
                    type: string
                action:
                    type: string
                betId:
                    type: string
                providerBetId:
                    type: string
                providerTransactionId:
                    type: string
                providerExternalTransactionId:
                    type: string
                providerId:
                    type: string
                providerName:
                    type: string
                operatorId:
                    type: string
                operatorName:
                    type: string
                updateBalance:
                    type: boolean
                takeAll:
                    type: boolean
                isRefund:
                    type: boolean
                amount:
                    type: string
                amountUsd:
                    type: string
                settlementAmount:
                    type: string
                settlementAmountUsd:
                    type: string
                turnover:
                    type: string
                turnoverUsd:
                    type: string
                userId:
                    type: string
                currency:
                    type: string
                settlementCurrency:
                    type: string
                gameId:
                    type: string
                gameName:
                    type: string
                gameCategory:
                    type: string
                jackpotContribution:
                    type: string
                jackpotContributionUsd:
                    type: string
                jackpotWin:
                    type: string
                jackpotWinUsd:
                    type: string
                betTime:
                    type: string
                    format: date-time
                settleTime:
                    type: string
                    format: date-time
                providerTimestamp:
                    type: string
                    format: date-time
                bonusAmount:
                    type: string
                bonusAmountUsd:
                    type: string
                operatorTimestamp:
                    type: string
                    format: date-time
                processedAt:
                    type: string
                    format: date-time
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        api.backoffice.service.v1.GetGameTransactionsForBetRequest:
            type: object
            properties:
                roundId:
                    type: string
                betId:
                    type: string
        api.backoffice.service.v1.GetGameTransactionsForBetResponse:
            type: object
            properties:
                gameTransactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetGameTransactionsForBetResponse_GameTransaction'
        api.backoffice.service.v1.GetGameTransactionsForBetResponse_GameTransaction:
            type: object
            properties:
                action:
                    type: string
                operatorName:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                gameCategory:
                    type: string
                gameId:
                    type: string
                providerName:
                    type: string
                operatorTransactionId:
                    type: string
                providerTransactionId:
                    type: string
                userId:
                    type: string
                amount:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GameTransaction_Amount'
                validBetAmount:
                    type: string
        api.backoffice.service.v1.GetInvoiceDetailRequest:
            type: object
            properties:
                invoiceId:
                    type: string
        api.backoffice.service.v1.GetInvoiceDetailResponse:
            type: object
            properties:
                invoice:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetInvoiceDetailResponse_InvoiceDetail'
        api.backoffice.service.v1.GetInvoiceDetailResponse_InvoiceDetail:
            type: object
            properties:
                invoiceId:
                    type: string
                    description: Basic invoice information
                paymentStatus:
                    enum:
                        - PAYMENT_STATUS_PAID
                        - PAYMENT_STATUS_NOT_PAID
                    type: string
                    format: enum
                invoiceDate:
                    type: string
                    description: Dates
                dueDate:
                    type: string
                month:
                    type: string
                gameProviderRevenueShare:
                    type: string
                    description: Invoice details
                thirdPartyCost:
                    type: string
                featureSubscription:
                    type: string
                revenueShareDisburse:
                    type: string
                revenueShareCollet:
                    type: string
                adjustments:
                    type: string
                totalAmount:
                    type: string
                    description: Financial summary
                amountPaid:
                    type: string
                dueAmount:
                    type: string
                retailerId:
                    type: string
                    description: Retailer information
                retailerName:
                    type: string
                companyId:
                    type: string
                    description: Company information
                companyName:
                    type: string
                operatorId:
                    type: string
                    description: Operator information
                operatorName:
                    type: string
        api.backoffice.service.v1.GetInvoiceSummaryRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.GetInvoiceSummaryResponse:
            type: object
            properties:
                totalIncome:
                    type: string
                totalOutcome:
                    type: string
                billingPeriod:
                    type: string
        api.backoffice.service.v1.GetOperatorAddressRequest:
            type: object
            properties:
                channelId:
                    type: string
                    description: ID of the channel to use for this deposit
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                extra:
                    type: object
                    description: |-
                        Additional information needed for the deposit
                         May include clientOrderId, productId, userInfo, etc.
            description: |-
                Request to get address
                 Used to get DC address
        api.backoffice.service.v1.GetOperatorTagsConfigRequest:
            type: object
            properties:
                operatorId:
                    type: string
                    description: The ID of the operator to get tag configuration for.
            description: GetOperatorTagsConfigRequest contains the operator ID to retrieve tag configuration.
        api.backoffice.service.v1.GetOperatorTagsConfigResponse:
            type: object
            properties:
                followParent:
                    type: boolean
                    description: Whether the operator should follow parent operator's tags.
            description: GetOperatorTagsConfigResponse contains the tag configuration settings, now only follow_parent flag.
        api.backoffice.service.v1.GetOperatorTagsRequest:
            type: object
            properties: {}
            description: GetOperatorTagsRequest does not contain any parameters. It will return all tags of user's operator.
        api.backoffice.service.v1.GetOperatorTagsResponse:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        type: string
                    description: List of tags associated with the operator.
            description: GetOperatorTagsResponse contains the list of tags associated with the operator or parent operator if follow_parent is true.
        api.backoffice.service.v1.GetOverviewDashboardRequest:
            type: object
            properties: {}
            description: System related messages
        api.backoffice.service.v1.GetOverviewDashboardResponse:
            type: object
            properties:
                registeredUsers:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_RegisteredUsers'
                firstDepositUsers:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_FirstDepositUsers'
                ggr:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_GGR'
                ngr:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_NGR'
                depositAmount:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_DepositAmount'
                withdrawalAmount:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_WithdrawalAmount'
                depositMinusWithdrawalAmount:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_DepositMinusWithdrawalAmount'
                activeUsers:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_ActiveUsers'
                activeDevices:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_ActiveDevices'
        api.backoffice.service.v1.GetOverviewDashboardResponse_ActiveDevices:
            type: object
            properties:
                today:
                    type: integer
                    format: int32
                yesterday:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetOverviewDashboardResponse_ActiveUsers:
            type: object
            properties:
                today:
                    type: integer
                    format: int32
                yesterday:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetOverviewDashboardResponse_DepositAmount:
            type: object
            properties:
                today:
                    type: string
                yesterday:
                    type: string
        api.backoffice.service.v1.GetOverviewDashboardResponse_DepositMinusWithdrawalAmount:
            type: object
            properties:
                today:
                    type: string
                yesterday:
                    type: string
        api.backoffice.service.v1.GetOverviewDashboardResponse_FirstDepositUsers:
            type: object
            properties:
                today:
                    type: integer
                    format: int32
                yesterday:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetOverviewDashboardResponse_GGR:
            type: object
            properties:
                today:
                    type: string
                yesterday:
                    type: string
        api.backoffice.service.v1.GetOverviewDashboardResponse_NGR:
            type: object
            properties:
                today:
                    type: string
                yesterday:
                    type: string
        api.backoffice.service.v1.GetOverviewDashboardResponse_RegisteredUsers:
            type: object
            properties:
                today:
                    type: integer
                    format: int32
                yesterday:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetOverviewDashboardResponse_WithdrawalAmount:
            type: object
            properties:
                today:
                    type: string
                yesterday:
                    type: string
        api.backoffice.service.v1.GetPlayerGameDataRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                groupOperatorIds:
                    type: array
                    items:
                        type: string
                operatorIds:
                    type: array
                    items:
                        type: string
                providerIds:
                    type: array
                    items:
                        type: string
                gameCategories:
                    type: array
                    items:
                        type: string
                gameTags:
                    type: array
                    items:
                        type: string
                gameNames:
                    type: array
                    items:
                        type: string
                gameIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                userIds:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetPlayerGameDataResponse:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetPlayerGameDataResponse_List'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetPlayerGameDataResponse_List:
            type: object
            properties:
                date:
                    type: string
                operator:
                    type: string
                provider:
                    type: string
                gameType:
                    type: string
                gameId:
                    type: string
                gameName:
                    type: string
                userId:
                    type: string
                turnover:
                    type: string
                turnoverUsd:
                    type: string
                winAmount:
                    type: string
                winAmountUsd:
                    type: string
                ggr:
                    type: string
                ggrUsd:
                    type: string
                rtpPercentage:
                    type: string
                betCount:
                    type: integer
                    format: int32
                averageBetAmount:
                    type: string
                settlementCurrency:
                    type: string
        api.backoffice.service.v1.GetPlayerGameSummaryRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                groupOperatorIds:
                    type: array
                    items:
                        type: string
                operatorIds:
                    type: array
                    items:
                        type: string
                providerIds:
                    type: array
                    items:
                        type: string
                gameCategories:
                    type: array
                    items:
                        type: string
                gameTags:
                    type: array
                    items:
                        type: string
                gameNames:
                    type: array
                    items:
                        type: string
                gameIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                userIds:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetPlayerGameSummaryResponse:
            type: object
            properties:
                turnover:
                    type: string
                winAmount:
                    type: string
                ggr:
                    type: string
                betCount:
                    type: integer
                    format: int32
                averageBetAmount:
                    type: string
                rtpPercentage:
                    type: string
        api.backoffice.service.v1.GetSummaryRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                groupOperatorIds:
                    type: array
                    items:
                        type: string
                operatorIds:
                    type: array
                    items:
                        type: string
                affiliateCodes:
                    type: array
                    items:
                        type: string
                referralCodes:
                    type: array
                    items:
                        type: string
                registrationCountries:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetSummaryResponse:
            type: object
            properties:
                visits:
                    type: integer
                    format: int32
                registeredUsers:
                    type: integer
                    format: int32
                ftd:
                    type: string
                ftdConversionRate:
                    type: string
                depositAmount:
                    type: string
                withdrawAmount:
                    type: string
                depositMinusWithdrawAmount:
                    type: string
                averageFtdAmount:
                    type: string
                arpuToArppuPercentage:
                    type: string
                turnover:
                    type: string
                bonus:
                    type: string
                ggr:
                    type: string
                ngr:
                    type: string
                arpu:
                    type: string
                arppu:
                    type: string
        api.backoffice.service.v1.GetTicketByIdRequest:
            type: object
            properties:
                ticketId:
                    type: string
        api.backoffice.service.v1.GetTicketByIdResponse:
            type: object
            properties:
                ticket:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetTicketByIdResponse_Ticket'
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTicketByIdResponse_Comment'
        api.backoffice.service.v1.GetTicketByIdResponse_Comment:
            type: object
            properties:
                id:
                    type: string
                ticketId:
                    type: string
                authorUserId:
                    type: string
                content:
                    type: string
                createdAt:
                    type: string
        api.backoffice.service.v1.GetTicketByIdResponse_Ticket:
            type: object
            properties:
                id:
                    type: string
                type:
                    type: string
                request:
                    type: string
                response:
                    type: string
                userId:
                    type: string
                cancellerUserId:
                    type: string
                operatorId:
                    type: string
                currency:
                    type: string
                ticketStatus:
                    type: string
                reviewerUserId:
                    type: string
                reviewerComment:
                    type: string
                paymentStatus:
                    type: string
                paymentTransactionId:
                    type: string
                paymentTransactionError:
                    type: string
                walletStatus:
                    type: string
                walletFreezeTransactionId:
                    type: string
                walletSettleTransactionId:
                    type: string
                walletSettleError:
                    type: string
                walletRollbackTransactionId:
                    type: string
                walletRollbackError:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
                reviewedAt:
                    type: string
                cancelledAt:
                    type: string
        api.backoffice.service.v1.GetTicketRequest:
            type: object
            properties:
                ticketId:
                    type: string
        api.backoffice.service.v1.GetTicketResponse:
            type: object
            properties:
                operatorName:
                    type: string
                userId:
                    type: string
                vipLevel:
                    type: integer
                    format: int32
                ticketId:
                    type: string
                status:
                    type: string
                userTags:
                    type: array
                    items:
                        type: string
                withdrawPaymentInfo:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetTicketResponse_WithdrawPaymentInfo'
                linkedAccounts:
                    type: array
                    items:
                        type: string
                userWalletData:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetTicketResponse_UserWalletData'
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTicketResponse_Comment'
        api.backoffice.service.v1.GetTicketResponse_Comment:
            type: object
            properties:
                authorUsername:
                    type: string
                content:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        api.backoffice.service.v1.GetTicketResponse_UserWalletData:
            type: object
            properties:
                depositUsd:
                    type: string
                withdrawUsd:
                    type: string
                depositMinusWithdrawUsd:
                    type: string
                validTurnoverUsd:
                    type: string
                depositCount:
                    type: integer
                    format: int32
                withdrawCount:
                    type: integer
                    format: int32
                todayWithdrawCount:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetTicketResponse_WithdrawPaymentInfo:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                currency:
                    type: string
                amount:
                    type: string
                amountUsd:
                    type: string
                beforeBalance:
                    type: string
                afterBalance:
                    type: string
                paymentChannel:
                    type: string
                protocol:
                    type: string
                fee:
                    type: string
                extra:
                    type: object
                schema:
                    type: object
        api.backoffice.service.v1.GetTimeRangedDashboardRequest:
            type: object
            properties:
                timeRangeType:
                    enum:
                        - TIME_RANGE_TYPE_UNSPECIFIED
                        - TIME_RANGE_TYPE_THIS_MONTH
                        - TIME_RANGE_TYPE_THIS_WEEK
                        - TIME_RANGE_TYPE_CUSTOM_DAYS
                    type: string
                    format: enum
                customDays:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetTimeRangedDashboardResponse:
            type: object
            properties:
                gameData:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTimeRangedDashboardResponse_GameData'
                paymentData:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTimeRangedDashboardResponse_PaymentData'
                activeUsersData:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTimeRangedDashboardResponse_ActiveUsersData'
        api.backoffice.service.v1.GetTimeRangedDashboardResponse_ActiveUsersData:
            type: object
            properties:
                time:
                    type: string
                data:
                    $ref: '#/components/schemas/api.backoffice.service.v1.ActiveUsersData_Data'
        api.backoffice.service.v1.GetTimeRangedDashboardResponse_GameData:
            type: object
            properties:
                time:
                    type: string
                data:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GameData_Data'
        api.backoffice.service.v1.GetTimeRangedDashboardResponse_PaymentData:
            type: object
            properties:
                time:
                    type: string
                data:
                    $ref: '#/components/schemas/api.backoffice.service.v1.PaymentData_Data'
        api.backoffice.service.v1.GetTopOperatorsDashboardRequest:
            type: object
            properties:
                timeRangeType:
                    enum:
                        - TIME_RANGE_TYPE_UNSPECIFIED
                        - TIME_RANGE_TYPE_TODAY
                        - TIME_RANGE_TYPE_THIS_WEEK
                        - TIME_RANGE_TYPE_THIS_MONTH
                    type: string
                    format: enum
        api.backoffice.service.v1.GetTopOperatorsDashboardResponse:
            type: object
            properties:
                topGgrOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topNgrOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topDepositMinusWithdrawOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topGgrGroupOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topNgrGroupOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topDepositMinusWithdrawGroupOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topGgrRetailerOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topNgrRetailerOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topDepositMinusWithdrawRetailerOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
        api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData:
            type: object
            properties:
                rank:
                    type: integer
                    format: int32
                operatorId:
                    type: string
                operatorName:
                    type: string
                amount:
                    type: string
        api.backoffice.service.v1.GetTopUsersDashboardRequest:
            type: object
            properties:
                timeRangeType:
                    enum:
                        - TIME_RANGE_TYPE_UNSPECIFIED
                        - TIME_RANGE_TYPE_TODAY
                        - TIME_RANGE_TYPE_THIS_WEEK
                        - TIME_RANGE_TYPE_THIS_MONTH
                    type: string
                    format: enum
        api.backoffice.service.v1.GetTopUsersDashboardResponse:
            type: object
            properties:
                topDepositUsers:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopUsersDashboardResponse_User'
                topWithdrawalUsers:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopUsersDashboardResponse_User'
        api.backoffice.service.v1.GetTopUsersDashboardResponse_User:
            type: object
            properties:
                rank:
                    type: integer
                    format: int32
                userId:
                    type: string
                avatar:
                    type: string
                country:
                    type: string
                vipLevel:
                    type: integer
                    format: int32
                amount:
                    type: string
                operatorName:
                    type: string
        api.backoffice.service.v1.GetUserBetsOverviewRequest:
            type: object
            properties:
                userId:
                    type: string
                providers:
                    type: array
                    items:
                        type: string
                gameNames:
                    type: array
                    items:
                        type: string
                gameId:
                    type: string
                currencies:
                    type: array
                    items:
                        type: string
                betAmountMin:
                    type: string
                betAmountMax:
                    type: string
                winAmountMin:
                    type: string
                winAmountMax:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetUserBetsOverviewResponse:
            type: object
            properties:
                rounds:
                    type: string
                betCount:
                    type: integer
                    format: int32
                turnover:
                    type: string
                betAmount:
                    type: string
                winAmount:
                    type: string
                ggr:
                    type: string
                ngr:
                    type: string
        api.backoffice.service.v1.GetUserOverviewRequest:
            type: object
            properties:
                userId:
                    type: string
                filter:
                    type: string
                    description: |-
                        filter options:
                         - "today": Today's data
                         - "this_week": This week's data
                         - "this_month": This month's data
                         - "recent_24h": Recent 24 hours data
                         - "recent_30d": Recent 30 days data
                         If not specified, returns all time data
        api.backoffice.service.v1.GetUserOverviewResponse:
            type: object
            properties:
                balance:
                    type: string
                depositMinusWithdraw:
                    type: string
                turnover:
                    type: string
                cashTurnover:
                    type: string
                bonusTurnover:
                    type: string
                deposit:
                    type: string
                lastDeposit:
                    type: string
                depositCount:
                    type: integer
                    format: int32
                withdraw:
                    type: string
                lastWithdraw:
                    type: string
                withdrawCount:
                    type: integer
                    format: int32
                bonus:
                    type: string
                validTurnover:
                    type: string
                averageBetAmount:
                    type: string
                ggr:
                    type: string
                ggrPercentage:
                    type: string
                manuallyAddedBalance:
                    type: string
                bonusClaimed:
                    type: string
                ngr:
                    type: string
                ggrToNgrPercentage:
                    type: string
                turnoverMultiplier:
                    type: string
                depositToWithdrawRatio:
                    type: string
                rtp:
                    type: string
                gameData:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetUserOverviewResponse_GameData'
        api.backoffice.service.v1.GetUserOverviewResponse_GameData:
            type: object
            properties:
                gameType:
                    type: string
                ggr:
                    type: string
                turnover:
                    type: string
                rtp:
                    type: string
        api.backoffice.service.v1.GetUserProfileRequest:
            type: object
            properties:
                userId:
                    type: string
                loginPage:
                    type: integer
                    format: int32
                loginPageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetUserProfileResponse:
            type: object
            properties:
                nickname:
                    type: string
                userId:
                    type: string
                vipLevel:
                    type: integer
                    format: int32
                online:
                    type: boolean
                banWithdraw:
                    type: boolean
                banGame:
                    type: boolean
                banLogin:
                    type: boolean
                registrationRecord:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetUserProfileResponse_RegistrationRecord'
                loginRecords:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetUserProfileResponse_LoginRecord'
                tags:
                    type: array
                    items:
                        type: string
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetUserProfileResponse_Comment'
                totalLoginCount:
                    type: integer
                    format: int32
                loginPage:
                    type: integer
                    format: int32
                loginPageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetUserProfileResponse_Comment:
            type: object
            properties:
                commentId:
                    type: string
                username:
                    type: string
                authorUsername:
                    type: string
                content:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        api.backoffice.service.v1.GetUserProfileResponse_IpInfo:
            type: object
            properties:
                ip:
                    type: string
                count:
                    type: integer
                    format: int32
                country:
                    type: string
        api.backoffice.service.v1.GetUserProfileResponse_LoginRecord:
            type: object
            properties:
                loginAt:
                    type: string
                    format: date-time
                ipInfo:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetUserProfileResponse_IpInfo'
                device:
                    type: string
                method:
                    type: string
                browser:
                    type: string
                app:
                    type: string
                email:
                    type: string
                mobile:
                    type: string
                username:
                    type: string
        api.backoffice.service.v1.GetUserProfileResponse_RegistrationRecord:
            type: object
            properties:
                registeredAt:
                    type: string
                    format: date-time
                ipInfo:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetUserProfileResponse_IpInfo'
                device:
                    type: string
                method:
                    type: string
                browser:
                    type: string
                app:
                    type: string
                mobile:
                    type: string
                email:
                    type: string
                username:
                    type: string
                source:
                    type: string
        api.backoffice.service.v1.GetUserTagsRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: The ID of the user to get tags for.
            description: GetUserTagsRequest contains the user ID to retrieve tags for.
        api.backoffice.service.v1.GetUserTagsResponse:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        type: string
                    description: List of active tags associated with the user.
            description: GetUserTagsResponse contains the list of active tags associated with the user.
        api.backoffice.service.v1.GetWalletCreditTransactionsRequest:
            type: object
            properties:
                transactionId:
                    type: string
        api.backoffice.service.v1.GetWalletCreditTransactionsResponse:
            type: object
            properties:
                creditTransactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletCreditTransactionsResponse_CreditTransaction'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetWalletCreditTransactionsResponse_CreditTransaction:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                type:
                    type: string
        api.backoffice.service.v1.GetWalletCreditsRequest:
            type: object
            properties:
                userId:
                    type: string
                transactionType:
                    type: string
                currency:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetWalletCreditsResponse:
            type: object
            properties:
                credits:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletCreditsResponse_Credit'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetWalletCreditsResponse_Credit:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                transactionId:
                    type: string
                type:
                    type: string
                vipLevel:
                    type: integer
                    format: int32
                beforeBlanace:
                    type: string
                afterBalance:
                    type: string
                currency:
                    type: string
        api.backoffice.service.v1.GetWalletsRequest:
            type: object
            properties:
                userId:
                    type: string
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetWalletsResponse:
            type: object
            properties:
                totalAssets:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletsResponse_TotalAssets'
                wallets:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletsResponse_Wallet'
        api.backoffice.service.v1.GetWalletsResponse_Credit:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                transactionId:
                    type: string
                cash:
                    type: string
                originalCash:
                    type: string
                bonus:
                    type: string
                originalBonus:
                    type: string
                turnoverThreshold:
                    type: string
                turnover:
                    type: string
                cashTurnover:
                    type: string
                bonusTurnover:
                    type: string
                turnoverMultiplier:
                    type: string
        api.backoffice.service.v1.GetWalletsResponse_TotalAssets:
            type: object
            properties:
                balance:
                    type: string
                deposit:
                    type: string
                withdraw:
                    type: string
                depositMinusWithdraw:
                    type: string
                validTurnover:
                    type: string
        api.backoffice.service.v1.GetWalletsResponse_Wallet:
            type: object
            properties:
                currency:
                    type: string
                cash:
                    type: string
                originalCash:
                    type: string
                bonus:
                    type: string
                originalBonus:
                    type: string
                turnoverThreshold:
                    type: string
                turnover:
                    type: string
                cashTurnover:
                    type: string
                bonusTurnover:
                    type: string
                turnoverMultiplier:
                    type: string
                credits:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletsResponse_Credit'
        api.backoffice.service.v1.GetWithdrawSummariesRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                groupOperatorIds:
                    type: array
                    items:
                        type: string
                operatorIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetWithdrawSummariesResponse:
            type: object
            properties:
                withdrawSummaries:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetWithdrawSummariesResponse_WithdrawSummary'
        api.backoffice.service.v1.GetWithdrawSummariesResponse_WithdrawSummary:
            type: object
            properties:
                date:
                    type: string
                currency:
                    type: string
                withdrawSuccessRate:
                    type: string
                withdrawAmount:
                    type: string
        api.backoffice.service.v1.ListAccountsRequest:
            type: object
            properties:
                userId:
                    type: string
                roleId:
                    type: string
                operatorId:
                    type: string
                enabled:
                    type: boolean
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAccountsResponse:
            type: object
            properties:
                accounts:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListAccountsResponse_Account'
                total:
                    type: integer
                    format: int32
                totalEnabled:
                    type: integer
                    format: int32
                totalDisabled:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAccountsResponse_Account:
            type: object
            properties:
                userId:
                    type: string
                username:
                    type: string
                email:
                    type: string
                mobile:
                    type: string
                enabled:
                    type: boolean
                role:
                    $ref: '#/components/schemas/api.backoffice.service.v1.Role'
                createdAt:
                    type: string
                    format: date-time
        api.backoffice.service.v1.ListAdjustmentConfigsRequest:
            type: object
            properties:
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAdjustmentConfigsResponse:
            type: object
            properties:
                configs:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListAdjustmentConfigsResponse_AdjustmentConfig'
                totalCount:
                    type: integer
                    description: Pagination information
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAdjustmentConfigsResponse_AdjustmentConfig:
            type: object
            properties:
                id:
                    type: string
                item:
                    type: string
                description:
                    type: string
        api.backoffice.service.v1.ListAdjustmentsRequest:
            type: object
            properties:
                invoiceId:
                    type: string
                    description: Filter by invoice ID
                retailerId:
                    type: string
                    description: Filter by retailer
                companyId:
                    type: string
                    description: Filter by company
                operatorId:
                    type: string
                    description: Filter by operator
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAdjustmentsResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListAdjustmentsResponse_AdjustmentItem'
                subtotal:
                    type: string
                    description: Summary
                totalCount:
                    type: integer
                    description: Pagination information
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAdjustmentsResponse_AdjustmentItem:
            type: object
            properties:
                item:
                    type: string
                    description: Basic information
                operatorId:
                    type: string
                operatorName:
                    type: string
                currency:
                    type: string
                amount:
                    type: string
                    description: Amount information
                description:
                    type: string
        api.backoffice.service.v1.ListAllOperatorsRequest:
            type: object
            properties:
                enabled:
                    type: boolean
        api.backoffice.service.v1.ListAllOperatorsResponse:
            type: object
            properties:
                operators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListAllOperatorsResponse_Operator'
        api.backoffice.service.v1.ListAllOperatorsResponse_Operator:
            type: object
            properties:
                realOperatorId:
                    type: string
                operatorName:
                    type: string
                enabled:
                    type: boolean
                operatorType:
                    type: string
                parentOperatorId:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.ListAuditActionsRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.ListAuditActionsResponse:
            type: object
            properties:
                actions:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListAuditLogsRequest:
            type: object
            properties:
                userName:
                    type: string
                action:
                    type: string
                userEmail:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAuditLogsResponse:
            type: object
            properties:
                auditLogs:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.AuditLog'
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListBetsRequest:
            type: object
            properties:
                operatorIds:
                    type: array
                    items:
                        type: string
                providerIds:
                    type: array
                    items:
                        type: string
                gameName:
                    type: string
                gameId:
                    type: string
                userId:
                    type: string
                operatorBetId:
                    type: string
                providerBetId:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                currencyWithRanges:
                    $ref: '#/components/schemas/api.backoffice.service.v1.ListBetsRequest_CurrencyWithRange'
                settlementCurrencyWithRanges:
                    $ref: '#/components/schemas/api.backoffice.service.v1.ListBetsRequest_CurrencyWithRange'
                settlementCurrencies:
                    $ref: '#/components/schemas/api.backoffice.service.v1.ListBetsRequest_Currencies'
                categories:
                    type: array
                    items:
                        type: string
                status:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListBetsRequest_Currencies:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListBetsRequest_CurrencyWithRange:
            type: object
            properties:
                currency:
                    type: string
                minBetAmount:
                    type: string
                maxBetAmount:
                    type: string
                minWinAmount:
                    type: string
                maxWinAmount:
                    type: string
        api.backoffice.service.v1.ListBetsResponse:
            type: object
            properties:
                bets:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.Bet'
                turnover:
                    type: string
                winAmount:
                    type: string
                betCount:
                    type: integer
                    format: int32
                rtpPercentage:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListBottomOperatorsRequest:
            type: object
            properties:
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                companyOperatorIds:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListBottomOperatorsResponse:
            type: object
            properties:
                operators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.OperatorInfo'
        api.backoffice.service.v1.ListCategoriesRequest:
            type: object
            properties:
                providerId:
                    type: string
        api.backoffice.service.v1.ListCategoriesResponse:
            type: object
            properties:
                categories:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListCompanyOperatorsRequest:
            type: object
            properties:
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListCompanyOperatorsResponse:
            type: object
            properties:
                companyOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.OperatorInfo'
        api.backoffice.service.v1.ListCurrenciesRequest:
            type: object
            properties:
                providerId:
                    type: string
        api.backoffice.service.v1.ListCurrenciesResponse:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListDepositDetailsRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                groupOperatorIds:
                    type: array
                    items:
                        type: string
                operatorIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListDepositDetailsResponse:
            type: object
            properties:
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListDepositDetailsResponse_Detail'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListDepositDetailsResponse_Detail:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                currency:
                    type: string
                depositAmount:
                    type: string
                depositAmountUsd:
                    type: string
                depositUsers:
                    type: integer
                    format: int32
                ftdAmount:
                    type: string
                ftdAmountUsd:
                    type: string
                ftdUsers:
                    type: integer
                    format: int32
                sameDayFtdAmount:
                    type: string
                sameDayFtdAmountUsd:
                    type: string
                sameDayFtdUsers:
                    type: integer
                    format: int32
                repeatedDepositAmount:
                    type: string
                repeatedDepositAmountUsd:
                    type: string
                repeatedDepositUsers:
                    type: integer
                    format: int32
                sameDayFtd:
                    type: integer
                    format: int32
                nonSameDayFtd:
                    type: integer
                    format: int32
                averageFtdAmountForSameDayRegistredUsers:
                    type: string
                averageFtdAmountUsdForSameDayRegistredUsers:
                    type: string
                averageFtdAmountForNonSameDayRegistredUsers:
                    type: string
                averageFtdAmountUsdForNonSameDayRegistredUsers:
                    type: string
                successRate:
                    type: string
                amountProportion:
                    type: string
        api.backoffice.service.v1.ListDepositVtgDetailsRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                groupOperatorIds:
                    type: array
                    items:
                        type: string
                operatorIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListDepositVtgDetailsResponse:
            type: object
            properties:
                dailyDetails:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListDepositVtgDetailsResponse_Detail'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListDepositVtgDetailsResponse_Detail:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                currency:
                    type: string
                depositAmount:
                    type: string
                depositAmountUsd:
                    type: string
                depositUsers:
                    type: integer
                    format: int32
                ftdAmount:
                    type: string
                ftdAmountUsd:
                    type: string
                ftdUsers:
                    type: integer
                    format: int32
                sameDayFtdAmount:
                    type: string
                sameDayFtdAmountUsd:
                    type: string
                sameDayFtdUsers:
                    type: integer
                    format: int32
                repeatedDepositAmount:
                    type: string
                repeatedDepositAmountUsd:
                    type: string
                repeatedDepositUsers:
                    type: integer
                    format: int32
                sameDayFtd:
                    type: string
                nonSameDayFtd:
                    type: string
                averageFtdAmountForSameDayRegistredUsers:
                    type: string
                averageFtdAmountUsdForSameDayRegistredUsers:
                    type: string
                averageFtdAmountForNonSameDayRegistredUsers:
                    type: string
                averageFtdAmountUsdForNonSameDayRegistredUsers:
                    type: string
        api.backoffice.service.v1.ListFeeGroupsRequest:
            type: object
            properties:
                providerId:
                    type: string
                category:
                    type: string
        api.backoffice.service.v1.ListFeeGroupsResponse:
            type: object
            properties:
                feeGroups:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListGamesRequest:
            type: object
            properties:
                providerIds:
                    type: array
                    items:
                        type: string
                categories:
                    type: array
                    items:
                        type: string
                feeGroups:
                    type: array
                    items:
                        type: string
                gameId:
                    type: string
                gameTags:
                    type: array
                    items:
                        type: string
                themes:
                    type: array
                    items:
                        type: string
                supportBonusBuy:
                    type: boolean
                hasFreespins:
                    type: boolean
                supportCurrencies:
                    type: array
                    items:
                        type: string
                restrictedCountries:
                    type: array
                    items:
                        type: string
                rtpMin:
                    type: string
                rtpMax:
                    type: string
                enabled:
                    type: boolean
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListGamesResponse:
            type: object
            properties:
                games:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListGamesResponse_Game'
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
                totalEnabled:
                    type: integer
                    format: int32
                totalDisabled:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListGamesResponse_Game:
            type: object
            properties:
                name:
                    type: string
                provider:
                    type: string
                id:
                    type: string
                category:
                    type: string
                theme:
                    type: string
                supportBonusBuy:
                    type: boolean
                hasFreespins:
                    type: boolean
                tags:
                    type: array
                    items:
                        type: string
                feeGroup:
                    type: string
                rate:
                    type: string
                rtp:
                    type: string
                validBetRate:
                    type: string
                supportCurrencies:
                    type: array
                    items:
                        type: string
                restrictedCountries:
                    type: array
                    items:
                        type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.ListInvoicesRequest:
            type: object
            properties:
                retailerId:
                    type: string
                    description: Filter by retailer
                companyId:
                    type: string
                    description: Filter by company
                month:
                    type: string
                    description: 'Filter by month (format: YYYY-MM)'
                invoiceId:
                    type: string
                    description: Search by invoice id
                paymentStatus:
                    enum:
                        - PAYMENT_STATUS_PAID
                        - PAYMENT_STATUS_NOT_PAID
                    type: string
                    format: enum
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListInvoicesResponse:
            type: object
            properties:
                invoices:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListInvoicesResponse_Invoice'
                totalCount:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                totalPaidCount:
                    type: integer
                    format: int32
                totalNotPaidCount:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListInvoicesResponse_Invoice:
            type: object
            properties:
                invoiceId:
                    type: string
                    description: Invoice ID
                operatorId:
                    type: string
                    description: Operator information
                operatorName:
                    type: string
                retailerId:
                    type: string
                    description: Retailer information
                retailerName:
                    type: string
                companyId:
                    type: string
                    description: Company information
                companyName:
                    type: string
                month:
                    type: string
                    description: Invoice details
                retailer:
                    type: string
                company:
                    type: string
                dueAmount:
                    type: string
                    description: Financial information
                paymentStatus:
                    enum:
                        - PAYMENT_STATUS_PAID
                        - PAYMENT_STATUS_NOT_PAID
                    type: string
                    format: enum
                invoiceDate:
                    type: string
                    description: Dates
                dueDate:
                    type: string
        api.backoffice.service.v1.ListMonthlyRevenueShareRequest:
            type: object
            properties:
                invoiceId:
                    type: string
                    description: Filter by invoice ID
                retailerId:
                    type: string
                    description: Filter by retailer
                companyId:
                    type: string
                    description: Filter by company
                operatorId:
                    type: string
                    description: Filter by operator
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                type:
                    enum:
                        - TYPE_CURRENT_MONTH
                        - TYPE_ALL
                    type: string
                    format: enum
        api.backoffice.service.v1.ListMonthlyRevenueShareResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListMonthlyRevenueShareResponse_RevenueShareItem'
                summary:
                    $ref: '#/components/schemas/api.backoffice.service.v1.ListMonthlyRevenueShareResponse_Summary'
                totalCount:
                    type: integer
                    description: Pagination information
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListMonthlyRevenueShareResponse_RevenueShareItem:
            type: object
            properties:
                operatorId:
                    type: string
                    description: Basic information
                operatorName:
                    type: string
                operatorMode:
                    type: string
                deposits:
                    type: string
                    description: Financial data
                withdrawals:
                    type: string
                balance:
                    type: string
                ngr:
                    type: string
                ggr:
                    type: string
                gameProviderRs:
                    type: string
                    description: Revenue breakdown
                thirdPartyFees:
                    type: string
                adjustments:
                    type: string
                netProfit:
                    type: string
                rsRate:
                    type: string
                    description: Revenue share details
                revenueShareDisburse:
                    type: string
                revenueShareCollect:
                    type: string
                estCosts:
                    type: string
        api.backoffice.service.v1.ListMonthlyRevenueShareResponse_Summary:
            type: object
            properties:
                subtotal:
                    type: string
                revenueShareDisburseTotal:
                    type: string
                revenueShareCollectTotal:
                    type: string
                estCostsTotal:
                    type: string
            description: Summary totals
        api.backoffice.service.v1.ListOperatorBalanceTransactionsRequest:
            type: object
            properties:
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                companyOperatorIds:
                    type: array
                    items:
                        type: string
                operatorIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                transactionTypes:
                    type: array
                    items:
                        type: string
                transactionId:
                    type: string
                targetOperatorType:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorBalanceTransactionsResponse:
            type: object
            properties:
                transactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceTransaction'
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorBalancesRequest:
            type: object
            properties:
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                companyOperatorIds:
                    type: array
                    items:
                        type: string
                operatorIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorBalancesResponse:
            type: object
            properties:
                operatorBalances:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalance'
                totalCashUsd:
                    type: string
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorRevenueShareRequest:
            type: object
            properties:
                invoiceId:
                    type: string
                    description: Filter by invoice ID
                retailerId:
                    type: string
                    description: Filter by retailer
                companyId:
                    type: string
                    description: Filter by company
                operatorId:
                    type: string
                    description: Filter by operator
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorRevenueShareResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorRevenueShareResponse_RevenueShareItem'
                subtotal:
                    type: string
                    description: Summary
                totalCount:
                    type: integer
                    description: Pagination information
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                totalPages:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorRevenueShareResponse_RevenueShareItem:
            type: object
            properties:
                operatorId:
                    type: string
                    description: Basic information
                operatorName:
                    type: string
                gameProviderId:
                    type: string
                gameProviderName:
                    type: string
                feeGroup:
                    type: string
                currency:
                    type: string
                totalBet:
                    type: string
                    description: Gaming statistics
                totalPayout:
                    type: string
                betsCount:
                    type: integer
                    format: int32
                ngr:
                    type: string
                ggr:
                    type: string
                rate:
                    type: string
                    description: Revenue share calculation
                amount:
                    type: string
                fxRate:
                    type: string
                amountUsd:
                    type: string
        api.backoffice.service.v1.ListOperatorTicketsRequest:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                systemOperatorId:
                    type: string
                ticketId:
                    type: string
                currency:
                    type: string
                status:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorsByParentOperatorIdRequest:
            type: object
            properties:
                status:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorsByParentOperatorIdResponse:
            type: object
            properties:
                operatorDetailsList:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.OperatorDetails'
                total:
                    type: integer
                    format: int32
                liveCount:
                    type: integer
                    format: int32
                closedCount:
                    type: integer
                    format: int32
                pendingCount:
                    type: integer
                    format: int32
                requestToCloseCount:
                    type: integer
                    format: int32
                suspendedCount:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListProviderRatesRequest:
            type: object
            properties:
                feeGroup:
                    type: string
                currency:
                    type: string
                providerId:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListProviderRatesResponse:
            type: object
            properties:
                providerRates:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListProviderRatesResponse_ProviderRate'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListProviderRatesResponse_ProviderRate:
            type: object
            properties:
                providerId:
                    type: string
                providerName:
                    type: string
                feeGroup:
                    type: string
                currency:
                    type: string
                rate:
                    type: string
        api.backoffice.service.v1.ListProvidersRequest:
            type: object
            properties:
                enabled:
                    type: boolean
        api.backoffice.service.v1.ListProvidersResponse:
            type: object
            properties:
                providers:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListProvidersResponse_Provider'
        api.backoffice.service.v1.ListProvidersResponse_Provider:
            type: object
            properties:
                providerId:
                    type: string
                providerName:
                    type: string
        api.backoffice.service.v1.ListProvidersWithDetailRequest:
            type: object
            properties:
                providerId:
                    type: string
                enabled:
                    type: boolean
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListProvidersWithDetailResponse:
            type: object
            properties:
                providers:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListProvidersWithDetailResponse_Provider'
                total:
                    type: integer
                    format: int32
                totalEnabled:
                    type: integer
                    format: int32
                totalDisabled:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListProvidersWithDetailResponse_Provider:
            type: object
            properties:
                providerId:
                    type: string
                providerName:
                    type: string
                gameCount:
                    type: integer
                    format: int32
                enabled:
                    type: boolean
        api.backoffice.service.v1.ListRegisterRetentionRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                groupOperatorIds:
                    type: array
                    items:
                        type: string
                operatorIds:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListRegisterRetentionResponse:
            type: object
            properties:
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListRegisterRetentionResponse_List'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListRegisterRetentionResponse_List:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                regUsers:
                    type: integer
                    format: int32
                paidUsers:
                    type: integer
                    format: int32
                activeUsers:
                    type: integer
                    format: int32
                depositConvertionRate:
                    type: string
                arppu:
                    type: integer
                    format: int32
                d1ActiveUsers:
                    type: integer
                    format: int32
                d2ActiveUsers:
                    type: integer
                    format: int32
                d3ActiveUsers:
                    type: integer
                    format: int32
                d4ActiveUsers:
                    type: integer
                    format: int32
                d5ActiveUsers:
                    type: integer
                    format: int32
                d6ActiveUsers:
                    type: integer
                    format: int32
                d7ActiveUsers:
                    type: integer
                    format: int32
                d15ActiveUsers:
                    type: integer
                    format: int32
                d30ActiveUsers:
                    type: integer
                    format: int32
                d45ActiveUsers:
                    type: integer
                    format: int32
                d60ActiveUsers:
                    type: integer
                    format: int32
                d120ActiveUsers:
                    type: integer
                    format: int32
                d1PaidUsers:
                    type: integer
                    format: int32
                d2PaidUsers:
                    type: integer
                    format: int32
                d3PaidUsers:
                    type: integer
                    format: int32
                d4PaidUsers:
                    type: integer
                    format: int32
                d5PaidUsers:
                    type: integer
                    format: int32
                d6PaidUsers:
                    type: integer
                    format: int32
                d7PaidUsers:
                    type: integer
                    format: int32
                d15PaidUsers:
                    type: integer
                    format: int32
                d30PaidUsers:
                    type: integer
                    format: int32
                d45PaidUsers:
                    type: integer
                    format: int32
                d60PaidUsers:
                    type: integer
                    format: int32
                d120PaidUsers:
                    type: integer
                    format: int32
                d1PaidAmt:
                    type: string
                d2PaidAmt:
                    type: string
                d3PaidAmt:
                    type: string
                d4PaidAmt:
                    type: string
                d5PaidAmt:
                    type: string
                d6PaidAmt:
                    type: string
                d7PaidAmt:
                    type: string
                d15PaidAmt:
                    type: string
                d30PaidAmt:
                    type: string
                d45PaidAmt:
                    type: string
                d60PaidAmt:
                    type: string
                d120PaidAmt:
                    type: string
        api.backoffice.service.v1.ListRetailerOperatorsRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.ListRetailerOperatorsResponse:
            type: object
            properties:
                retailerOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.OperatorInfo'
        api.backoffice.service.v1.ListRolesRequest:
            type: object
            properties:
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListRolesResponse:
            type: object
            properties:
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.Role'
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListSummariesRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                groupOperatorIds:
                    type: array
                    items:
                        type: string
                operatorIds:
                    type: array
                    items:
                        type: string
                affiliateCodes:
                    type: array
                    items:
                        type: string
                referralCodes:
                    type: array
                    items:
                        type: string
                registrationCountries:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListSummariesResponse:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListSummariesResponse_List'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListSummariesResponse_List:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                country:
                    type: string
                visits:
                    type: integer
                    format: int32
                uniqueVisits:
                    type: integer
                    format: int32
                registeredUsers:
                    type: integer
                    format: int32
                depositedUsers:
                    type: integer
                    format: int32
                ftdUsers:
                    type: integer
                    format: int32
                repeatedDepositedUsers:
                    type: integer
                    format: int32
                depositConversionRate:
                    type: string
                depositCount:
                    type: integer
                    format: int32
                depositAmount:
                    type: string
                arpu:
                    type: string
                arppu:
                    type: string
                averageFtdAmount:
                    type: string
                withdrawAmount:
                    type: string
                withdrawedUsers:
                    type: integer
                    format: int32
                ftwUsers:
                    type: integer
                    format: int32
                averageWithdrawAmount:
                    type: string
                ftwAmount:
                    type: string
                averageFtwAmount:
                    type: string
                wuToAuPercentage:
                    type: string
                wuToDuPercentage:
                    type: string
                depositMinusWithdrawAmount:
                    type: string
                wToDPercentage:
                    type: string
                turnover:
                    type: string
                depositBonus:
                    type: string
                rebateBonus:
                    type: string
                lossRebate:
                    type: string
                vipBonus:
                    type: string
                otherBonus:
                    type: string
                referralCommission:
                    type: string
                depositFeeSubsidyAmount:
                    type: string
                playerWithdrawFee:
                    type: string
                operatorWithdrawFee:
                    type: string
                cashBalance:
                    type: string
                bonusBalance:
                    type: string
                lockedBalance:
                    type: string
                ggr:
                    type: string
                ngr:
                    type: string
                ggrToNgrPercentage:
                    type: string
                houseEdgePercentage:
                    type: string
        api.backoffice.service.v1.ListSystemCurrenciesRequest:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
        api.backoffice.service.v1.ListSystemCurrenciesResponse:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.SystemCurrency'
                total:
                    type: integer
                    format: int32
                totalEnabled:
                    type: integer
                    format: int32
                totalHidden:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListTagsRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.ListTagsResponse:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListThemesRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.ListThemesResponse:
            type: object
            properties:
                themes:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListThirdPartyFeesRequest:
            type: object
            properties:
                invoiceId:
                    type: string
                    description: Filter by invoice ID
                retailerId:
                    type: string
                    description: Filter by retailer
                companyId:
                    type: string
                    description: Filter by company
                operatorId:
                    type: string
                    description: Filter by operator
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListThirdPartyFeesResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListThirdPartyFeesResponse_ThirdPartyFeeItem'
                subtotal:
                    type: string
                    description: Summary
                totalCount:
                    type: integer
                    description: Pagination information
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListThirdPartyFeesResponse_ThirdPartyFeeItem:
            type: object
            properties:
                operatorId:
                    type: string
                    description: Basic information
                operatorName:
                    type: string
                service:
                    type: string
                quantity:
                    type: string
                    description: Fee details
                amount:
                    type: string
                description:
                    type: string
        api.backoffice.service.v1.ListTicketsRequest:
            type: object
            properties:
                userId:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                systemOperatorId:
                    type: string
                ticketId:
                    type: string
                currency:
                    type: string
                status:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListTicketsResponse:
            type: object
            properties:
                tickets:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListTicketsResponse_Ticket'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                totalCount:
                    type: integer
                    format: int32
                totalAmount:
                    type: string
                totalPendingCount:
                    type: integer
                    format: int32
                totalPendingAmount:
                    type: string
                totalPayingCount:
                    type: integer
                    format: int32
                totalPayingAmount:
                    type: string
                totalPaidCount:
                    type: integer
                    format: int32
                totalPaidAmount:
                    type: string
                totalFailedCount:
                    type: integer
                    format: int32
                totalFailedAmount:
                    type: string
                totalRejectedCount:
                    type: integer
                    format: int32
                totalRejectedAmount:
                    type: string
                averageReviewTime:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListTicketsResponse_Ticket:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                operatorName:
                    type: string
                ticketId:
                    type: string
                userId:
                    type: string
                vipLevel:
                    type: integer
                    format: int32
                userTags:
                    type: array
                    items:
                        type: string
                beforeBalance:
                    type: string
                beforeBalanceUsd:
                    type: string
                amount:
                    type: string
                amountUsd:
                    type: string
                afterBalance:
                    type: string
                afterBalanceUsd:
                    type: string
                currency:
                    type: string
                paymentChannel:
                    type: string
                protocol:
                    type: string
                fee:
                    type: string
                status:
                    type: string
                reviewerUsername:
                    type: string
                reviewDuration:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListUserCommentsRequest:
            type: object
            properties:
                userId:
                    type: string
        api.backoffice.service.v1.ListUserCommentsResponse:
            type: object
            properties:
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListUserCommentsResponse_Comment'
        api.backoffice.service.v1.ListUserCommentsResponse_Comment:
            type: object
            properties:
                author:
                    type: string
                content:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        api.backoffice.service.v1.ListUsersRequest:
            type: object
            properties:
                userId:
                    type: string
                tags:
                    type: array
                    items:
                        type: string
                registrationStartTime:
                    type: string
                    format: date-time
                registrationEndTime:
                    type: string
                    format: date-time
                vipLevel:
                    type: integer
                    format: int32
                retailerOperatorId:
                    type: string
                groupOperatorId:
                    type: string
                operatorId:
                    type: string
                country:
                    type: string
                kycLevel:
                    type: integer
                    description: |-
                        optional int32 risk_level_min = 10;
                         optional int32 risk_level_max = 11;
                    format: int32
                depositMin:
                    type: string
                    description: optional bool has_made_deposit = 13;
                depositMax:
                    type: string
                withdrawalMin:
                    type: string
                withdrawalMax:
                    type: string
                banWithdraw:
                    type: boolean
                banGame:
                    type: boolean
                banLogin:
                    type: boolean
                online:
                    type: boolean
                enabled:
                    type: boolean
                email:
                    type: string
                mobile:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListUsersResponse_User'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListUsersResponse_User:
            type: object
            properties:
                retailer:
                    type: string
                group:
                    type: string
                operatorName:
                    type: string
                userId:
                    type: string
                username:
                    type: string
                email:
                    type: string
                mobile:
                    type: string
                vipLevel:
                    type: integer
                    format: int32
                kycLevel:
                    type: integer
                    format: int32
                deposit:
                    type: string
                withdraw:
                    type: string
                tags:
                    type: array
                    items:
                        type: string
                banWithdraw:
                    type: boolean
                banGame:
                    type: boolean
                banLogin:
                    type: boolean
                online:
                    type: boolean
                lastLoginAt:
                    type: string
                    format: date-time
                registeredAt:
                    type: string
                    format: date-time
                country:
                    type: string
                    description: |-
                        int32 risk_level = 19;
                         string referral_code = 20;
                         string affiliate_code = 21;
                registrationIp:
                    type: string
                    description: |-
                        string device = 23;
                         string source = 24;
        api.backoffice.service.v1.ListWalletBalanceTransactionsRequest:
            type: object
            properties:
                userId:
                    type: string
                transactionType:
                    type: string
                    description: |-
                        Transaction types for different operations
                         Expected values:
                         Credit operations:
                           - "payment_deposit"    - Payment deposit transaction
                           - "game_win"          - Game win transaction

                         Debit operations:
                           - "payment_withdraw"   - Payment withdraw transaction
                           - "game_bet"          - Game bet transaction
                           - "payment_withdraw_freeze" - Payment withdraw freeze transaction

                         Settlement operations:
                           - "payment_withdraw_settle" - Payment withdraw settlement

                         Rollback operations:
                           - "game_bet_rollback"            - Game bet transaction rollback
                           - "game_win_rollback"            - Game win transaction rollback
                           - "payment_withdraw_rollback" - Payment withdraw transaction rollback
                currency:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListWalletBalanceTransactionsResponse:
            type: object
            properties:
                balanceTransactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListWalletBalanceTransactionsResponse_BalanceTransaction'
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListWalletBalanceTransactionsResponse_BalanceTransaction:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                transactionId:
                    type: string
                transactionType:
                    type: string
                    description: |-
                        Transaction types for different operations
                         Expected values:
                         Credit operations:
                           - "payment_deposit"    - Payment deposit transaction
                           - "game_win"          - Game win transaction

                         Debit operations:
                           - "payment_withdraw"   - Payment withdraw transaction
                           - "game_bet"          - Game bet transaction
                           - "payment_withdraw_freeze" - Payment withdraw freeze transaction

                         Settlement operations:
                           - "payment_withdraw_settle" - Payment withdraw settlement

                         Rollback operations:
                           - "game_bet_rollback"            - Game bet transaction rollback
                           - "game_win_rollback"            - Game win transaction rollback
                           - "payment_withdraw_rollback" - Payment withdraw transaction rollback
                vipLevel:
                    type: integer
                    format: int32
                changeBalance:
                    type: string
                beforeBalance:
                    type: string
                afterBalance:
                    type: string
                currency:
                    type: string
                relatedTransactionId:
                    type: string
        api.backoffice.service.v1.ListWalletCurrenciesRequest:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
        api.backoffice.service.v1.ListWalletCurrenciesResponse:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.WalletCurrency'
                total:
                    type: integer
                    format: int32
                totalEnabled:
                    type: integer
                    format: int32
                totalHidden:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListWithdrawDetailsRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                groupOperatorIds:
                    type: array
                    items:
                        type: string
                operatorIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListWithdrawDetailsResponse:
            type: object
            properties:
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListWithdrawDetailsResponse_Detail'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListWithdrawDetailsResponse_Detail:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                currency:
                    type: string
                withdrawAmount:
                    type: string
                withdrawAmountUsd:
                    type: string
                withdrawUsers:
                    type: integer
                    format: int32
                ftwAmount:
                    type: string
                ftwAmountUsd:
                    type: string
                ftwUsers:
                    type: integer
                    format: int32
                sameDayFtwAmount:
                    type: string
                sameDayFtwAmountUsd:
                    type: string
                sameDayFtwUsers:
                    type: integer
                    format: int32
                repeatedWithdrawAmount:
                    type: string
                repeatedWithdrawAmountUsd:
                    type: string
                repeatedWithdrawUsers:
                    type: integer
                    format: int32
                sameDayFtw:
                    type: integer
                    format: int32
                nonSameDayFtw:
                    type: integer
                    format: int32
                averageFtwAmountForSameDayRegistredUsers:
                    type: string
                averageFtwAmountUsdForSameDayRegistredUsers:
                    type: string
                averageFtwAmountForNonSameDayRegistredUsers:
                    type: string
                averageFtwAmountUsdForNonSameDayRegistredUsers:
                    type: string
                successRate:
                    type: string
                depositMinusWithdrawAmount:
                    type: string
                depositMinusWithdrawAmountUsd:
                    type: string
                amountProportion:
                    type: string
        api.backoffice.service.v1.ListWithdrawVtgDetailsRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                groupOperatorIds:
                    type: array
                    items:
                        type: string
                operatorIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListWithdrawVtgDetailsResponse:
            type: object
            properties:
                dailyDetails:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListWithdrawVtgDetailsResponse_Detail'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListWithdrawVtgDetailsResponse_Detail:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                currency:
                    type: string
                withdrawAmount:
                    type: string
                withdrawAmountUsd:
                    type: string
                withdrawUsers:
                    type: integer
                    format: int32
                ftwAmount:
                    type: string
                ftwAmountUsd:
                    type: string
                ftwUsers:
                    type: integer
                    format: int32
                sameDayFtwAmount:
                    type: string
                sameDayFtwAmountUsd:
                    type: string
                sameDayFtwUsers:
                    type: integer
                    format: int32
                repeatedWithdrawAmount:
                    type: string
                repeatedWithdrawAmountUsd:
                    type: string
                repeatedWithdrawUsers:
                    type: integer
                    format: int32
                sameDayFtw:
                    type: integer
                    format: int32
                nonSameDayFtw:
                    type: integer
                    format: int32
                averageFtwAmountForSameDayRegistredUsers:
                    type: string
                averageFtwAmountUsdForSameDayRegistredUsers:
                    type: string
                averageFtwAmountForNonSameDayRegistredUsers:
                    type: string
                averageFtwAmountUsdForNonSameDayRegistredUsers:
                    type: string
                depositMinusWithdrawAmount:
                    type: string
                depositMinusWithdrawAmountUsd:
                    type: string
        api.backoffice.service.v1.LoginRequest:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
        api.backoffice.service.v1.LoginResponse:
            type: object
            properties:
                token:
                    type: string
        api.backoffice.service.v1.OperatorBalance:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                retailerOperatorName:
                    type: string
                companyOperatorName:
                    type: string
                operatorName:
                    type: string
                currency:
                    type: string
                protocol:
                    type: string
                cash:
                    type: string
                cashUsd:
                    type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.OperatorBalanceFreezeRequest:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                cashAmount:
                    type: string
                memo:
                    type: string
        api.backoffice.service.v1.OperatorBalanceFreezeResponse:
            type: object
            properties:
                transactionId:
                    type: string
                cash:
                    type: string
        api.backoffice.service.v1.OperatorBalanceRollbackRequest:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                originalTransactionId:
                    type: string
                memo:
                    type: string
        api.backoffice.service.v1.OperatorBalanceRollbackResponse:
            type: object
            properties:
                transactionId:
                    type: string
                cash:
                    type: string
                cashAmount:
                    type: string
                cashAmountUsd:
                    type: string
                cashAmountReportingCurrency:
                    type: string
        api.backoffice.service.v1.OperatorBalanceSettleRequest:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                originalTransactionId:
                    type: string
                memo:
                    type: string
        api.backoffice.service.v1.OperatorBalanceSettleResponse:
            type: object
            properties:
                transactionId:
                    type: string
                cash:
                    type: string
                cashAmount:
                    type: string
                cashAmountUsd:
                    type: string
                cashAmountReportingCurrency:
                    type: string
        api.backoffice.service.v1.OperatorBalanceTransaction:
            type: object
            properties:
                transactionId:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                retailerOperatorName:
                    type: string
                companyOperatorName:
                    type: string
                operatorName:
                    type: string
                currency:
                    type: string
                beforeBalance:
                    type: string
                afterBalance:
                    type: string
                cashAmount:
                    type: string
                transactionType:
                    type: string
                status:
                    type: string
                memo:
                    type: string
                feeAmount:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        api.backoffice.service.v1.OperatorDetails:
            type: object
            properties:
                id:
                    type: string
                operatorName:
                    type: string
                parentOperatorId:
                    type: string
                parentOperatorName:
                    type: string
                operatorType:
                    type: string
                externalId:
                    type: string
                apiKey:
                    type: string
                subdomain:
                    type: string
                backofficeSubdomain:
                    type: string
                backofficeChildDomain:
                    type: string
                domainPool:
                    type: array
                    items:
                        type: string
                enabled:
                    type: boolean
                mode:
                    type: string
                operatorKey:
                    type: string
                reportingCurrency:
                    type: string
                backofficeTimezone:
                    type: string
                supportedLanguages:
                    type: array
                    items:
                        type: string
                supportedCurrencies:
                    type: array
                    items:
                        type: string
                status:
                    type: string
                isMaintenance:
                    type: boolean
                maintenanceStartTime:
                    type: string
                maintenanceEndTime:
                    type: string
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorId:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorId:
                    type: string
                systemOperatorName:
                    type: string
                config:
                    type: string
        api.backoffice.service.v1.OperatorInfo:
            type: object
            properties:
                operatorId:
                    type: string
                operatorName:
                    type: string
                status:
                    type: string
        api.backoffice.service.v1.OperatorSwapRequest:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                targetCurrency:
                    type: string
                cashAmount:
                    type: string
        api.backoffice.service.v1.OperatorSwapResponse:
            type: object
            properties:
                currencyBalanceCash:
                    type: string
                currencyBalanceCashUsd:
                    type: string
                currencyBalanceCashReportingCurrency:
                    type: string
                targetCurrencyBalanceCash:
                    type: string
                targetCurrencyBalanceCashUsd:
                    type: string
                targetCurrencyBalanceCashReportingCurrency:
                    type: string
        api.backoffice.service.v1.OperatorTransferRequest:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                cashAmount:
                    type: string
        api.backoffice.service.v1.OperatorTransferResponse:
            type: object
            properties:
                operatorCash:
                    type: string
                operatorBalanceCurrency:
                    type: string
                targetOperatorCash:
                    type: string
                targetOperatorBalanceCurrency:
                    type: string
        api.backoffice.service.v1.PaymentData_Data:
            type: object
            properties:
                deposit:
                    type: string
                withdrawal:
                    type: string
        api.backoffice.service.v1.Permission:
            type: object
            properties:
                module:
                    type: string
                    description: 'module name: dashboard, game list, user list, etc.'
                actions:
                    type: array
                    items:
                        type: string
                    description: 'action name: read, write, delete, etc.'
        api.backoffice.service.v1.RegisterRequest:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                verificationCode:
                    type: string
                password:
                    type: string
                mobile:
                    type: string
        api.backoffice.service.v1.RegisterResponse:
            type: object
            properties:
                token:
                    type: string
        api.backoffice.service.v1.ResetPasswordRequest:
            type: object
            properties:
                email:
                    type: string
        api.backoffice.service.v1.ResetPasswordResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.ReviewTicketRequest:
            type: object
            properties:
                ticketId:
                    type: string
                action:
                    type: string
                reviewComment:
                    type: string
        api.backoffice.service.v1.ReviewTicketResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.Role:
            type: object
            properties:
                name:
                    type: string
                roleId:
                    type: string
                permissions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.Permission'
        api.backoffice.service.v1.SendEmailVerificationCodeRequest:
            type: object
            properties:
                email:
                    type: string
        api.backoffice.service.v1.SendEmailVerificationCodeResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.SendEmailVerificationRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.SendEmailVerificationResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.SendInvoicesRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.SendInvoicesResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.SendMobileVerificationRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.SendMobileVerificationResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.SendRegisterVerificationCodeRequest:
            type: object
            properties:
                email:
                    type: string
        api.backoffice.service.v1.SendRegisterVerificationCodeResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.SetOperatorTagsConfigRequest:
            type: object
            properties:
                operatorId:
                    type: string
                    description: The ID of the operator to set tag configuration for.
                followParent:
                    type: boolean
                    description: Whether to follow parent operator's tags.
            description: SetOperatorTagsConfigRequest contains the operator ID.
        api.backoffice.service.v1.SetOperatorTagsConfigResponse:
            type: object
            properties: {}
            description: SetOperatorTagsConfigResponse is an empty message indicating successful tag configuration.
        api.backoffice.service.v1.SetOperatorTagsRequest:
            type: object
            properties:
                operatorId:
                    type: string
                    description: The ID of the operator to add the tag to.
                tags:
                    type: array
                    items:
                        type: string
                    description: The tag to add to the operator.
            description: SetOperatorTagsRequest contains the operator ID and tag to add.
        api.backoffice.service.v1.SetOperatorTagsResponse:
            type: object
            properties: {}
            description: SetOperatorTagsResponse is an empty message indicating successful tag addition.
        api.backoffice.service.v1.SetUserTagsRequest:
            type: object
            properties:
                userId:
                    type: string
                tags:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.SetUserTagsResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.SystemCurrency:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                type:
                    type: string
                symbol:
                    type: string
                icon:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
                currencyDecimalPlaces:
                    type: integer
                    format: int32
        api.backoffice.service.v1.TimeRange:
            type: object
            properties:
                type:
                    type: string
                startTime:
                    type: string
                endTime:
                    type: string
        api.backoffice.service.v1.Unbind2faRequest:
            type: object
            properties:
                token:
                    type: string
        api.backoffice.service.v1.Unbind2faResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateAccountRequest:
            type: object
            properties:
                userId:
                    type: string
                enabled:
                    type: boolean
                roleId:
                    type: string
        api.backoffice.service.v1.UpdateAccountResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateAdjustmentConfigRequest:
            type: object
            properties:
                id:
                    type: string
                item:
                    type: string
                description:
                    type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.UpdateAdjustmentConfigResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateGameRequest:
            type: object
            properties:
                gameId:
                    type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.UpdateGameResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateOperatorBalanceRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.UpdateOperatorBalanceResponse:
            type: object
            properties:
                enabled:
                    type: boolean
        api.backoffice.service.v1.UpdateOperatorStatusRequest:
            type: object
            properties:
                targetOperatorId:
                    type: string
                targetOperatorType:
                    type: string
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                action:
                    type: string
        api.backoffice.service.v1.UpdateOperatorStatusResponse:
            type: object
            properties:
                status:
                    type: string
        api.backoffice.service.v1.UpdateProviderRequest:
            type: object
            properties:
                providerId:
                    type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.UpdateProviderResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateRoleRequest:
            type: object
            properties:
                roleId:
                    type: string
                name:
                    type: string
                permissions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.Permission'
        api.backoffice.service.v1.UpdateRoleResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateSystemCurrencyRequest:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                type:
                    type: string
                symbol:
                    type: string
                icon:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
                currencyDecimalPlaces:
                    type: integer
                    format: int32
        api.backoffice.service.v1.UpdateSystemCurrencyResponse:
            type: object
            properties:
                currency:
                    $ref: '#/components/schemas/api.backoffice.service.v1.SystemCurrency'
        api.backoffice.service.v1.UpdateUserRequest:
            type: object
            properties:
                userId:
                    type: string
                banLogin:
                    type: boolean
                banGame:
                    type: boolean
                banWithdraw:
                    type: boolean
        api.backoffice.service.v1.UpdateUserResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateWalletCurrencyRequest:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                type:
                    type: string
                symbol:
                    type: string
                icon:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
                currencyDecimalPlaces:
                    type: integer
                    format: int32
        api.backoffice.service.v1.UpdateWalletCurrencyResponse:
            type: object
            properties:
                currency:
                    $ref: '#/components/schemas/api.backoffice.service.v1.WalletCurrency'
        api.backoffice.service.v1.UpdateWalletRequest:
            type: object
            properties:
                userId:
                    type: string
                currency:
                    type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.UpdateWalletResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UploadOperatorStaticFileRequest:
            type: object
            properties:
                data:
                    type: string
                    format: bytes
                contentType:
                    type: string
                domain:
                    type: string
                filePath:
                    type: string
        api.backoffice.service.v1.UploadOperatorStaticFileResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.VerifyEmailRequest:
            type: object
            properties:
                token:
                    type: string
        api.backoffice.service.v1.VerifyEmailResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.VerifyMobileRequest:
            type: object
            properties:
                token:
                    type: string
        api.backoffice.service.v1.VerifyMobileResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.WalletCurrency:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                type:
                    type: string
                symbol:
                    type: string
                icon:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
        api.common.OperatorContext:
            type: object
            properties:
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                systemOperatorId:
                    type: string
                realOperatorId:
                    type: string
                operatorType:
                    type: string
        api.game.service.v1.Action:
            type: object
            properties:
                action:
                    type: string
                betId:
                    type: string
                txnId:
                    type: string
                extTxnId:
                    type: string
                updateBalance:
                    type: boolean
                takeAll:
                    type: boolean
                isRefund:
                    type: boolean
                amount:
                    type: string
                jackpotContribution:
                    type: string
                jackpotWin:
                    type: string
                betTime:
                    type: string
                settleTime:
                    type: string
                providerTimestamp:
                    type: string
        api.game.service.v1.BackofficeListGamesRequest:
            type: object
            properties:
                providerIds:
                    type: array
                    items:
                        type: string
                categories:
                    type: array
                    items:
                        type: string
                feeGroups:
                    type: array
                    items:
                        type: string
                gameId:
                    type: string
                gameTags:
                    type: array
                    items:
                        type: string
                themes:
                    type: array
                    items:
                        type: string
                supportBonusBuy:
                    type: boolean
                hasFreespins:
                    type: boolean
                supportCurrencies:
                    type: array
                    items:
                        type: string
                restrictedCountries:
                    type: array
                    items:
                        type: string
                rtpMin:
                    type: string
                rtpMax:
                    type: string
                enabled:
                    type: boolean
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.game.service.v1.BackofficeListGamesResponse:
            type: object
            properties:
                games:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.BackofficeListGamesResponse_Game'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
                totalEnabled:
                    type: integer
                    format: int32
                totalDisabled:
                    type: integer
                    format: int32
        api.game.service.v1.BackofficeListGamesResponse_Game:
            type: object
            properties:
                name:
                    type: string
                provider:
                    type: string
                id:
                    type: string
                category:
                    type: string
                theme:
                    type: string
                supportBonusBuy:
                    type: boolean
                hasFreespins:
                    type: boolean
                tags:
                    type: array
                    items:
                        type: string
                feeGroup:
                    type: string
                rate:
                    type: string
                rtp:
                    type: string
                validBetRate:
                    type: string
                supportCurrencies:
                    type: array
                    items:
                        type: string
                restrictedCountries:
                    type: array
                    items:
                        type: string
                enabled:
                    type: boolean
        api.game.service.v1.BalanceRequest:
            type: object
            properties:
                userId:
                    type: string
                currency:
                    type: string
                gameId:
                    type: string
                roundId:
                    type: string
                finished:
                    type: boolean
                sessionId:
                    type: string
        api.game.service.v1.BalanceResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/api.game.service.v1.BalanceResponse_Data'
        api.game.service.v1.BalanceResponse_Data:
            type: object
            properties:
                balance:
                    type: string
                bonus:
                    type: string
                roundId:
                    type: string
        api.game.service.v1.Bet:
            type: object
            properties:
                id:
                    type: string
                providerBetId:
                    type: string
                roundId:
                    type: string
                providerRoundId:
                    type: string
                providerId:
                    type: string
                providerName:
                    type: string
                operatorId:
                    type: string
                operatorName:
                    type: string
                currency:
                    type: string
                settlementCurrency:
                    type: string
                status:
                    type: string
                userId:
                    type: string
                gameId:
                    type: string
                gameName:
                    type: string
                gameCategory:
                    type: string
                winCount:
                    type: integer
                    format: int32
                betAmount:
                    type: string
                validBetAmount:
                    type: string
                settlementBetAmount:
                    type: string
                winAmount:
                    type: string
                settlementWinAmount:
                    type: string
                turnover:
                    type: string
                odds:
                    type: string
                rollbackBetAmount:
                    type: string
                rollbackWinAmount:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        api.game.service.v1.CreateSessionRequest:
            type: object
            properties:
                gameId:
                    type: string
                currency:
                    type: string
                settlementCurrency:
                    type: string
                locale:
                    type: string
                urls:
                    $ref: '#/components/schemas/api.game.service.v1.UrlInfo'
        api.game.service.v1.CreateSessionResponse:
            type: object
            properties:
                gameUrl:
                    type: string
        api.game.service.v1.GameFilter:
            type: object
            properties:
                providerIds:
                    type: array
                    items:
                        type: string
                    description: 'provider id: provider list api'
                tag:
                    type: string
                    description: 'tag: hot game, live casino, slots, etc..'
                name:
                    type: string
                    description: 'name: game name'
        api.game.service.v1.GameInfo:
            type: object
            properties:
                id:
                    type: string
                enabled:
                    type: boolean
                name:
                    type: string
                providerId:
                    type: string
                providerName:
                    type: string
                category:
                    type: string
                languages:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                theme:
                    type: string
                hasJackpot:
                    type: boolean
                jackpotType:
                    type: string
                forbidBonusPlay:
                    type: boolean
                hasFreespins:
                    type: boolean
                payout:
                    type: number
                    format: double
                hitRate:
                    type: number
                    format: double
                volatilityRating:
                    type: string
                lines:
                    type: integer
                    format: int32
                ways:
                    type: integer
                    format: int32
                description:
                    type: string
                multiplier:
                    type: number
                    format: double
                releasedAt:
                    type: string
                bonusBuy:
                    type: boolean
                restrictions:
                    type: string
        api.game.service.v1.GameSort:
            type: object
            properties:
                field:
                    enum:
                        - ASC
                        - DESC
                        - POPULARITY
                        - HIGHLIGHT
                    type: string
                    format: enum
        api.game.service.v1.GetGameRequest:
            type: object
            properties:
                gameId:
                    type: string
        api.game.service.v1.GetGameResponse:
            type: object
            properties:
                game:
                    $ref: '#/components/schemas/api.game.service.v1.GameInfo'
        api.game.service.v1.ListBetsRequest:
            type: object
            properties:
                operatorIds:
                    type: array
                    items:
                        type: string
                providerIds:
                    type: array
                    items:
                        type: string
                gameName:
                    type: string
                gameId:
                    type: string
                userId:
                    type: string
                operatorBetId:
                    type: string
                providerBetId:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                currencyWithRanges:
                    $ref: '#/components/schemas/api.game.service.v1.ListBetsRequest_CurrencyWithRange'
                settlementCurrencyWithRanges:
                    $ref: '#/components/schemas/api.game.service.v1.ListBetsRequest_CurrencyWithRange'
                settlementCurrencies:
                    $ref: '#/components/schemas/api.game.service.v1.ListBetsRequest_Currencies'
                categories:
                    type: array
                    items:
                        type: string
                status:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.game.service.v1.ListBetsRequest_Currencies:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
        api.game.service.v1.ListBetsRequest_CurrencyWithRange:
            type: object
            properties:
                currency:
                    type: string
                minBetAmount:
                    type: string
                maxBetAmount:
                    type: string
                minWinAmount:
                    type: string
                maxWinAmount:
                    type: string
        api.game.service.v1.ListBetsResponse:
            type: object
            properties:
                bets:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.Bet'
                turnover:
                    type: string
                winAmount:
                    type: string
                betCount:
                    type: integer
                    format: int32
                rtpPercentage:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.game.service.v1.ListCategoriesRequest:
            type: object
            properties:
                providerId:
                    type: string
        api.game.service.v1.ListCategoriesResponse:
            type: object
            properties:
                categories:
                    type: array
                    items:
                        type: string
        api.game.service.v1.ListGamesRequest:
            type: object
            properties:
                page:
                    type: integer
                    description: page number for pagination (starts from 1)
                    format: int32
                pageSize:
                    type: integer
                    description: page size for pagination
                    format: int32
                filter:
                    allOf:
                        - $ref: '#/components/schemas/api.game.service.v1.GameFilter'
                    description: filter
                sort:
                    allOf:
                        - $ref: '#/components/schemas/api.game.service.v1.GameSort'
                    description: sort
        api.game.service.v1.ListGamesResponse:
            type: object
            properties:
                gameIds:
                    type: array
                    items:
                        type: string
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.game.service.v1.ListProvidersRequest:
            type: object
            properties:
                providerId:
                    type: string
                    description: |-
                        Optional filter for provider's id.
                         If not provided, all providers will be returned.
                enabled:
                    type: boolean
                    description: |-
                        Optional filter for provider's enabled status.
                         If not provided, all providers will be returned.
                tag:
                    type: string
                    description: |-
                        Optional filter for game's tag.
                         If not provided, all providers will be returned.
                includeGameCount:
                    type: boolean
                    description: |-
                        Include game count in response, false by default.
                         Only enable it for ListProviders page which game_count is needed.
                paginationEnabled:
                    type: boolean
                    description: |-
                        Enable pagination, false by default.
                         Only enable it for ListProviders page.
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.game.service.v1.ListProvidersResponse:
            type: object
            properties:
                providers:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.ListProvidersResponse_Provider'
                total:
                    type: integer
                    format: int32
                totalEnabled:
                    type: integer
                    format: int32
                totalDisabled:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.game.service.v1.ListProvidersResponse_Provider:
            type: object
            properties:
                providerId:
                    type: string
                providerName:
                    type: string
                gameCount:
                    type: integer
                    description: Only available when include_game_count is true
                    format: int32
                enabled:
                    type: boolean
        api.game.service.v1.PlayRequest:
            type: object
            properties:
                userId:
                    type: string
                currency:
                    type: string
                gameId:
                    type: string
                roundId:
                    type: string
                finished:
                    type: boolean
                smResult:
                    type: string
                sessionId:
                    type: string
                actions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.Action'
        api.game.service.v1.PlayResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/api.game.service.v1.PlayResponse_Data'
        api.game.service.v1.PlayResponse_Data:
            type: object
            properties:
                balance:
                    type: string
                roundId:
                    type: string
                transactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.Transactions'
        api.game.service.v1.RollbackAction:
            type: object
            properties:
                action:
                    type: string
                betId:
                    type: string
                txnId:
                    type: string
                extTxnId:
                    type: string
                originalTxnId:
                    type: string
                originalExtTxnId:
                    type: string
                providerTimestamp:
                    type: string
        api.game.service.v1.RollbackRequest:
            type: object
            properties:
                userId:
                    type: string
                currency:
                    type: string
                gameId:
                    type: string
                roundId:
                    type: string
                finished:
                    type: boolean
                smResult:
                    type: string
                actions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.RollbackAction'
        api.game.service.v1.RollbackResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/api.game.service.v1.RollbackResponse_Data'
        api.game.service.v1.RollbackResponse_Data:
            type: object
            properties:
                balance:
                    type: string
                roundId:
                    type: string
                transactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.RollbackTransactions'
        api.game.service.v1.RollbackTransactions:
            type: object
            properties:
                txnId:
                    type: string
                operatorTxnId:
                    type: string
                processedAt:
                    type: string
        api.game.service.v1.Transactions:
            type: object
            properties:
                txn_id:
                    type: string
                operator_txn_id:
                    type: string
                processed_at:
                    type: number
                    format: double
                bonus_amount:
                    type: string
        api.game.service.v1.UrlInfo:
            type: object
            properties:
                returnUrl:
                    type: string
                    description: URL to redirect user after session is finished.
                depositUrl:
                    type: string
                    description: URL to redirect user to deposit.
                lobbyUrl:
                    type: string
                    description: URL to redirect user to lobby.
        api.review.service.v1.CreateWithdrawRequest:
            type: object
            properties:
                request:
                    type: object
        api.review.service.v1.CreateWithdrawResponse:
            type: object
            properties:
                ticketId:
                    type: string
        api.user.service.v1.AuthResponse:
            type: object
            properties:
                accessToken:
                    type: string
                    description: JWT access token for API authentication.
                refreshToken:
                    type: string
                    description: Refresh token for obtaining new access tokens.
                expiresIn:
                    type: string
                    description: Number of seconds until the access token expires.
                userInfo:
                    allOf:
                        - $ref: '#/components/schemas/api.user.service.v1.UserInfo'
                    description: Basic information about the authenticated user.
            description: AuthResponse contains the authentication tokens and user information.
        api.user.service.v1.GetUserRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: The userId of the user to retrieve.
            description: GetUserRequest contains the userId of the user to retrieve.
        api.user.service.v1.GetUserResponse:
            type: object
            properties:
                userInfo:
                    allOf:
                        - $ref: '#/components/schemas/api.user.service.v1.UserInfo'
                    description: Basic information about the requested user.
            description: GetUserResponse contains the requested user's information.
        api.user.service.v1.GetUserTagsRequest:
            type: object
            properties: {}
            description: GetUserTagsRequest retrieve tags for the current user.
        api.user.service.v1.GetUserTagsResponse:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        type: string
                    description: List of active tags associated with the user.
            description: GetUserTagsResponse contains the list of active tags associated with the user.
        api.user.service.v1.LoginRequest:
            type: object
            properties:
                passwordProvider:
                    enum:
                        - PASSWORD_PROVIDER_UNSPECIFIED
                        - PASSWORD_PROVIDER_USERNAME
                        - PASSWORD_PROVIDER_EMAIL
                        - PASSWORD_PROVIDER_MOBILE
                    type: string
                    description: The type of identity provider to use for login.
                    format: enum
                authId:
                    type: string
                    description: The identity (username, email, or mobile) to login with.
                password:
                    type: string
                    description: The password for the account.
            description: LoginRequest contains the credentials for user login.
        api.user.service.v1.LogoutRequest:
            type: object
            properties: {}
            description: LogoutRequest is an empty message for the logout operation.
        api.user.service.v1.LogoutResponse:
            type: object
            properties: {}
            description: LogoutResponse is an empty message for the logout operation.
        api.user.service.v1.OAuthRequest:
            type: object
            properties:
                oauthProvider:
                    enum:
                        - OAUTH_PROVIDER_UNSPECIFIED
                        - OAUTH_PROVIDER_GOOGLE
                        - OAUTH_PROVIDER_FACEBOOK
                        - OAUTH_PROVIDER_TWITTER
                    type: string
                    description: The OAuth provider to use for authentication.
                    format: enum
                token:
                    type: string
                    description: The OAuth token received from the provider.
            description: OAuthRequest contains the information needed for OAuth authentication.
        api.user.service.v1.RefreshTokenRequest:
            type: object
            properties:
                refreshToken:
                    type: string
                    description: The refresh token to use for obtaining a new access token.
            description: RefreshTokenRequest contains the refresh token for obtaining a new access token.
        api.user.service.v1.RefreshTokenResponse:
            type: object
            properties:
                accessToken:
                    type: string
                    description: JWT access token for API authentication.
                refreshToken:
                    type: string
                    description: Refresh token for obtaining new access tokens.
                expiresIn:
                    type: string
                    description: Number of seconds until the access token expires.
            description: RefreshTokenResponse contains the authentication tokens.
        api.user.service.v1.RegisterRequest:
            type: object
            properties:
                passwordProvider:
                    enum:
                        - PASSWORD_PROVIDER_UNSPECIFIED
                        - PASSWORD_PROVIDER_USERNAME
                        - PASSWORD_PROVIDER_EMAIL
                        - PASSWORD_PROVIDER_MOBILE
                    type: string
                    description: The type of identity provider to use for registration.
                    format: enum
                authId:
                    type: string
                    description: The identity (username, email, or mobile) to register with.
                password:
                    type: string
                    description: The password for the new account.
            description: RegisterRequest contains the information needed to register a new user.
        api.user.service.v1.SendEmailVerificationCodeRequest:
            type: object
            properties:
                email:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                userId:
                    type: string
        api.user.service.v1.SendEmailVerificationCodeResponse:
            type: object
            properties: {}
        api.user.service.v1.TelegramAuthRequest:
            type: object
            properties:
                id:
                    type: string
                    description: Telegram user Id.
                firstName:
                    type: string
                    description: User's first name.
                lastName:
                    type: string
                    description: User's last name.
                username:
                    type: string
                    description: Telegram username.
                photoUrl:
                    type: string
                    description: URL of the user's profile photo.
                authDate:
                    type: string
                    description: Unix timestamp when the authentication was performed.
                hash:
                    type: string
                    description: Hash for verifying the authentication data.
            description: TelegramAuthRequest contains the information from Telegram's login widget.
        api.user.service.v1.UserInfo:
            type: object
            properties:
                userId:
                    type: string
                    description: Unique identifier for the user.
                operatorId:
                    type: string
                    description: OperatorId in the operator hierarchy.
                companyOperatorId:
                    type: string
                    description: Company OperatorId in the operator hierarchy.
                retailerOperatorId:
                    type: string
                    description: Retailer OperatorId in the operator hierarchy.
                systemOperatorId:
                    type: string
                    description: System OperatorId in the operator hierarchy.
                username:
                    type: string
                    description: Username.
                email:
                    type: string
                    description: Email.
                mobile:
                    type: string
                    description: Mobile.
                enabled:
                    type: boolean
                    description: Whether the user is enabled.
                firstname:
                    type: string
                    description: First name.
                lastname:
                    type: string
                    description: Last name.
                nickname:
                    type: string
                    description: Nickname
                avatar:
                    type: string
                    description: Avatar
                banGame:
                    type: boolean
                    description: BanGame
                banWithdraw:
                    type: boolean
                    description: BanWithdraw
                roleId:
                    type: string
                    description: role id
            description: UserInfo contains basic user information.
        api.wallet.service.v1.Currency:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                type:
                    type: string
                symbol:
                    type: string
                icon:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
        api.wallet.service.v1.GetCurrenciesRequest:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
        api.wallet.service.v1.GetCurrenciesResponse:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.Currency'
        api.wallet.service.v1.GetUserBalancesRequest:
            type: object
            properties:
                userId:
                    type: string
        api.wallet.service.v1.GetUserBalancesResponse:
            type: object
            properties:
                balances:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.GetUserBalancesResponse_Balance'
        api.wallet.service.v1.GetUserBalancesResponse_Balance:
            type: object
            properties:
                currency:
                    type: string
                cash:
                    type: string
                operatorBonus:
                    type: string
                providerBonus:
                    type: string
        payment.service.v1.CreatePaymentChannelRequest:
            type: object
            properties:
                merchantId:
                    type: string
                    description: ID of the merchant creating this channel
                operatorContext:
                    allOf:
                        - $ref: '#/components/schemas/api.common.OperatorContext'
                    description: ID of the Operator connect with this channel
                paymentMethodId:
                    type: string
                    description: ID of the payment method to be used
                type:
                    type: string
                    description: Type of channel (e.g., deposit, withdrawal)
                contact:
                    type: string
                    description: Contact Info email
                pspFixedFee:
                    type: string
                    description: PSP Fixed Fee on the Amount
                pspFeeRate:
                    type: string
                    description: PSP Rate Fee
                userFixedFee:
                    type: string
                    description: User Fixed Fee on the Amount
                userFeeRate:
                    type: string
                    description: User Rate Fee
                minAmount:
                    type: string
                    description: Min Amount
                maxAmount:
                    type: string
                    description: Max Amount
                key:
                    type: object
                    description: Configuration fields for the payment channel in JSON format
            description: |-
                Request to create a payment channel
                 Used to create a new payment channel with specified merchant and method
        payment.service.v1.CreatePaymentChannelResponse:
            type: object
            properties:
                channelId:
                    type: string
                    description: Unique identifier for the created channel
            description: |-
                Response for channel creation
                 Returns the ID of the newly created payment channel
        payment.service.v1.CreatePaymentMethodRequest:
            type: object
            properties:
                operatorContext:
                    allOf:
                        - $ref: '#/components/schemas/api.common.OperatorContext'
                    description: ID of the Operator connect with this channel
                paymentMethodId:
                    type: string
                    description: ID of the payment method to be used
                currencyType:
                    type: string
                    description: Currency Type
                contact:
                    type: string
                    description: Contact Info email
                fixedFee:
                    type: string
                    description: Fixed Fee on the Amount
                feeRate:
                    type: string
                    description: Rate Fee
                minAmount:
                    type: string
                    description: Min Amount
                maxAmount:
                    type: string
                    description: Max Amount
                pspFixedFee:
                    type: string
                    description: PSP Fixed Fee on the Amount
                pspFeeRate:
                    type: string
                    description: PSP Rate Fee
                pspMinAmount:
                    type: string
                    description: PSP Min Amount
                pspMaxAmount:
                    type: string
                    description: PSP Max Amount
                key:
                    type: object
                    description: JSON schema defining the required fields for this payment method
            description: |-
                Request to create a payment channel
                 Used to create a new payment channel with specified merchant and method
        payment.service.v1.CreatePaymentMethodResponse:
            type: object
            properties:
                paymentMethod:
                    $ref: '#/components/schemas/payment.service.v1.PaymentMethodInfo'
        payment.service.v1.DepositCallbackRequest:
            type: object
            properties:
                transactionNo:
                    type: string
                    description: Transaction number from the payment aggregator
                gatewayOrderNo:
                    type: string
                    description: Order number from the payment gateway
                operatorOrderNo:
                    type: string
                    description: Transaction number from the operator
                orderStatus:
                    type: string
                    description: Current status of the order (e.g., SUCCESS, FAILED)
                payTime:
                    type: string
                    description: 'Time when payment was completed. Format: yyyy-MM-dd HH:mm:ss'
                createTime:
                    type: string
                    description: 'Time when order was created. Format: yyyy-MM-dd HH:mm:ss'
                amount:
                    type: string
                    description: Original amount of the order
                money:
                    type: string
                    description: Actual amount paid
                address:
                    type: string
                    description: Actual address
                sign:
                    type: string
                    description: HMAC-SHA256 signature to verify request authenticity
                timestamp:
                    type: string
                    description: Request timestamp to prevent replay attacks
                nonce:
                    type: string
                    description: Random string to ensure each request is unique
            description: |-
                Request for deposit callback
                 Used by payment gateways to notify about deposit status changes
        payment.service.v1.DepositCallbackResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Whether the callback was processed successfully
                message:
                    type: string
                    description: Optional message, returns error reason on failure
            description: |-
                Response for deposit callback
                 Confirms receipt of callback notification
        payment.service.v1.GetAddressRequest:
            type: object
            properties:
                channelId:
                    type: string
                    description: ID of the channel to use for this deposit
                extra:
                    type: object
                    description: |-
                        Additional information needed for the deposit
                         May include clientOrderId, productId, userInfo, etc.
            description: |-
                Request to get address
                 Used to get DC address
        payment.service.v1.GetAddressResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/payment.service.v1.GetAddressResponse_Data'
            description: |-
                Response for deposit initiation
                 Contains details about the initiated deposit transaction
        payment.service.v1.GetAddressResponse_Data:
            type: object
            properties:
                currency:
                    type: string
                    description: Crypto like btc, eth...
                protocol:
                    type: string
                    description: Crypto protocol
                network:
                    type: string
                    description: Crypto chain
                address:
                    type: string
                    description: Digital Currency address
        payment.service.v1.GetOperatorAddressResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/payment.service.v1.GetOperatorAddressResponse_Data'
            description: |-
                Response for deposit initiation
                 Contains details about the initiated deposit transaction
        payment.service.v1.GetOperatorAddressResponse_Data:
            type: object
            properties:
                currency:
                    type: string
                    description: Crypto like btc, eth...
                protocol:
                    type: string
                    description: Crypto protocol
                network:
                    type: string
                    description: Crypto chain
                address:
                    type: string
                    description: Digital Currency address
        payment.service.v1.GetPaymentChannelPageRequest:
            type: object
            properties:
                page:
                    type: integer
                    description: Page number to retrieve (1-based)
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                operatorId:
                    type: string
                    description: Optional operator ID filter
                type:
                    enum:
                        - CHANNEL_TYPE_ALL
                        - CHANNEL_TYPE_DEPOSIT
                        - CHANNEL_TYPE_WITHDRAW
                    type: string
                    description: Optional channel type filter
                    format: enum
                category:
                    type: string
                    description: Optional category filter
                paymentMethod:
                    type: string
                    description: Optional payment method filter
                currency:
                    type: string
                    description: Optional currency filter
                protocol:
                    type: string
                    description: Optional crypto protocol
                network:
                    type: string
                    description: Optional crypto network filter
                country:
                    type: string
                    description: Optional country filter
                source:
                    type: string
                    description: Source of operator type
                sort:
                    enum:
                        - DESC
                        - ASC
                    type: string
                    description: Optional sort direction
                    format: enum
            description: |-
                Request to get payment channel page
                 Used to retrieve a paginated list of payment channels with optional filters
        payment.service.v1.GetPaymentChannelPageResponse:
            type: object
            properties:
                paymentChannels:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.PaymentChannelInfo'
                    description: List of payment channels matching the filter criteria
                totalCount:
                    type: integer
                    description: Total number of channels matching the filter criteria
                    format: int32
                page:
                    type: integer
                    description: Current page number
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                totalPages:
                    type: integer
                    description: Total number of pages available
                    format: int32
                totalEnableColnt:
                    type: integer
                    format: int32
                totalDisableCount:
                    type: integer
                    format: int32
            description: |-
                Response for payment channel page
                 Contains paginated list of payment channels and pagination metadata
        payment.service.v1.GetPaymentMethodListRequest:
            type: object
            properties:
                currency:
                    type: string
                psp:
                    type: string
                search:
                    type: string
        payment.service.v1.GetPaymentMethodListResponse:
            type: object
            properties:
                paymentMethods:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.PaymentMethodInfo'
                    description: List of payment methods available
            description: |-
                Response for payment method list
                 Contains a list of all available payment methods
        payment.service.v1.GetSupportedPaymentMethodListRequest:
            type: object
            properties:
                currency:
                    type: array
                    items:
                        type: string
                    description: Currency code supported by this payment method (e.g., USD, EUR, CNY)
            description: |-
                Request to get payment method list
                 This message is used to retrieve all available payment methods
        payment.service.v1.GetSupportedPaymentMethodListResponse:
            type: object
            properties:
                paymentMethods:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.PaymentMethodInfo'
                    description: List of payment methods available
            description: |-
                Response for payment method list
                 Contains a list of all available payment methods
        payment.service.v1.GetTransactionDetailByIdRequest:
            type: object
            properties:
                transactionId:
                    type: string
                    description: Unique identifier for the transaction
                source:
                    enum:
                        - REQUEST_SOURCE_FRONTEND
                        - REQUEST_SOURCE_ADMIN
                    type: string
                    description: Source of the request (frontend or admin)
                    format: enum
            description: |-
                Request to get transaction detail by ID
                 Used to retrieve detailed information about a specific transaction
        payment.service.v1.GetTransactionDetailByIdResponse:
            type: object
            properties:
                detail:
                    allOf:
                        - $ref: '#/components/schemas/payment.service.v1.TransactionDetail'
                    description: Detailed transaction information including channel data
            description: |-
                Response for transaction detail
                 Contains detailed information about the requested transaction
        payment.service.v1.GetTransactionPageRequest:
            type: object
            properties:
                page:
                    type: integer
                    description: Page number to retrieve (1-based)
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                transactionId:
                    type: string
                    description: Optional transaction ID filter
                operatorId:
                    type: string
                    description: Optional operator ID filter
                currency:
                    type: string
                    description: Optional currency filter
                paymentMethod:
                    type: string
                    description: Optional payment method filter
                paymentChannel:
                    type: string
                    description: Optional payment channel filter
                protocol:
                    type: string
                    description: Optional crypto protocol filter
                network:
                    type: string
                    description: Optional crypto network filter
                type:
                    enum:
                        - TRANSACTION_TYPE_UNSPECIFIED
                        - TRANSACTION_TYPE_DEPOSIT
                        - TRANSACTION_TYPE_WITHDRAW
                    type: string
                    description: Optional transaction type filter
                    format: enum
                status:
                    enum:
                        - TRANSACTION_STATUS_UNSPECIFIED
                        - TRANSACTION_STATUS_PROCESSING
                        - TRANSACTION_STATUS_SUCCESSFUL
                        - TRANSACTION_STATUS_FAILED
                    type: string
                    description: Optional status filter
                    format: enum
                agent:
                    type: string
                    description: Optional agent filter
                startTime:
                    type: string
                    description: Optional start time for date range filter
                    format: date-time
                endTime:
                    type: string
                    description: Optional end time for date range filter
                    format: date-time
                sort:
                    enum:
                        - DESC
                        - ASC
                    type: string
                    description: Optional sort direction
                    format: enum
                source:
                    enum:
                        - REQUEST_SOURCE_FRONTEND
                        - REQUEST_SOURCE_ADMIN
                    type: string
                    description: Source of the request (frontend or admin)
                    format: enum
                userId:
                    type: string
                    description: Optional user ID filter
                minAmount:
                    type: string
                    description: Optional minimum amount filter
                maxAmount:
                    type: string
                    description: Optional maximum amount filter
            description: |-
                Request to get transaction page
                 Used to retrieve a paginated list of transactions with optional filters
        payment.service.v1.GetTransactionPageResponse:
            type: object
            properties:
                transactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.TransactionInfo'
                    description: List of transactions matching the filter criteria
                totalCount:
                    type: integer
                    description: Total number of transactions matching the filter criteria
                    format: int32
                page:
                    type: integer
                    description: Current page number
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                totalPages:
                    type: integer
                    description: Total number of pages available
                    format: int32
                totalSuccessful:
                    type: integer
                    description: |-
                        The following fields are only populated for admin requests
                         Total number of successful transactions
                    format: int32
                totalProcessing:
                    type: integer
                    description: Total number of processing transactions
                    format: int32
                totalFailed:
                    type: integer
                    description: Total number of failed transactions
                    format: int32
            description: |-
                Response for transaction page
                 Contains paginated list of transactions and pagination metadata
        payment.service.v1.InitiateDepositRequest:
            type: object
            properties:
                amount:
                    type: string
                    description: Amount to deposit in smallest currency unit (e.g., cents)
                currency:
                    type: string
                    description: Currency code for the transaction
                channelId:
                    type: string
                    description: ID of the channel to use for this deposit
                extra:
                    type: object
                    description: |-
                        Additional information needed for the deposit
                         May include clientOrderId, productId, userInfo, etc.
            description: |-
                Request to initiate a deposit
                 Used to start a deposit transaction
        payment.service.v1.InitiateDepositResponse:
            type: object
            properties:
                transactionId:
                    type: string
                    description: Unique identifier for the transaction
                amount:
                    type: string
                    description: Amount to be deposited in smallest currency unit
                currency:
                    type: string
                    description: Currency code for the transaction
                status:
                    type: string
                    description: Current status of the transaction
                payUrl:
                    type: string
                    description: URL to direct the user to for payment completion
                qrCode:
                    type: string
                    description: QR code image (typically base64 encoded) for mobile payment
                createdAt:
                    type: string
                    description: Timestamp when the transaction was created
                    format: date-time
                extra:
                    type: object
                    description: Additional transaction information returned by payment provider
            description: |-
                Response for deposit initiation
                 Contains details about the initiated deposit transaction
        payment.service.v1.PaymentChannelInfo:
            type: object
            properties:
                channelId:
                    type: string
                    description: Unique identifier for the channel
                type:
                    type: string
                    description: Type of the channel (e.g., online, offline)
                currencyType:
                    type: string
                    description: Currency type (e.g., Crypto, Fiat)
                psp:
                    type: string
                    description: Services Prvider
                category:
                    type: string
                    description: Category of the channel (e.g., bank, e-wallet)
                operatorId:
                    type: string
                    description: ID of the operator who owns this channel
                paymentMethod:
                    type: string
                    description: Payment method used in this channel
                tag:
                    type: string
                    description: Tag for categorization or filtering
                name:
                    type: string
                    description: Display name of the channel
                paymentMethodId:
                    type: string
                    description: ID of the payment method used
                currency:
                    type: string
                    description: Currency supported by this channel
                protocol:
                    type: string
                    description: Crypto protocol supported by this channel
                network:
                    type: string
                    description: Crypto chian supported by this channel
                country:
                    type: string
                    description: Country where this channel is available
                method:
                    type: string
                    description: Specific method used (might be more detailed than payment_method)
                logo:
                    type: string
                    description: URL to the logo image for this payment channel
                minAmount:
                    type: string
                    description: Minimum amount allowed for deposit transactions
                maxAmount:
                    type: string
                    description: Maximum amount allowed for deposit transactions
                fixedFee:
                    type: string
                    description: Fixed Fee on the Amount
                feeRate:
                    type: string
                    description: Rate Fee
                minFee:
                    type: string
                    description: Minimum Fee
                eat:
                    type: integer
                    description: Estimated arrival time in minutes
                    format: int32
                schema:
                    type: object
                    description: JSON schema defining deposit form fields required by this channel
                source:
                    type: string
                sourceType:
                    type: string
                enable:
                    type: boolean
                contact:
                    type: string
            description: |-
                Payment channel information
                 Detailed information about a specific payment channel
        payment.service.v1.PaymentMethodInfo:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for the payment method
                psp:
                    type: string
                    description: Currency code supported by this payment method (e.g., USD, EUR, CNY)
                type:
                    type: string
                currency:
                    type: string
                currencyType:
                    type: string
                contact:
                    type: string
                country:
                    type: string
                    description: Country code where this payment method is available
                paymentMethod:
                    type: string
                    description: Name of the payment method (e.g., CreditCard, AliPay, WeChatPay)
                fixedFee:
                    type: string
                    description: Fixed Fee on the Amount
                feeRate:
                    type: string
                    description: Rate Fee
                minAmount:
                    type: string
                    description: Min Amount
                maxAmount:
                    type: string
                    description: Max Amount
                pspFixedFee:
                    type: string
                    description: Fixed Fee on the Amount
                pspFeeRate:
                    type: string
                    description: Rate Fee
                pspMinAmount:
                    type: string
                    description: Min Amount
                pspMaxAmount:
                    type: string
                    description: Max Amount
                enable:
                    type: boolean
                network:
                    type: string
                protocol:
                    type: string
                minFee:
                    type: string
                source:
                    type: string
                keySchema:
                    type: object
                    description: JSON schema defining the required fields for this payment method
            description: |-
                Details of a single payment method
                 Contains information about a specific payment method including its ID, currency, and required fields schema
        payment.service.v1.TransactionDetail:
            type: object
            properties:
                transaction:
                    allOf:
                        - $ref: '#/components/schemas/payment.service.v1.TransactionInfo'
                    description: Transaction information
                channel:
                    allOf:
                        - $ref: '#/components/schemas/payment.service.v1.PaymentChannelInfo'
                    description: Channel information
        payment.service.v1.TransactionInfo:
            type: object
            properties:
                transactionId:
                    type: string
                    description: Unique identifier for the transaction
                paTransactionId:
                    type: string
                    description: Transaction ID from the operator's system
                gatewayTransactionId:
                    type: string
                    description: Transaction ID from the payment gateway
                operatorId:
                    type: string
                    description: Operator ID associated with the transaction
                userId:
                    type: string
                    description: ID of the user who initiated the transaction
                vip:
                    type: integer
                    description: VIP level of the user
                    format: int32
                amount:
                    type: string
                    description: Transaction amount in smallest currency unit
                currency:
                    type: string
                    description: Currency code for the transaction
                fee:
                    type: string
                    description: Transaction fee in smallest currency unit
                paymentMethod:
                    type: string
                    description: Payment method used for the transaction
                paymentChannel:
                    type: string
                    description: Payment channel used for the transaction
                protocol:
                    type: string
                    description: Crypto Protocol used for the transaction
                network:
                    type: string
                    description: Crypto Network used for the transaction
                address:
                    type: string
                    description: Crypto Address
                type:
                    enum:
                        - TRANSACTION_TYPE_UNSPECIFIED
                        - TRANSACTION_TYPE_DEPOSIT
                        - TRANSACTION_TYPE_WITHDRAW
                    type: string
                    description: Type of transaction (deposit or withdrawal)
                    format: enum
                status:
                    enum:
                        - TRANSACTION_STATUS_UNSPECIFIED
                        - TRANSACTION_STATUS_PROCESSING
                        - TRANSACTION_STATUS_SUCCESSFUL
                        - TRANSACTION_STATUS_FAILED
                    type: string
                    description: Current status of the transaction
                    format: enum
                createdAt:
                    type: string
                    description: Timestamp when the transaction was created
                    format: date-time
                updatedAt:
                    type: string
                    description: Timestamp when the transaction was last updated
                    format: date-time
            description: |-
                Transaction information
                 Detailed information about a specific transaction
        payment.service.v1.UpdatePaymentChannelRequest:
            type: object
            properties:
                paymentChannelId:
                    type: string
                    description: ID of the payment channel to be used
                merchantId:
                    type: string
                    description: ID of the merchant creating this channel
                contact:
                    type: string
                    description: Contact Info email
                pspFixedFee:
                    type: string
                    description: PSP Fixed Fee on the Amount
                pspFeeRate:
                    type: string
                    description: PSP Rate Fee
                userFixedFee:
                    type: string
                    description: User Fixed Fee on the Amount
                userFeeRate:
                    type: string
                    description: User Rate Fee
                minAmount:
                    type: string
                    description: Min Amount
                maxAmount:
                    type: string
                    description: Max Amount
                enable:
                    type: boolean
                    description: enable status
                key:
                    type: object
                    description: Configuration fields for the payment channel in JSON format
            description: |-
                Request to create a payment channel
                 Used to create a new payment channel with specified merchant and method
        payment.service.v1.UpdatePaymentChannelResponse:
            type: object
            properties:
                paymentMethods:
                    $ref: '#/components/schemas/payment.service.v1.PaymentMethodInfo'
        payment.service.v1.UpdatePaymentMethodRequest:
            type: object
            properties:
                paymentMethodId:
                    type: string
                status:
                    type: boolean
        payment.service.v1.WithdrawCallbackRequest:
            type: object
            properties:
                transactionNo:
                    type: string
                    description: Transaction number from the payment aggregator
                gatewayOrderNo:
                    type: string
                    description: Order number from the payment gateway
                operatorOrderNo:
                    type: string
                    description: Transaction number from the operator
                orderStatus:
                    type: string
                    description: Current status of the order (e.g., SUCCESS, FAILED)
                payTime:
                    type: string
                    description: 'Time when withdrawal was processed. Format: yyyy-MM-dd HH:mm:ss'
                createTime:
                    type: string
                    description: 'Time when order was created. Format: yyyy-MM-dd HH:mm:ss'
                amount:
                    type: string
                    description: Original amount of the withdrawal order
                fee:
                    type: string
                    description: Service fee applied to the withdrawal
                realMoney:
                    type: string
                    description: Actual amount withdrawn after fees
                sign:
                    type: string
                    description: HMAC-SHA256 signature to verify request authenticity
                timestamp:
                    type: string
                    description: Request timestamp to prevent replay attacks
                nonce:
                    type: string
                    description: Random string to ensure each request is unique
            description: |-
                Request for withdraw callback
                 Used by payment gateways to notify about withdrawal status changes
        payment.service.v1.WithdrawCallbackResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Whether the callback was processed successfully
                message:
                    type: string
                    description: Optional message, returns error reason on failure
            description: |-
                Response for withdraw callback
                 Confirms receipt of callback notification
tags:
    - name: BackofficeAccount
    - name: BackofficeAudit
    - name: BackofficeCompany
    - name: BackofficeDashboard
    - name: BackofficeFileStore
    - name: BackofficeFinance
    - name: BackofficeGame
    - name: BackofficeOperator
    - name: BackofficePayment
      description: |-
        BackofficePayment service
         Provides methods for backoffice payment management
    - name: BackofficeReport
    - name: BackofficeReview
    - name: BackofficeSystem
    - name: BackofficeUser
    - name: BackofficeWallet
    - name: Game
    - name: Payment
      description: |-
        Payment Service
         Provides methods for managing payment methods, channels, and transactions
    - name: Review
      description: Review service provides review functionality.
    - name: User
      description: User service provides authentication and user management functionality.
    - name: Wallet
