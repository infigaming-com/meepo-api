# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/payment/channel/create:
        post:
            tags:
                - Payment
            description: Create payment channel
            operationId: Payment_CreatePaymentChannel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.CreatePaymentChannelRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.CreatePaymentChannelResponse'
    /api/payment/channel/list:
        post:
            tags:
                - Payment
            description: Get list of payment channels
            operationId: Payment_GetPaymentChannelList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetPaymentChannelListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetPaymentChannelListResponse'
    /api/payment/method/list:
        post:
            tags:
                - Payment
            description: Get list of payment methods
            operationId: Payment_GetPaymentMethodList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetPaymentMethodListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetPaymentMethodListResponse'
    /v1/operator/add:
        post:
            tags:
                - Operator
            operationId: Operator_AddOperator
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.operator.service.v1.AddOperatorRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.operator.service.v1.AddOperatorResponse'
    /v1/operator/update:
        post:
            tags:
                - Operator
            operationId: Operator_UpdateOperator
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.operator.service.v1.UpdateOperatorRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.operator.service.v1.UpdateOperatorResponse'
    /v1/system/currencies/add:
        post:
            tags:
                - System
            operationId: System_AddCurrency
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/system.service.v1.AddCurrencyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.AddCurrencyResponse'
    /v1/system/currencies/get:
        post:
            tags:
                - System
            operationId: System_GetCurrencies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/system.service.v1.GetCurrenciesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.GetCurrenciesResponse'
    /v1/system/currencies/list:
        post:
            tags:
                - System
            operationId: System_ListCurrencies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/system.service.v1.ListCurrenciesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.ListCurrenciesResponse'
    /v1/system/healthcheck:
        get:
            tags:
                - System
            operationId: System_HealthCheck
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.HealthCheckResponse'
    /v1/user/auth/login:
        post:
            tags:
                - User
            description: |-
                Login an existing user with password-based authentication.
                 Users can login using their registered credentials.
            operationId: User_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/logout:
        post:
            tags:
                - User
            description: |-
                Logout the current user.
                 Invalidates the current session and refresh token.
            operationId: User_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.LogoutResponse'
    /v1/user/auth/oauth:
        post:
            tags:
                - User
            description: |-
                Register or login using OAuth provider.
                 Supports multiple OAuth providers like Google, Facebook, and Twitter.
            operationId: User_RegisterOrLoginWithOAuth
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.OAuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/refresh:
        post:
            tags:
                - User
            description: |-
                Refresh the access token using a refresh token.
                 Used to obtain a new access token when the current one expires.
            operationId: User_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.RefreshTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.RefreshTokenResponse'
    /v1/user/auth/register:
        post:
            tags:
                - User
            description: |-
                Register a new user with password-based authentication.
                 This endpoint allows users to create a new account using various identity providers.
            operationId: User_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/telegram:
        post:
            tags:
                - User
            description: |-
                Register or login using Telegram authentication.
                 Uses Telegram's login widget for authentication.
            operationId: User_RegisterOrLoginWithTelegram
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.TelegramAuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/get:
        post:
            tags:
                - User
            description: |-
                Get user information by user ID.
                 Returns basic user information for the specified user.
            operationId: User_GetUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.GetUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetUserResponse'
    /v1/wallet/balance/{userId}:
        get:
            tags:
                - Wallet
            operationId: Wallet_GetUserBalance
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetUserBalanceResponse'
    /v1/wallet/healthcheck:
        get:
            tags:
                - Wallet
            operationId: Wallet_HealthCheck
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.HealthCheckResponse'
components:
    schemas:
        api.operator.service.v1.AddOperatorRequest:
            type: object
            properties:
                externalId:
                    type: string
                    description: operator id allocated by game aggregator
                userId:
                    type: string
                    description: user id who owns the operator
                name:
                    type: string
                    description: operator name
                apiKey:
                    type: string
                    description: api key
                apiKeySecret:
                    type: string
                    description: api key secret
        api.operator.service.v1.AddOperatorResponse:
            type: object
            properties:
                id:
                    type: string
                    description: operator id allocated by operator service
        api.operator.service.v1.UpdateOperatorRequest:
            type: object
            properties:
                id:
                    type: string
                    description: operator id allocated by operator service
                name:
                    type: string
                    description: operator name
                enabled:
                    type: boolean
                    description: enabled
                apiKey:
                    type: string
                    description: api key
                apiKeySecret:
                    type: string
                    description: api key secret
        api.operator.service.v1.UpdateOperatorResponse:
            type: object
            properties: {}
        api.user.service.v1.AuthResponse:
            type: object
            properties:
                accessToken:
                    type: string
                    description: JWT access token for API authentication.
                refreshToken:
                    type: string
                    description: Refresh token for obtaining new access tokens.
                expiresIn:
                    type: string
                    description: Number of seconds until the access token expires.
                userInfo:
                    allOf:
                        - $ref: '#/components/schemas/api.user.service.v1.UserInfo'
                    description: Basic information about the authenticated user.
            description: AuthResponse contains the authentication tokens and user information.
        api.user.service.v1.GetUserRequest:
            type: object
            properties:
                id:
                    type: string
                    description: The ID of the user to retrieve.
            description: GetUserRequest contains the ID of the user to retrieve.
        api.user.service.v1.GetUserResponse:
            type: object
            properties:
                userInfo:
                    allOf:
                        - $ref: '#/components/schemas/api.user.service.v1.UserInfo'
                    description: Basic information about the requested user.
            description: GetUserResponse contains the requested user's information.
        api.user.service.v1.LoginRequest:
            type: object
            properties:
                passwordProvider:
                    enum:
                        - PASSWORD_PROVIDER_UNSPECIFIED
                        - PASSWORD_PROVIDER_USERNAME
                        - PASSWORD_PROVIDER_EMAIL
                        - PASSWORD_PROVIDER_MOBILE
                    type: string
                    description: The type of identity provider to use for login.
                    format: enum
                authId:
                    type: string
                    description: The identity (username, email, or mobile) to login with.
                password:
                    type: string
                    description: The password for the account.
            description: LoginRequest contains the credentials for user login.
        api.user.service.v1.LogoutRequest:
            type: object
            properties: {}
            description: LogoutRequest is an empty message for the logout operation.
        api.user.service.v1.LogoutResponse:
            type: object
            properties: {}
            description: LogoutResponse is an empty message for the logout operation.
        api.user.service.v1.OAuthRequest:
            type: object
            properties:
                oauthProvider:
                    enum:
                        - OAUTH_PROVIDER_UNSPECIFIED
                        - OAUTH_PROVIDER_GOOGLE
                        - OAUTH_PROVIDER_FACEBOOK
                        - OAUTH_PROVIDER_TWITTER
                    type: string
                    description: The OAuth provider to use for authentication.
                    format: enum
                token:
                    type: string
                    description: The OAuth token received from the provider.
            description: OAuthRequest contains the information needed for OAuth authentication.
        api.user.service.v1.RefreshTokenRequest:
            type: object
            properties:
                refreshToken:
                    type: string
                    description: The refresh token to use for obtaining a new access token.
            description: RefreshTokenRequest contains the refresh token for obtaining a new access token.
        api.user.service.v1.RefreshTokenResponse:
            type: object
            properties:
                accessToken:
                    type: string
                    description: JWT access token for API authentication.
                refreshToken:
                    type: string
                    description: Refresh token for obtaining new access tokens.
                expiresIn:
                    type: string
                    description: Number of seconds until the access token expires.
            description: RefreshTokenResponse contains the authentication tokens.
        api.user.service.v1.RegisterRequest:
            type: object
            properties:
                passwordProvider:
                    enum:
                        - PASSWORD_PROVIDER_UNSPECIFIED
                        - PASSWORD_PROVIDER_USERNAME
                        - PASSWORD_PROVIDER_EMAIL
                        - PASSWORD_PROVIDER_MOBILE
                    type: string
                    description: The type of identity provider to use for registration.
                    format: enum
                authId:
                    type: string
                    description: The identity (username, email, or mobile) to register with.
                password:
                    type: string
                    description: The password for the new account.
            description: RegisterRequest contains the information needed to register a new user.
        api.user.service.v1.TelegramAuthRequest:
            type: object
            properties:
                id:
                    type: string
                    description: Telegram user ID.
                firstName:
                    type: string
                    description: User's first name.
                lastName:
                    type: string
                    description: User's last name.
                username:
                    type: string
                    description: Telegram username.
                photoUrl:
                    type: string
                    description: URL of the user's profile photo.
                authDate:
                    type: string
                    description: Unix timestamp when the authentication was performed.
                hash:
                    type: string
                    description: Hash for verifying the authentication data.
            description: TelegramAuthRequest contains the information from Telegram's login widget.
        api.user.service.v1.UserInfo:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for the user.
            description: UserInfo contains basic user information.
        api.wallet.service.v1.GetUserBalanceResponse:
            type: object
            properties:
                cash:
                    type: string
                operatorBonus:
                    type: string
                providerBonus:
                    type: string
        api.wallet.service.v1.HealthCheckResponse:
            type: object
            properties:
                status:
                    type: string
        google.protobuf.Value:
            description: Represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values.
        payment.service.v1.ChannelData:
            type: object
            properties:
                channelId:
                    type: string
            description: Channel data structure
        payment.service.v1.CreatePaymentChannelRequest:
            type: object
            properties:
                merchantId:
                    type: string
                paymentMethodId:
                    type: string
                key:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/google.protobuf.Value'
            description: Request to create a payment channel
        payment.service.v1.CreatePaymentChannelResponse:
            type: object
            properties:
                msg:
                    type: string
                code:
                    type: integer
                    format: int32
                data:
                    $ref: '#/components/schemas/payment.service.v1.ChannelData'
            description: Response for channel creation
        payment.service.v1.GetPaymentChannelListRequest:
            type: object
            properties:
                merchantId:
                    type: string
            description: Request to get payment channel list
        payment.service.v1.GetPaymentChannelListResponse:
            type: object
            properties:
                msg:
                    type: string
                code:
                    type: integer
                    format: int32
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.PaymentChannelInfo'
            description: Response for payment channel list
        payment.service.v1.GetPaymentMethodListRequest:
            type: object
            properties: {}
            description: Request to get payment method list
        payment.service.v1.GetPaymentMethodListResponse:
            type: object
            properties:
                msg:
                    type: string
                code:
                    type: integer
                    format: int32
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.PaymentMethodInfo'
            description: Response for payment method list
        payment.service.v1.PaymentChannelInfo:
            type: object
            properties:
                channelId:
                    type: string
                merchantId:
                    type: string
                paymentMethodId:
                    type: string
                paymentMethod:
                    type: string
                currency:
                    type: string
                country:
                    type: string
                status:
                    type: integer
                    format: int32
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
            description: Payment channel information
        payment.service.v1.PaymentMethodInfo:
            type: object
            properties:
                id:
                    type: string
                currency:
                    type: string
                country:
                    type: string
                paymentMethod:
                    type: string
                keySchema:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/google.protobuf.Value'
            description: Details of a single payment method
        system.service.v1.AddCurrencyRequest:
            type: object
            properties:
                currency:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
        system.service.v1.AddCurrencyResponse:
            type: object
            properties:
                currency:
                    $ref: '#/components/schemas/system.service.v1.Currency'
        system.service.v1.Currency:
            type: object
            properties:
                currency:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
        system.service.v1.GetCurrenciesRequest:
            type: object
            properties:
                currency:
                    type: string
        system.service.v1.GetCurrenciesResponse:
            type: object
            properties:
                currencies:
                    $ref: '#/components/schemas/system.service.v1.Currency'
        system.service.v1.HealthCheckResponse:
            type: object
            properties:
                status:
                    type: string
        system.service.v1.ListCurrenciesRequest:
            type: object
            properties: {}
        system.service.v1.ListCurrenciesResponse:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        $ref: '#/components/schemas/system.service.v1.Currency'
tags:
    - name: Operator
      description: User service provides authentication and user management functionality.
    - name: Payment
    - name: System
    - name: User
      description: User service provides authentication and user management functionality.
    - name: Wallet
