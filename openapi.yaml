# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/games/create-session:
        post:
            tags:
                - Game
            operationId: Game_CreateSession
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/game.service.v1.CreateSessionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/game.service.v1.CreateSessionResponse'
    /v1/games/list:
        post:
            tags:
                - Game
            operationId: Game_ListGames
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/game.service.v1.ListGamesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/game.service.v1.ListGamesResponse'
    /v1/operator/add:
        post:
            tags:
                - Operator
            operationId: Operator_AddOperator
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.operator.service.v1.AddOperatorRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.operator.service.v1.AddOperatorResponse'
    /v1/operator/currencies/get:
        post:
            tags:
                - Operator
            operationId: Operator_GetOperatorCurrencies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.operator.service.v1.GetOperatorCurrenciesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.operator.service.v1.GetOperatorCurrenciesResponse'
    /v1/operator/currencies/update:
        post:
            tags:
                - Operator
            operationId: Operator_UpdateOperatorCurrency
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.operator.service.v1.UpdateOperatorCurrencyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.operator.service.v1.UpdateOperatorCurrencyResponse'
    /v1/operator/update:
        post:
            tags:
                - Operator
            operationId: Operator_UpdateOperator
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.operator.service.v1.UpdateOperatorRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.operator.service.v1.UpdateOperatorResponse'
    /v1/payment/channel/create:
        post:
            tags:
                - Payment
            description: Create payment channel
            operationId: Payment_CreatePaymentChannel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.CreatePaymentChannelRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.CreatePaymentChannelResponse'
    /v1/payment/channel/list:
        post:
            tags:
                - Payment
            description: Get list of payment channels
            operationId: Payment_GetPaymentChannelList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetPaymentChannelListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetPaymentChannelListResponse'
    /v1/payment/deposit/callback:
        post:
            tags:
                - Payment
            description: |-
                Deposit callback
                 This endpoint handles callbacks from payment gateways.
            operationId: Payment_DepositCallback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.DepositCallbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.DepositCallbackResponse'
    /v1/payment/deposit/initiate:
        post:
            tags:
                - Payment
            description: Initiate a deposit transaction
            operationId: Payment_InitiateDeposit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.InitiateDepositRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.InitiateDepositResponse'
    /v1/payment/method/list:
        post:
            tags:
                - Payment
            description: Get list of payment methods
            operationId: Payment_GetPaymentMethodList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetPaymentMethodListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetPaymentMethodListResponse'
    /v1/payment/withdraw/initiate:
        post:
            tags:
                - Payment
            description: Initiate a withdrawal transaction
            operationId: Payment_InitiateWithdraw
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.InitiateWithdrawRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.InitiateWithdrawResponse'
    /v1/system/currencies/add:
        post:
            tags:
                - System
            operationId: System_AddCurrency
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/system.service.v1.AddCurrencyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.AddCurrencyResponse'
    /v1/system/currencies/get:
        post:
            tags:
                - System
            operationId: System_GetCurrencies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/system.service.v1.GetCurrenciesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.GetCurrenciesResponse'
    /v1/system/currencies/update:
        post:
            tags:
                - System
            operationId: System_UpdateCurrency
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/system.service.v1.UpdateCurrencyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.UpdateCurrencyResponse'
    /v1/user/auth/login:
        post:
            tags:
                - User
            description: |-
                Login an existing user with password-based authentication.
                 Users can login using their registered credentials.
            operationId: User_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/logout:
        post:
            tags:
                - User
            description: |-
                Logout the current user.
                 Invalidates the current session and refresh token.
            operationId: User_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.LogoutResponse'
    /v1/user/auth/oauth:
        post:
            tags:
                - User
            description: |-
                Register or login using OAuth provider.
                 Supports multiple OAuth providers like Google, Facebook, and Twitter.
            operationId: User_RegisterOrLoginWithOAuth
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.OAuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/refresh:
        post:
            tags:
                - User
            description: |-
                Refresh the access token using a refresh token.
                 Used to obtain a new access token when the current one expires.
            operationId: User_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.RefreshTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.RefreshTokenResponse'
    /v1/user/auth/register:
        post:
            tags:
                - User
            description: |-
                Register a new user with password-based authentication.
                 This endpoint allows users to create a new account using various identity providers.
            operationId: User_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/telegram:
        post:
            tags:
                - User
            description: |-
                Register or login using Telegram authentication.
                 Uses Telegram's login widget for authentication.
            operationId: User_RegisterOrLoginWithTelegram
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.TelegramAuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/get:
        post:
            tags:
                - User
            description: |-
                Get user information by user ID.
                 Returns basic user information for the specified user.
            operationId: User_GetUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.GetUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetUserResponse'
    /v1/wallet/balances/get:
        post:
            tags:
                - Wallet
            operationId: Wallet_GetUserBalances
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.GetUserBalancesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetUserBalancesResponse'
    /v1/wallet/currencies/update:
        post:
            tags:
                - Wallet
            operationId: Wallet_UpdateUserCurrency
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.UpdateUserCurrencyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.UpdateUserCurrencyResponse'
components:
    schemas:
        api.operator.service.v1.AddOperatorRequest:
            type: object
            properties:
                name:
                    type: string
                    description: operator name
                userId:
                    type: string
                    description: user id who creates the operator
        api.operator.service.v1.AddOperatorResponse:
            type: object
            properties:
                operatorId:
                    type: string
                    description: operator id allocated by operator service
        api.operator.service.v1.GetOperatorCurrenciesRequest:
            type: object
            properties:
                operatorId:
                    type: string
                currencies:
                    type: array
                    items:
                        type: string
                    description: |-
                        Filter to return specific currencies only.
                         If empty or not provided, all currencies will be returned
        api.operator.service.v1.GetOperatorCurrenciesResponse:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.operator.service.v1.GetOperatorCurrenciesResponse_Currency'
        api.operator.service.v1.GetOperatorCurrenciesResponse_Currency:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
        api.operator.service.v1.UpdateOperatorCurrencyRequest:
            type: object
            properties:
                operatorId:
                    type: string
                currency:
                    type: string
                enabled:
                    type: boolean
        api.operator.service.v1.UpdateOperatorCurrencyResponse:
            type: object
            properties: {}
        api.operator.service.v1.UpdateOperatorRequest:
            type: object
            properties:
                operatorId:
                    type: string
                    description: operator id allocated by operator service
                enabled:
                    type: boolean
                    description: enabled
        api.operator.service.v1.UpdateOperatorResponse:
            type: object
            properties: {}
        api.user.service.v1.AuthResponse:
            type: object
            properties:
                accessToken:
                    type: string
                    description: JWT access token for API authentication.
                refreshToken:
                    type: string
                    description: Refresh token for obtaining new access tokens.
                expiresIn:
                    type: string
                    description: Number of seconds until the access token expires.
                userInfo:
                    allOf:
                        - $ref: '#/components/schemas/api.user.service.v1.UserInfo'
                    description: Basic information about the authenticated user.
            description: AuthResponse contains the authentication tokens and user information.
        api.user.service.v1.GetUserRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: The ID of the user to retrieve.
            description: GetUserRequest contains the ID of the user to retrieve.
        api.user.service.v1.GetUserResponse:
            type: object
            properties:
                userInfo:
                    allOf:
                        - $ref: '#/components/schemas/api.user.service.v1.UserInfo'
                    description: Basic information about the requested user.
            description: GetUserResponse contains the requested user's information.
        api.user.service.v1.LoginRequest:
            type: object
            properties:
                passwordProvider:
                    enum:
                        - PASSWORD_PROVIDER_UNSPECIFIED
                        - PASSWORD_PROVIDER_USERNAME
                        - PASSWORD_PROVIDER_EMAIL
                        - PASSWORD_PROVIDER_MOBILE
                    type: string
                    description: The type of identity provider to use for login.
                    format: enum
                authId:
                    type: string
                    description: The identity (username, email, or mobile) to login with.
                password:
                    type: string
                    description: The password for the account.
            description: LoginRequest contains the credentials for user login.
        api.user.service.v1.LogoutRequest:
            type: object
            properties: {}
            description: LogoutRequest is an empty message for the logout operation.
        api.user.service.v1.LogoutResponse:
            type: object
            properties: {}
            description: LogoutResponse is an empty message for the logout operation.
        api.user.service.v1.OAuthRequest:
            type: object
            properties:
                oauthProvider:
                    enum:
                        - OAUTH_PROVIDER_UNSPECIFIED
                        - OAUTH_PROVIDER_GOOGLE
                        - OAUTH_PROVIDER_FACEBOOK
                        - OAUTH_PROVIDER_TWITTER
                    type: string
                    description: The OAuth provider to use for authentication.
                    format: enum
                token:
                    type: string
                    description: The OAuth token received from the provider.
            description: OAuthRequest contains the information needed for OAuth authentication.
        api.user.service.v1.RefreshTokenRequest:
            type: object
            properties:
                refreshToken:
                    type: string
                    description: The refresh token to use for obtaining a new access token.
            description: RefreshTokenRequest contains the refresh token for obtaining a new access token.
        api.user.service.v1.RefreshTokenResponse:
            type: object
            properties:
                accessToken:
                    type: string
                    description: JWT access token for API authentication.
                refreshToken:
                    type: string
                    description: Refresh token for obtaining new access tokens.
                expiresIn:
                    type: string
                    description: Number of seconds until the access token expires.
            description: RefreshTokenResponse contains the authentication tokens.
        api.user.service.v1.RegisterRequest:
            type: object
            properties:
                passwordProvider:
                    enum:
                        - PASSWORD_PROVIDER_UNSPECIFIED
                        - PASSWORD_PROVIDER_USERNAME
                        - PASSWORD_PROVIDER_EMAIL
                        - PASSWORD_PROVIDER_MOBILE
                    type: string
                    description: The type of identity provider to use for registration.
                    format: enum
                authId:
                    type: string
                    description: The identity (username, email, or mobile) to register with.
                password:
                    type: string
                    description: The password for the new account.
            description: RegisterRequest contains the information needed to register a new user.
        api.user.service.v1.TelegramAuthRequest:
            type: object
            properties:
                id:
                    type: string
                    description: Telegram user Id.
                firstName:
                    type: string
                    description: User's first name.
                lastName:
                    type: string
                    description: User's last name.
                username:
                    type: string
                    description: Telegram username.
                photoUrl:
                    type: string
                    description: URL of the user's profile photo.
                authDate:
                    type: string
                    description: Unix timestamp when the authentication was performed.
                hash:
                    type: string
                    description: Hash for verifying the authentication data.
            description: TelegramAuthRequest contains the information from Telegram's login widget.
        api.user.service.v1.UserInfo:
            type: object
            properties:
                userId:
                    type: string
                    description: Unique identifier for the user.
            description: UserInfo contains basic user information.
        api.wallet.service.v1.GetUserBalancesRequest:
            type: object
            properties:
                userId:
                    type: string
        api.wallet.service.v1.GetUserBalancesResponse:
            type: object
            properties:
                balances:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.GetUserBalancesResponse_Balance'
        api.wallet.service.v1.GetUserBalancesResponse_Balance:
            type: object
            properties:
                currency:
                    type: string
                cash:
                    type: string
                operatorBonus:
                    type: string
                providerBonus:
                    type: string
        api.wallet.service.v1.UpdateUserCurrencyRequest:
            type: object
            properties:
                userId:
                    type: string
                currency:
                    type: string
                enabled:
                    type: boolean
        api.wallet.service.v1.UpdateUserCurrencyResponse:
            type: object
            properties: {}
        game.service.v1.CreateSessionRequest:
            type: object
            properties:
                operatorId:
                    type: string
                gameId:
                    type: string
                currency:
                    type: string
                locale:
                    type: string
                ip:
                    type: string
                clientType:
                    type: string
                balance:
                    type: number
                    format: double
                urls:
                    $ref: '#/components/schemas/game.service.v1.UrlInfo'
                user:
                    $ref: '#/components/schemas/game.service.v1.UserInfo'
                jurisdiction:
                    type: string
                payload:
                    type: string
        game.service.v1.CreateSessionResponse:
            type: object
            properties:
                gameUrl:
                    type: string
        game.service.v1.GameInfo:
            type: object
            properties:
                id:
                    type: string
                enabled:
                    type: boolean
                name:
                    type: string
                providerId:
                    type: string
                category:
                    type: string
                languages:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                theme:
                    type: string
                feeGroup:
                    type: string
                customised:
                    type: boolean
                devices:
                    type: array
                    items:
                        type: string
                licenses:
                    type: array
                    items:
                        type: string
                hasJackpot:
                    type: boolean
                jackpotType:
                    type: string
                forbidBonusPlay:
                    type: boolean
                hasFreespins:
                    type: boolean
                payout:
                    type: number
                    format: double
                hitRate:
                    type: number
                    format: double
                volatilityRating:
                    type: string
                lines:
                    type: integer
                    format: int32
                ways:
                    type: integer
                    format: int32
                description:
                    type: string
                hasLive:
                    type: boolean
                hd:
                    type: boolean
                accumulating:
                    type: boolean
                multiplier:
                    type: number
                    format: double
                releasedAt:
                    type: string
                recalledAt:
                    type: string
                bonusBuy:
                    type: boolean
                restrictions:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
                resources:
                    type: string
                providerGameId:
                    type: string
                assets:
                    type: string
        game.service.v1.ListGamesRequest:
            type: object
            properties:
                operatorId:
                    type: string
                page:
                    type: string
                pageSize:
                    type: string
        game.service.v1.ListGamesResponse:
            type: object
            properties:
                games:
                    type: array
                    items:
                        $ref: '#/components/schemas/game.service.v1.GameInfo'
                total:
                    type: string
                page:
                    type: string
                pageSize:
                    type: string
        game.service.v1.UrlInfo:
            type: object
            properties:
                returnUrl:
                    type: string
                depositUrl:
                    type: string
                lobbyUrl:
                    type: string
        game.service.v1.UserInfo:
            type: object
            properties:
                walletUserId:
                    type: string
                userId:
                    type: string
                email:
                    type: string
                firstname:
                    type: string
                lastname:
                    type: string
                nickname:
                    type: string
                city:
                    type: string
                dateOfBirth:
                    type: string
                registeredAt:
                    type: string
                gender:
                    type: string
                country:
                    type: string
        payment.service.v1.CreatePaymentChannelRequest:
            type: object
            properties:
                merchantId:
                    type: string
                paymentMethodId:
                    type: string
                key:
                    type: object
            description: Request to create a payment channel
        payment.service.v1.CreatePaymentChannelResponse:
            type: object
            properties:
                channelId:
                    type: string
            description: Response for channel creation
        payment.service.v1.DepositCallbackRequest:
            type: object
            properties:
                transactionNo:
                    type: string
                gatewayOrderNo:
                    type: string
                operatorOrderNo:
                    type: string
                orderStatus:
                    type: string
                payTime:
                    type: string
                createTime:
                    type: string
                amount:
                    type: string
                money:
                    type: string
                sign:
                    type: string
                timestamp:
                    type: string
                nonce:
                    type: string
            description: Request for deposit callback
        payment.service.v1.DepositCallbackResponse:
            type: object
            properties:
                transactionId:
                    type: string
            description: Response for deposit callback
        payment.service.v1.GetPaymentChannelListRequest:
            type: object
            properties:
                merchantId:
                    type: string
            description: Request to get payment channel list
        payment.service.v1.GetPaymentChannelListResponse:
            type: object
            properties:
                paymentChannels:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.PaymentChannelInfo'
            description: Response for payment channel list
        payment.service.v1.GetPaymentMethodListRequest:
            type: object
            properties: {}
            description: Request to get payment method list
        payment.service.v1.GetPaymentMethodListResponse:
            type: object
            properties:
                paymentMethods:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.PaymentMethodInfo'
            description: Response for payment method list
        payment.service.v1.InitiateDepositRequest:
            type: object
            properties:
                userId:
                    type: string
                amount:
                    type: string
                currency:
                    type: string
                channelId:
                    type: string
                extra:
                    type: object
            description: Request to initiate a deposit
        payment.service.v1.InitiateDepositResponse:
            type: object
            properties:
                transactionId:
                    type: string
                amount:
                    type: string
                currency:
                    type: string
                status:
                    type: string
                payUrl:
                    type: string
                qrCode:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                extra:
                    type: object
            description: Response for deposit initiation
        payment.service.v1.InitiateWithdrawRequest:
            type: object
            properties:
                userId:
                    type: string
                amount:
                    type: string
                operatorOrderNo:
                    type: string
                bankAccount:
                    type: string
                bankAccountName:
                    type: string
                bankAccountMobile:
                    type: string
                bankName:
                    type: string
                bankCode:
                    type: string
                bankBranch:
                    type: string
                bankId:
                    type: string
                bankIfsc:
                    type: string
                bankNation:
                    type: string
                channel:
                    type: string
                extra:
                    type: object
            description: Request to initiate a withdrawal
        payment.service.v1.InitiateWithdrawResponse:
            type: object
            properties:
                transactionId:
                    type: string
                operatorOrderNo:
                    type: string
                amount:
                    type: string
                status:
                    type: string
                createdAt:
                    type: string
                    format: date-time
            description: Response for withdrawal initiation
        payment.service.v1.PaymentChannelInfo:
            type: object
            properties:
                channelId:
                    type: string
                merchantId:
                    type: string
                paymentMethodId:
                    type: string
                paymentMethod:
                    type: string
                currency:
                    type: string
                country:
                    type: string
                status:
                    type: integer
                    format: int32
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
            description: Payment channel information
        payment.service.v1.PaymentMethodInfo:
            type: object
            properties:
                id:
                    type: string
                currency:
                    type: string
                country:
                    type: string
                paymentMethod:
                    type: string
                keySchema:
                    type: object
            description: Details of a single payment method
        system.service.v1.AddCurrencyRequest:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                type:
                    type: string
                symbol:
                    type: string
                icon:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
        system.service.v1.AddCurrencyResponse:
            type: object
            properties: {}
        system.service.v1.Currency:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                type:
                    type: string
                symbol:
                    type: string
                icon:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
        system.service.v1.GetCurrenciesRequest:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
                    description: |-
                        Filter to return specific currencies only.
                         If empty or not provided, all currencies will be returned
        system.service.v1.GetCurrenciesResponse:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        $ref: '#/components/schemas/system.service.v1.Currency'
        system.service.v1.UpdateCurrencyRequest:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                type:
                    type: string
                symbol:
                    type: string
                icon:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
        system.service.v1.UpdateCurrencyResponse:
            type: object
            properties:
                currency:
                    $ref: '#/components/schemas/system.service.v1.Currency'
tags:
    - name: Game
    - name: Operator
      description: User service provides authentication and user management functionality.
    - name: Payment
    - name: System
    - name: User
      description: User service provides authentication and user management functionality.
    - name: Wallet
