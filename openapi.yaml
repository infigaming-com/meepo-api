# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/backoffice/accounts/2fa/bind:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_Bind2Fa
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.Bind2faRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.Bind2faResponse'
    /v1/backoffice/accounts/2fa/generate:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_Generate2Fa
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.Generate2faRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.Generate2faResponse'
    /v1/backoffice/accounts/2fa/unbind:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_Unbind2Fa
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.Unbind2faRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.Unbind2faResponse'
    /v1/backoffice/accounts/add:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_AddAccount
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddAccountRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AddAccountResponse'
    /v1/backoffice/accounts/email/check_exists:
        post:
            tags:
                - BackofficeAccount
            description: CheckEmailExists checks if the email exists in the user table.
            operationId: BackofficeAccount_CheckEmailExists
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CheckEmailExistsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CheckEmailExistsResponse'
    /v1/backoffice/accounts/email/verification/send:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_SendEmailVerification
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SendEmailVerificationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SendEmailVerificationResponse'
    /v1/backoffice/accounts/email/verify:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_VerifyEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.VerifyEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.VerifyEmailResponse'
    /v1/backoffice/accounts/info:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_AccountInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AccountInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AccountInfoResponse'
    /v1/backoffice/accounts/list:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_ListAccounts
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAccountsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListAccountsResponse'
    /v1/backoffice/accounts/login:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.LoginResponse'
    /v1/backoffice/accounts/mobile/verification/send:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_SendMobileVerification
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SendMobileVerificationRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SendMobileVerificationResponse'
    /v1/backoffice/accounts/mobile/verify:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_VerifyMobile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.VerifyMobileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.VerifyMobileResponse'
    /v1/backoffice/accounts/password/reset:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_ResetPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ResetPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ResetPasswordResponse'
    /v1/backoffice/accounts/password/reset-code/send:
        post:
            tags:
                - BackofficeAccount
            description: Send password reset verification code to email
            operationId: BackofficeAccount_SendPasswordResetCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SendPasswordResetCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SendPasswordResetCodeResponse'
    /v1/backoffice/accounts/password/reset-with-code:
        post:
            tags:
                - BackofficeAccount
            description: Reset password using verification code
            operationId: BackofficeAccount_ResetPasswordWithCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ResetPasswordWithCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ResetPasswordWithCodeResponse'
    /v1/backoffice/accounts/register:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.RegisterResponse'
    /v1/backoffice/accounts/register/verification/send:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_SendRegisterVerificationCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SendRegisterVerificationCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SendRegisterVerificationCodeResponse'
    /v1/backoffice/accounts/role/create:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_CreateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CreateRoleResponse'
    /v1/backoffice/accounts/role/delete:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_DeleteRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.DeleteRoleResponse'
    /v1/backoffice/accounts/role/list:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_ListRoles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListRolesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListRolesResponse'
    /v1/backoffice/accounts/role/update:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_UpdateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateRoleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateRoleResponse'
    /v1/backoffice/accounts/subdomain/check_exists:
        post:
            tags:
                - BackofficeAccount
            description: CheckSubdomainExists checks if the subdomain exists in the origin_to_operator table.
            operationId: BackofficeAccount_CheckSubdomainExists
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CheckSubdomainExistsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CheckSubdomainExistsResponse'
    /v1/backoffice/accounts/update:
        post:
            tags:
                - BackofficeAccount
            operationId: BackofficeAccount_UpdateAccount
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateAccountRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateAccountResponse'
    /v1/backoffice/affiliate/campaign/create:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_CreateCampaign
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateCampaignRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.CreateCampaignResponse'
    /v1/backoffice/affiliate/campaign/delete:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_DeleteCampaign
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteCampaignRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.DeleteCampaignResponse'
    /v1/backoffice/affiliate/campaign/list:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_ListCampaigns
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListCampaignsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.ListCampaignsResponse'
    /v1/backoffice/affiliate/campaign/list/by_affiliate:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_ListAffiliateCampaigns
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAffiliateCampaignsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.ListCampaignsResponse'
    /v1/backoffice/affiliate/campaign/update:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_UpdateCampaign
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateCampaignRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.UpdateCampaignResponse'
    /v1/backoffice/affiliate/commission/plan/create:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_CreateCommissionPlan
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateCommissionPlanRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.CreateCommissionPlanResponse'
    /v1/backoffice/affiliate/commission/plan/delete:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_DeleteCommissionPlan
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteCommissionPlanRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.DeleteCommissionPlanResponse'
    /v1/backoffice/affiliate/commission/plan/get:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_GetCommissionPlan
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetCommissionPlanRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.GetCommissionPlanResponse'
    /v1/backoffice/affiliate/commission/plan/list:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_ListCommissionPlans
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListCommissionPlansRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.ListCommissionPlansResponse'
    /v1/backoffice/affiliate/commission/plan/list/all:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_ListAllCommissionPlans
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAllCommissionPlansRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.ListAllCommissionPlansResponse'
    /v1/backoffice/affiliate/commission/plan/update:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_UpdateCommissionPlan
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateCommissionPlanRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.UpdateCommissionPlanResponse'
    /v1/backoffice/affiliate/create:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_CreateAffiliate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateAffiliateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.CreateAffiliateResponse'
    /v1/backoffice/affiliate/delete:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_DeleteAffiliate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteAffiliateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.DeleteAffiliateResponse'
    /v1/backoffice/affiliate/get:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_GetAffiliate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetAffiliateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.GetAffiliateResponse'
    /v1/backoffice/affiliate/list:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_ListAffiliates
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAffiliatesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.ListAffiliatesResponse'
    /v1/backoffice/affiliate/update:
        post:
            tags:
                - BackofficeAffiliate
            operationId: BackofficeAffiliate_UpdateAffiliate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateAffiliateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.affiliate.service.v1.UpdateAffiliateResponse'
    /v1/backoffice/audit/actions/list:
        post:
            tags:
                - BackofficeAudit
            operationId: BackofficeAudit_ListAuditActions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAuditActionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListAuditActionsResponse'
    /v1/backoffice/audit/logs/list:
        post:
            tags:
                - BackofficeAudit
            operationId: BackofficeAudit_ListAuditLogs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAuditLogsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListAuditLogsResponse'
    /v1/backoffice/bcpay/bankaccount/add:
        post:
            tags:
                - BackofficeBcpay
            operationId: BackofficeBcpay_AddBankAccount
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddBankAccountRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.bcpay.service.v1.AddBankAccountResponse'
    /v1/backoffice/bcpay/bankaccount/delete:
        post:
            tags:
                - BackofficeBcpay
            operationId: BackofficeBcpay_DeleteBankAccount
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.bcpay.service.v1.DeleteBankAccountRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.bcpay.service.v1.DeleteBankAccountResponse'
    /v1/backoffice/bcpay/bankaccount/list:
        post:
            tags:
                - BackofficeBcpay
            operationId: BackofficeBcpay_BankAccountList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.BankAccountListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.bcpay.service.v1.BankAccountListResponse'
    /v1/backoffice/bcpay/bankaccount/update:
        post:
            tags:
                - BackofficeBcpay
            operationId: BackofficeBcpay_UpdateBankAccount
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateBankAccountRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.bcpay.service.v1.UpdateBankAccountResponse'
    /v1/backoffice/bcpay/bankinfoschema/get:
        post:
            tags:
                - BackofficeBcpay
            operationId: BackofficeBcpay_GetBankSchema
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.bcpay.service.v1.GetBankSchemaRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.bcpay.service.v1.GetBankSchemaResponse'
    /v1/backoffice/bcpay/merchant/add:
        post:
            tags:
                - BackofficeBcpay
            operationId: BackofficeBcpay_CreateMerchant
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateMerchantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.bcpay.service.v1.CreateMerchantResponse'
    /v1/backoffice/bcpay/merchant/get:
        post:
            tags:
                - BackofficeBcpay
            operationId: BackofficeBcpay_GetMerchant
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetMerchantRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.bcpay.service.v1.GetMerchantResponse'
    /v1/backoffice/bcpay/transaction/add:
        post:
            tags:
                - BackofficeBcpay
            operationId: BackofficeBcpay_AuditTransaction
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AuditTransactionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.bcpay.service.v1.AuditTransactionResponse'
    /v1/backoffice/bcpay/transaction/list:
        post:
            tags:
                - BackofficeBcpay
            operationId: BackofficeBcpay_TransactionList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.TransactionListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.bcpay.service.v1.TransactionListResponse'
    /v1/backoffice/bcpay/transaction/note/update:
        post:
            tags:
                - BackofficeBcpay
            operationId: BackofficeBcpay_AddNoteToTransaction
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.bcpay.service.v1.AddNoteToTransactionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.bcpay.service.v1.AddNoteToTransactionResponse'
    /v1/backoffice/company/register:
        post:
            tags:
                - BackofficeCompany
            description: Create a company's owner account and related data
            operationId: BackofficeCompany_CreateCompany
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateCompanyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CreateCompanyResponse'
    /v1/backoffice/dashboard/get:
        post:
            tags:
                - BackofficeDashboard
            operationId: BackofficeDashboard_GetOverviewDashboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse'
    /v1/backoffice/dashboard/time-ranged/get:
        post:
            tags:
                - BackofficeDashboard
            operationId: BackofficeDashboard_GetTimeRangedDashboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetTimeRangedDashboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetTimeRangedDashboardResponse'
    /v1/backoffice/dashboard/top-operators/get:
        post:
            tags:
                - BackofficeDashboard
            operationId: BackofficeDashboard_GetTopOperatorsDashboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse'
    /v1/backoffice/dashboard/top-users/get:
        post:
            tags:
                - BackofficeDashboard
            operationId: BackofficeDashboard_GetTopUsersDashboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetTopUsersDashboardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetTopUsersDashboardResponse'
    /v1/backoffice/dns/byo-domains/add:
        post:
            tags:
                - BackofficeDns
            operationId: BackofficeDns_AddOperatorByoDomain
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddOperatorByoDomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AddOperatorByoDomainResponse'
    /v1/backoffice/dns/byo-domains/delete:
        post:
            tags:
                - BackofficeDns
            operationId: BackofficeDns_DeleteOperatorByoDomain
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteOperatorByoDomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.DeleteOperatorByoDomainResponse'
    /v1/backoffice/dns/byo-domains/list:
        post:
            tags:
                - BackofficeDns
            operationId: BackofficeDns_ListOperatorByoDomains
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorByoDomainsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.ListOperatorByoDomainsResponse'
    /v1/backoffice/dns/domains/list:
        post:
            tags:
                - BackofficeDns
            operationId: BackofficeDns_ListOperatorDomains
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorDomainsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.ListOperatorDomainsResponse'
    /v1/backoffice/filestore/affiliate/registration-photo/upload:
        post:
            tags:
                - BackofficeFileStore
            description: Affiliate File Store
            operationId: BackofficeFileStore_UploadAffiliateRegistrationPhoto
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UploadAffiliateRegistrationPhotoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UploadAffiliateRegistrationPhotoResponse'
    /v1/backoffice/filestore/operator-static-files/upload:
        post:
            tags:
                - BackofficeFileStore
            operationId: BackofficeFileStore_UploadOperatorStaticFile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UploadOperatorStaticFileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UploadOperatorStaticFileResponse'
    /v1/backoffice/filestore/register-login-blacklist/upload:
        post:
            tags:
                - BackofficeFileStore
            operationId: BackofficeFileStore_UploadRegisterLoginBlacklist
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UploadRegisterLoginBlacklistRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UploadRegisterLoginBlacklistResponse'
    /v1/backoffice/filestore/vip-level-images/upload:
        post:
            tags:
                - BackofficeFileStore
            operationId: BackofficeFileStore_UploadVipLevelImage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UploadVipLevelImageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UploadVipLevelImageResponse'
    /v1/backoffice/finance/adjustment-configs/create:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_CreateAdjustmentConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateAdjustmentConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CreateAdjustmentConfigResponse'
    /v1/backoffice/finance/adjustment-configs/delete:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_DeleteAdjustmentConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteAdjustmentConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.DeleteAdjustmentConfigResponse'
    /v1/backoffice/finance/adjustment-configs/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListAdjustmentConfigs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAdjustmentConfigsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListAdjustmentConfigsResponse'
    /v1/backoffice/finance/adjustment-configs/update:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_UpdateAdjustmentConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateAdjustmentConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateAdjustmentConfigResponse'
    /v1/backoffice/finance/adjustment/add:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_AddAdjustment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddAdjustmentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AddAdjustmentResponse'
    /v1/backoffice/finance/adjustments/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListAdjustments
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAdjustmentsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListAdjustmentsResponse'
    /v1/backoffice/finance/balance/monthly-revenue-shares/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListBalanceMonthlyRevenueShares
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListBalanceMonthlyRevenueSharesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListBalanceMonthlyRevenueSharesResponse'
    /v1/backoffice/finance/balance/summary:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_GetBalanceSummary
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetBalanceSummaryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetBalanceSummaryResponse'
    /v1/backoffice/finance/balances/summary:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_GetBalancesSummary
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetBalancesSummaryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetBalancesSummaryResponse'
    /v1/backoffice/finance/balances/summary/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListBalancesSummary
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListBalancesSummaryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListBalancesSummaryResponse'
    /v1/backoffice/finance/billing-periods/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListBillingPeriods
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListBillingPeriodsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListBillingPeriodsResponse'
    /v1/backoffice/finance/invoice/detail:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_GetInvoiceDetail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetInvoiceDetailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetInvoiceDetailResponse'
    /v1/backoffice/finance/invoices/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListInvoices
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListInvoicesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListInvoicesResponse'
    /v1/backoffice/finance/invoices/send:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_SendInvoices
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SendInvoicesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SendInvoicesResponse'
    /v1/backoffice/finance/invoices/summary:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_GetInvoiceSummary
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetInvoiceSummaryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetInvoiceSummaryResponse'
    /v1/backoffice/finance/monthly-revenue-shares/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListMonthlyRevenueShare
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListMonthlyRevenueShareRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListMonthlyRevenueShareResponse'
    /v1/backoffice/finance/revenue-shares/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListOperatorRevenueShare
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorRevenueShareRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorRevenueShareResponse'
    /v1/backoffice/finance/tax-report-configs/get:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_GetTaxReportConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetTaxReportConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetTaxReportConfigResponse'
    /v1/backoffice/finance/tax-report-configs/update:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_UpdateTaxReportConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateTaxReportConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateTaxReportConfigResponse'
    /v1/backoffice/finance/tax-reports/export:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ExportTaxReports
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ExportTaxReportsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ExportTaxReportsResponse'
    /v1/backoffice/finance/tax-reports/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListTaxReports
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListTaxReportsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListTaxReportsResponse'
    /v1/backoffice/finance/tax-reports/update:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_UpdateTaxReport
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateTaxReportRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateTaxReportResponse'
    /v1/backoffice/finance/third-party-fees/list:
        post:
            tags:
                - BackofficeFinance
            operationId: BackofficeFinance_ListThirdPartyFees
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListThirdPartyFeesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListThirdPartyFeesResponse'
    /v1/backoffice/game/bet/dispaly/config/add:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_AddGameBetDisplayConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddGameBetDisplayConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.AddGameBetDisplayConfigResponse'
    /v1/backoffice/game/bet/dispaly/config/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListGameBetDisplayConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListGameBetDisplayConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ListGameBetDisplayConfigResponse'
    /v1/backoffice/game/bet/dispaly/config/update:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_UpdateGameBetDisplayConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateGameBetDisplayConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.UpdateGameBetDisplayConfigResponse'
    /v1/backoffice/game/bets/export:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ExportBets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ExportBetsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ExportBetsResponse'
    /v1/backoffice/game/bets/get:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_GetBetById
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetBetByIdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.GetBetByIdResponse'
    /v1/backoffice/game/bets/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListBets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListBetsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListBetsResponse'
    /v1/backoffice/game/bets/multiple/export:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ExportMultipleBets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ExportMultipleBetsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ExportMultipleBetsResponse'
    /v1/backoffice/game/bets/multiple/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListMultipleBets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListMultipleBetsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ListMultipleBetsResponse'
    /v1/backoffice/game/bets/overview/get:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_GetUserBetsOverview
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetUserBetsOverviewRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetUserBetsOverviewResponse'
    /v1/backoffice/game/bets/stake-variance/export:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ExportStakeVarianceBets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ExportStakeVarianceBetsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ExportStakeVarianceBetsResponse'
    /v1/backoffice/game/bets/stake-variance/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListStakeVarianceBets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListStakeVarianceBetsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ListStakeVarianceBetsResponse'
    /v1/backoffice/game/bets/transactions/get:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_GetGameTransactionsForBet
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetGameTransactionsForBetRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetGameTransactionsForBetResponse'
    /v1/backoffice/game/bets/unpaid/export:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ExportUnpaidBets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ExportUnpaidBetsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ExportUnpaidBetsResponse'
    /v1/backoffice/game/bets/unpaid/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListUnpaidBets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListUnpaidBetsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ListUnpaidBetsResponse'
    /v1/backoffice/game/categories/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListCategories
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListCategoriesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListCategoriesResponse'
    /v1/backoffice/game/currencies/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListCurrencies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListCurrenciesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListCurrenciesResponse'
    /v1/backoffice/game/customer-strike-reports/export:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ExportCustomerStrikeReports
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ExportCustomerStrikeReportsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ExportCustomerStrikeReportsResponse'
    /v1/backoffice/game/customer-strike-reports/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListCustomerStrikeReports
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListCustomerStrikeReportsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ListCustomerStrikeReportsResponse'
    /v1/backoffice/game/fee-groups/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListFeeGroups
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListFeeGroupsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListFeeGroupsResponse'
    /v1/backoffice/game/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListGames
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListGamesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListGamesResponse'
    /v1/backoffice/game/provider/rates/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListProviderRates
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListProviderRatesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListProviderRatesResponse'
    /v1/backoffice/game/provider/update:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_UpdateProvider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateProviderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateProviderResponse'
    /v1/backoffice/game/providers-with-detail/list:
        post:
            tags:
                - BackofficeGame
            description: |-
                ListProvidersWithDetail returns all providers with detailed information,
                 including game count and enabled status.
                 ListProvidersWithDetail is used for the providers page.
            operationId: BackofficeGame_ListProvidersWithDetail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListProvidersWithDetailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListProvidersWithDetailResponse'
    /v1/backoffice/game/providers/list:
        post:
            tags:
                - BackofficeGame
            description: |-
                ListProviders returns all providers with optional filter for enabled status.
                 If not provided, all providers will be returned.
                 ListProviders is used for the providers drop down list and provider search.
            operationId: BackofficeGame_ListProviders
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListProvidersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListProvidersResponse'
    /v1/backoffice/game/sport-events/export:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ExportSportEvents
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ExportSportEventsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ExportSportEventsResponse'
    /v1/backoffice/game/tags/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListTags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListTagsResponse'
    /v1/backoffice/game/themes/list:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_ListThemes
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListThemesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListThemesResponse'
    /v1/backoffice/game/transaction/get:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_GetGameTransactionById
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetGameTransactionByIdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.GetGameTransactionByIdResponse'
    /v1/backoffice/game/update:
        post:
            tags:
                - BackofficeGame
            operationId: BackofficeGame_UpdateGame
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateGameRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateGameResponse'
    /v1/backoffice/operator/account-settings/get:
        post:
            tags:
                - BackofficeOperator
            operationId: BackofficeOperator_GetOperatorAccountSettings
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorAccountSettingsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetOperatorAccountSettingsResponse'
    /v1/backoffice/operator/account-settings/update:
        post:
            tags:
                - BackofficeOperator
            operationId: BackofficeOperator_UpdateOperatorAccountSettings
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateOperatorAccountSettingsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.UpdateOperatorAccountSettingsResponse'
    /v1/backoffice/operator/backoffice-byo-subdomains/add:
        post:
            tags:
                - BackofficeOperator
            description: AddOperatorBackofficeByoSubdomain adds a backoffice byo subdomain for the given operator
            operationId: BackofficeOperator_AddOperatorBackofficeByoSubdomain
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddOperatorBackofficeByoSubdomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AddOperatorBackofficeByoSubdomainResponse'
    /v1/backoffice/operator/backoffice-byo-subdomains/delete:
        post:
            tags:
                - BackofficeOperator
            description: DeleteOperatorBackofficeByoSubdomain deletes a backoffice byo subdomain for the given operator
            operationId: BackofficeOperator_DeleteOperatorBackofficeByoSubdomain
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteOperatorBackofficeByoSubdomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.DeleteOperatorBackofficeByoSubdomainResponse'
    /v1/backoffice/operator/byo-subdomains/add:
        post:
            tags:
                - BackofficeOperator
            description: AddOperatorByoSubdomain adds a byo subdomain for the given operator
            operationId: BackofficeOperator_AddOperatorByoSubdomain
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddOperatorByoSubdomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AddOperatorByoSubdomainResponse'
    /v1/backoffice/operator/byo-subdomains/delete:
        post:
            tags:
                - BackofficeOperator
            description: DeleteOperatorByoSubdomain deletes a byo subdomain for the given operator
            operationId: BackofficeOperator_DeleteOperatorByoSubdomain
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteOperatorByoSubdomainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.DeleteOperatorByoSubdomainResponse'
    /v1/backoffice/operator/create:
        post:
            tags:
                - BackofficeOperator
            operationId: BackofficeOperator_CreateOperator
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateOperatorRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CreateOperatorResponse'
    /v1/backoffice/operator/current:
        post:
            tags:
                - BackofficeOperator
            description: GetCurrentOperatorDetails returns the current operator details.
            operationId: BackofficeOperator_GetCurrentOperatorDetails
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetCurrentOperatorDetailsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetCurrentOperatorDetailsResponse'
    /v1/backoffice/operator/key/check_exists:
        post:
            tags:
                - BackofficeAccount
            description: CheckOperatorKeyExists checks if the operator key exists in the operator table.
            operationId: BackofficeAccount_CheckOperatorKeyExists
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CheckOperatorKeyExistsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CheckOperatorKeyExistsResponse'
    /v1/backoffice/operator/list-by-admin-email:
        post:
            tags:
                - BackofficeOperator
            description: List operators by admin email under specific operator
            operationId: BackofficeOperator_ListOperatorsByAdminEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorsByAdminEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.ListOperatorsByAdminEmailResponse'
    /v1/backoffice/operator/list/all:
        post:
            tags:
                - BackofficeOperator
            operationId: BackofficeOperator_ListAllOperators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListAllOperatorsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListAllOperatorsResponse'
    /v1/backoffice/operator/list/bottom:
        post:
            tags:
                - BackofficeOperator
            description: ListBottomOperators returns a list of bottom operators by operator context in the middleware
            operationId: BackofficeOperator_ListBottomOperators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListBottomOperatorsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListBottomOperatorsResponse'
    /v1/backoffice/operator/list/by-parent:
        post:
            tags:
                - BackofficeOperator
            description: ListOperatorsByParentOperatorId returns a list of operators by parent operator ID.
            operationId: BackofficeOperator_ListOperatorsByParentOperatorId
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorsByParentOperatorIdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorsByParentOperatorIdResponse'
    /v1/backoffice/operator/list/company:
        post:
            tags:
                - BackofficeOperator
            description: ListCompanies returns a list of companies by operator context in the middleware
            operationId: BackofficeOperator_ListCompanyOperators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListCompanyOperatorsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListCompanyOperatorsResponse'
    /v1/backoffice/operator/list/retailer:
        post:
            tags:
                - BackofficeOperator
            description: ListRetailers returns a list of retailers by operator context in the middleware
            operationId: BackofficeOperator_ListRetailerOperators
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListRetailerOperatorsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListRetailerOperatorsResponse'
    /v1/backoffice/operator/register-limit-config/get:
        post:
            tags:
                - BackofficeOperator
            operationId: BackofficeOperator_GetOperatorRegisterLimitConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorRegisterLimitConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetOperatorRegisterLimitConfigResponse'
    /v1/backoffice/operator/register-limit-config/set:
        post:
            tags:
                - BackofficeOperator
            operationId: BackofficeOperator_SetOperatorRegisterLimitConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SetOperatorRegisterLimitConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.SetOperatorRegisterLimitConfigResponse'
    /v1/backoffice/operator/register-login-blacklist/add:
        post:
            tags:
                - BackofficeOperator
            operationId: BackofficeOperator_AddRegisterLoginBlacklist
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddRegisterLoginBlacklistRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AddRegisterLoginBlacklistResponse'
    /v1/backoffice/operator/register-login-blacklist/delete:
        post:
            tags:
                - BackofficeOperator
            operationId: BackofficeOperator_DeleteRegisterLoginBlacklist
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteRegisterLoginBlacklistRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.DeleteRegisterLoginBlacklistResponse'
    /v1/backoffice/operator/register-login-blacklist/list:
        post:
            tags:
                - BackofficeOperator
            operationId: BackofficeOperator_ListRegisterLoginBlacklist
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListRegisterLoginBlacklistRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.ListRegisterLoginBlacklistResponse'
    /v1/backoffice/operator/status/update:
        post:
            tags:
                - BackofficeOperator
            description: UpdateOperatorStatus updates the status of an operator
            operationId: BackofficeOperator_UpdateOperatorStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateOperatorStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateOperatorStatusResponse'
    /v1/backoffice/payment/channel/create:
        post:
            tags:
                - BackofficePayment
            description: |-
                Create payment channel
                 Creates a new payment channel with specified configuration
                 Error code: CREATE_PAYMENT_CHANNEL_FAILED(50002) - Failed to create payment channel
            operationId: BackofficePayment_CreatePaymentChannel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreatePaymentChannelRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.CreatePaymentChannelResponse'
    /v1/backoffice/payment/channel/page:
        post:
            tags:
                - BackofficePayment
            description: |-
                Get payment channel page with pagination and filters
                 Retrieves a paginated list of payment channels with optional filtering
                 Error code: GET_PAYMENT_CHANNEL_PAGE_FAILED(50003) - Failed to get payment channel page
            operationId: BackofficePayment_GetOperatorPaymentChannelPage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorPaymentChannelPageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetPaymentChannelPageResponse'
    /v1/backoffice/payment/channel/update:
        post:
            tags:
                - BackofficePayment
            description: |-
                Create payment channel
                 Creates a new payment channel with specified configuration
                 Error code: CREATE_PAYMENT_CHANNEL_FAILED(50002) - Failed to create payment channel
            operationId: BackofficePayment_UpdatePaymentChannel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.UpdatePaymentChannelRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.UpdatePaymentChannelResponse'
    /v1/backoffice/payment/method/create:
        post:
            tags:
                - BackofficePayment
            description: |-
                Create payment channel
                 Creates a new payment channel with specified configuration
                 Error code: CREATE_PAYMENT_CHANNEL_FAILED(50002) - Failed to create payment channel
            operationId: BackofficePayment_CreatePaymentMethod
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreatePaymentMethodRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.CreatePaymentMethodResponse'
    /v1/backoffice/payment/method/list:
        post:
            tags:
                - BackofficePayment
            description: |-
                Get list of payment methods
                 Retrieves all available payment methods supported by the system
                 Error code: GET_PAYMENT_METHOD_LIST_FAILED(50001) - Failed to get payment method list
            operationId: BackofficePayment_GetPaymentMethodList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetPaymentMethodListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetPaymentMethodListResponse'
    /v1/backoffice/payment/method/update:
        post:
            tags:
                - BackofficePayment
            description: Update payment channel
            operationId: BackofficePayment_UpdatePaymentMethod
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.UpdatePaymentMethodRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.CreatePaymentMethodResponse'
    /v1/backoffice/payment/operator/address/get:
        post:
            tags:
                - BackofficePayment
            operationId: BackofficePayment_GetOperatorAddress
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorAddressRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetOperatorAddressResponse'
    /v1/backoffice/payment/operator/transaction/detail:
        post:
            tags:
                - BackofficePayment
            description: |-
                Get transaction detail
                 Retrieves detailed information about a specific transaction
                 Error code: GET_TRANSACTION_DETAIL_FAILED(50009) - Failed to get transaction detail
            operationId: BackofficePayment_GetPaymentOperatorTransactionById
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetTransactionDetailByIdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetTransactionDetailByIdResponse'
    /v1/backoffice/payment/operator/transaction/page:
        post:
            tags:
                - BackofficePayment
            operationId: BackofficePayment_GetPaymentOperatorTransactionPage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetTransactionPageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetTransactionPageResponse'
    /v1/backoffice/payment/supportedmethod/list:
        post:
            tags:
                - BackofficePayment
            description: |-
                Get list of payment methods
                 Retrieves all available payment methods supported by the system
                 Error code: GET_PAYMENT_METHOD_LIST_FAILED(50001) - Failed to get payment method list
            operationId: BackofficePayment_GetSupportedPaymentMethodList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetSupportedPaymentMethodListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetSupportedPaymentMethodListResponse'
    /v1/backoffice/payment/transaction/detail:
        post:
            tags:
                - BackofficePayment
            description: |-
                Get transaction detail
                 Retrieves detailed information about a specific transaction
                 Error code: GET_TRANSACTION_DETAIL_FAILED(50009) - Failed to get transaction detail
            operationId: BackofficePayment_GetPaymentTransactionById
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetTransactionDetailByIdRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetTransactionDetailByIdResponse'
    /v1/backoffice/payment/transaction/page:
        post:
            tags:
                - BackofficePayment
            description: |-
                Get payment transaction page
                 Retrieves a paginated list of payment transactions with optional filtering
            operationId: BackofficePayment_GetPaymentTransactionPage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetTransactionPageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetTransactionPageResponse'
    /v1/backoffice/report/customer-record/get:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_CustomerRecordReportDetail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CustomerRecordReportDetailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CustomerRecordReportDetailResponse'
    /v1/backoffice/report/deposit-details/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListDepositDetails
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListDepositDetailsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListDepositDetailsResponse'
    /v1/backoffice/report/deposit-summaries/get:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_GetDepositSummaries
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetDepositSummariesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetDepositSummariesResponse'
    /v1/backoffice/report/deposit-vtg-details/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListDepositVtgDetails
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListDepositVtgDetailsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListDepositVtgDetailsResponse'
    /v1/backoffice/report/game-data/get:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_GetGameDataSummary
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetGameSummaryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetGameSummaryResponse'
    /v1/backoffice/report/game-data/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListGameData
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListGameDataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListGameDataResponse'
    /v1/backoffice/report/player-game-data/get:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_GetPlayerGameDataSummary
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetPlayerGameSummaryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetPlayerGameSummaryResponse'
    /v1/backoffice/report/player-game-data/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListPlayerGameData
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListPlayerGameDataRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListPlayerGameDataResponse'
    /v1/backoffice/report/register-retention/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListRegisterRetention
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListRegisterRetentionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListRegisterRetentionResponse'
    /v1/backoffice/report/sport-events/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListSportEvents
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListSportEventsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListSportEventsResponse'
    /v1/backoffice/report/summary/get:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_GetSummary
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetSummaryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetSummaryResponse'
    /v1/backoffice/report/summary/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListSummaries
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListSummariesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListSummariesResponse'
    /v1/backoffice/report/withdraw-details/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListWithdrawDetails
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListWithdrawDetailsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListWithdrawDetailsResponse'
    /v1/backoffice/report/withdraw-summaries/get:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_GetWithdrawSummaries
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetWithdrawSummariesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetWithdrawSummariesResponse'
    /v1/backoffice/report/withdraw-vtg-details/list:
        post:
            tags:
                - BackofficeReport
            operationId: BackofficeReport_ListWithdrawVtgDetails
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListWithdrawVtgDetailsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListWithdrawVtgDetailsResponse'
    /v1/backoffice/review/operator/tickets/get:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_GetOperatorTicket
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorTicketRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.review.service.v1.GetOperatorTicketResponse'
    /v1/backoffice/review/operator/tickets/list:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_ListOperatorTickets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorTicketsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.review.service.v1.ListTicketsResponse'
    /v1/backoffice/review/operator/withdraw:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_CreateOperatorWithdraw
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateOperatorWithdrawRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CreateWithdrawResponse'
    /v1/backoffice/review/tickets/cancel:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_CancelTicket
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CancelTicketRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CancelTicketResponse'
    /v1/backoffice/review/tickets/comments/add:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_AddComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AddCommentResponse'
    /v1/backoffice/review/tickets/get:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_GetTicket
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetTicketRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.review.service.v1.GetTicketResponse'
    /v1/backoffice/review/tickets/list:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_ListTickets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListTicketsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.review.service.v1.ListTicketsResponse'
    /v1/backoffice/review/tickets/review:
        post:
            tags:
                - BackofficeReview
            operationId: BackofficeReview_ReviewTicket
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ReviewTicketRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ReviewTicketResponse'
    /v1/backoffice/system/integrity/file-info/config/set:
        post:
            tags:
                - BackofficeSystem
            operationId: BackofficeSystem_SetIntegrityConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SetIntegrityConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.SetIntegrityConfigResponse'
    /v1/backoffice/system/integrity/status/list:
        post:
            tags:
                - BackofficeSystem
            operationId: BackofficeSystem_ListIntegrityStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListIntegrityStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.ListIntegrityStatusResponse'
    /v1/backoffice/system/report/export/list:
        post:
            tags:
                - BackofficeSystem
            operationId: BackofficeSystem_ListReportExport
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListReportExportRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.ListReportExportResponse'
    /v1/backoffice/system/sev/export:
        post:
            tags:
                - BackofficeSystem
            operationId: BackofficeSystem_ExportSev
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ExportSevRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.ExportSevResponse'
    /v1/backoffice/system/sev/list:
        post:
            tags:
                - BackofficeSystem
            operationId: BackofficeSystem_ListSev
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListSevRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.ListSevResponse'
    /v1/backoffice/user/comments/add:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_AddUserComment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddUserCommentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AddUserCommentResponse'
    /v1/backoffice/user/comments/list:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_ListUserComments
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListUserCommentsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListUserCommentsResponse'
    /v1/backoffice/user/identity/list/get:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_UserIdentityList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UserIdentityListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.UserIdentityListResponse'
    /v1/backoffice/user/identity/set:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_UserIdentityAudit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UserIdentityAuditRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.UserIdentityAuditResponse'
    /v1/backoffice/user/list:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_ListUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListUsersResponse'
    /v1/backoffice/user/operator-tags/config/get:
        post:
            tags:
                - BackofficeUser
            description: GetOperatorTagConfig returns follow-parent flag for the given operator ID.
            operationId: BackofficeUser_GetOperatorTagsConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorTagsConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorTagsConfigResponse'
    /v1/backoffice/user/operator-tags/config/set:
        post:
            tags:
                - BackofficeUser
            description: |-
                SetOperatorTagConfig sets or updates the follow_parent flag for an operator.
                 It will reverse the follow_parent flag if the record exists.
                 If the record doesn't exist, it will create a new one with follow_parent set to false.
            operationId: BackofficeUser_SetOperatorTagsConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SetOperatorTagsConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SetOperatorTagsConfigResponse'
    /v1/backoffice/user/operator-tags/get:
        post:
            tags:
                - BackofficeUser
            description: GetOperatorTags retrieves all tags of an operator or parent operator if follow_parent is true.
            operationId: BackofficeUser_GetOperatorTags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetOperatorTagsResponse'
    /v1/backoffice/user/operator-tags/set:
        post:
            tags:
                - BackofficeUser
            description: SetOperatorTags sets or updates the tags for an operator.
            operationId: BackofficeUser_SetOperatorTags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SetOperatorTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SetOperatorTagsResponse'
    /v1/backoffice/user/overview/get:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_GetUserOverview
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetUserOverviewRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetUserOverviewResponse'
    /v1/backoffice/user/profile/get:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_GetUserProfile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetUserProfileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetUserProfileResponse'
    /v1/backoffice/user/responsible-gambling/config/delete:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_DeleteUserResponsibleGamblingConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteUserResponsibleGamblingConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.DeleteResponsibleGamblingConfigResponse'
    /v1/backoffice/user/responsible-gambling/config/get:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_GetUserResponsibleGamblingConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetUserResponsibleGamblingConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetResponsibleGamblingConfigResponse'
    /v1/backoffice/user/send-email-verification-code:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_SendEmailVerificationCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SendEmailVerificationCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SendEmailVerificationCodeResponse'
    /v1/backoffice/user/tags/get:
        post:
            tags:
                - BackofficeUser
            description: GetUserTags retrieves all active tags associated with a user and also exists in the related operator's tag list.
            operationId: BackofficeUser_GetUserTags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetUserTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetUserTagsResponse'
    /v1/backoffice/user/tags/set:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_SetUserTags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SetUserTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.SetUserTagsResponse'
    /v1/backoffice/user/update:
        post:
            tags:
                - BackofficeUser
            operationId: BackofficeUser_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateUserResponse'
    /v1/backoffice/vip/config/get:
        post:
            tags:
                - BackofficeVip
            operationId: BackofficeVip_GetVipConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetVipConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetVipConfigResponse'
    /v1/backoffice/vip/level-config-template/create:
        post:
            tags:
                - BackofficeVip
            operationId: BackofficeVip_CreateVipLevelConfigTemplate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreateVipLevelConfigTemplateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.CreateVipLevelConfigTemplateResponse'
    /v1/backoffice/vip/level-config-template/delete:
        post:
            tags:
                - BackofficeVip
            operationId: BackofficeVip_DeleteVipLevelConfigTemplate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteVipLevelConfigTemplateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.DeleteVipLevelConfigTemplateResponse'
    /v1/backoffice/vip/level-config-template/get:
        post:
            tags:
                - BackofficeVip
            operationId: BackofficeVip_GetVipLevelConfigTemplate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetVipLevelConfigTemplateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetVipLevelConfigTemplateResponse'
    /v1/backoffice/vip/level-config-template/update:
        post:
            tags:
                - BackofficeVip
            operationId: BackofficeVip_UpdateVipLevelConfigTemplate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateVipLevelConfigTemplateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateVipLevelConfigTemplateResponse'
    /v1/backoffice/vip/setting/get:
        post:
            tags:
                - BackofficeVip
            description: VIP设置管理
            operationId: BackofficeVip_GetVipSetting
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetVipSettingRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.vip.service.v1.GetVipSettingResponse'
    /v1/backoffice/vip/setting/update:
        post:
            tags:
                - BackofficeVip
            operationId: BackofficeVip_UpdateVipSetting
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateVipSettingRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateVipSettingResponse'
    /v1/backoffice/wallet/balance-transactions/list:
        post:
            tags:
                - BackofficeWallet
            description: ListWalletBalanceTransactions provides balance transactions for a specific user in User transactions page.
            operationId: BackofficeWallet_ListWalletBalanceTransactions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListWalletBalanceTransactionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListWalletBalanceTransactionsResponse'
    /v1/backoffice/wallet/credit-transactions/get:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_GetWalletCreditTransactions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletCreditTransactionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletCreditTransactionsResponse'
    /v1/backoffice/wallet/credits/get:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_GetWalletCredits
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletCreditsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletCreditsResponse'
    /v1/backoffice/wallet/currencies/add:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_AddWalletCurrency
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.AddWalletCurrencyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.AddWalletCurrencyResponse'
    /v1/backoffice/wallet/currencies/list:
        post:
            tags:
                - BackofficeWallet
            description: ListWalletCurrencies call ListCurrencies in wallet service with aggregated and parent fields
            operationId: BackofficeWallet_ListWalletCurrencies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListWalletCurrenciesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.ListCurrenciesResponse'
    /v1/backoffice/wallet/currencies/update:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_UpdateWalletCurrency
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateWalletCurrencyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.UpdateOperatorCurrencyResponse'
    /v1/backoffice/wallet/currency/config/update:
        post:
            tags:
                - BackofficeWallet
            description: UpdateOperatorCurrencyConfig updates the config of a operator and its currency
            operationId: BackofficeWallet_UpdateOperatorCurrencyConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateOperatorCurrencyConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.UpdateOperatorCurrencyConfigResponse'
    /v1/backoffice/wallet/customer-records/export:
        post:
            tags:
                - BackofficeWallet
            description: ExportCustomerRecords creates a task to exports customer records for all users (with payment_deposit, payment_withdraw_freeze, game_bet, game_win and manual credit(this is not supported yet))
            operationId: BackofficeWallet_ExportCustomerRecords
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ExportCustomerRecordsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.ExportCustomerRecordsResponse'
    /v1/backoffice/wallet/customer-records/list:
        post:
            tags:
                - BackofficeWallet
            description: ListCustomerRecords lists customer records for all users (with payment_deposit, payment_withdraw_freeze, game_bet, game_win and manual credit(this is not supported yet))
            operationId: BackofficeWallet_ListCustomerRecords
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListCustomerRecordsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.ListCustomerRecordsResponse'
    /v1/backoffice/wallet/deduction-order/update:
        post:
            tags:
                - BackofficeWallet
            description: UpdateDeductionOrder updates the deduction order config based on operator context
            operationId: BackofficeWallet_UpdateDeductionOrder
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateDeductionOrderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.UpdateDeductionOrderResponse'
    /v1/backoffice/wallet/deposit-reward/config/get:
        post:
            tags:
                - BackofficeWallet
            description: GetDepositRewardConfig returns the default and custom deposit reward config based on currency and operator context
            operationId: BackofficeWallet_GetDepositRewardConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetDepositRewardConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetDepositRewardConfigResponse'
    /v1/backoffice/wallet/deposit-reward/sequences/delete:
        post:
            tags:
                - BackofficeWallet
            description: DeleteDepositRewardSequences deletes a deposit reward sequence of a operator currency config
            operationId: BackofficeWallet_DeleteDepositRewardSequences
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteDepositRewardSequencesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.DeleteDepositRewardSequencesResponse'
    /v1/backoffice/wallet/deposit-reward/sequences/set:
        post:
            tags:
                - BackofficeWallet
            description: SetDepositRewardSequences sets the deposit reward sequences of a operator currency config
            operationId: BackofficeWallet_SetDepositRewardSequences
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SetDepositRewardSequencesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.SetDepositRewardSequencesResponse'
    /v1/backoffice/wallet/exchange-rates/get:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_GetExchangeRates
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetExchangeRatesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.GetExchangeRatesResponse'
    /v1/backoffice/wallet/fica/config/get:
        post:
            tags:
                - BackofficeWallet
            description: GetFICAThresholdConfig gets the FICA threshold config for an operator of all currencies
            operationId: BackofficeWallet_GetFICAThresholdConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetFICAThresholdConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetFICAThresholdConfigResponse'
    /v1/backoffice/wallet/fica/config/set:
        post:
            tags:
                - BackofficeWallet
            description: SetFICAThresholdConfig sets the FICA threshold config for an operator and its specific currency
            operationId: BackofficeWallet_SetFICAThresholdConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.SetFICAThresholdConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.SetFICAThresholdConfigResponse'
    /v1/backoffice/wallet/fica/transactions/export:
        post:
            tags:
                - BackofficeWallet
            description: ExportFICAThresholdTransactions creates a task to exports FICA threshold transactions for all users (with payment_deposit, payment_withdraw_freeze, game_bet, game_win, deposit_reward)
            operationId: BackofficeWallet_ExportFICAThresholdTransactions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ExportFICAThresholdTransactionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.ExportFICAThresholdTransactionsResponse'
    /v1/backoffice/wallet/fica/transactions/list:
        post:
            tags:
                - BackofficeWallet
            description: ListFICAThresholdTransactions lists the threshold transactions (with payment_deposit, payment_withdraw_freeze, game_bet, game_win, deposit_reward) for a currency
            operationId: BackofficeWallet_ListFICAThresholdTransactions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListFICAThresholdTransactionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.ListFICAThresholdTransactionsResponse'
    /v1/backoffice/wallet/gamification/get:
        post:
            tags:
                - BackofficeWallet
            description: GetGamificationCurrencyConfig returns the currency config and the deduction order config based on currency and operator context
            operationId: BackofficeWallet_GetGamificationCurrencyConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetGamificationCurrencyConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetGamificationCurrencyConfigResponse'
    /v1/backoffice/wallet/get:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_GetWallets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetWalletsResponse'
    /v1/backoffice/wallet/manual/credit:
        post:
            tags:
                - BackofficeWallet
            description: ManualCredit
            operationId: BackofficeWallet_ManualCredit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.CreditRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.CreditResponse'
    /v1/backoffice/wallet/manual/debit:
        post:
            tags:
                - BackofficeWallet
            description: ManualDebit
            operationId: BackofficeWallet_ManualDebit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DebitRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.DebitResponse'
    /v1/backoffice/wallet/manual/journal-entries/export:
        post:
            tags:
                - BackofficeWallet
            description: ExportManualJournalEntries creates a task to exports manual journal entries for all users
            operationId: BackofficeWallet_ExportManualJournalEntries
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ExportManualJournalEntriesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.ExportManualJournalEntriesResponse'
    /v1/backoffice/wallet/manual/journal-entries/list:
        post:
            tags:
                - BackofficeWallet
            description: ListManualJournalEntries lists manual journal entries for all users
            operationId: BackofficeWallet_ListManualJournalEntries
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListManualJournalEntriesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.ListManualJournalEntriesResponse'
    /v1/backoffice/wallet/operator/balance-freeze:
        post:
            tags:
                - BackofficeWallet
            description: OperatorFreeze freezes cash of an operator
            operationId: BackofficeWallet_OperatorBalanceFreeze
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceFreezeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceFreezeResponse'
    /v1/backoffice/wallet/operator/balance-rollback:
        post:
            tags:
                - BackofficeWallet
            description: OperatorRollback rolls back frozen cash of an operator
            operationId: BackofficeWallet_OperatorBalanceRollback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceRollbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceRollbackResponse'
    /v1/backoffice/wallet/operator/balance-settle:
        post:
            tags:
                - BackofficeWallet
            description: OperatorSettle settles frozen cash of an operator
            operationId: BackofficeWallet_OperatorBalanceSettle
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceSettleRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceSettleResponse'
    /v1/backoffice/wallet/operator/balance/get:
        post:
            tags:
                - BackofficeWallet
            description: GetOperatorBalance gets the balances of an operator
            operationId: BackofficeWallet_GetOperatorBalance
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.GetOperatorBalanceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetOperatorBalanceResponse'
    /v1/backoffice/wallet/operator/balance/update:
        post:
            tags:
                - BackofficeWallet
            description: UpdateOperatorBalance updates an operator balance， now only support update the enabled status
            operationId: BackofficeWallet_UpdateOperatorBalance
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateOperatorBalanceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateOperatorBalanceResponse'
    /v1/backoffice/wallet/operator/balances/list:
        post:
            tags:
                - BackofficeWallet
            description: ListOperatorBalances lists all operator balances which belong to the backoffice operator
            operationId: BackofficeWallet_ListOperatorBalances
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorBalancesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.ListBottomOperatorBalancesResponse'
    /v1/backoffice/wallet/operator/swap:
        post:
            tags:
                - BackofficeWallet
            description: OperatorSwap swaps cash between two balances of the same company's operator
            operationId: BackofficeWallet_OperatorSwap
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.OperatorSwapRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.OperatorSwapResponse'
    /v1/backoffice/wallet/operator/transactions/list:
        post:
            tags:
                - BackofficeWallet
            description: ListOperatorBalanceTransactions lists the balance transactions of an operator
            operationId: BackofficeWallet_ListOperatorBalanceTransactions
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorBalanceTransactionsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorBalanceTransactionsResponse'
    /v1/backoffice/wallet/operator/transfer:
        post:
            tags:
                - BackofficeWallet
            description: OperatorTransfer transfers cash from one operator to its company operator, only allow USD, USDT, USDC, 1:1 exchange
            operationId: BackofficeWallet_OperatorTransfer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.OperatorTransferRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.OperatorTransferResponse'
    /v1/backoffice/wallet/responsible-gambling/config/delete:
        post:
            tags:
                - BackofficeWallet
            description: DeleteWalletResponsibleGamblingConfig deletes gambling config for a user's currency
            operationId: BackofficeWallet_DeleteWalletResponsibleGamblingConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.DeleteWalletResponsibleGamblingConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.DeleteResponsibleGamblingConfigResponse'
    /v1/backoffice/wallet/responsible-gambling/configs/list:
        post:
            tags:
                - BackofficeWallet
            description: ListWalletResponsibleGamblingConfigs lists gambling configs for a user with all currencies
            operationId: BackofficeWallet_ListWalletResponsibleGamblingConfigs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.ListWalletResponsibleGamblingConfigsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.ListResponsibleGamblingConfigsResponse'
    /v1/backoffice/wallet/update:
        post:
            tags:
                - BackofficeWallet
            operationId: BackofficeWallet_UpdateWallet
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.backoffice.service.v1.UpdateWalletRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.backoffice.service.v1.UpdateWalletResponse'
    /v1/bcpay/deposit/add:
        post:
            tags:
                - Bcpay
            operationId: Bcpay_CreateDeposit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.bcpay.service.v1.CreateDepositRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.bcpay.service.v1.CreateDepositResponse'
    /v1/bcpay/withdraw/add:
        post:
            tags:
                - Bcpay
            operationId: Bcpay_CreateWithdraw
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.bcpay.service.v1.CreateWithdrawRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.bcpay.service.v1.CreateWithdrawResponse'
    /v1/game/balance:
        post:
            tags:
                - Game
            operationId: Game_Balance
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.BalanceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.BalanceResponse'
    /v1/game/bets/list:
        post:
            tags:
                - Game
            operationId: Game_ListBets
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.ListBetsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ListBetsResponse'
    /v1/game/categories/list:
        post:
            tags:
                - Game
            operationId: Game_ListCategories
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.ListCategoriesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ListCategoriesResponse'
    /v1/game/create-session:
        post:
            tags:
                - Game
            operationId: Game_CreateSession
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.CreateSessionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.CreateSessionResponse'
    /v1/game/get:
        post:
            tags:
                - Game
            operationId: Game_GetGame
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.GetGameRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.GetGameResponse'
    /v1/game/list:
        post:
            tags:
                - Game
            operationId: Game_ListGames
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.ListGamesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ListGamesResponse'
    /v1/game/play:
        post:
            tags:
                - Game
            operationId: Game_Play
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.PlayRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.PlayResponse'
    /v1/game/providers/list:
        post:
            tags:
                - Game
            operationId: Game_ListProviders
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.ListProvidersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.ListProvidersResponse'
    /v1/game/rollback:
        post:
            tags:
                - Game
            operationId: Game_Rollback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.game.service.v1.RollbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.game.service.v1.RollbackResponse'
    /v1/payment/address/get:
        post:
            tags:
                - Payment
            operationId: Payment_GetAddress
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetAddressRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetAddressResponse'
    /v1/payment/bankcard/add:
        post:
            tags:
                - Payment
            operationId: Payment_AddUserBankCard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.AddBankCardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.AddBankCardResponse'
    /v1/payment/bankcard/delete:
        post:
            tags:
                - Payment
            operationId: Payment_DeleteUsesrBankCard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.DeleteBankCardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.DeleteBankCardResponse'
    /v1/payment/bankcard/list:
        post:
            tags:
                - Payment
            operationId: Payment_GetUserBankCardList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetBankCardListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetBankCardListResponse'
    /v1/payment/bankcard/update:
        post:
            tags:
                - Payment
            operationId: Payment_UpdateUserBankCard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.UpdateBankCardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.UpdateBankCardResponse'
    /v1/payment/bankinfo/schema/get:
        post:
            tags:
                - Payment
            operationId: Payment_GetBankSchema
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetBankSchemaRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetBankSchemaResponse'
    /v1/payment/buycrypto/add:
        post:
            tags:
                - Payment
            operationId: Payment_BuyCryptoViaFiat
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.BuyCryptoViaFiatRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.BuyCryptoViaFiatResponse'
    /v1/payment/buycrypto/currency/list:
        post:
            tags:
                - Payment
            operationId: Payment_BuyCryptoViaFiatCurrentList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.BuyCryptoViaFiatCurrentListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.BuyCryptoViaFiatCurrentListResponse'
    /v1/payment/buycrypto/price/get:
        post:
            tags:
                - Payment
            operationId: Payment_BuyCryptoViaFiatPriceQuery
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.BuyCryptoViaFiatPriceQueryRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.BuyCryptoViaFiatPriceQueryResponse'
    /v1/payment/channel/page:
        post:
            tags:
                - Payment
            description: |-
                Get payment channel page with pagination and filters
                 Retrieves a paginated list of payment channels with optional filtering
                 Error code: GET_PAYMENT_CHANNEL_PAGE_FAILED(50003) - Failed to get payment channel page
            operationId: Payment_GetPaymentChannelPage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetPaymentChannelPageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetPaymentChannelPageResponse'
    /v1/payment/deposit/callback:
        post:
            tags:
                - Payment
            description: |-
                Deposit callback
                 Handles callbacks from payment gateways for deposit status updates
                 This endpoint is called by payment providers to notify of completed or failed deposits
                 Error code: DEPOSIT_CALLBACK_FAILED(50006) - Failed to process deposit callback
            operationId: Payment_DepositCallback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.DepositCallbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.DepositCallbackResponse'
    /v1/payment/deposit/initiate:
        post:
            tags:
                - Payment
            description: |-
                Initiate a deposit transaction
                 Starts a new deposit process and returns payment information
                 Error code: INITIATE_DEPOSIT_FAILED(50004) - Failed to initiate deposit transaction
            operationId: Payment_InitiateDeposit
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.InitiateDepositRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.InitiateDepositResponse'
    /v1/payment/operator/deposit/callback:
        post:
            tags:
                - Payment
            description: |-
                Deposit callback
                 Handles callbacks from payment gateways for deposit status updates
                 This endpoint is called by payment providers to notify of completed or failed deposits
                 Error code: DEPOSIT_CALLBACK_FAILED(50006) - Failed to process deposit callback
            operationId: Payment_OperatorDepositCallback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.DepositCallbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.DepositCallbackResponse'
    /v1/payment/operator/withdraw/callback:
        post:
            tags:
                - Payment
            description: |-
                Withdraw callback
                 Handles callbacks from payment gateways for withdrawal status updates
                 This endpoint is called by payment providers to notify of completed or failed withdrawals
                 Error code: WITHDRAW_CALLBACK_FAILED(50007) - Failed to process withdrawal callback
            operationId: Payment_OperatorWithdrawCallback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.WithdrawCallbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.WithdrawCallbackResponse'
    /v1/payment/transaction/page:
        post:
            tags:
                - Payment
            description: |-
                Get transaction page with pagination and filters
                 Retrieves a paginated list of transactions with optional filtering
                 Error code: GET_TRANSACTION_PAGE_FAILED(50008) - Failed to get transaction page
            operationId: Payment_GetTransactionPage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.GetTransactionPageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.GetTransactionPageResponse'
    /v1/payment/withdraw/callback:
        post:
            tags:
                - Payment
            description: |-
                Withdraw callback
                 Handles callbacks from payment gateways for withdrawal status updates
                 This endpoint is called by payment providers to notify of completed or failed withdrawals
                 Error code: WITHDRAW_CALLBACK_FAILED(50007) - Failed to process withdrawal callback
            operationId: Payment_WithdrawCallback
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/payment.service.v1.WithdrawCallbackRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.WithdrawCallbackResponse'
    /v1/review/withdraw:
        post:
            tags:
                - Review
            operationId: Review_CreateWithdraw
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.review.service.v1.CreateWithdrawRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.review.service.v1.CreateWithdrawResponse'
    /v1/user/account-settings/status/get:
        post:
            tags:
                - User
            operationId: User_GetUserAccountSettingsStatus
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.GetUserAccountSettingsStatusRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetUserAccountSettingsStatusResponse'
    /v1/user/account/update:
        post:
            tags:
                - User
            operationId: User_CloseAccount
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.CloseAccountRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.CloseAccountResponse'
    /v1/user/auth/login:
        post:
            tags:
                - User
            description: |-
                Login an existing user with password-based authentication.
                 Users can login using their registered credentials.
            operationId: User_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/logout:
        post:
            tags:
                - User
            description: |-
                Logout the current user.
                 Invalidates the current session and refresh token.
            operationId: User_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.LogoutResponse'
    /v1/user/auth/oauth:
        post:
            tags:
                - User
            description: |-
                Register or login using OAuth provider.
                 Supports multiple OAuth providers like Google, Facebook, and Twitter.
            operationId: User_RegisterOrLoginWithOAuth
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.OAuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/password/reset:
        post:
            tags:
                - User
            description: Reset password using verification code
            operationId: User_ResetPasswordWithCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.ResetPasswordWithCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.ResetPasswordWithCodeResponse'
    /v1/user/auth/password/reset-code/send:
        post:
            tags:
                - User
            description: Send password reset verification code to email
            operationId: User_SendPasswordResetCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.SendPasswordResetCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.SendPasswordResetCodeResponse'
    /v1/user/auth/refresh:
        post:
            tags:
                - User
            description: |-
                Refresh the access token using a refresh token.
                 Used to obtain a new access token when the current one expires.
            operationId: User_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.RefreshTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.RefreshTokenResponse'
    /v1/user/auth/register:
        post:
            tags:
                - User
            description: |-
                Register a new user with password-based authentication.
                 This endpoint allows users to create a new account using various identity providers.
            operationId: User_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/telegram:
        post:
            tags:
                - User
            description: |-
                Register or login using Telegram authentication.
                 Uses Telegram's login widget for authentication.
            operationId: User_RegisterOrLoginWithTelegram
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.TelegramAuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/email/verification-code/send:
        post:
            tags:
                - User
            operationId: User_SendEmailVerificationCode
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.SendEmailVerificationCodeRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.SendEmailVerificationCodeResponse'
    /v1/user/email/verify/get:
        post:
            tags:
                - User
            operationId: User_VerifyEmail
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.VerifyEmailRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.VerifyEmailResponse'
    /v1/user/get:
        post:
            tags:
                - User
            description: |-
                Get user information by userId.
                 Returns basic user information for the specified user.
            operationId: User_GetUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.GetUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetUserResponse'
    /v1/user/identity/update:
        post:
            tags:
                - User
            operationId: User_UpdateUserIdentity
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.UpdateUserIdentityRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.UpdateUserIdentityResponse'
    /v1/user/kyc/filestore/upload:
        post:
            tags:
                - UserFileStore
            operationId: UserFileStore_UploadKycFile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.UploadKycRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.UploadKycResponse'
    /v1/user/operator/account-settings/get:
        post:
            tags:
                - User
            operationId: User_GetOperatorAccountSettings
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.GetOperatorAccountSettingsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetOperatorAccountSettingsResponse'
    /v1/user/responsible-gambling/config/add:
        post:
            tags:
                - User
            operationId: User_AddResponsibleGamblingConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.AddResponsibleGamblingConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AddResponsibleGamblingConfigResponse'
    /v1/user/responsible-gambling/config/delete:
        post:
            tags:
                - User
            operationId: User_DeleteResponsibleGamblingConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.DeleteResponsibleGamblingConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.DeleteResponsibleGamblingConfigResponse'
    /v1/user/responsible-gambling/config/get:
        post:
            tags:
                - User
            operationId: User_GetResponsibleGamblingConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.GetResponsibleGamblingConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetResponsibleGamblingConfigResponse'
    /v1/user/tags/get:
        post:
            tags:
                - User
            description: |-
                GetUserTags retrieves all active tags associated for the current user
                 and also exists in the related operator's tag list.
            operationId: User_GetUserTags
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.GetUserTagsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetUserTagsResponse'
    /v1/user/update:
        post:
            tags:
                - User
            operationId: User_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.UpdateUserResponse'
    /v1/user/vip/level/get:
        post:
            tags:
                - User
            operationId: User_GetUserVipLevel
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.GetUserVipLevelRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.vip.service.v1.GetUserVipLevelResponse'
    /v1/user/vip/operator/settings/get:
        post:
            tags:
                - User
            operationId: User_GetOperatorVipSettings
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.GetOperatorVipSettingsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.vip.service.v1.GetOperatorVipSettingsResponse'
    /v1/user/vip/reward/claim:
        post:
            tags:
                - User
            operationId: User_ClaimVipReward
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.ClaimVipRewardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.vip.service.v1.ClaimVipRewardResponse'
    /v1/user/vip/reward/claim/confirm:
        post:
            tags:
                - User
            operationId: User_ConfirmClaimVipReward
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.ConfirmClaimVipRewardRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.vip.service.v1.ConfirmClaimVipRewardResponse'
    /v1/user/vip/reward/claimable/get:
        post:
            tags:
                - User
            operationId: User_GetClaimableVipRewards
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.GetClaimableVipRewardsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.vip.service.v1.GetClaimableVipRewardsResponse'
    /v1/user/vip/reward/slider/update:
        post:
            tags:
                - User
            operationId: User_UpdateVipRewardSlider
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.UpdateVipRewardSliderRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.vip.service.v1.UpdateVipRewardSliderResponse'
    /v1/wallet/balance/details:
        post:
            tags:
                - Wallet
            description: GetUserBalanceDetails returns the cash and credit details of every credit of the user balance(one currency only)
            operationId: Wallet_GetUserBalanceDetails
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.GetUserBalanceDetailsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetUserBalanceDetailsResponse'
    /v1/wallet/balances/list:
        post:
            tags:
                - Wallet
            description: GetUserBalances returns the balances of all currencies of the user
            operationId: Wallet_GetUserBalances
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.GetUserBalancesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetUserBalancesResponse'
    /v1/wallet/bonus-transfer:
        post:
            tags:
                - Wallet
            description: BonusTransfer is used to transfer from one credit's bonus to generate a new credit's cash
            operationId: Wallet_BonusTransfer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.BonusTransferRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.BonusTransferResponse'
    /v1/wallet/currencies/get:
        post:
            tags:
                - Wallet
            operationId: Wallet_GetCurrencies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.GetCurrenciesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetCurrenciesResponse'
    /v1/wallet/deposit-reward/user-sequence:
        post:
            tags:
                - Wallet
            description: GetUserDepositRewardSequence returns the current available deposit reward sequence of the user based on the user deposit stats
            operationId: Wallet_GetUserDepositRewardSequence
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.GetUserDepositRewardSequenceRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetUserDepositRewardSequenceResponse'
    /v1/wallet/exchange-rates/base-currency:
        post:
            tags:
                - Wallet
            operationId: Wallet_GetExchangeRatesWithBaseCurrency
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyResponse'
    /v1/wallet/responsible-gambling/config/add:
        post:
            tags:
                - Wallet
            description: AddResponsibleGamblingConfig adds gambling config for a user's currency
            operationId: Wallet_AddResponsibleGamblingConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.AddResponsibleGamblingConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.AddResponsibleGamblingConfigResponse'
    /v1/wallet/responsible-gambling/config/delete:
        post:
            tags:
                - Wallet
            description: DeleteResponsibleGamblingConfig deletes gambling config for a user's currency
            operationId: Wallet_DeleteResponsibleGamblingConfig
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.DeleteResponsibleGamblingConfigRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.DeleteResponsibleGamblingConfigResponse'
    /v1/wallet/responsible-gambling/configs/list:
        post:
            tags:
                - Wallet
            description: ListResponsibleGamblingConfigs lists gambling configs for a user with all currencies
            operationId: Wallet_ListResponsibleGamblingConfigs
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.wallet.service.v1.ListResponsibleGamblingConfigsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.ListResponsibleGamblingConfigsResponse'
components:
    schemas:
        api.affiliate.service.v1.AdvancedOptions:
            type: object
            properties:
                holdPeriodDays:
                    type: integer
                    format: int32
        api.affiliate.service.v1.AffiliateInfo:
            type: object
            properties:
                companyName:
                    type: string
                status:
                    type: string
                commissionPlanIds:
                    type: array
                    items:
                        type: string
                invoicePeriod:
                    type: string
                photoUrl:
                    type: string
                email:
                    type: string
                password:
                    type: string
                twoFaEnabled:
                    type: boolean
                firstname:
                    type: string
                lastname:
                    type: string
                phone:
                    type: string
                contactTypes:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.ContactType'
                country:
                    type: string
                region:
                    type: string
                city:
                    type: string
                postCode:
                    type: string
                street:
                    type: string
                trafficSourceIds:
                    type: array
                    items:
                        type: string
                teammateIds:
                    type: array
                    items:
                        type: string
                internalInfo:
                    type: string
        api.affiliate.service.v1.CPAConfig:
            type: object
            properties:
                enabled:
                    type: boolean
                commissionType:
                    type: string
                flat:
                    $ref: '#/components/schemas/api.affiliate.service.v1.FlatCommission'
                flatByCountries:
                    $ref: '#/components/schemas/api.affiliate.service.v1.FlatByCountriesCommission'
                progressive:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ProgressiveCommission'
                progressiveByCountries:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ProgressiveByCountriesCommission'
                qualification:
                    $ref: '#/components/schemas/api.affiliate.service.v1.Qualification'
                advancedOptions:
                    $ref: '#/components/schemas/api.affiliate.service.v1.AdvancedOptions'
        api.affiliate.service.v1.CPCConfig:
            type: object
            properties:
                enabled:
                    type: boolean
                commissionType:
                    type: string
                flat:
                    $ref: '#/components/schemas/api.affiliate.service.v1.FlatCommission'
                flatByCountries:
                    $ref: '#/components/schemas/api.affiliate.service.v1.FlatByCountriesCommission'
        api.affiliate.service.v1.CPLConfig:
            type: object
            properties:
                enabled:
                    type: boolean
                commissionType:
                    type: string
                flat:
                    $ref: '#/components/schemas/api.affiliate.service.v1.FlatCommission'
                flatByCountries:
                    $ref: '#/components/schemas/api.affiliate.service.v1.FlatByCountriesCommission'
                progressive:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ProgressiveCommission'
                progressiveByCountries:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ProgressiveByCountriesCommission'
                qualification:
                    $ref: '#/components/schemas/api.affiliate.service.v1.Qualification'
                advancedOptions:
                    $ref: '#/components/schemas/api.affiliate.service.v1.AdvancedOptions'
        api.affiliate.service.v1.Campaign:
            type: object
            properties:
                domain:
                    type: string
                campaignName:
                    type: string
                channelType:
                    type: string
                channelConfig:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ChannelConfig'
                params:
                    $ref: '#/components/schemas/api.affiliate.service.v1.Params'
                eventMappings:
                    $ref: '#/components/schemas/api.affiliate.service.v1.EventMappings'
        api.affiliate.service.v1.ChannelConfig:
            type: object
            properties:
                facebookChannelConfig:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ChannelConfig_FacebookChannelConfig'
                tiktokChannelConfig:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ChannelConfig_TiktokChannelConfig'
                kwaiChannelConfig:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ChannelConfig_KwaiChannelConfig'
                appsflyerChannelConfig:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ChannelConfig_AppsflyerChannelConfig'
                adjustChannelConfig:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ChannelConfig_AdjustChannelConfig'
                agencyChannelConfig:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ChannelConfig_AgencyChannelConfig'
                googleAdsChannelConfig:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ChannelConfig_GoogleAdsChannelConfig'
        api.affiliate.service.v1.ChannelConfig_AdjustChannelConfig:
            type: object
            properties:
                appPlatform:
                    type: string
                appToken:
                    type: string
                bundleId:
                    type: string
        api.affiliate.service.v1.ChannelConfig_AgencyChannelConfig:
            type: object
            properties:
                campaignId:
                    type: string
        api.affiliate.service.v1.ChannelConfig_AppsflyerChannelConfig:
            type: object
            properties:
                appPlatform:
                    type: string
                bundleId:
                    type: string
                devKey:
                    type: string
        api.affiliate.service.v1.ChannelConfig_FacebookChannelConfig:
            type: object
            properties:
                pixelId:
                    type: string
                accessToken:
                    type: string
        api.affiliate.service.v1.ChannelConfig_GoogleAdsChannelConfig:
            type: object
            properties:
                customerId:
                    type: string
                conversionAction:
                    type: string
        api.affiliate.service.v1.ChannelConfig_KwaiChannelConfig:
            type: object
            properties:
                pixelId:
                    type: string
                accessToken:
                    type: string
                trackFlag:
                    type: boolean
        api.affiliate.service.v1.ChannelConfig_TiktokChannelConfig:
            type: object
            properties:
                pixelId:
                    type: string
                accessToken:
                    type: string
        api.affiliate.service.v1.CommissionPlan:
            type: object
            properties:
                commissionPlanId:
                    type: string
                title:
                    type: string
                status:
                    type: string
                source:
                    type: string
                types:
                    type: array
                    items:
                        type: string
                assignedCount:
                    type: integer
                    format: int32
                baseCurrency:
                    type: string
                sourceOperatorName:
                    type: string
        api.affiliate.service.v1.CommissionPlanConfig:
            type: object
            properties:
                cpa:
                    $ref: '#/components/schemas/api.affiliate.service.v1.CPAConfig'
                revshare:
                    $ref: '#/components/schemas/api.affiliate.service.v1.RevShareConfig'
                cpl:
                    $ref: '#/components/schemas/api.affiliate.service.v1.CPLConfig'
                cpc:
                    $ref: '#/components/schemas/api.affiliate.service.v1.CPCConfig'
                flatFee:
                    $ref: '#/components/schemas/api.affiliate.service.v1.FlatFeeConfig'
        api.affiliate.service.v1.ContactType:
            type: object
            properties:
                label:
                    type: string
                contactValue:
                    type: string
        api.affiliate.service.v1.CountryCommissionGroup:
            type: object
            properties:
                countries:
                    type: array
                    items:
                        type: string
                commission:
                    type: string
        api.affiliate.service.v1.CountryProgressiveGroup:
            type: object
            properties:
                countries:
                    type: array
                    items:
                        type: string
                ranges:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.ProgressiveCommissionRange'
        api.affiliate.service.v1.CountryProgressiveRateGroup:
            type: object
            properties:
                countries:
                    type: array
                    items:
                        type: string
                ranges:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.RateRange'
        api.affiliate.service.v1.CountryRateGroup:
            type: object
            properties:
                countries:
                    type: array
                    items:
                        type: string
                rate:
                    type: string
        api.affiliate.service.v1.CreateAffiliateResponse:
            type: object
            properties: {}
        api.affiliate.service.v1.CreateCampaignResponse:
            type: object
            properties:
                campaignId:
                    type: string
        api.affiliate.service.v1.CreateCommissionPlanResponse:
            type: object
            properties: {}
        api.affiliate.service.v1.DeleteAffiliateResponse:
            type: object
            properties: {}
        api.affiliate.service.v1.DeleteCampaignResponse:
            type: object
            properties: {}
        api.affiliate.service.v1.DeleteCommissionPlanResponse:
            type: object
            properties: {}
        api.affiliate.service.v1.EventMappings:
            type: object
            properties:
                register:
                    $ref: '#/components/schemas/api.affiliate.service.v1.EventMappings_EventMapping'
                firstDeposit:
                    $ref: '#/components/schemas/api.affiliate.service.v1.EventMappings_EventMapping'
                secondDeposit:
                    $ref: '#/components/schemas/api.affiliate.service.v1.EventMappings_EventMapping'
                thirdDeposit:
                    $ref: '#/components/schemas/api.affiliate.service.v1.EventMappings_EventMapping'
                withdrawal:
                    $ref: '#/components/schemas/api.affiliate.service.v1.EventMappings_EventMapping'
                gameStart:
                    $ref: '#/components/schemas/api.affiliate.service.v1.EventMappings_EventMapping'
                gameBet:
                    $ref: '#/components/schemas/api.affiliate.service.v1.EventMappings_EventMapping'
        api.affiliate.service.v1.EventMappings_EventMapping:
            type: object
            properties:
                channelEvent:
                    type: string
                customName:
                    type: string
        api.affiliate.service.v1.FlatByCountriesCommission:
            type: object
            properties:
                countryGroups:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.CountryCommissionGroup'
                otherCountriesCommission:
                    type: string
        api.affiliate.service.v1.FlatByCountriesRateCommission:
            type: object
            properties:
                countryGroups:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.CountryRateGroup'
                otherCountriesRate:
                    type: string
        api.affiliate.service.v1.FlatCommission:
            type: object
            properties:
                commission:
                    type: string
        api.affiliate.service.v1.FlatFeeConfig:
            type: object
            properties:
                enabled:
                    type: boolean
                period:
                    type: string
                amount:
                    type: string
                startTime:
                    type: string
                    format: date-time
        api.affiliate.service.v1.FlatRateCommission:
            type: object
            properties:
                rate:
                    type: string
        api.affiliate.service.v1.GetAffiliateResponse:
            type: object
            properties:
                affiliate:
                    $ref: '#/components/schemas/api.affiliate.service.v1.AffiliateInfo'
                affiliateId:
                    type: string
        api.affiliate.service.v1.GetCommissionPlanResponse:
            type: object
            properties:
                userId:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                title:
                    type: string
                status:
                    type: string
                baseCurrency:
                    type: string
                planConfig:
                    $ref: '#/components/schemas/api.affiliate.service.v1.CommissionPlanConfig'
        api.affiliate.service.v1.ListAffiliatesResponse:
            type: object
            properties:
                affiliates:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.ListAffiliatesResponse_Affiliate'
                total:
                    type: integer
                    format: int32
                activeCount:
                    type: integer
                    format: int32
                inactiveCount:
                    type: integer
                    format: int32
                pendingCount:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.affiliate.service.v1.ListAffiliatesResponse_Affiliate:
            type: object
            properties:
                affiliateId:
                    type: string
                photoUrl:
                    type: string
                companyName:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                retailerOperatorName:
                    type: string
                companyOperatorName:
                    type: string
                operatorName:
                    type: string
                trafficSourceNames:
                    type: array
                    items:
                        type: string
                status:
                    type: string
                commissionPlanNames:
                    type: array
                    items:
                        type: string
                teammateNames:
                    type: array
                    items:
                        type: string
                lastLoginIp:
                    type: string
                balanceUsd:
                    type: string
                balanceReportingCurrency:
                    type: string
                commisionsUsd:
                    type: string
                commisionsReportingCurrency:
                    type: string
        api.affiliate.service.v1.ListAllCommissionPlansResponse:
            type: object
            properties:
                commissionPlans:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.CommissionPlan'
        api.affiliate.service.v1.ListCampaignsResponse:
            type: object
            properties:
                campaigns:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.ListCampaignsResponse_CampaignInfo'
                total:
                    type: integer
                    format: int32
                totalEnabled:
                    type: integer
                    format: int32
                totalDisabled:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.affiliate.service.v1.ListCampaignsResponse_CampaignInfo:
            type: object
            properties:
                campaignId:
                    type: string
                affiliateCompanyName:
                    type: string
                affiliateId:
                    type: string
                systemOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                companyOperatorName:
                    type: string
                operatorName:
                    type: string
                campaignName:
                    type: string
                eventMappingsStatus:
                    type: string
                eventMappingsCount:
                    type: integer
                    format: int32
                enabled:
                    type: boolean
                campaign:
                    $ref: '#/components/schemas/api.affiliate.service.v1.Campaign'
        api.affiliate.service.v1.ListCommissionPlansResponse:
            type: object
            properties:
                commissionPlans:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.CommissionPlan'
                totalCount:
                    type: integer
                    format: int32
                activeCount:
                    type: integer
                    format: int32
                pausedCount:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.affiliate.service.v1.Params:
            type: object
            properties:
                predefinedParameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.Params_Parameter'
                customParameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.Params_Parameter'
        api.affiliate.service.v1.Params_Parameter:
            type: object
            properties:
                name:
                    type: string
                value:
                    type: string
        api.affiliate.service.v1.ProgressiveByCountriesCommission:
            type: object
            properties:
                metric:
                    type: string
                countryGroups:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.CountryProgressiveGroup'
                otherCountriesRanges:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.ProgressiveCommissionRange'
        api.affiliate.service.v1.ProgressiveByCountriesRateCommission:
            type: object
            properties:
                metric:
                    type: string
                countryGroups:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.CountryProgressiveRateGroup'
                otherCountriesRanges:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.RateRange'
        api.affiliate.service.v1.ProgressiveCommission:
            type: object
            properties:
                metric:
                    type: string
                ranges:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.ProgressiveCommissionRange'
        api.affiliate.service.v1.ProgressiveCommissionRange:
            type: object
            properties:
                from:
                    type: string
                to:
                    type: string
                commission:
                    type: string
        api.affiliate.service.v1.ProgressiveRateCommission:
            type: object
            properties:
                metric:
                    type: string
                ranges:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.affiliate.service.v1.RateRange'
        api.affiliate.service.v1.Qualification:
            type: object
            properties:
                minFtdAmount:
                    type: string
                minDepositsCount:
                    type: integer
                    format: int32
                minDepositsAmount:
                    type: string
                minBetsCount:
                    type: integer
                    format: int32
                minBetsAmount:
                    type: string
                timeLimitAfterRegistrationDays:
                    type: integer
                    format: int32
                timeLimitAfterFtdDays:
                    type: integer
                    format: int32
                allowedPlayerStatuses:
                    type: string
        api.affiliate.service.v1.RateRange:
            type: object
            properties:
                from:
                    type: string
                to:
                    type: string
                rate:
                    type: string
        api.affiliate.service.v1.RevShareConfig:
            type: object
            properties:
                enabled:
                    type: boolean
                basedOn:
                    type: string
                negativeCarryover:
                    type: string
                commissionType:
                    type: string
                flat:
                    $ref: '#/components/schemas/api.affiliate.service.v1.FlatRateCommission'
                flatByCountries:
                    $ref: '#/components/schemas/api.affiliate.service.v1.FlatByCountriesRateCommission'
                progressive:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ProgressiveRateCommission'
                progressiveByCountries:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ProgressiveByCountriesRateCommission'
                qualification:
                    $ref: '#/components/schemas/api.affiliate.service.v1.Qualification'
        api.affiliate.service.v1.UpdateAffiliateResponse:
            type: object
            properties: {}
        api.affiliate.service.v1.UpdateCampaignResponse:
            type: object
            properties: {}
        api.affiliate.service.v1.UpdateCommissionPlanResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.AccountInfoRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.AccountInfoResponse:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                mobile:
                    type: string
                emailVerified:
                    type: boolean
                mobileVerified:
                    type: boolean
                enabled:
                    type: boolean
                role:
                    $ref: '#/components/schemas/api.backoffice.service.v1.Role'
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                reportingCurrency:
                    $ref: '#/components/schemas/api.wallet.service.v1.Currency'
                subdomain:
                    type: string
                backofficeSubdomain:
                    type: string
                operatorMode:
                    type: string
        api.backoffice.service.v1.ActiveUsersData_Data:
            type: object
            properties:
                activeUsers:
                    type: integer
                    format: int32
        api.backoffice.service.v1.AddAccountRequest:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                mobile:
                    type: string
                password:
                    type: string
                roleId:
                    type: string
            description: Account related messages
        api.backoffice.service.v1.AddAccountResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.AddAdjustmentRequest:
            type: object
            properties:
                item:
                    type: string
                    description: Basic information
                retailerOperatorId:
                    type: string
                companyOperatorId:
                    type: string
                operatorId:
                    type: string
                appliedDate:
                    type: string
                    description: Financial information
                currency:
                    type: string
                amount:
                    type: string
                description:
                    type: string
                periodKey:
                    type: string
        api.backoffice.service.v1.AddAdjustmentResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.AddBankAccountRequest:
            type: object
            properties:
                currency:
                    type: string
                country:
                    type: string
                maxAmount:
                    type: string
                maxAmountPerTrans:
                    type: string
                maxTransLimit:
                    type: integer
                    format: int32
                priority:
                    type: integer
                    format: int32
                bankInfo:
                    type: object
        api.backoffice.service.v1.AddCommentRequest:
            type: object
            properties:
                ticketId:
                    type: string
                content:
                    type: string
        api.backoffice.service.v1.AddCommentResponse:
            type: object
            properties:
                commentId:
                    type: string
        api.backoffice.service.v1.AddGameBetDisplayConfigRequest:
            type: object
            properties:
                country:
                    type: string
                allBet:
                    $ref: '#/components/schemas/api.game.service.v1.BettingConfig'
                highWins:
                    $ref: '#/components/schemas/api.game.service.v1.BettingConfig'
        api.backoffice.service.v1.AddOperatorBackofficeByoSubdomainRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                subdomain:
                    type: string
        api.backoffice.service.v1.AddOperatorBackofficeByoSubdomainResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.AddOperatorByoDomainRequest:
            type: object
            properties:
                byoDomain:
                    type: string
                domain:
                    type: string
                acmeChallengeType:
                    type: string
        api.backoffice.service.v1.AddOperatorByoSubdomainRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                subdomain:
                    type: string
        api.backoffice.service.v1.AddOperatorByoSubdomainResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.AddRegisterLoginBlacklistRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                idType:
                    type: string
                ids:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.AddUserCommentRequest:
            type: object
            properties:
                userId:
                    type: string
                content:
                    type: string
        api.backoffice.service.v1.AddUserCommentResponse:
            type: object
            properties:
                commentId:
                    type: string
        api.backoffice.service.v1.AddWalletCurrencyRequest:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                type:
                    type: string
                symbol:
                    type: string
                icon:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
                currencyDecimalPlaces:
                    type: integer
                    format: int32
        api.backoffice.service.v1.AddWalletCurrencyResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.AuditLog:
            type: object
            properties:
                auditId:
                    type: string
                userId:
                    type: string
                userName:
                    type: string
                userEmail:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                requestInfo:
                    type: string
                requestBody:
                    type: string
                responseBody:
                    type: string
                clientIp:
                    type: string
                apiPath:
                    type: string
                action:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                errorMessage:
                    type: string
        api.backoffice.service.v1.AuditTransactionRequest:
            type: object
            properties:
                transactionId:
                    type: string
                audit:
                    type: string
                    description: audit a transaction "approved" or "delined"
        api.backoffice.service.v1.BankAccountListRequest:
            type: object
            properties:
                page:
                    type: integer
                    description: Page number to retrieve (1-based)
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                currency:
                    type: string
                bankAccount:
                    type: string
                bankAccountFirstname:
                    type: string
                bankAccountLastname:
                    type: string
                cardId:
                    type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.Bet:
            type: object
            properties:
                operatorBetId:
                    type: string
                providerBetId:
                    type: string
                roundId:
                    type: string
                providerRoundId:
                    type: string
                providerId:
                    type: string
                providerName:
                    type: string
                operatorId:
                    type: string
                operatorName:
                    type: string
                companyOperatorId:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorId:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorId:
                    type: string
                systemOperatorName:
                    type: string
                currency:
                    type: string
                settlementCurrency:
                    type: string
                status:
                    type: string
                userId:
                    type: string
                gameId:
                    type: string
                gameName:
                    type: string
                gameCategory:
                    type: string
                winCount:
                    type: integer
                    format: int32
                betAmount:
                    type: string
                validBetAmount:
                    type: string
                settlementBetAmount:
                    type: string
                winAmount:
                    type: string
                settlementWinAmount:
                    type: string
                turnover:
                    type: string
                odds:
                    type: string
                rollbackBetAmount:
                    type: string
                rollbackWinAmount:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        api.backoffice.service.v1.Bind2faRequest:
            type: object
            properties:
                token:
                    type: string
        api.backoffice.service.v1.Bind2faResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.CancelTicketRequest:
            type: object
            properties:
                ticketId:
                    type: string
        api.backoffice.service.v1.CancelTicketResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.CheckEmailExistsRequest:
            type: object
            properties:
                email:
                    type: string
        api.backoffice.service.v1.CheckEmailExistsResponse:
            type: object
            properties:
                exists:
                    type: boolean
        api.backoffice.service.v1.CheckOperatorKeyExistsRequest:
            type: object
            properties:
                operatorKey:
                    type: string
        api.backoffice.service.v1.CheckOperatorKeyExistsResponse:
            type: object
            properties:
                exists:
                    type: boolean
        api.backoffice.service.v1.CheckSubdomainExistsRequest:
            type: object
            properties:
                subdomain:
                    type: string
        api.backoffice.service.v1.CheckSubdomainExistsResponse:
            type: object
            properties:
                exists:
                    type: boolean
        api.backoffice.service.v1.CreateAdjustmentConfigRequest:
            type: object
            properties:
                item:
                    type: string
                description:
                    type: string
        api.backoffice.service.v1.CreateAdjustmentConfigResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.CreateAffiliateRequest:
            type: object
            properties:
                affiliate:
                    $ref: '#/components/schemas/api.affiliate.service.v1.AffiliateInfo'
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.CreateCampaignRequest:
            type: object
            properties:
                campaign:
                    $ref: '#/components/schemas/api.backoffice.service.v1.CreateCampaignRequest_Campaign'
        api.backoffice.service.v1.CreateCampaignRequest_Campaign:
            type: object
            properties:
                domain:
                    type: string
                campaignName:
                    type: string
                channelType:
                    type: string
                channelConfig:
                    $ref: '#/components/schemas/api.affiliate.service.v1.ChannelConfig'
        api.backoffice.service.v1.CreateCommissionPlanRequest:
            type: object
            properties:
                title:
                    type: string
                status:
                    type: string
                baseCurrency:
                    type: string
                planConfig:
                    $ref: '#/components/schemas/api.affiliate.service.v1.CommissionPlanConfig'
        api.backoffice.service.v1.CreateCompanyRequest:
            type: object
            properties:
                companyName:
                    type: string
                email:
                    type: string
                mobile:
                    type: string
                operatorKey:
                    type: string
                password:
                    type: string
                contact:
                    type: string
                contactMethods:
                    type: string
                affiliate:
                    type: string
                verificationCode:
                    type: string
        api.backoffice.service.v1.CreateCompanyResponse:
            type: object
            properties:
                token:
                    type: string
                backofficeSubdomain:
                    type: string
        api.backoffice.service.v1.CreateMerchantRequest:
            type: object
            properties:
                name:
                    type: string
        api.backoffice.service.v1.CreateOperatorRequest:
            type: object
            properties:
                mode:
                    type: string
                operatorName:
                    type: string
                operatorKey:
                    type: string
                reportingCurrency:
                    type: string
                backofficeTimezone:
                    type: string
                operatorAdminEmail:
                    type: string
                verificationCode:
                    type: string
                supportedLanguages:
                    type: array
                    items:
                        type: string
                supportedCurrencies:
                    type: array
                    items:
                        type: string
                templateName:
                    type: string
        api.backoffice.service.v1.CreateOperatorResponse:
            type: object
            properties:
                subdomain:
                    type: string
                backofficeSubdomain:
                    type: string
                operatorAdminEmail:
                    type: string
                password:
                    type: string
        api.backoffice.service.v1.CreateOperatorWithdrawRequest:
            type: object
            properties:
                request:
                    type: object
        api.backoffice.service.v1.CreatePaymentChannelRequest:
            type: object
            properties:
                merchantId:
                    type: string
                    description: ID of the merchant creating this channel
                paymentMethodId:
                    type: string
                    description: ID of the payment method to be used
                contact:
                    type: string
                    description: Contact Info email
                fixedFee:
                    type: string
                    description: PSP Fixed Fee on the Amount
                feeRate:
                    type: string
                    description: PSP Rate Fee
                minFee:
                    type: string
                    description: Minimum Fee
                userFixedFee:
                    type: string
                    description: User Fixed Fee on the Amount
                userFeeRate:
                    type: string
                    description: User Rate Fee
                userMinFee:
                    type: string
                    description: Minimum Fee
                minAmount:
                    type: string
                    description: Min Amount
                maxAmount:
                    type: string
                    description: Max Amount
                key:
                    type: object
                    description: Configuration fields for the payment channel in JSON format
            description: |-
                Request to create a payment channel
                 Used to create a new payment channel with specified merchant and method
        api.backoffice.service.v1.CreatePaymentMethodRequest:
            type: object
            properties:
                paymentMethodId:
                    type: string
                    description: ID of the payment method to be used
                contact:
                    type: string
                    description: Contact Info email
                sysFixedFee:
                    type: string
                    description: Fixed Fee on the Amount
                sysFeeRate:
                    type: string
                    description: Rate Fee
                sysMinAmount:
                    type: string
                    description: Min Amount
                sysMaxAmount:
                    type: string
                    description: Max Amount
                sysMinFee:
                    type: string
                    description: Minmum Fee
            description: |-
                Request to create a payment channel
                 Used to create a new payment channel with specified merchant and method
        api.backoffice.service.v1.CreateRoleRequest:
            type: object
            properties:
                name:
                    type: string
                permissions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.Permission'
        api.backoffice.service.v1.CreateRoleResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.CreateVipLevelConfigTemplateRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                template:
                    $ref: '#/components/schemas/api.vip.service.v1.VipLevelConfigTemplate'
                settingId:
                    type: string
        api.backoffice.service.v1.CreateVipLevelConfigTemplateResponse:
            type: object
            properties:
                template:
                    $ref: '#/components/schemas/api.vip.service.v1.VipLevelConfigTemplate'
        api.backoffice.service.v1.CreateWithdrawResponse:
            type: object
            properties:
                ticketId:
                    type: string
        api.backoffice.service.v1.CreditRequest:
            type: object
            properties:
                userId:
                    type: string
                currency:
                    type: string
                transactionType:
                    type: string
                cashAmount:
                    type: string
                cashTurnoverThreshold:
                    type: string
                operatorBonusAmount:
                    type: string
                operatorBonusTurnoverThreshold:
                    type: string
                operatorBonusWithdrawLimit:
                    type: string
                comment:
                    type: string
        api.backoffice.service.v1.CustomerRecordReportDetailRequest:
            type: object
            properties:
                userId:
                    type: string
                paymentTransactionId:
                    type: string
                gameTransactionId:
                    type: string
                gameBetId:
                    type: string
        api.backoffice.service.v1.CustomerRecordReportDetailResponse:
            type: object
            properties:
                userDetail:
                    $ref: '#/components/schemas/api.backoffice.service.v1.CustomerRecordReportDetailResponse_UserDetail'
                paymentTransaction:
                    $ref: '#/components/schemas/api.backoffice.service.v1.CustomerRecordReportDetailResponse_PaymentTransaction'
                gameTransaction:
                    $ref: '#/components/schemas/api.backoffice.service.v1.CustomerRecordReportDetailResponse_GameTransaction'
                eventSettlementInformation:
                    $ref: '#/components/schemas/api.backoffice.service.v1.CustomerRecordReportDetailResponse_EventSettlementInformation'
        api.backoffice.service.v1.CustomerRecordReportDetailResponse_EventSettlementInformation:
            type: object
            properties:
                matchResults:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.EventSettlementInformation_MatchResults'
        api.backoffice.service.v1.CustomerRecordReportDetailResponse_GameTransaction:
            type: object
            properties:
                gameTransactionId:
                    type: string
                providerTransactionId:
                    type: string
                settlementTime:
                    type: string
                    format: date-time
                wagerType:
                    type: string
                    description: string venue_Tournament = 4;
                betCurrency:
                    type: string
                betAmount:
                    type: string
                payoutAmount:
                    type: string
                    description: string payout_currency = 8; //
                betSettlementCurrency:
                    type: string
                    description: string payout_settlement_currency = 9;
                betSettlementAmount:
                    type: string
                validBetAmount:
                    type: string
                odds:
                    type: string
                winMultiplier:
                    type: string
                payoutSettlementAmount:
                    type: string
        api.backoffice.service.v1.CustomerRecordReportDetailResponse_PaymentTransaction:
            type: object
            properties:
                paymentTransactionId:
                    type: string
                pspTransactionId:
                    type: string
                arrivalTime:
                    type: string
                    format: date-time
                paymentServiceProvider:
                    type: string
                methodOfPayment:
                    type: string
                paymentChannel:
                    type: string
                currency:
                    type: string
                amount:
                    type: string
                processingFee:
                    type: string
        api.backoffice.service.v1.CustomerRecordReportDetailResponse_UserDetail:
            type: object
            properties:
                userId:
                    type: string
                name:
                    type: string
                phone:
                    type: string
                idType:
                    type: string
                idNumber:
                    type: string
                address:
                    type: string
        api.backoffice.service.v1.DebitRequest:
            type: object
            properties:
                userId:
                    type: string
                currency:
                    type: string
                reportingCurrency:
                    type: string
                transactionType:
                    type: string
                transactionId:
                    type: string
                cash:
                    type: string
                comment:
                    type: string
        api.backoffice.service.v1.DeleteAdjustmentConfigRequest:
            type: object
            properties:
                id:
                    type: string
        api.backoffice.service.v1.DeleteAdjustmentConfigResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.DeleteAffiliateRequest:
            type: object
            properties:
                affiliateId:
                    type: string
        api.backoffice.service.v1.DeleteCampaignRequest:
            type: object
            properties:
                campaignId:
                    type: string
        api.backoffice.service.v1.DeleteCommissionPlanRequest:
            type: object
            properties:
                commissionPlanId:
                    type: string
                alternativeCommissionPlanId:
                    type: string
        api.backoffice.service.v1.DeleteDepositRewardSequencesRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                welcomeRewardSequences:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.RewardSequence'
                dailyRewardSequences:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.RewardSequence'
        api.backoffice.service.v1.DeleteOperatorBackofficeByoSubdomainRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                subdomain:
                    type: string
        api.backoffice.service.v1.DeleteOperatorBackofficeByoSubdomainResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.DeleteOperatorByoDomainRequest:
            type: object
            properties:
                byoDomain:
                    type: string
        api.backoffice.service.v1.DeleteOperatorByoSubdomainRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                subdomain:
                    type: string
        api.backoffice.service.v1.DeleteOperatorByoSubdomainResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.DeleteRegisterLoginBlacklistRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                idType:
                    type: string
                ids:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.DeleteRoleRequest:
            type: object
            properties:
                roleId:
                    type: string
        api.backoffice.service.v1.DeleteRoleResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.DeleteUserResponsibleGamblingConfigRequest:
            type: object
            properties:
                userId:
                    type: string
                limitType:
                    type: string
        api.backoffice.service.v1.DeleteVipLevelConfigTemplateRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                templateId:
                    type: string
        api.backoffice.service.v1.DeleteVipLevelConfigTemplateResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.DeleteWalletResponsibleGamblingConfigRequest:
            type: object
            properties:
                userId:
                    type: string
                currency:
                    type: string
                limitType:
                    type: string
                    description: |-
                        deposit_limit, withdrawal_limit, daily_play_limit, weekly_play_limit, monthly_play_limit
                         daily_loss_limit, weekly_loss_limit, monthly_loss_limit
        api.backoffice.service.v1.EventSettlementInformation_MatchResults:
            type: object
            properties:
                name:
                    type: string
                status:
                    type: string
                selection:
                    type: string
                result:
                    type: string
                eventStartTime:
                    type: string
                    format: date-time
                venueTournament:
                    type: string
                settlementDetails:
                    type: string
        api.backoffice.service.v1.ExportBetsRequest:
            type: object
            properties:
                providerIds:
                    type: array
                    items:
                        type: string
                gameName:
                    type: string
                gameId:
                    type: string
                userId:
                    type: string
                operatorBetId:
                    type: string
                providerBetId:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                currencyWithRanges:
                    $ref: '#/components/schemas/api.backoffice.service.v1.ExportBetsRequest_CurrencyWithRange'
                settlementCurrencyWithRanges:
                    $ref: '#/components/schemas/api.backoffice.service.v1.ExportBetsRequest_CurrencyWithRange'
                settlementCurrencies:
                    $ref: '#/components/schemas/api.backoffice.service.v1.ExportBetsRequest_Currencies'
                categories:
                    type: array
                    items:
                        type: string
                status:
                    type: string
                format:
                    type: string
                timeZone:
                    type: string
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ExportBetsRequest_Currencies:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ExportBetsRequest_CurrencyWithRange:
            type: object
            properties:
                currency:
                    type: string
                minBetAmount:
                    type: string
                maxBetAmount:
                    type: string
                minWinAmount:
                    type: string
                maxWinAmount:
                    type: string
        api.backoffice.service.v1.ExportCustomerRecordsRequest:
            type: object
            properties:
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                userId:
                    type: string
                transactionId:
                    type: string
                transactionType:
                    type: string
                format:
                    type: string
                timeZone:
                    type: string
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ExportCustomerStrikeReportsRequest:
            type: object
            properties:
                userId:
                    type: string
                format:
                    type: string
                timeZone:
                    type: string
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ExportFICAThresholdTransactionsRequest:
            type: object
            properties:
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                transactionType:
                    type: string
                currency:
                    type: string
                kycLevel:
                    type: integer
                    format: int32
                format:
                    type: string
                timeZone:
                    type: string
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.ExportManualJournalEntriesRequest:
            type: object
            properties:
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                userId:
                    type: string
                currency:
                    type: string
                format:
                    type: string
                timeZone:
                    type: string
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ExportMultipleBetsRequest:
            type: object
            properties:
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                status:
                    type: string
                userId:
                    type: string
                transactionId:
                    type: string
                format:
                    type: string
                timeZone:
                    type: string
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ExportSevRequest:
            type: object
            properties:
                severity:
                    type: string
                category:
                    type: string
                component:
                    type: string
                userId:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                format:
                    type: string
                timeZone:
                    type: string
        api.backoffice.service.v1.ExportSportEventsRequest:
            type: object
            properties:
                eventName:
                    type: string
                venue:
                    type: string
                tournament:
                    type: string
                startTime:
                    type: string
                endTime:
                    type: string
                format:
                    type: string
                timeZone:
                    type: string
        api.backoffice.service.v1.ExportStakeVarianceBetsRequest:
            type: object
            properties:
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                userId:
                    type: string
                transactionId:
                    type: string
                category:
                    type: string
                roundId:
                    type: string
                format:
                    type: string
                timeZone:
                    type: string
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.ExportTaxReportsRequest:
            type: object
            properties:
                taxPeriod:
                    type: string
                reportCategory:
                    type: string
                    description: 'license_provider: south_afirca'
                periodType:
                    type: string
                format:
                    type: string
                timeZone:
                    type: string
        api.backoffice.service.v1.ExportUnpaidBetsRequest:
            type: object
            properties:
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                userId:
                    type: string
                transactionId:
                    type: string
                format:
                    type: string
                timeZone:
                    type: string
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.GameData_Data:
            type: object
            properties:
                ggrUsd:
                    type: string
                ngrUsd:
                    type: string
                ggrReportingCurrency:
                    type: string
                ngrReportingCurrency:
                    type: string
        api.backoffice.service.v1.GameTransaction_Amount:
            type: object
            properties:
                amountInCurrency:
                    type: string
                amountInSettlementCurrency:
                    type: string
        api.backoffice.service.v1.Generate2faRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.Generate2faResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.GetAffiliateRequest:
            type: object
            properties:
                affiliateId:
                    type: string
        api.backoffice.service.v1.GetBalanceSummaryRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.GetBalanceSummaryResponse:
            type: object
            properties:
                balance:
                    type: string
                estNetShare:
                    type: string
                estNetCost:
                    type: string
        api.backoffice.service.v1.GetBalancesSummaryRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.GetBalancesSummaryResponse:
            type: object
            properties:
                deposits:
                    type: string
                withdrawals:
                    type: string
                balance:
                    type: string
                ngr:
                    type: string
                gameProviderRs:
                    type: string
                thirdPartyFees:
                    type: string
                adjustments:
                    type: string
                estNetProfit:
                    type: string
                revenueShareSystem:
                    type: string
                revenueShareOperator:
                    type: string
                estNetCosts:
                    type: string
        api.backoffice.service.v1.GetBetByIdRequest:
            type: object
            properties:
                betId:
                    type: string
                includeActions:
                    type: boolean
        api.backoffice.service.v1.GetCommissionPlanRequest:
            type: object
            properties:
                commissionPlanId:
                    type: string
        api.backoffice.service.v1.GetCurrentOperatorDetailsRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.GetCurrentOperatorDetailsResponse:
            type: object
            properties:
                operatorDetails:
                    $ref: '#/components/schemas/api.backoffice.service.v1.OperatorDetails'
        api.backoffice.service.v1.GetDepositRewardConfigRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
        api.backoffice.service.v1.GetDepositSummariesRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetDepositSummariesResponse:
            type: object
            properties:
                depositSummaries:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetDepositSummariesResponse_DepositSummary'
        api.backoffice.service.v1.GetDepositSummariesResponse_DepositSummary:
            type: object
            properties:
                date:
                    type: string
                currency:
                    type: string
                depositSuccessRate:
                    type: string
                depositAmountUsd:
                    type: string
                depositAmountReportingCurrency:
                    type: string
        api.backoffice.service.v1.GetExchangeRatesRequest:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetExchangeRatesResponse:
            type: object
            properties:
                exchangeRates:
                    type: object
                    additionalProperties:
                        type: string
                    description: map key is source currency, value is target currency rate
        api.backoffice.service.v1.GetFICAThresholdConfigRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.GetGameSummaryRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                providerIds:
                    type: array
                    items:
                        type: string
                gameCategories:
                    type: array
                    items:
                        type: string
                gameNames:
                    type: array
                    items:
                        type: string
                gameIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetGameSummaryResponse:
            type: object
            properties:
                turnoverUsd:
                    type: string
                winAmountUsd:
                    type: string
                ggrUsd:
                    type: string
                betCount:
                    type: integer
                    format: int32
                averageBetAmountUsd:
                    type: string
                rtpPercentage:
                    type: string
                turnoverReportingCurrency:
                    type: string
                winAmountReportingCurrency:
                    type: string
                ggrReportingCurrency:
                    type: string
                averageBetAmountReportingCurrency:
                    type: string
        api.backoffice.service.v1.GetGameTransactionByIdRequest:
            type: object
            properties:
                transactionId:
                    type: string
        api.backoffice.service.v1.GetGameTransactionsForBetRequest:
            type: object
            properties:
                roundId:
                    type: string
                betId:
                    type: string
        api.backoffice.service.v1.GetGameTransactionsForBetResponse:
            type: object
            properties:
                gameTransactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetGameTransactionsForBetResponse_GameTransaction'
        api.backoffice.service.v1.GetGameTransactionsForBetResponse_GameTransaction:
            type: object
            properties:
                action:
                    type: string
                operatorName:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                gameCategory:
                    type: string
                gameId:
                    type: string
                providerName:
                    type: string
                operatorTransactionId:
                    type: string
                providerTransactionId:
                    type: string
                userId:
                    type: string
                amount:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GameTransaction_Amount'
                validBetAmount:
                    type: string
        api.backoffice.service.v1.GetGamificationCurrencyConfigRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.GetInvoiceDetailRequest:
            type: object
            properties:
                invoiceId:
                    type: string
        api.backoffice.service.v1.GetInvoiceDetailResponse:
            type: object
            properties:
                invoice:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetInvoiceDetailResponse_InvoiceDetail'
        api.backoffice.service.v1.GetInvoiceDetailResponse_InvoiceDetail:
            type: object
            properties:
                invoiceId:
                    type: string
                    description: Basic invoice information
                paymentStatus:
                    enum:
                        - PAYMENT_STATUS_PAID
                        - PAYMENT_STATUS_NOT_PAID
                    type: string
                    format: enum
                invoiceDate:
                    type: string
                    description: Dates
                dueDate:
                    type: string
                month:
                    type: string
                gameProviderRevenueShare:
                    type: string
                    description: Invoice details
                thirdPartyCost:
                    type: string
                featureSubscription:
                    type: string
                revenueShareSystem:
                    type: string
                revenueShareOperator:
                    type: string
                adjustments:
                    type: string
                totalAmount:
                    type: string
                    description: Financial summary
                amountPaid:
                    type: string
                dueAmount:
                    type: string
                retailerOperatorId:
                    type: string
                    description: Retailer information
                retailerOperatorName:
                    type: string
                companyOperatorId:
                    type: string
                    description: Company information
                companyOperatorName:
                    type: string
                operatorId:
                    type: string
                    description: Operator information
                operatorName:
                    type: string
        api.backoffice.service.v1.GetInvoiceSummaryRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.GetInvoiceSummaryResponse:
            type: object
            properties:
                totalIncome:
                    type: string
                totalOutcome:
                    type: string
                billingPeriod:
                    type: string
        api.backoffice.service.v1.GetMerchantRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.GetOperatorAccountSettingsRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.GetOperatorAddressRequest:
            type: object
            properties:
                channelId:
                    type: string
                    description: ID of the channel to use for this deposit
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                extra:
                    type: object
                    description: |-
                        Additional information needed for the deposit
                         May include clientOrderId, productId, userInfo, etc.
            description: |-
                Request to get address
                 Used to get DC address
        api.backoffice.service.v1.GetOperatorPaymentChannelPageRequest:
            type: object
            properties:
                page:
                    type: integer
                    description: Page number to retrieve (1-based)
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                type:
                    enum:
                        - CHANNEL_TYPE_ALL
                        - CHANNEL_TYPE_DEPOSIT
                        - CHANNEL_TYPE_WITHDRAW
                    type: string
                    description: Optional channel type filter
                    format: enum
                category:
                    type: string
                    description: Optional category filter
                paymentMethod:
                    type: string
                    description: Optional payment method filter
                currency:
                    type: string
                    description: Optional currency filter
                protocol:
                    type: string
                    description: Optional crypto protocol
                network:
                    type: string
                    description: Optional crypto network filter
                country:
                    type: string
                    description: Optional country filter
                source:
                    type: string
                    description: Source of operator type
                sort:
                    enum:
                        - DESC
                        - ASC
                    type: string
                    description: Optional sort direction
                    format: enum
                enabled:
                    type: boolean
                    description: Status ture or false
                operatorContextFilters:
                    allOf:
                        - $ref: '#/components/schemas/api.common.OperatorContextFilters'
                    description: ID of the Operator connect with this channel
            description: Used to retrieve a paginated list of payment channels with optional filters
        api.backoffice.service.v1.GetOperatorRegisterLimitConfigRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.GetOperatorTagsConfigRequest:
            type: object
            properties:
                operatorId:
                    type: string
                    description: The ID of the operator to get tag configuration for.
            description: GetOperatorTagsConfigRequest contains the operator ID to retrieve tag configuration.
        api.backoffice.service.v1.GetOperatorTagsConfigResponse:
            type: object
            properties:
                followParent:
                    type: boolean
                    description: Whether the operator should follow parent operator's tags.
            description: GetOperatorTagsConfigResponse contains the tag configuration settings, now only follow_parent flag.
        api.backoffice.service.v1.GetOperatorTagsRequest:
            type: object
            properties: {}
            description: GetOperatorTagsRequest does not contain any parameters. It will return all tags of user's operator.
        api.backoffice.service.v1.GetOperatorTagsResponse:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        type: string
                    description: List of tags associated with the operator.
            description: GetOperatorTagsResponse contains the list of tags associated with the operator or parent operator if follow_parent is true.
        api.backoffice.service.v1.GetOperatorTicketRequest:
            type: object
            properties:
                ticketId:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.GetOverviewDashboardRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
            description: System related messages
        api.backoffice.service.v1.GetOverviewDashboardResponse:
            type: object
            properties:
                registeredUsers:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_RegisteredUsers'
                firstDepositUsers:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_FirstDepositUsers'
                ggr:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_GGR'
                ngr:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_NGR'
                depositAmount:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_DepositAmount'
                withdrawalAmount:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_WithdrawalAmount'
                depositMinusWithdrawalAmount:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GetOverviewDashboardResponse_DepositMinusWithdrawalAmount'
        api.backoffice.service.v1.GetOverviewDashboardResponse_DepositAmount:
            type: object
            properties:
                todayUsd:
                    type: string
                yesterdayUsd:
                    type: string
                todayReportingCurrency:
                    type: string
                yesterdayReportingCurrency:
                    type: string
        api.backoffice.service.v1.GetOverviewDashboardResponse_DepositMinusWithdrawalAmount:
            type: object
            properties:
                todayUsd:
                    type: string
                yesterdayUsd:
                    type: string
                todayReportingCurrency:
                    type: string
                yesterdayReportingCurrency:
                    type: string
        api.backoffice.service.v1.GetOverviewDashboardResponse_FirstDepositUsers:
            type: object
            properties:
                today:
                    type: integer
                    format: int32
                yesterday:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetOverviewDashboardResponse_GGR:
            type: object
            properties:
                todayUsd:
                    type: string
                yesterdayUsd:
                    type: string
                todayReportingCurrency:
                    type: string
                yesterdayReportingCurrency:
                    type: string
        api.backoffice.service.v1.GetOverviewDashboardResponse_NGR:
            type: object
            properties:
                todayUsd:
                    type: string
                yesterdayUsd:
                    type: string
                todayReportingCurrency:
                    type: string
                yesterdayReportingCurrency:
                    type: string
        api.backoffice.service.v1.GetOverviewDashboardResponse_RegisteredUsers:
            type: object
            properties:
                today:
                    type: integer
                    format: int32
                yesterday:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetOverviewDashboardResponse_WithdrawalAmount:
            type: object
            properties:
                todayUsd:
                    type: string
                yesterdayUsd:
                    type: string
                todayReportingCurrency:
                    type: string
                yesterdayReportingCurrency:
                    type: string
        api.backoffice.service.v1.GetPaymentMethodListRequest:
            type: object
            properties:
                currency:
                    type: string
                    description: Currency like USD, VND
                psp:
                    type: string
                page:
                    type: integer
                    description: Page number to retrieve (1-based)
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                enabled:
                    type: boolean
        api.backoffice.service.v1.GetPlayerGameSummaryRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                providerIds:
                    type: array
                    items:
                        type: string
                gameCategories:
                    type: array
                    items:
                        type: string
                gameTags:
                    type: array
                    items:
                        type: string
                gameNames:
                    type: array
                    items:
                        type: string
                gameIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                userIds:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetPlayerGameSummaryResponse:
            type: object
            properties:
                turnoverUsd:
                    type: string
                winAmountUsd:
                    type: string
                ggrUsd:
                    type: string
                betCount:
                    type: integer
                    format: int32
                averageBetAmountUsd:
                    type: string
                rtpPercentage:
                    type: string
                turnoverReportingCurrency:
                    type: string
                winAmountReportingCurrency:
                    type: string
                ggrReportingCurrency:
                    type: string
                averageBetAmountReportingCurrency:
                    type: string
        api.backoffice.service.v1.GetSummaryRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                affiliateCodes:
                    type: array
                    items:
                        type: string
                referralCodes:
                    type: array
                    items:
                        type: string
                registrationCountries:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetSummaryResponse:
            type: object
            properties:
                visits:
                    type: integer
                    format: int32
                registeredUsers:
                    type: integer
                    format: int32
                ftdUsd:
                    type: string
                ftdConversionRate:
                    type: string
                depositAmountUsd:
                    type: string
                withdrawAmountUsd:
                    type: string
                depositMinusWithdrawAmountUsd:
                    type: string
                averageFtdAmountUsd:
                    type: string
                arpuToArppuPercentage:
                    type: string
                turnoverUsd:
                    type: string
                bonusUsd:
                    type: string
                ggrUsd:
                    type: string
                ngrUsd:
                    type: string
                arpuUsd:
                    type: string
                arppuUsd:
                    type: string
                ftdReportingCurrency:
                    type: string
                depositAmountReportingCurrency:
                    type: string
                withdrawAmountReportingCurrency:
                    type: string
                depositMinusWithdrawAmountReportingCurrency:
                    type: string
                averageFtdAmountReportingCurrency:
                    type: string
                turnoverReportingCurrency:
                    type: string
                bonusReportingCurrency:
                    type: string
                ggrReportingCurrency:
                    type: string
                ngrReportingCurrency:
                    type: string
                arpuReportingCurrency:
                    type: string
                arppuReportingCurrency:
                    type: string
        api.backoffice.service.v1.GetTaxReportConfigRequest:
            type: object
            properties:
                type:
                    type: string
        api.backoffice.service.v1.GetTaxReportConfigResponse:
            type: object
            properties:
                config:
                    type: string
                    description: "config is a json string\n example:\n {\n\t\"report_type\": {\n\t\t\"horse_racing_tax_return\": true,\n\t\t\"sports_tax_return\": true,\n\t\t\"other_contingencies_tax_return\": false\n\t}\n\t\"timezone\": \"UTC+0\",\n\t\"report_generation_time\": {\n\t\t\"monthly\": \"2nd of each month\",\n\t\t\"quarterly\": \"2nd of each quarter\", \n\t\t\"yearly\": \"2nd of each year\"\n\t},\n\t\"tax_currency\": \"ZAR\",\n\t\"user_registration_countries\": [\"US\", \"ZA\", \"TR\", \"VN\"],\n\t\"user_currencies\": [\"USD\", \"EUR\", \"INR\", \"ZAR\", \"USDT\"],\n  \"vat_payable\": 6.5,\n  \"tax_for_sportsbook\": 6.5,\n  \"tax_for_other_contingencies\": 6.5,\n  \"tax_for_horse_racing\": 6.5,\n\t}"
        api.backoffice.service.v1.GetTicketRequest:
            type: object
            properties:
                ticketId:
                    type: string
        api.backoffice.service.v1.GetTimeRangedDashboardRequest:
            type: object
            properties:
                timeRangeType:
                    enum:
                        - TIME_RANGE_TYPE_UNSPECIFIED
                        - TIME_RANGE_TYPE_THIS_MONTH
                        - TIME_RANGE_TYPE_THIS_WEEK
                        - TIME_RANGE_TYPE_CUSTOM_DAYS
                    type: string
                    format: enum
                customDays:
                    type: integer
                    format: int32
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.GetTimeRangedDashboardResponse:
            type: object
            properties:
                gameData:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTimeRangedDashboardResponse_GameData'
                paymentData:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTimeRangedDashboardResponse_PaymentData'
                activeUsersData:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTimeRangedDashboardResponse_ActiveUsersData'
        api.backoffice.service.v1.GetTimeRangedDashboardResponse_ActiveUsersData:
            type: object
            properties:
                time:
                    type: string
                data:
                    $ref: '#/components/schemas/api.backoffice.service.v1.ActiveUsersData_Data'
        api.backoffice.service.v1.GetTimeRangedDashboardResponse_GameData:
            type: object
            properties:
                time:
                    type: string
                data:
                    $ref: '#/components/schemas/api.backoffice.service.v1.GameData_Data'
        api.backoffice.service.v1.GetTimeRangedDashboardResponse_PaymentData:
            type: object
            properties:
                time:
                    type: string
                data:
                    $ref: '#/components/schemas/api.backoffice.service.v1.PaymentData_Data'
        api.backoffice.service.v1.GetTopOperatorsDashboardRequest:
            type: object
            properties:
                timeRangeType:
                    enum:
                        - TIME_RANGE_TYPE_UNSPECIFIED
                        - TIME_RANGE_TYPE_TODAY
                        - TIME_RANGE_TYPE_THIS_WEEK
                        - TIME_RANGE_TYPE_THIS_MONTH
                    type: string
                    format: enum
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.GetTopOperatorsDashboardResponse:
            type: object
            properties:
                topGgrOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topNgrOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topDepositMinusWithdrawOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topGgrCompanyOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topNgrCompanyOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topDepositMinusWithdrawCompanyOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topGgrRetailerOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topNgrRetailerOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
                topDepositMinusWithdrawRetailerOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData'
        api.backoffice.service.v1.GetTopOperatorsDashboardResponse_OperatorData:
            type: object
            properties:
                rank:
                    type: integer
                    format: int32
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                amountUsd:
                    type: string
                amountReportingCurrency:
                    type: string
        api.backoffice.service.v1.GetTopUsersDashboardRequest:
            type: object
            properties:
                timeRangeType:
                    enum:
                        - TIME_RANGE_TYPE_UNSPECIFIED
                        - TIME_RANGE_TYPE_TODAY
                        - TIME_RANGE_TYPE_THIS_WEEK
                        - TIME_RANGE_TYPE_THIS_MONTH
                    type: string
                    format: enum
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.GetTopUsersDashboardResponse:
            type: object
            properties:
                topDepositUsers:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopUsersDashboardResponse_User'
                topWithdrawalUsers:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetTopUsersDashboardResponse_User'
        api.backoffice.service.v1.GetTopUsersDashboardResponse_User:
            type: object
            properties:
                rank:
                    type: integer
                    format: int32
                userId:
                    type: string
                avatar:
                    type: string
                country:
                    type: string
                vipLevel:
                    type: integer
                    format: int32
                amountUsd:
                    type: string
                amountReportingCurrency:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
        api.backoffice.service.v1.GetTransactionPageRequest:
            type: object
            properties:
                page:
                    type: integer
                    description: Page number to retrieve (1-based)
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                transactionId:
                    type: string
                    description: Optional transaction ID filter
                currency:
                    type: string
                    description: Optional currency filter
                paymentMethod:
                    type: string
                    description: Optional payment method filter
                paymentChannel:
                    type: string
                    description: Optional payment channel filter
                protocol:
                    type: string
                    description: Optional crypto protocol filter
                network:
                    type: string
                    description: Optional crypto network filter
                type:
                    enum:
                        - TRANSACTION_TYPE_UNSPECIFIED
                        - TRANSACTION_TYPE_DEPOSIT
                        - TRANSACTION_TYPE_WITHDRAW
                    type: string
                    description: Optional transaction type filter
                    format: enum
                status:
                    enum:
                        - TRANSACTION_STATUS_UNSPECIFIED
                        - TRANSACTION_STATUS_PROCESSING
                        - TRANSACTION_STATUS_SUCCESSFUL
                        - TRANSACTION_STATUS_FAILED
                    type: string
                    description: Optional status filter
                    format: enum
                agent:
                    type: string
                    description: Optional agent filter
                startTime:
                    type: string
                    description: Optional start time for date range filter
                    format: date-time
                endTime:
                    type: string
                    description: Optional end time for date range filter
                    format: date-time
                sort:
                    enum:
                        - DESC
                        - ASC
                    type: string
                    description: Optional sort direction
                    format: enum
                minAmount:
                    type: string
                    description: Optional minimum amount filter
                maxAmount:
                    type: string
                    description: Optional maximum amount filter
                userId:
                    type: string
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.GetUserBetsOverviewRequest:
            type: object
            properties:
                userId:
                    type: string
                providers:
                    type: array
                    items:
                        type: string
                gameNames:
                    type: array
                    items:
                        type: string
                gameId:
                    type: string
                currencies:
                    type: array
                    items:
                        type: string
                betAmountMin:
                    type: string
                betAmountMax:
                    type: string
                winAmountMin:
                    type: string
                winAmountMax:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetUserBetsOverviewResponse:
            type: object
            properties:
                rounds:
                    type: string
                betCount:
                    type: integer
                    format: int32
                turnover:
                    type: string
                betAmount:
                    type: string
                winAmount:
                    type: string
                ggr:
                    type: string
                ngr:
                    type: string
        api.backoffice.service.v1.GetUserOverviewRequest:
            type: object
            properties:
                userId:
                    type: string
                filter:
                    type: string
                    description: |-
                        filter options:
                         - "today": Today's data
                         - "this_week": This week's data
                         - "this_month": This month's data
                         - "recent_24h": Recent 24 hours data
                         - "recent_30d": Recent 30 days data
                         If not specified, returns all time data
        api.backoffice.service.v1.GetUserOverviewResponse:
            type: object
            properties:
                balanceUsd:
                    type: string
                depositMinusWithdrawUsd:
                    type: string
                turnoverUsd:
                    type: string
                cashTurnoverUsd:
                    type: string
                bonusTurnoverUsd:
                    type: string
                depositUsd:
                    type: string
                lastDepositUsd:
                    type: string
                depositCount:
                    type: integer
                    format: int32
                withdrawUsd:
                    type: string
                lastWithdrawUsd:
                    type: string
                withdrawCount:
                    type: integer
                    format: int32
                bonusUsd:
                    type: string
                validTurnoverUsd:
                    type: string
                averageBetAmountUsd:
                    type: string
                ggrUsd:
                    type: string
                ggrPercentage:
                    type: string
                manuallyAddedBalanceUsd:
                    type: string
                bonusClaimedUsd:
                    type: string
                ngrUsd:
                    type: string
                ggrToNgrPercentage:
                    type: string
                turnoverMultiplier:
                    type: string
                withdrawToDepositRatio:
                    type: string
                rtp:
                    type: string
                balanceReportingCurrency:
                    type: string
                depositMinusWithdrawReportingCurrency:
                    type: string
                turnoverReportingCurrency:
                    type: string
                cashTurnoverReportingCurrency:
                    type: string
                bonusTurnoverReportingCurrency:
                    type: string
                depositReportingCurrency:
                    type: string
                lastDepositReportingCurrency:
                    type: string
                withdrawReportingCurrency:
                    type: string
                lastWithdrawReportingCurrency:
                    type: string
                bonusReportingCurrency:
                    type: string
                validTurnoverReportingCurrency:
                    type: string
                averageBetAmountReportingCurrency:
                    type: string
                ggrReportingCurrency:
                    type: string
                manuallyAddedBalanceReportingCurrency:
                    type: string
                bonusClaimedReportingCurrency:
                    type: string
                ngrReportingCurrency:
                    type: string
                gameData:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetUserOverviewResponse_GameData'
        api.backoffice.service.v1.GetUserOverviewResponse_GameData:
            type: object
            properties:
                gameType:
                    type: string
                ggrUsd:
                    type: string
                ggrReportingCurrency:
                    type: string
                turnoverUsd:
                    type: string
                turnoverReportingCurrency:
                    type: string
                rtp:
                    type: string
        api.backoffice.service.v1.GetUserProfileRequest:
            type: object
            properties:
                userId:
                    type: string
                loginPage:
                    type: integer
                    format: int32
                loginPageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetUserResponsibleGamblingConfigRequest:
            type: object
            properties:
                userId:
                    type: string
        api.backoffice.service.v1.GetUserTagsRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: The ID of the user to get tags for.
            description: GetUserTagsRequest contains the user ID to retrieve tags for.
        api.backoffice.service.v1.GetUserTagsResponse:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        type: string
                    description: List of active tags associated with the user.
            description: GetUserTagsResponse contains the list of active tags associated with the user.
        api.backoffice.service.v1.GetVipConfigRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.GetVipConfigResponse:
            type: object
            properties:
                config:
                    $ref: '#/components/schemas/api.vip.service.v1.VipConfig'
        api.backoffice.service.v1.GetVipLevelConfigTemplateRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                templateId:
                    type: string
        api.backoffice.service.v1.GetVipLevelConfigTemplateResponse:
            type: object
            properties:
                template:
                    $ref: '#/components/schemas/api.vip.service.v1.VipLevelConfigTemplate'
        api.backoffice.service.v1.GetVipSettingRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
        api.backoffice.service.v1.GetWalletCreditTransactionsRequest:
            type: object
            properties:
                transactionId:
                    type: string
        api.backoffice.service.v1.GetWalletCreditTransactionsResponse:
            type: object
            properties:
                creditTransactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletCreditTransactionsResponse_CreditTransaction'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetWalletCreditTransactionsResponse_CreditTransaction:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                type:
                    type: string
        api.backoffice.service.v1.GetWalletCreditsRequest:
            type: object
            properties:
                userId:
                    type: string
                transactionType:
                    type: string
                currency:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetWalletCreditsResponse:
            type: object
            properties:
                credits:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetWalletCreditsResponse_Credit'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.GetWalletCreditsResponse_Credit:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                transactionId:
                    type: string
                type:
                    type: string
                vipLevel:
                    type: integer
                    format: int32
                beforeBlanace:
                    type: string
                afterBalance:
                    type: string
                currency:
                    type: string
        api.backoffice.service.v1.GetWalletsRequest:
            type: object
            properties:
                userId:
                    type: string
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetWithdrawSummariesRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.GetWithdrawSummariesResponse:
            type: object
            properties:
                withdrawSummaries:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.GetWithdrawSummariesResponse_WithdrawSummary'
        api.backoffice.service.v1.GetWithdrawSummariesResponse_WithdrawSummary:
            type: object
            properties:
                date:
                    type: string
                currency:
                    type: string
                withdrawSuccessRate:
                    type: string
                withdrawAmountUsd:
                    type: string
                withdrawAmountReportingCurrency:
                    type: string
        api.backoffice.service.v1.ListAccountsRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                userId:
                    type: string
                roleId:
                    type: string
                enabled:
                    type: boolean
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAccountsResponse:
            type: object
            properties:
                accounts:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListAccountsResponse_Account'
                total:
                    type: integer
                    format: int32
                totalEnabled:
                    type: integer
                    format: int32
                totalDisabled:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAccountsResponse_Account:
            type: object
            properties:
                userId:
                    type: string
                username:
                    type: string
                email:
                    type: string
                mobile:
                    type: string
                enabled:
                    type: boolean
                role:
                    $ref: '#/components/schemas/api.backoffice.service.v1.Role'
                createdAt:
                    type: string
                    format: date-time
        api.backoffice.service.v1.ListAdjustmentConfigsRequest:
            type: object
            properties:
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAdjustmentConfigsResponse:
            type: object
            properties:
                configs:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListAdjustmentConfigsResponse_AdjustmentConfig'
                totalCount:
                    type: integer
                    description: Pagination information
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAdjustmentConfigsResponse_AdjustmentConfig:
            type: object
            properties:
                id:
                    type: string
                item:
                    type: string
                description:
                    type: string
        api.backoffice.service.v1.ListAdjustmentsRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                invoiceId:
                    type: string
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                periodKey:
                    type: string
        api.backoffice.service.v1.ListAdjustmentsResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListAdjustmentsResponse_AdjustmentItem'
                subtotal:
                    type: string
                    description: Summary
                totalCount:
                    type: integer
                    description: Pagination information
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAdjustmentsResponse_AdjustmentItem:
            type: object
            properties:
                item:
                    type: string
                    description: Basic information
                operatorId:
                    type: string
                operatorName:
                    type: string
                currency:
                    type: string
                amount:
                    type: string
                    description: Amount information
                description:
                    type: string
        api.backoffice.service.v1.ListAffiliateCampaignsRequest:
            type: object
            properties:
                campaignName:
                    type: string
                campaignId:
                    type: string
                enabled:
                    type: boolean
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAffiliatesRequest:
            type: object
            properties:
                countries:
                    type: array
                    items:
                        type: string
                trafficSourceIds:
                    type: array
                    items:
                        type: string
                teammateIds:
                    type: array
                    items:
                        type: string
                status:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.ListAllCommissionPlansRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                countries:
                    type: array
                    items:
                        type: string
                status:
                    type: string
        api.backoffice.service.v1.ListAllOperatorsRequest:
            type: object
            properties:
                enabled:
                    type: boolean
        api.backoffice.service.v1.ListAllOperatorsResponse:
            type: object
            properties:
                operators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListAllOperatorsResponse_Operator'
        api.backoffice.service.v1.ListAllOperatorsResponse_Operator:
            type: object
            properties:
                realOperatorId:
                    type: string
                operatorName:
                    type: string
                enabled:
                    type: boolean
                operatorType:
                    type: string
                parentOperatorId:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.ListAuditActionsRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.ListAuditActionsResponse:
            type: object
            properties:
                actions:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListAuditLogsRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                userName:
                    type: string
                action:
                    type: string
                userEmail:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListAuditLogsResponse:
            type: object
            properties:
                auditLogs:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.AuditLog'
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListBalanceMonthlyRevenueSharesRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                type:
                    enum:
                        - TYPE_NET_SHARE
                        - TYPE_EST_COSTS
                    type: string
                    format: enum
        api.backoffice.service.v1.ListBalanceMonthlyRevenueSharesResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListBalanceMonthlyRevenueSharesResponse_RevenueShareItem'
                totalCount:
                    type: integer
                    description: Pagination information
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListBalanceMonthlyRevenueSharesResponse_RevenueShareItem:
            type: object
            properties:
                operatorId:
                    type: string
                    description: Basic information
                operatorName:
                    type: string
                operatorMode:
                    type: string
                retailerOperatorId:
                    type: string
                retailerOperatorName:
                    type: string
                companyOperatorId:
                    type: string
                companyOperatorName:
                    type: string
                deposits:
                    type: string
                    description: Financial data
                withdrawals:
                    type: string
                balance:
                    type: string
                ngr:
                    type: string
                ggr:
                    type: string
                gameProviderRs:
                    type: string
                    description: Revenue breakdown
                thirdPartyFees:
                    type: string
                adjustments:
                    type: string
                netProfit:
                    type: string
                rsRate:
                    type: string
                    description: Revenue share details
                revenueShareSystem:
                    type: string
                revenueShareOperator:
                    type: string
                estCosts:
                    type: string
                id:
                    type: string
        api.backoffice.service.v1.ListBalancesSummaryRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListBalancesSummaryResponse:
            type: object
            properties:
                balances:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListBalancesSummaryResponse_BalanceSummary'
                totalCount:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListBalancesSummaryResponse_BalanceSummary:
            type: object
            properties:
                retailerOperatorId:
                    type: string
                retailerOperatorName:
                    type: string
                companyOperatorId:
                    type: string
                companyOperatorName:
                    type: string
                deposits:
                    type: string
                withdrawals:
                    type: string
                balance:
                    type: string
                ngr:
                    type: string
                gameProviderRs:
                    type: string
                thirdPartyFees:
                    type: string
                adjustments:
                    type: string
                estNetProfit:
                    type: string
                revenueShareSystem:
                    type: string
                revenueShareOperator:
                    type: string
                estNetCosts:
                    type: string
        api.backoffice.service.v1.ListBetsRequest:
            type: object
            properties:
                providerIds:
                    type: array
                    items:
                        type: string
                gameName:
                    type: string
                gameId:
                    type: string
                userId:
                    type: string
                operatorBetId:
                    type: string
                providerBetId:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                currencyWithRanges:
                    $ref: '#/components/schemas/api.backoffice.service.v1.ListBetsRequest_CurrencyWithRange'
                settlementCurrencyWithRanges:
                    $ref: '#/components/schemas/api.backoffice.service.v1.ListBetsRequest_CurrencyWithRange'
                settlementCurrencies:
                    $ref: '#/components/schemas/api.backoffice.service.v1.ListBetsRequest_Currencies'
                categories:
                    type: array
                    items:
                        type: string
                status:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ListBetsRequest_Currencies:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListBetsRequest_CurrencyWithRange:
            type: object
            properties:
                currency:
                    type: string
                minBetAmount:
                    type: string
                maxBetAmount:
                    type: string
                minWinAmount:
                    type: string
                maxWinAmount:
                    type: string
        api.backoffice.service.v1.ListBetsResponse:
            type: object
            properties:
                bets:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.Bet'
                turnover:
                    type: string
                winAmount:
                    type: string
                betCount:
                    type: integer
                    format: int32
                rtpPercentage:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListBillingPeriodsRequest:
            type: object
            properties:
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListBillingPeriodsResponse:
            type: object
            properties:
                billingPeriods:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListBillingPeriodsResponse_BillingPeriod'
                totalCount:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListBillingPeriodsResponse_BillingPeriod:
            type: object
            properties:
                startTime:
                    type: string
                endTime:
                    type: string
                status:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
                periodKey:
                    type: string
        api.backoffice.service.v1.ListBottomOperatorsRequest:
            type: object
            properties:
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                companyOperatorIds:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListBottomOperatorsResponse:
            type: object
            properties:
                operators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListBottomOperatorsResponse_OperatorInfo'
        api.backoffice.service.v1.ListBottomOperatorsResponse_OperatorInfo:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                bottomOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                companyOperatorName:
                    type: string
                mode:
                    type: string
                status:
                    type: string
                subdomain:
                    type: string
            description: OperatorInfo is the simplified information of a bottom operator, used for list bottom operators
        api.backoffice.service.v1.ListCampaignsRequest:
            type: object
            properties:
                campaignName:
                    type: string
                campaignId:
                    type: string
                enabled:
                    type: boolean
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ListCategoriesRequest:
            type: object
            properties:
                providerId:
                    type: string
        api.backoffice.service.v1.ListCategoriesResponse:
            type: object
            properties:
                categories:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListCommissionPlansRequest:
            type: object
            properties:
                countries:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                status:
                    type: string
        api.backoffice.service.v1.ListCompanyOperatorsRequest:
            type: object
            properties:
                retailerOperatorIds:
                    type: array
                    items:
                        type: string
                includeCount:
                    type: boolean
        api.backoffice.service.v1.ListCompanyOperatorsResponse:
            type: object
            properties:
                companyOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListCompanyOperatorsResponse_OperatorInfo'
        api.backoffice.service.v1.ListCompanyOperatorsResponse_OperatorInfo:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                bottomOperatorCount:
                    type: integer
                    format: int32
                bottomLiveOperatorCount:
                    type: integer
                    format: int32
                status:
                    type: boolean
            description: OperatorInfo is the simplified information of a company operator, used for list company operators
        api.backoffice.service.v1.ListCurrenciesRequest:
            type: object
            properties:
                providerId:
                    type: string
        api.backoffice.service.v1.ListCurrenciesResponse:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListCustomerRecordsRequest:
            type: object
            properties:
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                userId:
                    type: string
                transactionId:
                    type: string
                transactionType:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ListCustomerStrikeReportsRequest:
            type: object
            properties:
                userId:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ListDepositDetailsRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                currencies:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListDepositDetailsResponse:
            type: object
            properties:
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListDepositDetailsResponse_Detail'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListDepositDetailsResponse_Detail:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                currency:
                    type: string
                depositAmount:
                    type: string
                depositAmountUsd:
                    type: string
                depositAmountReportingCurrency:
                    type: string
                depositUsers:
                    type: integer
                    format: int32
                ftdAmount:
                    type: string
                ftdAmountUsd:
                    type: string
                ftdAmountReportingCurrency:
                    type: string
                ftdUsers:
                    type: integer
                    format: int32
                sameDayFtdAmount:
                    type: string
                sameDayFtdAmountUsd:
                    type: string
                sameDayFtdAmountReportingCurrency:
                    type: string
                sameDayFtdUsers:
                    type: integer
                    format: int32
                repeatedDepositAmount:
                    type: string
                repeatedDepositAmountUsd:
                    type: string
                repeatedDepositAmountReportingCurrency:
                    type: string
                repeatedDepositUsers:
                    type: integer
                    format: int32
                sameDayFtd:
                    type: integer
                    format: int32
                nonSameDayFtd:
                    type: integer
                    format: int32
                averageFtdAmountForSameDayRegistredUsers:
                    type: string
                averageFtdAmountUsdForSameDayRegistredUsers:
                    type: string
                averageFtdAmountReportingCurrencyForSameDayRegistredUsers:
                    type: string
                averageFtdAmountForNonSameDayRegistredUsers:
                    type: string
                averageFtdAmountUsdForNonSameDayRegistredUsers:
                    type: string
                averageFtdAmountReportingCurrencyForNonSameDayRegistredUsers:
                    type: string
                successRate:
                    type: string
                amountProportion:
                    type: string
        api.backoffice.service.v1.ListDepositVtgDetailsRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                currencies:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListDepositVtgDetailsResponse:
            type: object
            properties:
                dailyDetails:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListDepositVtgDetailsResponse_Detail'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListDepositVtgDetailsResponse_Detail:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                currency:
                    type: string
                depositAmount:
                    type: string
                depositAmountUsd:
                    type: string
                depositAmountReportingCurrency:
                    type: string
                depositUsers:
                    type: integer
                    format: int32
                ftdAmount:
                    type: string
                ftdAmountUsd:
                    type: string
                ftdAmountReportingCurrency:
                    type: string
                ftdUsers:
                    type: integer
                    format: int32
                sameDayFtdAmount:
                    type: string
                sameDayFtdAmountUsd:
                    type: string
                sameDayFtdAmountReportingCurrency:
                    type: string
                sameDayFtdUsers:
                    type: integer
                    format: int32
                nonSameDayFtdUsers:
                    type: integer
                    format: int32
                repeatedDepositAmount:
                    type: string
                repeatedDepositAmountUsd:
                    type: string
                repeatedDepositAmountReportingCurrency:
                    type: string
                repeatedDepositUsers:
                    type: integer
                    format: int32
                averageFtdAmountForSameDayRegistredUsers:
                    type: string
                averageFtdAmountUsdForSameDayRegistredUsers:
                    type: string
                averageFtdAmountReportingCurrencyForSameDayRegistredUsers:
                    type: string
                averageFtdAmountForNonSameDayRegistredUsers:
                    type: string
                averageFtdAmountUsdForNonSameDayRegistredUsers:
                    type: string
                averageFtdAmountReportingCurrencyForNonSameDayRegistredUsers:
                    type: string
        api.backoffice.service.v1.ListFICAThresholdTransactionsRequest:
            type: object
            properties:
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                transactionType:
                    type: string
                currency:
                    type: string
                kycLevel:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.ListFeeGroupsRequest:
            type: object
            properties:
                providerId:
                    type: string
                category:
                    type: string
        api.backoffice.service.v1.ListFeeGroupsResponse:
            type: object
            properties:
                feeGroups:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListGameBetDisplayConfigRequest:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListGameBetDisplayConfigRequest_Item'
        api.backoffice.service.v1.ListGameBetDisplayConfigRequest_Item:
            type: object
            properties:
                country:
                    type: string
                allBet:
                    $ref: '#/components/schemas/api.game.service.v1.BettingConfig'
                highWins:
                    $ref: '#/components/schemas/api.game.service.v1.BettingConfig'
        api.backoffice.service.v1.ListGameDataRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                providerIds:
                    type: array
                    items:
                        type: string
                gameCategories:
                    type: array
                    items:
                        type: string
                gameNames:
                    type: array
                    items:
                        type: string
                gameIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListGameDataResponse:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListGameDataResponse_List'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListGameDataResponse_List:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                provider:
                    type: string
                gameType:
                    type: string
                gameName:
                    type: string
                gameId:
                    type: string
                playerCount:
                    type: integer
                    format: int32
                turnover:
                    type: string
                turnoverUsd:
                    type: string
                turnoverPercentage:
                    type: string
                winAmount:
                    type: string
                winAmountUsd:
                    type: string
                ggr:
                    type: string
                ggrUsd:
                    type: string
                ggrPercentage:
                    type: string
                betCount:
                    type: integer
                    format: int32
                averageBetAmount:
                    type: string
                rtpPercentage:
                    type: string
                settlementCurrency:
                    type: string
                turnoverReportingCurrency:
                    type: string
                winAmountReportingCurrency:
                    type: string
                ggrReportingCurrency:
                    type: string
        api.backoffice.service.v1.ListGamesRequest:
            type: object
            properties:
                providerIds:
                    type: array
                    items:
                        type: string
                categories:
                    type: array
                    items:
                        type: string
                feeGroups:
                    type: array
                    items:
                        type: string
                gameId:
                    type: string
                gameTags:
                    type: array
                    items:
                        type: string
                themes:
                    type: array
                    items:
                        type: string
                supportBonusBuy:
                    type: boolean
                hasFreespins:
                    type: boolean
                supportCurrencies:
                    type: array
                    items:
                        type: string
                restrictedCountries:
                    type: array
                    items:
                        type: string
                rtpMin:
                    type: string
                rtpMax:
                    type: string
                enabled:
                    type: boolean
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListGamesResponse:
            type: object
            properties:
                games:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListGamesResponse_Game'
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
                totalEnabled:
                    type: integer
                    format: int32
                totalDisabled:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListGamesResponse_Game:
            type: object
            properties:
                name:
                    type: string
                provider:
                    type: string
                id:
                    type: string
                category:
                    type: string
                theme:
                    type: string
                supportBonusBuy:
                    type: boolean
                hasFreespins:
                    type: boolean
                tags:
                    type: array
                    items:
                        type: string
                feeGroup:
                    type: string
                rate:
                    type: string
                rtp:
                    type: string
                validBetRate:
                    type: string
                supportCurrencies:
                    type: array
                    items:
                        type: string
                restrictedCountries:
                    type: array
                    items:
                        type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.ListIntegrityStatusRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.ListInvoicesRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                month:
                    type: string
                invoiceId:
                    type: string
                paymentStatus:
                    enum:
                        - PAYMENT_STATUS_PAID
                        - PAYMENT_STATUS_NOT_PAID
                    type: string
                    format: enum
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListInvoicesResponse:
            type: object
            properties:
                invoices:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListInvoicesResponse_Invoice'
                totalCount:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                totalPaidCount:
                    type: integer
                    format: int32
                totalNotPaidCount:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListInvoicesResponse_Invoice:
            type: object
            properties:
                invoiceId:
                    type: string
                    description: Invoice ID
                operatorId:
                    type: string
                    description: Operator information
                operatorName:
                    type: string
                retailerOperatorId:
                    type: string
                    description: Retailer information
                retailerOperatorName:
                    type: string
                companyOperatorId:
                    type: string
                    description: Company information
                companyOperatorName:
                    type: string
                month:
                    type: string
                    description: Invoice details
                dueAmount:
                    type: string
                    description: Financial information
                totalAmount:
                    type: string
                amountPaid:
                    type: string
                paymentStatus:
                    enum:
                        - PAYMENT_STATUS_PAID
                        - PAYMENT_STATUS_NOT_PAID
                    type: string
                    format: enum
                invoiceDate:
                    type: string
                    description: Dates
                dueDate:
                    type: string
        api.backoffice.service.v1.ListManualJournalEntriesRequest:
            type: object
            properties:
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                userId:
                    type: string
                currency:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ListMonthlyRevenueShareRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                invoiceId:
                    type: string
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                periodKey:
                    type: string
        api.backoffice.service.v1.ListMonthlyRevenueShareResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListMonthlyRevenueShareResponse_RevenueShareItem'
                summary:
                    $ref: '#/components/schemas/api.backoffice.service.v1.ListMonthlyRevenueShareResponse_Summary'
                totalCount:
                    type: integer
                    description: Pagination information
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListMonthlyRevenueShareResponse_RevenueShareItem:
            type: object
            properties:
                operatorId:
                    type: string
                    description: Basic information
                operatorName:
                    type: string
                operatorMode:
                    type: string
                retailerOperatorId:
                    type: string
                retailerOperatorName:
                    type: string
                companyOperatorId:
                    type: string
                companyOperatorName:
                    type: string
                deposits:
                    type: string
                    description: Financial data
                withdrawals:
                    type: string
                balance:
                    type: string
                ngr:
                    type: string
                ggr:
                    type: string
                gameProviderRs:
                    type: string
                    description: Revenue breakdown
                thirdPartyFees:
                    type: string
                adjustments:
                    type: string
                netProfit:
                    type: string
                rsRate:
                    type: string
                    description: Revenue share details
                revenueShareSystem:
                    type: string
                revenueShareOperator:
                    type: string
                estCosts:
                    type: string
        api.backoffice.service.v1.ListMonthlyRevenueShareResponse_Summary:
            type: object
            properties:
                subtotal:
                    type: string
                revenueShareSystemTotal:
                    type: string
                revenueShareOperatorTotal:
                    type: string
                estCostsTotal:
                    type: string
            description: Summary totals
        api.backoffice.service.v1.ListMultipleBetsRequest:
            type: object
            properties:
                startTime:
                    type: string
                    description: Filter conditions
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                status:
                    type: string
                userId:
                    type: string
                transactionId:
                    type: string
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ListOperatorBalanceTransactionsRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                settlementCurrencies:
                    type: array
                    items:
                        type: string
                transactionTypes:
                    type: array
                    items:
                        type: string
                transactionId:
                    type: string
                targetOperatorType:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorBalanceTransactionsResponse:
            type: object
            properties:
                transactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.OperatorBalanceTransaction'
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorBalancesRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                currencies:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorByoDomainsRequest:
            type: object
            properties:
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorDomainsRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                type:
                    type: string
        api.backoffice.service.v1.ListOperatorRevenueShareRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                invoiceId:
                    type: string
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                periodKey:
                    type: string
        api.backoffice.service.v1.ListOperatorRevenueShareResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListOperatorRevenueShareResponse_RevenueShareItem'
                subtotal:
                    type: string
                    description: Summary
                totalCount:
                    type: integer
                    description: Pagination information
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                totalPages:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorRevenueShareResponse_RevenueShareItem:
            type: object
            properties:
                operatorId:
                    type: string
                    description: Basic information
                operatorName:
                    type: string
                gameProviderId:
                    type: string
                gameProviderName:
                    type: string
                feeGroup:
                    type: string
                currency:
                    type: string
                totalBet:
                    type: string
                    description: Gaming statistics
                totalPayout:
                    type: string
                betsCount:
                    type: integer
                    format: int32
                ngr:
                    type: string
                ggr:
                    type: string
                rate:
                    type: string
                    description: Revenue share calculation
                amount:
                    type: string
                fxRate:
                    type: string
                amountUsd:
                    type: string
        api.backoffice.service.v1.ListOperatorTicketsRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                ticketId:
                    type: string
                currency:
                    type: string
                status:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorsByAdminEmailRequest:
            type: object
            properties:
                email:
                    type: string
        api.backoffice.service.v1.ListOperatorsByParentOperatorIdRequest:
            type: object
            properties:
                status:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListOperatorsByParentOperatorIdResponse:
            type: object
            properties:
                operatorDetailsList:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.OperatorDetails'
                total:
                    type: integer
                    format: int32
                liveCount:
                    type: integer
                    format: int32
                closedCount:
                    type: integer
                    format: int32
                pendingCount:
                    type: integer
                    format: int32
                requestToCloseCount:
                    type: integer
                    format: int32
                suspendedCount:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListPlayerGameDataRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                providerIds:
                    type: array
                    items:
                        type: string
                gameCategories:
                    type: array
                    items:
                        type: string
                gameTags:
                    type: array
                    items:
                        type: string
                gameNames:
                    type: array
                    items:
                        type: string
                gameIds:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                userIds:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListPlayerGameDataResponse:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListPlayerGameDataResponse_List'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListPlayerGameDataResponse_List:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                provider:
                    type: string
                gameType:
                    type: string
                gameId:
                    type: string
                gameName:
                    type: string
                userId:
                    type: string
                turnover:
                    type: string
                turnoverUsd:
                    type: string
                winAmount:
                    type: string
                winAmountUsd:
                    type: string
                ggr:
                    type: string
                ggrUsd:
                    type: string
                rtpPercentage:
                    type: string
                betCount:
                    type: integer
                    format: int32
                averageBetAmount:
                    type: string
                settlementCurrency:
                    type: string
                turnoverReportingCurrency:
                    type: string
                winAmountReportingCurrency:
                    type: string
                ggrReportingCurrency:
                    type: string
        api.backoffice.service.v1.ListProviderRatesRequest:
            type: object
            properties:
                feeGroup:
                    type: string
                currency:
                    type: string
                providerId:
                    type: string
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListProviderRatesResponse:
            type: object
            properties:
                providerRates:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListProviderRatesResponse_ProviderRate'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListProviderRatesResponse_ProviderRate:
            type: object
            properties:
                providerId:
                    type: string
                providerName:
                    type: string
                feeGroup:
                    type: string
                currency:
                    type: string
                rate:
                    type: string
                operatorId:
                    type: string
                operatorName:
                    type: string
        api.backoffice.service.v1.ListProvidersRequest:
            type: object
            properties:
                enabled:
                    type: boolean
        api.backoffice.service.v1.ListProvidersResponse:
            type: object
            properties:
                providers:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListProvidersResponse_Provider'
        api.backoffice.service.v1.ListProvidersResponse_Provider:
            type: object
            properties:
                providerId:
                    type: string
                providerName:
                    type: string
        api.backoffice.service.v1.ListProvidersWithDetailRequest:
            type: object
            properties:
                providerId:
                    type: string
                enabled:
                    type: boolean
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListProvidersWithDetailResponse:
            type: object
            properties:
                providers:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListProvidersWithDetailResponse_Provider'
                total:
                    type: integer
                    format: int32
                totalEnabled:
                    type: integer
                    format: int32
                totalDisabled:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListProvidersWithDetailResponse_Provider:
            type: object
            properties:
                providerId:
                    type: string
                providerName:
                    type: string
                gameCount:
                    type: integer
                    format: int32
                enabled:
                    type: boolean
        api.backoffice.service.v1.ListRegisterLoginBlacklistRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                idType:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListRegisterRetentionRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListRegisterRetentionResponse:
            type: object
            properties:
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListRegisterRetentionResponse_List'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListRegisterRetentionResponse_List:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                regUsers:
                    type: integer
                    format: int32
                paidUsers:
                    type: integer
                    format: int32
                activeUsers:
                    type: integer
                    format: int32
                depositConvertionRate:
                    type: string
                arppuUsd:
                    type: integer
                    format: int32
                arppuReportingCurrency:
                    type: integer
                    format: int32
                d1ActiveUsers:
                    type: integer
                    format: int32
                d2ActiveUsers:
                    type: integer
                    format: int32
                d3ActiveUsers:
                    type: integer
                    format: int32
                d4ActiveUsers:
                    type: integer
                    format: int32
                d5ActiveUsers:
                    type: integer
                    format: int32
                d6ActiveUsers:
                    type: integer
                    format: int32
                d7ActiveUsers:
                    type: integer
                    format: int32
                d15ActiveUsers:
                    type: integer
                    format: int32
                d30ActiveUsers:
                    type: integer
                    format: int32
                d45ActiveUsers:
                    type: integer
                    format: int32
                d60ActiveUsers:
                    type: integer
                    format: int32
                d120ActiveUsers:
                    type: integer
                    format: int32
                d1PaidUsers:
                    type: integer
                    format: int32
                d2PaidUsers:
                    type: integer
                    format: int32
                d3PaidUsers:
                    type: integer
                    format: int32
                d4PaidUsers:
                    type: integer
                    format: int32
                d5PaidUsers:
                    type: integer
                    format: int32
                d6PaidUsers:
                    type: integer
                    format: int32
                d7PaidUsers:
                    type: integer
                    format: int32
                d15PaidUsers:
                    type: integer
                    format: int32
                d30PaidUsers:
                    type: integer
                    format: int32
                d45PaidUsers:
                    type: integer
                    format: int32
                d60PaidUsers:
                    type: integer
                    format: int32
                d120PaidUsers:
                    type: integer
                    format: int32
                d1PaidAmtUsd:
                    type: string
                d1PaidAmtReportingCurrency:
                    type: string
                d2PaidAmtUsd:
                    type: string
                d2PaidAmtReportingCurrency:
                    type: string
                d3PaidAmtUsd:
                    type: string
                d3PaidAmtReportingCurrency:
                    type: string
                d4PaidAmtUsd:
                    type: string
                d4PaidAmtReportingCurrency:
                    type: string
                d5PaidAmtUsd:
                    type: string
                d5PaidAmtReportingCurrency:
                    type: string
                d6PaidAmtUsd:
                    type: string
                d6PaidAmtReportingCurrency:
                    type: string
                d7PaidAmtUsd:
                    type: string
                d7PaidAmtReportingCurrency:
                    type: string
                d15PaidAmtUsd:
                    type: string
                d15PaidAmtReportingCurrency:
                    type: string
                d30PaidAmtUsd:
                    type: string
                d30PaidAmtReportingCurrency:
                    type: string
                d45PaidAmtUsd:
                    type: string
                d45PaidAmtReportingCurrency:
                    type: string
                d60PaidAmtUsd:
                    type: string
                d60PaidAmtReportingCurrency:
                    type: string
                d120PaidAmtUsd:
                    type: string
                d120PaidAmtReportingCurrency:
                    type: string
        api.backoffice.service.v1.ListReportExportRequest:
            type: object
            properties:
                taskIds:
                    type: array
                    items:
                        type: string
                type:
                    type: string
                status:
                    type: string
                start:
                    type: string
                    format: date-time
                end:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ListRetailerOperatorsRequest:
            type: object
            properties:
                includeCount:
                    type: boolean
        api.backoffice.service.v1.ListRetailerOperatorsResponse:
            type: object
            properties:
                retailerOperators:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListRetailerOperatorsResponse_OperatorInfo'
        api.backoffice.service.v1.ListRetailerOperatorsResponse_OperatorInfo:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                retailerOperatorName:
                    type: string
                companyOperatorCount:
                    type: integer
                    format: int32
                bottomOperatorCount:
                    type: integer
                    format: int32
                bottomLiveOperatorCount:
                    type: integer
                    format: int32
                status:
                    type: boolean
                selfCoOperationEnabled:
                    type: boolean
            description: OperatorInfo is the simplified information of a retailer operator, used for list retailer operators
        api.backoffice.service.v1.ListRolesRequest:
            type: object
            properties:
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListRolesResponse:
            type: object
            properties:
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.Role'
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListSevRequest:
            type: object
            properties:
                severity:
                    type: string
                category:
                    type: string
                component:
                    type: string
                userId:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListSportEventsRequest:
            type: object
            properties:
                startTime:
                    type: string
                endTime:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                eventName:
                    type: string
                venue:
                    type: string
                tournament:
                    type: string
        api.backoffice.service.v1.ListSportEventsResponse:
            type: object
            properties:
                events:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListSportEventsResponse_SportEvent'
                totalCount:
                    type: integer
                    description: Summary information
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                totalPages:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListSportEventsResponse_SportEvent:
            type: object
            properties:
                eventId:
                    type: string
                    description: Basic information
                eventName:
                    type: string
                venue:
                    type: string
                tournament:
                    type: string
                cardedTime:
                    type: string
                    description: Timing information (all in SAST timezone)
                firstBetTime:
                    type: string
                lastBetTime:
                    type: string
                noMoreBetsTime:
                    type: string
                resultProcessingTime:
                    type: string
                revisedOfficialCardedTime:
                    type: string
                status:
                    type: string
        api.backoffice.service.v1.ListStakeVarianceBetsRequest:
            type: object
            properties:
                startTime:
                    type: string
                    description: Filter conditions
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                userId:
                    type: string
                transactionId:
                    type: string
                category:
                    type: string
                roundId:
                    type: string
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.ListSummariesRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                affiliateCodes:
                    type: array
                    items:
                        type: string
                referralCodes:
                    type: array
                    items:
                        type: string
                registrationCountries:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListSummariesResponse:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListSummariesResponse_List'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListSummariesResponse_List:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                country:
                    type: string
                visits:
                    type: integer
                    format: int32
                uniqueVisits:
                    type: integer
                    format: int32
                registeredUsers:
                    type: integer
                    format: int32
                depositedUsers:
                    type: integer
                    format: int32
                ftdUsers:
                    type: integer
                    format: int32
                repeatedDepositedUsers:
                    type: integer
                    format: int32
                depositConversionRate:
                    type: string
                depositCount:
                    type: integer
                    format: int32
                depositAmountUsd:
                    type: string
                arpuUsd:
                    type: string
                arppuUsd:
                    type: string
                averageFtdAmountUsd:
                    type: string
                withdrawAmountUsd:
                    type: string
                withdrawedUsers:
                    type: integer
                    format: int32
                ftwUsers:
                    type: integer
                    format: int32
                averageWithdrawAmountUsd:
                    type: string
                ftwAmountUsd:
                    type: string
                averageFtwAmountUsd:
                    type: string
                wuToAuPercentage:
                    type: string
                wuToDuPercentage:
                    type: string
                depositMinusWithdrawAmountUsd:
                    type: string
                wToDPercentage:
                    type: string
                turnoverUsd:
                    type: string
                depositBonusUsd:
                    type: string
                rebateBonusUsd:
                    type: string
                lossRebateUsd:
                    type: string
                vipBonusUsd:
                    type: string
                otherBonusUsd:
                    type: string
                referralCommissionUsd:
                    type: string
                depositFeeSubsidyAmountUsd:
                    type: string
                playerWithdrawFeeUsd:
                    type: string
                operatorWithdrawFeeUsd:
                    type: string
                cashBalanceUsd:
                    type: string
                bonusBalanceUsd:
                    type: string
                lockedBalanceUsd:
                    type: string
                ggrUsd:
                    type: string
                ngrUsd:
                    type: string
                ggrToNgrPercentage:
                    type: string
                houseEdgePercentage:
                    type: string
                depositAmountReportingCurrency:
                    type: string
                arpuReportingCurrency:
                    type: string
                arppuReportingCurrency:
                    type: string
                averageFtdAmountReportingCurrency:
                    type: string
                withdrawAmountReportingCurrency:
                    type: string
                averageWithdrawAmountReportingCurrency:
                    type: string
                ftwAmountReportingCurrency:
                    type: string
                averageFtwAmountReportingCurrency:
                    type: string
                depositMinusWithdrawAmountReportingCurrency:
                    type: string
                turnoverReportingCurrency:
                    type: string
                depositBonusReportingCurrency:
                    type: string
                rebateBonusReportingCurrency:
                    type: string
                lossRebateReportingCurrency:
                    type: string
                vipBonusReportingCurrency:
                    type: string
                otherBonusReportingCurrency:
                    type: string
                referralCommissionReportingCurrency:
                    type: string
                depositFeeSubsidyAmountReportingCurrency:
                    type: string
                playerWithdrawFeeReportingCurrency:
                    type: string
                operatorWithdrawFeeReportingCurrency:
                    type: string
                cashBalanceReportingCurrency:
                    type: string
                bonusBalanceReportingCurrency:
                    type: string
                lockedBalanceReportingCurrency:
                    type: string
                ggrReportingCurrency:
                    type: string
                ngrReportingCurrency:
                    type: string
        api.backoffice.service.v1.ListTagsRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.ListTagsResponse:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListTaxReportsRequest:
            type: object
            properties:
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                taxPeriod:
                    type: string
                reportCategory:
                    type: string
                    description: 'report_category: horse_racing,sportsbook_and_other_contingencies'
                periodType:
                    type: string
        api.backoffice.service.v1.ListTaxReportsResponse:
            type: object
            properties:
                taxReports:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListTaxReportsResponse_TaxReport'
                totalCount:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListTaxReportsResponse_TaxReport:
            type: object
            properties:
                reportCategory:
                    type: string
                    description: Basic information
                licensedOperator:
                    type: string
                taxPeriod:
                    type: string
                depositDate:
                    type: string
                    description: Deposit information
                depositSlipNo:
                    type: string
                refCode:
                    type: string
                holdTotalStake:
                    type: string
                    description: Financial data (all amounts in ZAR)
                winningStakes:
                    type: string
                punterWinningsLoss:
                    type: string
                profitLoss:
                    type: string
                totalTaxLevy:
                    type: string
                vatPayableReceivable:
                    type: string
                eventCalculations:
                    type: string
                status:
                    enum:
                        - TaxReportRecordStatus_PENDING
                        - TaxReportRecordStatus_CONFIRMED
                    type: string
                    format: enum
                createdAt:
                    type: string
                    description: Timestamps
                updatedAt:
                    type: string
                id:
                    type: string
        api.backoffice.service.v1.ListThemesRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.ListThemesResponse:
            type: object
            properties:
                themes:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.ListThirdPartyFeesRequest:
            type: object
            properties:
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                invoiceId:
                    type: string
                page:
                    type: integer
                    description: Pagination
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                periodKey:
                    type: string
        api.backoffice.service.v1.ListThirdPartyFeesResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListThirdPartyFeesResponse_ThirdPartyFeeItem'
                subtotal:
                    type: string
                    description: Summary
                totalCount:
                    type: integer
                    description: Pagination information
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListThirdPartyFeesResponse_ThirdPartyFeeItem:
            type: object
            properties:
                operatorId:
                    type: string
                    description: Basic information
                operatorName:
                    type: string
                service:
                    type: string
                quantity:
                    type: string
                    description: Fee details
                amount:
                    type: string
                description:
                    type: string
        api.backoffice.service.v1.ListTicketsRequest:
            type: object
            properties:
                userId:
                    type: string
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                ticketId:
                    type: string
                currency:
                    type: string
                status:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListUnpaidBetsRequest:
            type: object
            properties:
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                userId:
                    type: string
                transactionId:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ListUserCommentsRequest:
            type: object
            properties:
                userId:
                    type: string
        api.backoffice.service.v1.ListUserCommentsResponse:
            type: object
            properties:
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListUserCommentsResponse_Comment'
        api.backoffice.service.v1.ListUserCommentsResponse_Comment:
            type: object
            properties:
                author:
                    type: string
                content:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        api.backoffice.service.v1.ListUsersRequest:
            type: object
            properties:
                userId:
                    type: string
                tags:
                    type: array
                    items:
                        type: string
                registrationStartTime:
                    type: string
                    format: date-time
                registrationEndTime:
                    type: string
                    format: date-time
                vipLevel:
                    type: integer
                    format: int32
                country:
                    type: string
                kycLevel:
                    type: integer
                    description: |-
                        optional int32 risk_level_min = 10;
                         optional int32 risk_level_max = 11;
                    format: int32
                depositMin:
                    type: string
                    description: optional bool has_made_deposit = 13;
                depositMax:
                    type: string
                withdrawalMin:
                    type: string
                withdrawalMax:
                    type: string
                banWithdraw:
                    type: boolean
                banGame:
                    type: boolean
                banLogin:
                    type: boolean
                online:
                    type: boolean
                enabled:
                    type: boolean
                email:
                    type: string
                mobile:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.ListUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListUsersResponse_User'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListUsersResponse_User:
            type: object
            properties:
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                userId:
                    type: string
                username:
                    type: string
                email:
                    type: string
                mobile:
                    type: string
                vipLevel:
                    type: integer
                    format: int32
                kycLevel:
                    type: integer
                    format: int32
                depositUsd:
                    type: string
                withdrawUsd:
                    type: string
                depositReportingCurrency:
                    type: string
                withdrawReportingCurrency:
                    type: string
                tags:
                    type: array
                    items:
                        type: string
                banWithdraw:
                    type: boolean
                banGame:
                    type: boolean
                banLogin:
                    type: boolean
                online:
                    type: boolean
                lastLoginAt:
                    type: string
                    format: date-time
                registeredAt:
                    type: string
                    format: date-time
                country:
                    type: string
                    description: |-
                        int32 risk_level = 19;
                         string referral_code = 20;
                         string affiliate_code = 21;
                registrationIp:
                    type: string
                    description: |-
                        string device = 23;
                         string source = 24;
        api.backoffice.service.v1.ListWalletBalanceTransactionsRequest:
            type: object
            properties:
                userId:
                    type: string
                transactionType:
                    type: string
                    description: |-
                        Transaction types for different operations
                         Expected values:
                         Credit operations:
                           - "payment_deposit"    - Payment deposit transaction
                           - "game_win"          - Game win transaction

                         Debit operations:
                           - "payment_withdraw"   - Payment withdraw transaction
                           - "game_bet"          - Game bet transaction
                           - "payment_withdraw_freeze" - Payment withdraw freeze transaction

                         Settlement operations:
                           - "payment_withdraw_settle" - Payment withdraw settlement

                         Rollback operations:
                           - "game_bet_rollback"            - Game bet transaction rollback
                           - "game_win_rollback"            - Game win transaction rollback
                           - "payment_withdraw_rollback" - Payment withdraw transaction rollback
                currency:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListWalletBalanceTransactionsResponse:
            type: object
            properties:
                balanceTransactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListWalletBalanceTransactionsResponse_BalanceTransaction'
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListWalletBalanceTransactionsResponse_BalanceTransaction:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                transactionId:
                    type: string
                transactionType:
                    type: string
                    description: |-
                        Transaction types for different operations
                         Expected values:
                         Credit operations:
                           - "payment_deposit"    - Payment deposit transaction
                           - "game_win"          - Game win transaction

                         Debit operations:
                           - "payment_withdraw"   - Payment withdraw transaction
                           - "game_bet"          - Game bet transaction
                           - "payment_withdraw_freeze" - Payment withdraw freeze transaction

                         Settlement operations:
                           - "payment_withdraw_settle" - Payment withdraw settlement

                         Rollback operations:
                           - "game_bet_rollback"            - Game bet transaction rollback
                           - "game_win_rollback"            - Game win transaction rollback
                           - "payment_withdraw_rollback" - Payment withdraw transaction rollback
                vipLevel:
                    type: integer
                    format: int32
                changeBalance:
                    type: string
                beforeBalance:
                    type: string
                afterBalance:
                    type: string
                currency:
                    type: string
                relatedTransactionId:
                    type: string
        api.backoffice.service.v1.ListWalletCurrenciesRequest:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                aggregatedEnabled:
                    type: boolean
                aggregatedHidden:
                    type: boolean
                parentEnabled:
                    type: boolean
                parentHidden:
                    type: boolean
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.ListWalletResponsibleGamblingConfigsRequest:
            type: object
            properties:
                userId:
                    type: string
        api.backoffice.service.v1.ListWithdrawDetailsRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                currencies:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListWithdrawDetailsResponse:
            type: object
            properties:
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListWithdrawDetailsResponse_Detail'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListWithdrawDetailsResponse_Detail:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                currency:
                    type: string
                reportingCurrency:
                    type: string
                withdrawAmount:
                    type: string
                withdrawAmountUsd:
                    type: string
                withdrawAmountReportingCurrency:
                    type: string
                withdrawUsers:
                    type: integer
                    format: int32
                ftwAmount:
                    type: string
                ftwAmountUsd:
                    type: string
                ftwAmountReportingCurrency:
                    type: string
                ftwUsers:
                    type: integer
                    format: int32
                sameDayFtwAmount:
                    type: string
                sameDayFtwAmountUsd:
                    type: string
                sameDayFtwAmountReportingCurrency:
                    type: string
                sameDayFtwUsers:
                    type: integer
                    format: int32
                repeatedWithdrawAmount:
                    type: string
                repeatedWithdrawAmountUsd:
                    type: string
                repeatedWithdrawAmountReportingCurrency:
                    type: string
                repeatedWithdrawUsers:
                    type: integer
                    format: int32
                sameDayFtw:
                    type: integer
                    format: int32
                nonSameDayFtw:
                    type: integer
                    format: int32
                averageFtwAmountForSameDayRegistredUsers:
                    type: string
                averageFtwAmountUsdForSameDayRegistredUsers:
                    type: string
                averageFtwAmountReportingCurrencyForSameDayRegistredUsers:
                    type: string
                averageFtwAmountForNonSameDayRegistredUsers:
                    type: string
                averageFtwAmountUsdForNonSameDayRegistredUsers:
                    type: string
                averageFtwAmountReportingCurrencyForNonSameDayRegistredUsers:
                    type: string
                successRate:
                    type: string
                depositMinusWithdrawAmount:
                    type: string
                depositMinusWithdrawAmountUsd:
                    type: string
                depositMinusWithdrawAmountReportingCurrency:
                    type: string
                amountProportion:
                    type: string
        api.backoffice.service.v1.ListWithdrawVtgDetailsRequest:
            type: object
            properties:
                timeRange:
                    $ref: '#/components/schemas/api.backoffice.service.v1.TimeRange'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                currencies:
                    type: array
                    items:
                        type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListWithdrawVtgDetailsResponse:
            type: object
            properties:
                dailyDetails:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.ListWithdrawVtgDetailsResponse_Detail'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.backoffice.service.v1.ListWithdrawVtgDetailsResponse_Detail:
            type: object
            properties:
                date:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                currency:
                    type: string
                withdrawAmount:
                    type: string
                withdrawAmountUsd:
                    type: string
                withdrawAmountReportingCurrency:
                    type: string
                withdrawUsers:
                    type: integer
                    format: int32
                ftwAmount:
                    type: string
                ftwAmountUsd:
                    type: string
                ftwAmountReportingCurrency:
                    type: string
                ftwUsers:
                    type: integer
                    format: int32
                sameDayFtwAmount:
                    type: string
                sameDayFtwAmountUsd:
                    type: string
                sameDayFtwAmountReportingCurrency:
                    type: string
                sameDayFtwUsers:
                    type: integer
                    format: int32
                nonSameDayFtwUsers:
                    type: integer
                    format: int32
                repeatedWithdrawAmount:
                    type: string
                repeatedWithdrawAmountUsd:
                    type: string
                repeatedWithdrawAmountReportingCurrency:
                    type: string
                repeatedWithdrawUsers:
                    type: integer
                    format: int32
                averageFtwAmountForSameDayRegistredUsers:
                    type: string
                averageFtwAmountUsdForSameDayRegistredUsers:
                    type: string
                averageFtwAmountReportingCurrencyForSameDayRegistredUsers:
                    type: string
                averageFtwAmountForNonSameDayRegistredUsers:
                    type: string
                averageFtwAmountUsdForNonSameDayRegistredUsers:
                    type: string
                averageFtwAmountReportingCurrencyForNonSameDayRegistredUsers:
                    type: string
                depositMinusWithdrawAmount:
                    type: string
                depositMinusWithdrawAmountUsd:
                    type: string
                depositMinusWithdrawAmountReportingCurrency:
                    type: string
        api.backoffice.service.v1.LoginRequest:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
        api.backoffice.service.v1.LoginResponse:
            type: object
            properties:
                token:
                    type: string
        api.backoffice.service.v1.OperatorBalanceFreezeRequest:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                cashAmount:
                    type: string
                memo:
                    type: string
        api.backoffice.service.v1.OperatorBalanceFreezeResponse:
            type: object
            properties:
                transactionId:
                    type: string
                cash:
                    type: string
        api.backoffice.service.v1.OperatorBalanceRollbackRequest:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                originalTransactionId:
                    type: string
                memo:
                    type: string
        api.backoffice.service.v1.OperatorBalanceRollbackResponse:
            type: object
            properties:
                transactionId:
                    type: string
                cash:
                    type: string
                cashAmount:
                    type: string
                cashAmountUsd:
                    type: string
                cashAmountReportingCurrency:
                    type: string
        api.backoffice.service.v1.OperatorBalanceSettleRequest:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                originalTransactionId:
                    type: string
                memo:
                    type: string
        api.backoffice.service.v1.OperatorBalanceSettleResponse:
            type: object
            properties:
                transactionId:
                    type: string
                cash:
                    type: string
                cashAmount:
                    type: string
                cashAmountUsd:
                    type: string
                cashAmountReportingCurrency:
                    type: string
        api.backoffice.service.v1.OperatorBalanceTransaction:
            type: object
            properties:
                transactionId:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                retailerOperatorName:
                    type: string
                companyOperatorName:
                    type: string
                operatorName:
                    type: string
                settlementCurrency:
                    type: string
                beforeBalance:
                    type: string
                afterBalance:
                    type: string
                cashAmount:
                    type: string
                transactionType:
                    type: string
                status:
                    type: string
                memo:
                    type: string
                feeAmount:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        api.backoffice.service.v1.OperatorDetails:
            type: object
            properties:
                id:
                    type: string
                operatorName:
                    type: string
                parentOperatorId:
                    type: string
                parentOperatorName:
                    type: string
                operatorType:
                    type: string
                externalId:
                    type: string
                apiKey:
                    type: string
                subdomain:
                    type: string
                byoSubdomains:
                    type: array
                    items:
                        type: string
                backofficeSubdomain:
                    type: string
                backofficeByoSubdomains:
                    type: array
                    items:
                        type: string
                backofficeChildDomain:
                    type: string
                domainPool:
                    type: array
                    items:
                        type: string
                enabled:
                    type: boolean
                mode:
                    type: string
                operatorKey:
                    type: string
                reportingCurrency:
                    type: string
                backofficeTimezone:
                    type: string
                supportedLanguages:
                    type: array
                    items:
                        type: string
                supportedCurrencies:
                    type: array
                    items:
                        type: string
                status:
                    type: string
                statusStartTime:
                    type: string
                statusEndTime:
                    type: string
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorId:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorId:
                    type: string
                systemOperatorName:
                    type: string
                config:
                    type: string
                minLaunchBalance:
                    type: string
        api.backoffice.service.v1.OperatorSwapRequest:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                targetCurrency:
                    type: string
                cashAmount:
                    type: string
        api.backoffice.service.v1.OperatorSwapResponse:
            type: object
            properties:
                currencyBalanceCash:
                    type: string
                currencyBalanceCashUsd:
                    type: string
                currencyBalanceCashReportingCurrency:
                    type: string
                targetCurrencyBalanceCash:
                    type: string
                targetCurrencyBalanceCashUsd:
                    type: string
                targetCurrencyBalanceCashReportingCurrency:
                    type: string
        api.backoffice.service.v1.OperatorTransferRequest:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                cashAmount:
                    type: string
        api.backoffice.service.v1.OperatorTransferResponse:
            type: object
            properties:
                operatorCash:
                    type: string
                operatorBalanceCurrency:
                    type: string
                targetOperatorCash:
                    type: string
                targetOperatorBalanceCurrency:
                    type: string
        api.backoffice.service.v1.PaymentData_Data:
            type: object
            properties:
                depositUsd:
                    type: string
                withdrawalUsd:
                    type: string
                depositReportingCurrency:
                    type: string
                withdrawalReportingCurrency:
                    type: string
        api.backoffice.service.v1.Permission:
            type: object
            properties:
                module:
                    type: string
                    description: 'module name: dashboard, game list, user list, etc.'
                actions:
                    type: array
                    items:
                        type: string
                    description: 'action name: read, write, delete, etc.'
        api.backoffice.service.v1.RegisterRequest:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                verificationCode:
                    type: string
                password:
                    type: string
                mobile:
                    type: string
        api.backoffice.service.v1.RegisterResponse:
            type: object
            properties:
                token:
                    type: string
        api.backoffice.service.v1.ResetPasswordRequest:
            type: object
            properties:
                email:
                    type: string
        api.backoffice.service.v1.ResetPasswordResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.ResetPasswordWithCodeRequest:
            type: object
            properties:
                email:
                    type: string
                verificationCode:
                    type: string
                newPassword:
                    type: string
        api.backoffice.service.v1.ResetPasswordWithCodeResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.ReviewTicketRequest:
            type: object
            properties:
                ticketId:
                    type: string
                action:
                    type: string
                reviewComment:
                    type: string
        api.backoffice.service.v1.ReviewTicketResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.Role:
            type: object
            properties:
                name:
                    type: string
                roleId:
                    type: string
                permissions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.Permission'
        api.backoffice.service.v1.SendEmailVerificationCodeRequest:
            type: object
            properties:
                email:
                    type: string
        api.backoffice.service.v1.SendEmailVerificationCodeResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.SendEmailVerificationRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.SendEmailVerificationResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.SendInvoicesRequest:
            type: object
            properties:
                periodKey:
                    type: string
        api.backoffice.service.v1.SendInvoicesResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.SendMobileVerificationRequest:
            type: object
            properties: {}
        api.backoffice.service.v1.SendMobileVerificationResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.SendPasswordResetCodeRequest:
            type: object
            properties:
                email:
                    type: string
        api.backoffice.service.v1.SendPasswordResetCodeResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.SendRegisterVerificationCodeRequest:
            type: object
            properties:
                email:
                    type: string
        api.backoffice.service.v1.SendRegisterVerificationCodeResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.SetDepositRewardSequencesRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                followParent:
                    type: boolean
                welcomeRewardEnabled:
                    type: boolean
                dailyRewardEnabled:
                    type: boolean
                welcomeRewardSequences:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.RewardSequence'
                dailyRewardSequences:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.RewardSequence'
        api.backoffice.service.v1.SetFICAThresholdConfigRequest:
            type: object
            properties:
                currency:
                    type: string
                ficaThresholdConfig:
                    $ref: '#/components/schemas/api.wallet.service.v1.FICAThresholdConfig'
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.SetIntegrityConfigRequest:
            type: object
            properties:
                labelApp:
                    type: string
                podNamespace:
                    type: string
                fileInfos:
                    type: array
                    items:
                        $ref: '#/components/schemas/system.service.v1.FileInfo'
        api.backoffice.service.v1.SetOperatorRegisterLimitConfigRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                config:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/api.user.service.v1.OperatorRegisterLimitConfig'
        api.backoffice.service.v1.SetOperatorTagsConfigRequest:
            type: object
            properties:
                operatorId:
                    type: string
                    description: The ID of the operator to set tag configuration for.
                followParent:
                    type: boolean
                    description: Whether to follow parent operator's tags.
            description: SetOperatorTagsConfigRequest contains the operator ID.
        api.backoffice.service.v1.SetOperatorTagsConfigResponse:
            type: object
            properties: {}
            description: SetOperatorTagsConfigResponse is an empty message indicating successful tag configuration.
        api.backoffice.service.v1.SetOperatorTagsRequest:
            type: object
            properties:
                operatorId:
                    type: string
                    description: The ID of the operator to add the tag to.
                tags:
                    type: array
                    items:
                        type: string
                    description: The tag to add to the operator.
            description: SetOperatorTagsRequest contains the operator ID and tag to add.
        api.backoffice.service.v1.SetOperatorTagsResponse:
            type: object
            properties: {}
            description: SetOperatorTagsResponse is an empty message indicating successful tag addition.
        api.backoffice.service.v1.SetUserTagsRequest:
            type: object
            properties:
                userId:
                    type: string
                tags:
                    type: array
                    items:
                        type: string
        api.backoffice.service.v1.SetUserTagsResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.TimeRange:
            type: object
            properties:
                type:
                    type: string
                startTime:
                    type: string
                endTime:
                    type: string
        api.backoffice.service.v1.TransactionListRequest:
            type: object
            properties:
                page:
                    type: integer
                    description: Page number to retrieve (1-based)
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                type:
                    type: string
                    description: type "payin" "payout"
                status:
                    type: string
                    description: status "pending" "approved" "declined"
                transactionId:
                    type: string
                depositBankAccountFirstname:
                    type: string
                depositBankAccountLastname:
                    type: string
                userId:
                    type: string
                userName:
                    type: string
                userBankAccountFirstname:
                    type: string
                userBankAccountLastname:
                    type: string
        api.backoffice.service.v1.Unbind2faRequest:
            type: object
            properties:
                token:
                    type: string
        api.backoffice.service.v1.Unbind2faResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateAccountRequest:
            type: object
            properties:
                userId:
                    type: string
                enabled:
                    type: boolean
                roleId:
                    type: string
        api.backoffice.service.v1.UpdateAccountResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateAdjustmentConfigRequest:
            type: object
            properties:
                id:
                    type: string
                item:
                    type: string
                description:
                    type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.UpdateAdjustmentConfigResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateAffiliateRequest:
            type: object
            properties:
                affiliate:
                    $ref: '#/components/schemas/api.affiliate.service.v1.AffiliateInfo'
                affiliateId:
                    type: string
        api.backoffice.service.v1.UpdateBankAccountRequest:
            type: object
            properties:
                id:
                    type: string
                currency:
                    type: string
                country:
                    type: string
                maxAmount:
                    type: string
                maxAmountPerTrans:
                    type: string
                maxTransLimit:
                    type: integer
                    format: int32
                priority:
                    type: integer
                    format: int32
                enabled:
                    type: boolean
                bankInfo:
                    type: object
        api.backoffice.service.v1.UpdateCampaignRequest:
            type: object
            properties:
                campaignId:
                    type: string
                campaign:
                    $ref: '#/components/schemas/api.affiliate.service.v1.Campaign'
                enabled:
                    type: boolean
        api.backoffice.service.v1.UpdateCommissionPlanRequest:
            type: object
            properties:
                title:
                    type: string
                status:
                    type: string
                baseCurrency:
                    type: string
                planConfig:
                    $ref: '#/components/schemas/api.affiliate.service.v1.CommissionPlanConfig'
                commissionPlanId:
                    type: string
        api.backoffice.service.v1.UpdateDeductionOrderRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                deductionOrder:
                    $ref: '#/components/schemas/api.wallet.service.v1.DeductionOrder'
        api.backoffice.service.v1.UpdateGameBetDisplayConfigRequest:
            type: object
            properties:
                country:
                    type: string
                allBet:
                    $ref: '#/components/schemas/api.game.service.v1.BettingConfig'
                highWins:
                    $ref: '#/components/schemas/api.game.service.v1.BettingConfig'
        api.backoffice.service.v1.UpdateGameRequest:
            type: object
            properties:
                gameId:
                    type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.UpdateGameResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateOperatorAccountSettingsRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                accountSettings:
                    $ref: '#/components/schemas/api.user.service.v1.OperatorAccountSettings'
        api.backoffice.service.v1.UpdateOperatorBalanceRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.UpdateOperatorBalanceResponse:
            type: object
            properties:
                enabled:
                    type: boolean
        api.backoffice.service.v1.UpdateOperatorCurrencyConfigRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                operatorCurrencyConfig:
                    $ref: '#/components/schemas/api.wallet.service.v1.OperatorCurrencyConfig'
        api.backoffice.service.v1.UpdateOperatorStatusRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                action:
                    type: string
                actionStart:
                    type: string
                    format: date-time
                actionEnd:
                    type: string
                    format: date-time
        api.backoffice.service.v1.UpdateOperatorStatusResponse:
            type: object
            properties:
                status:
                    type: string
        api.backoffice.service.v1.UpdateProviderRequest:
            type: object
            properties:
                providerId:
                    type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.UpdateProviderResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateRoleRequest:
            type: object
            properties:
                roleId:
                    type: string
                name:
                    type: string
                permissions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.backoffice.service.v1.Permission'
        api.backoffice.service.v1.UpdateRoleResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateTaxReportConfigRequest:
            type: object
            properties:
                type:
                    type: string
                    description: 'type: south_afirca'
                config:
                    type: string
                    description: "config is a json string\n example:\n {\n\t\"report_type\": {\n\t\t\"horse_racing_tax_return\": true,\n\t\t\"sports_tax_return\": true,\n\t\t\"other_contingencies_tax_return\": false\n\t}\n\t\"timezone\": \"UTC+0\",\n\t\"report_generation_time\": {\n\t\t\"monthly\": \"2nd of each month\",\n\t\t\"quarterly\": \"2nd of each quarter\", \n\t\t\"yearly\": \"2nd of each year\"\n\t},\n\t\"tax_currency\": \"ZAR\",\n\t\"user_registration_countries\": [\"US\", \"ZA\", \"TR\", \"VN\"],\n\t\"user_currencies\": [\"USD\", \"EUR\", \"INR\", \"ZAR\", \"USDT\"],\n  \"vat_payable\": 6.5,\n  \"tax_for_sportsbook\": 6.5,\n  \"tax_for_other_contingencies\": 6.5,\n  \"tax_for_horse_racing\": 6.5,\n\t}"
        api.backoffice.service.v1.UpdateTaxReportConfigResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateTaxReportRequest:
            type: object
            properties:
                id:
                    type: string
                depositDate:
                    type: string
                depositSlipNo:
                    type: string
                refCode:
                    type: string
                status:
                    enum:
                        - TaxReportRecordStatus_PENDING
                        - TaxReportRecordStatus_CONFIRMED
                    type: string
                    format: enum
        api.backoffice.service.v1.UpdateTaxReportResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateUserRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: user id
                nickname:
                    type: string
                    description: nickname
                avatar:
                    type: string
                    description: avatar
                banLogin:
                    type: boolean
                    description: ban login
                banGame:
                    type: boolean
                    description: ban game
                banWithdraw:
                    type: boolean
                    description: ban withdraw
                locked:
                    type: boolean
                    description: locked
                enabled:
                    type: boolean
                    description: enabled
                roleId:
                    type: string
                    description: role id
                firstname:
                    type: string
                    description: first name
                lastname:
                    type: string
                    description: last name
                email:
                    type: string
                    description: email
                mobile:
                    type: string
                    description: mobile
                userIdentity:
                    allOf:
                        - $ref: '#/components/schemas/api.user.service.v1.UserIdentityRequest'
                    description: user identity
                address:
                    type: string
                    description: address
                bod:
                    type: string
                    description: date of birth
                    format: date-time
                emailVerified:
                    type: boolean
                    description: email verified
                phoneVerified:
                    type: boolean
                    description: phone verified
        api.backoffice.service.v1.UpdateUserResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateVipLevelConfigTemplateRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                template:
                    $ref: '#/components/schemas/api.vip.service.v1.VipLevelConfigTemplate'
        api.backoffice.service.v1.UpdateVipLevelConfigTemplateResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateVipSettingRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                setting:
                    $ref: '#/components/schemas/api.vip.service.v1.VipSetting'
        api.backoffice.service.v1.UpdateVipSettingResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UpdateWalletCurrencyRequest:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                type:
                    type: string
                symbol:
                    type: string
                icon:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
                currencyDecimalPlaces:
                    type: integer
                    format: int32
                thousandsSeparator:
                    type: string
                decimalSeparator:
                    type: string
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.backoffice.service.v1.UpdateWalletRequest:
            type: object
            properties:
                userId:
                    type: string
                currency:
                    type: string
                enabled:
                    type: boolean
        api.backoffice.service.v1.UpdateWalletResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UploadAffiliateRegistrationPhotoRequest:
            type: object
            properties:
                data:
                    type: string
                    format: bytes
                contentType:
                    type: string
                filePath:
                    type: string
        api.backoffice.service.v1.UploadAffiliateRegistrationPhotoResponse:
            type: object
            properties:
                fileUrl:
                    type: string
        api.backoffice.service.v1.UploadOperatorStaticFileRequest:
            type: object
            properties:
                data:
                    type: string
                    format: bytes
                contentType:
                    type: string
                domain:
                    type: string
                filePath:
                    type: string
        api.backoffice.service.v1.UploadOperatorStaticFileResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UploadRegisterLoginBlacklistRequest:
            type: object
            properties:
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                data:
                    type: string
                    format: bytes
                idType:
                    type: string
        api.backoffice.service.v1.UploadRegisterLoginBlacklistResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.UploadVipLevelImageRequest:
            type: object
            properties:
                data:
                    type: string
                    format: bytes
                contentType:
                    type: string
                filePath:
                    type: string
                operatorType:
                    type: string
                realOperatorId:
                    type: string
        api.backoffice.service.v1.UploadVipLevelImageResponse:
            type: object
            properties:
                fileUrl:
                    type: string
        api.backoffice.service.v1.UserIdentityAuditRequest:
            type: object
            properties:
                id:
                    type: string
                    description: user identity id
                audit:
                    type: string
                    description: audit "approved" or "declined"
        api.backoffice.service.v1.UserIdentityListRequest:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
                status:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.backoffice.service.v1.VerifyEmailRequest:
            type: object
            properties:
                token:
                    type: string
        api.backoffice.service.v1.VerifyEmailResponse:
            type: object
            properties: {}
        api.backoffice.service.v1.VerifyMobileRequest:
            type: object
            properties:
                token:
                    type: string
        api.backoffice.service.v1.VerifyMobileResponse:
            type: object
            properties: {}
        api.bcpay.service.v1.AddBankAccountResponse:
            type: object
            properties: {}
        api.bcpay.service.v1.AddNoteToTransactionRequest:
            type: object
            properties:
                transactionId:
                    type: string
                note:
                    type: string
                    description: note
        api.bcpay.service.v1.AddNoteToTransactionResponse:
            type: object
            properties: {}
        api.bcpay.service.v1.AuditTransactionResponse:
            type: object
            properties: {}
        api.bcpay.service.v1.BankAccountListResponse:
            type: object
            properties:
                bankAccounts:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.bcpay.service.v1.DepositBankAccount'
                page:
                    type: integer
                    description: Current page number
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                totalPages:
                    type: integer
                    description: Total number of pages available
                    format: int32
                totalEnabled:
                    type: integer
                    description: Total number of enabled bank account
                    format: int32
                totalDisabled:
                    type: integer
                    description: Total number of disabled bank account
                    format: int32
                totalCount:
                    type: integer
                    format: int32
        api.bcpay.service.v1.CreateDepositRequest:
            type: object
            properties:
                merchantId:
                    type: string
                userId:
                    type: string
                userName:
                    type: string
                currency:
                    type: string
                country:
                    type: string
                notifyUrl:
                    type: string
                amount:
                    type: string
                bankAccount:
                    type: string
                bankAccountFirstname:
                    type: string
                bankAccountLastname:
                    type: string
                bankIban:
                    type: string
        api.bcpay.service.v1.CreateDepositResponse:
            type: object
            properties:
                transactionID:
                    type: string
                    description: operator id allocated by operator service
                depositReference:
                    type: string
                bankAccount:
                    type: string
                bankAccountName:
                    type: string
                bankIban:
                    type: string
        api.bcpay.service.v1.CreateMerchantResponse:
            type: object
            properties:
                merchantId:
                    type: string
                apiKeyPublic:
                    type: string
        api.bcpay.service.v1.CreateWithdrawRequest:
            type: object
            properties:
                operatorOrderNo:
                    type: string
                merchantId:
                    type: string
                amount:
                    type: string
                currency:
                    type: string
                country:
                    type: string
                notifyUrl:
                    type: string
                userId:
                    type: string
                userName:
                    type: string
                bankAccount:
                    type: string
                bankAccountFirstname:
                    type: string
                bankAccountLastname:
                    type: string
                bankIban:
                    type: string
        api.bcpay.service.v1.CreateWithdrawResponse:
            type: object
            properties:
                transactionId:
                    type: string
        api.bcpay.service.v1.DeleteBankAccountRequest:
            type: object
            properties:
                id:
                    type: string
        api.bcpay.service.v1.DeleteBankAccountResponse:
            type: object
            properties: {}
        api.bcpay.service.v1.DepositBankAccount:
            type: object
            properties:
                id:
                    type: string
                merchantId:
                    type: string
                bankAccount:
                    type: string
                bankFirstName:
                    type: string
                bankLastName:
                    type: string
                iban:
                    type: string
                currency:
                    type: string
                country:
                    type: string
                maxAmount:
                    type: string
                maxAmountPerTrans:
                    type: string
                maxTransLimit:
                    type: integer
                    format: int32
                currentTransTimes:
                    type: integer
                    format: int32
                priority:
                    type: integer
                    format: int32
                enable:
                    type: boolean
                currentAmount:
                    type: string
        api.bcpay.service.v1.GetBankSchemaRequest:
            type: object
            properties:
                currency:
                    type: string
                country:
                    type: string
        api.bcpay.service.v1.GetBankSchemaResponse:
            type: object
            properties:
                schema:
                    $ref: '#/components/schemas/google.protobuf.ListValue'
        api.bcpay.service.v1.GetMerchantResponse:
            type: object
            properties:
                merchantId:
                    type: string
                apiKeyPublic:
                    type: string
        api.bcpay.service.v1.Transaction:
            type: object
            properties:
                id:
                    type: string
                merchantId:
                    type: string
                userId:
                    type: string
                userName:
                    type: string
                depositBankAccount:
                    type: string
                depositBankAccountFirstName:
                    type: string
                depositBankAccountLastName:
                    type: string
                userBankAccount:
                    type: string
                userBankAccountFirstName:
                    type: string
                userBankAccountLastName:
                    type: string
                type:
                    type: string
                cardId:
                    type: string
                amount:
                    type: string
                currency:
                    type: string
                country:
                    type: string
                status:
                    type: string
                auditor:
                    type: string
                    description: audit a transaction "approve" or "decline"
                auditTime:
                    type: string
                    format: date-time
                auditNote:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
        api.bcpay.service.v1.TransactionListResponse:
            type: object
            properties:
                transaction:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.bcpay.service.v1.Transaction'
                page:
                    type: integer
                    description: Current page number
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                totalPages:
                    type: integer
                    description: Total number of pages available
                    format: int32
                totalApproved:
                    type: integer
                    description: Total number of approved transactions
                    format: int32
                totalFailed:
                    type: integer
                    description: Total number of failed transactions
                    format: int32
                totalPending:
                    type: integer
                    description: Total number of pending transactions
                    format: int32
                totalCount:
                    type: integer
                    format: int32
        api.bcpay.service.v1.UpdateBankAccountResponse:
            type: object
            properties: {}
        api.common.OperatorContext:
            type: object
            properties:
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                systemOperatorId:
                    type: string
                realOperatorId:
                    type: string
                operatorType:
                    type: string
        api.common.OperatorContextFilters:
            type: object
            properties:
                operatorContexts:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.common.OperatorContext'
                companyOperatorContexts:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.common.OperatorContext'
                retailerOperatorContexts:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.common.OperatorContext'
        api.game.service.v1.Action:
            type: object
            properties:
                action:
                    type: string
                betId:
                    type: string
                txnId:
                    type: string
                extTxnId:
                    type: string
                updateBalance:
                    type: boolean
                takeAll:
                    type: boolean
                isRefund:
                    type: boolean
                amount:
                    type: string
                jackpotContribution:
                    type: string
                jackpotWin:
                    type: string
                betTime:
                    type: string
                settleTime:
                    type: string
                providerTimestamp:
                    type: string
                finished:
                    type: boolean
                extra:
                    type: string
        api.game.service.v1.AddGameBetDisplayConfigResponse:
            type: object
            properties: {}
        api.game.service.v1.BalanceRequest:
            type: object
            properties:
                userId:
                    type: string
                currency:
                    type: string
                gameId:
                    type: string
                roundId:
                    type: string
                finished:
                    type: boolean
                sessionId:
                    type: string
        api.game.service.v1.BalanceResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/api.game.service.v1.BalanceResponse_Data'
        api.game.service.v1.BalanceResponse_Data:
            type: object
            properties:
                balance:
                    type: string
                bonus:
                    type: string
                roundId:
                    type: string
        api.game.service.v1.Bet:
            type: object
            properties:
                id:
                    type: string
                providerBetId:
                    type: string
                roundId:
                    type: string
                providerRoundId:
                    type: string
                providerId:
                    type: string
                providerName:
                    type: string
                operatorId:
                    type: string
                operatorName:
                    type: string
                companyOperatorId:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorId:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorId:
                    type: string
                systemOperatorName:
                    type: string
                currency:
                    type: string
                settlementCurrency:
                    type: string
                status:
                    type: string
                userId:
                    type: string
                gameId:
                    type: string
                gameName:
                    type: string
                gameCategory:
                    type: string
                winCount:
                    type: integer
                    format: int32
                betAmount:
                    type: string
                validBetAmount:
                    type: string
                settlementBetAmount:
                    type: string
                winAmount:
                    type: string
                settlementWinAmount:
                    type: string
                turnover:
                    type: string
                odds:
                    type: string
                rollbackBetAmount:
                    type: string
                rollbackWinAmount:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        api.game.service.v1.BettingConfig:
            type: object
            properties:
                betCategory:
                    type: array
                    items:
                        type: string
                miniOdds:
                    type: number
                    format: float
                currencies:
                    type: array
                    items:
                        type: string
        api.game.service.v1.CreateSessionRequest:
            type: object
            properties:
                gameId:
                    type: string
                currency:
                    type: string
                settlementCurrency:
                    type: string
                locale:
                    type: string
                urls:
                    $ref: '#/components/schemas/api.game.service.v1.UrlInfo'
        api.game.service.v1.CreateSessionResponse:
            type: object
            properties:
                gameUrl:
                    type: string
        api.game.service.v1.ExportBetsResponse:
            type: object
            properties:
                taskId:
                    type: string
        api.game.service.v1.ExportCustomerStrikeReportsResponse:
            type: object
            properties:
                taskId:
                    type: string
        api.game.service.v1.ExportMultipleBetsResponse:
            type: object
            properties:
                taskId:
                    type: string
        api.game.service.v1.ExportSportEventsResponse:
            type: object
            properties:
                taskId:
                    type: string
        api.game.service.v1.ExportStakeVarianceBetsResponse:
            type: object
            properties:
                taskId:
                    type: string
        api.game.service.v1.ExportTaxReportsResponse:
            type: object
            properties:
                taskId:
                    type: string
        api.game.service.v1.ExportUnpaidBetsResponse:
            type: object
            properties:
                taskId:
                    type: string
        api.game.service.v1.GameFilter:
            type: object
            properties:
                providerIds:
                    type: array
                    items:
                        type: string
                    description: 'provider id: provider list api'
                tag:
                    type: string
                    description: 'tag: hot game, live casino, slots, etc..'
                name:
                    type: string
                    description: 'name: game name'
        api.game.service.v1.GameInfo:
            type: object
            properties:
                id:
                    type: string
                enabled:
                    type: boolean
                name:
                    type: string
                providerId:
                    type: string
                providerName:
                    type: string
                category:
                    type: string
                languages:
                    type: array
                    items:
                        type: string
                currencies:
                    type: array
                    items:
                        type: string
                theme:
                    type: string
                hasJackpot:
                    type: boolean
                jackpotType:
                    type: string
                forbidBonusPlay:
                    type: boolean
                hasFreespins:
                    type: boolean
                payout:
                    type: number
                    format: double
                hitRate:
                    type: number
                    format: double
                volatilityRating:
                    type: string
                lines:
                    type: integer
                    format: int32
                ways:
                    type: integer
                    format: int32
                description:
                    type: string
                multiplier:
                    type: number
                    format: double
                releasedAt:
                    type: string
                bonusBuy:
                    type: boolean
                restrictions:
                    type: string
        api.game.service.v1.GameSort:
            type: object
            properties:
                field:
                    enum:
                        - ASC
                        - DESC
                        - POPULARITY
                        - HIGHLIGHT
                    type: string
                    format: enum
        api.game.service.v1.GetBetByIdResponse:
            type: object
            properties:
                bet:
                    $ref: '#/components/schemas/api.game.service.v1.GetBetByIdResponse_Bet'
        api.game.service.v1.GetBetByIdResponse_Action:
            type: object
            properties:
                id:
                    type: string
                roundId:
                    type: string
                action:
                    type: string
                betId:
                    type: string
                providerBetId:
                    type: string
                providerTransactionId:
                    type: string
                providerExternalTransactionId:
                    type: string
                providerId:
                    type: string
                providerName:
                    type: string
                operatorId:
                    type: string
                operatorName:
                    type: string
                updateBalance:
                    type: boolean
                takeAll:
                    type: boolean
                isRefund:
                    type: boolean
                amount:
                    type: string
                amountUsd:
                    type: string
                amountReportingCurrency:
                    type: string
                settlementAmount:
                    type: string
                settlementAmountUsd:
                    type: string
                settlementAmountReportingCurrency:
                    type: string
                turnover:
                    type: string
                turnoverUsd:
                    type: string
                turnoverReportingCurrency:
                    type: string
                userId:
                    type: string
                currency:
                    type: string
                settlementCurrency:
                    type: string
                gameId:
                    type: string
                gameName:
                    type: string
                gameCategory:
                    type: string
                jackpotContribution:
                    type: string
                jackpotContributionUsd:
                    type: string
                jackpotContributionReportingCurrency:
                    type: string
                jackpotWin:
                    type: string
                jackpotWinUsd:
                    type: string
                jackpotWinReportingCurrency:
                    type: string
                betTime:
                    type: string
                    format: date-time
                settleTime:
                    type: string
                    format: date-time
                providerTimestamp:
                    type: string
                    format: date-time
                bonusAmount:
                    type: string
                bonusAmountUsd:
                    type: string
                bonusAmountReportingCurrency:
                    type: string
                operatorTimestamp:
                    type: string
                    format: date-time
                processedAt:
                    type: string
                    format: date-time
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        api.game.service.v1.GetBetByIdResponse_Bet:
            type: object
            properties:
                id:
                    type: string
                providerBetId:
                    type: string
                roundId:
                    type: string
                providerRoundId:
                    type: string
                providerId:
                    type: string
                providerName:
                    type: string
                operatorId:
                    type: string
                operatorName:
                    type: string
                currency:
                    type: string
                settlementCurrency:
                    type: string
                status:
                    type: string
                userId:
                    type: string
                gameId:
                    type: string
                gameName:
                    type: string
                gameCategory:
                    type: string
                winCount:
                    type: integer
                    format: int32
                betAmount:
                    type: string
                betAmountUsd:
                    type: string
                betAmountReportingCurrency:
                    type: string
                settlementBetAmount:
                    type: string
                settlementBetAmountUsd:
                    type: string
                settlementBetAmountReportingCurrency:
                    type: string
                winAmount:
                    type: string
                winAmountUsd:
                    type: string
                winAmountReportingCurrency:
                    type: string
                settlementWinAmount:
                    type: string
                settlementWinAmountUsd:
                    type: string
                settlementWinAmountReportingCurrency:
                    type: string
                turnover:
                    type: string
                turnoverUsd:
                    type: string
                turnoverReportingCurrency:
                    type: string
                rollbackBetAmount:
                    type: string
                rollbackBetAmountUsd:
                    type: string
                rollbackBetAmountReportingCurrency:
                    type: string
                rollbackWinAmount:
                    type: string
                rollbackWinAmountUsd:
                    type: string
                rollbackWinAmountReportingCurrency:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                actions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.GetBetByIdResponse_Action'
        api.game.service.v1.GetGameRequest:
            type: object
            properties:
                gameId:
                    type: string
        api.game.service.v1.GetGameResponse:
            type: object
            properties:
                game:
                    $ref: '#/components/schemas/api.game.service.v1.GameInfo'
        api.game.service.v1.GetGameTransactionByIdResponse:
            type: object
            properties:
                id:
                    type: string
                roundId:
                    type: string
                action:
                    type: string
                betId:
                    type: string
                providerBetId:
                    type: string
                providerTransactionId:
                    type: string
                providerExternalTransactionId:
                    type: string
                providerId:
                    type: string
                providerName:
                    type: string
                operatorId:
                    type: string
                operatorName:
                    type: string
                updateBalance:
                    type: boolean
                takeAll:
                    type: boolean
                isRefund:
                    type: boolean
                amount:
                    type: string
                amountUsd:
                    type: string
                amountReportingCurrency:
                    type: string
                settlementAmount:
                    type: string
                settlementAmountUsd:
                    type: string
                settlementAmountReportingCurrency:
                    type: string
                turnover:
                    type: string
                turnoverUsd:
                    type: string
                turnoverReportingCurrency:
                    type: string
                userId:
                    type: string
                currency:
                    type: string
                settlementCurrency:
                    type: string
                gameId:
                    type: string
                gameName:
                    type: string
                gameCategory:
                    type: string
                jackpotContribution:
                    type: string
                jackpotContributionUsd:
                    type: string
                jackpotContributionReportingCurrency:
                    type: string
                jackpotWin:
                    type: string
                jackpotWinUsd:
                    type: string
                jackpotWinReportingCurrency:
                    type: string
                betTime:
                    type: string
                    format: date-time
                settleTime:
                    type: string
                    format: date-time
                providerTimestamp:
                    type: string
                    format: date-time
                bonusAmount:
                    type: string
                bonusAmountUsd:
                    type: string
                bonusAmountReportingCurrency:
                    type: string
                operatorTimestamp:
                    type: string
                    format: date-time
                processedAt:
                    type: string
                    format: date-time
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
        api.game.service.v1.ListBetsRequest:
            type: object
            properties:
                providerIds:
                    type: array
                    items:
                        type: string
                gameName:
                    type: string
                gameId:
                    type: string
                userId:
                    type: string
                operatorBetId:
                    type: string
                providerBetId:
                    type: string
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
                currencyWithRanges:
                    $ref: '#/components/schemas/api.game.service.v1.ListBetsRequest_CurrencyWithRange'
                settlementCurrencyWithRanges:
                    $ref: '#/components/schemas/api.game.service.v1.ListBetsRequest_CurrencyWithRange'
                settlementCurrencies:
                    $ref: '#/components/schemas/api.game.service.v1.ListBetsRequest_Currencies'
                categories:
                    type: array
                    items:
                        type: string
                status:
                    type: string
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
        api.game.service.v1.ListBetsRequest_Currencies:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
        api.game.service.v1.ListBetsRequest_CurrencyWithRange:
            type: object
            properties:
                currency:
                    type: string
                minBetAmount:
                    type: string
                maxBetAmount:
                    type: string
                minWinAmount:
                    type: string
                maxWinAmount:
                    type: string
        api.game.service.v1.ListBetsResponse:
            type: object
            properties:
                bets:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.Bet'
                turnover:
                    type: string
                winAmount:
                    type: string
                betCount:
                    type: integer
                    format: int32
                rtpPercentage:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.game.service.v1.ListCategoriesRequest:
            type: object
            properties:
                providerId:
                    type: string
        api.game.service.v1.ListCategoriesResponse:
            type: object
            properties:
                categories:
                    type: array
                    items:
                        type: string
        api.game.service.v1.ListCustomerStrikeReportsResponse:
            type: object
            properties:
                reports:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.ListCustomerStrikeReportsResponse_CustomerStrikeReport'
                totalCount:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.game.service.v1.ListCustomerStrikeReportsResponse_CustomerStrikeReport:
            type: object
            properties:
                userId:
                    type: string
                    description: Basic user information
                userName:
                    type: string
                totalBets:
                    type: integer
                    description: Betting statistics
                    format: int32
                winningBets:
                    type: integer
                    format: int32
                winRate:
                    type: string
                totalStake:
                    type: string
                    description: Financial information (in settlement currency, e.g., ZAR)
                totalWinning:
                    type: string
                payoutRate:
                    type: string
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                systemOperatorId:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
        api.game.service.v1.ListGameBetDisplayConfigResponse:
            type: object
            properties:
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.ListGameBetDisplayConfigResponse_Item'
        api.game.service.v1.ListGameBetDisplayConfigResponse_Item:
            type: object
            properties:
                country:
                    type: string
                allBet:
                    $ref: '#/components/schemas/api.game.service.v1.BettingConfig'
                highWins:
                    $ref: '#/components/schemas/api.game.service.v1.BettingConfig'
        api.game.service.v1.ListGamesRequest:
            type: object
            properties:
                page:
                    type: integer
                    description: page number for pagination (starts from 1)
                    format: int32
                pageSize:
                    type: integer
                    description: page size for pagination
                    format: int32
                filter:
                    allOf:
                        - $ref: '#/components/schemas/api.game.service.v1.GameFilter'
                    description: filter
                sort:
                    allOf:
                        - $ref: '#/components/schemas/api.game.service.v1.GameSort'
                    description: sort
        api.game.service.v1.ListGamesResponse:
            type: object
            properties:
                gameIds:
                    type: array
                    items:
                        type: string
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.game.service.v1.ListMultipleBetsResponse:
            type: object
            properties:
                records:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.ListMultipleBetsResponse_MultipleBet'
                totalCount:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.game.service.v1.ListMultipleBetsResponse_MultipleBet:
            type: object
            properties:
                createdAt:
                    type: string
                    description: Basic information
                    format: date-time
                status:
                    type: string
                userId:
                    type: string
                transactionId:
                    type: string
                roundId:
                    type: string
                category:
                    type: string
                    description: Game information
                provider:
                    type: string
                currency:
                    type: string
                    description: Financial information
                betAmount:
                    type: string
                winAmount:
                    type: string
                taxable:
                    type: string
                prospectiveTax:
                    type: string
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                systemOperatorId:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
        api.game.service.v1.ListProvidersRequest:
            type: object
            properties:
                providerId:
                    type: string
                    description: |-
                        Optional filter for provider's id.
                         If not provided, all providers will be returned.
                enabled:
                    type: boolean
                    description: |-
                        Optional filter for provider's enabled status.
                         If not provided, all providers will be returned.
                tag:
                    type: string
                    description: |-
                        Optional filter for game's tag.
                         If not provided, all providers will be returned.
                includeGameCount:
                    type: boolean
                    description: |-
                        Include game count in response, false by default.
                         Only enable it for ListProviders page which game_count is needed.
                paginationEnabled:
                    type: boolean
                    description: |-
                        Enable pagination, false by default.
                         Only enable it for ListProviders page.
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.game.service.v1.ListProvidersResponse:
            type: object
            properties:
                providers:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.ListProvidersResponse_Provider'
                total:
                    type: integer
                    format: int32
                totalEnabled:
                    type: integer
                    format: int32
                totalDisabled:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.game.service.v1.ListProvidersResponse_Provider:
            type: object
            properties:
                providerId:
                    type: string
                providerName:
                    type: string
                gameCount:
                    type: integer
                    description: Only available when include_game_count is true
                    format: int32
                enabled:
                    type: boolean
        api.game.service.v1.ListStakeVarianceBetsResponse:
            type: object
            properties:
                records:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.ListStakeVarianceBetsResponse_StakeVarianceBet'
                summary:
                    $ref: '#/components/schemas/api.game.service.v1.ListStakeVarianceBetsResponse_SummaryStats'
                totalCount:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.game.service.v1.ListStakeVarianceBetsResponse_StakeVarianceBet:
            type: object
            properties:
                createdAt:
                    type: string
                    description: Basic information
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
                status:
                    type: string
                userId:
                    type: string
                transactionId:
                    type: string
                roundId:
                    type: string
                category:
                    type: string
                    description: Game information
                provider:
                    type: string
                currency:
                    type: string
                    description: Financial information
                betAmount:
                    type: string
                payoutAmount:
                    type: string
                winAmount:
                    type: string
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                systemOperatorId:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
        api.game.service.v1.ListStakeVarianceBetsResponse_SummaryStats:
            type: object
            properties:
                totalRecords:
                    type: integer
                    description: Summary statistics shown in cards
                    format: int32
                totalBetAmount:
                    type: string
                averageBetAmount:
                    type: string
                maximumBetAmount:
                    type: string
        api.game.service.v1.ListUnpaidBetsResponse:
            type: object
            properties:
                unpaidBets:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.ListUnpaidBetsResponse_UnpaidBet'
                unpaidBetCount:
                    type: integer
                    format: int32
                totalAmount:
                    type: string
                unpaidUserCount:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.game.service.v1.ListUnpaidBetsResponse_UnpaidBet:
            type: object
            properties:
                createDateTime:
                    type: string
                    format: date-time
                updateDateTime:
                    type: string
                    format: date-time
                status:
                    type: string
                userId:
                    type: string
                betId:
                    type: string
                roundId:
                    type: string
                category:
                    type: string
                game:
                    type: string
                gameId:
                    type: string
                providerName:
                    type: string
                currency:
                    type: string
                betAmount:
                    type: string
                payoutAmount:
                    type: string
                winAmount:
                    type: string
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                systemOperatorId:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
        api.game.service.v1.PlayRequest:
            type: object
            properties:
                userId:
                    type: string
                currency:
                    type: string
                gameId:
                    type: string
                roundId:
                    type: string
                finished:
                    type: boolean
                smResult:
                    type: string
                sessionId:
                    type: string
                actions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.Action'
        api.game.service.v1.PlayResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/api.game.service.v1.PlayResponse_Data'
        api.game.service.v1.PlayResponse_Data:
            type: object
            properties:
                balance:
                    type: string
                roundId:
                    type: string
                transactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.Transactions'
        api.game.service.v1.RollbackAction:
            type: object
            properties:
                action:
                    type: string
                betId:
                    type: string
                txnId:
                    type: string
                extTxnId:
                    type: string
                originalTxnId:
                    type: string
                originalExtTxnId:
                    type: string
                providerTimestamp:
                    type: string
        api.game.service.v1.RollbackRequest:
            type: object
            properties:
                userId:
                    type: string
                currency:
                    type: string
                gameId:
                    type: string
                roundId:
                    type: string
                finished:
                    type: boolean
                smResult:
                    type: string
                actions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.RollbackAction'
        api.game.service.v1.RollbackResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/api.game.service.v1.RollbackResponse_Data'
        api.game.service.v1.RollbackResponse_Data:
            type: object
            properties:
                balance:
                    type: string
                roundId:
                    type: string
                transactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.game.service.v1.RollbackTransactions'
        api.game.service.v1.RollbackTransactions:
            type: object
            properties:
                txnId:
                    type: string
                operatorTxnId:
                    type: string
                processedAt:
                    type: string
        api.game.service.v1.Transactions:
            type: object
            properties:
                txn_id:
                    type: string
                operator_txn_id:
                    type: string
                processed_at:
                    type: number
                    format: double
                bonus_amount:
                    type: string
        api.game.service.v1.UpdateGameBetDisplayConfigResponse:
            type: object
            properties: {}
        api.game.service.v1.UrlInfo:
            type: object
            properties:
                returnUrl:
                    type: string
                    description: URL to redirect user after session is finished.
                depositUrl:
                    type: string
                    description: URL to redirect user to deposit.
                lobbyUrl:
                    type: string
                    description: URL to redirect user to lobby.
        api.review.service.v1.CreateWithdrawRequest:
            type: object
            properties:
                request:
                    type: object
        api.review.service.v1.CreateWithdrawResponse:
            type: object
            properties:
                ticketId:
                    type: string
        api.review.service.v1.GetOperatorTicketResponse:
            type: object
            properties:
                ticket:
                    $ref: '#/components/schemas/api.review.service.v1.GetOperatorTicketResponse_Ticket'
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.review.service.v1.GetOperatorTicketResponse_Comment'
                paymentTransactionInfo:
                    $ref: '#/components/schemas/api.review.service.v1.GetOperatorTicketResponse_PaymentTransactionInfo'
                walletBalanceInfo:
                    $ref: '#/components/schemas/api.review.service.v1.GetOperatorTicketResponse_WalletBalanceInfo'
                walletTransactionInfo:
                    $ref: '#/components/schemas/api.review.service.v1.GetOperatorTicketResponse_WalletTransactionInfo'
                walletTransactionSummary:
                    $ref: '#/components/schemas/api.review.service.v1.GetOperatorTicketResponse_WalletTransactionSummary'
        api.review.service.v1.GetOperatorTicketResponse_Comment:
            type: object
            properties:
                id:
                    type: string
                ticketId:
                    type: string
                authorUsername:
                    type: string
                content:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        api.review.service.v1.GetOperatorTicketResponse_PaymentTransactionInfo:
            type: object
            properties:
                currency:
                    type: string
                protocol:
                    type: string
                address:
                    type: string
                psp:
                    type: string
                amount:
                    type: string
                amountUsd:
                    type: string
                amountReportingCurrency:
                    type: string
                amountSent:
                    type: string
                amountSentUsd:
                    type: string
                amountSentReportingCurrency:
                    type: string
                gas:
                    type: string
                fee:
                    type: string
                feeUsd:
                    type: string
                feeReportingCurrency:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        api.review.service.v1.GetOperatorTicketResponse_Ticket:
            type: object
            properties:
                id:
                    type: string
                type:
                    type: string
                status:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        api.review.service.v1.GetOperatorTicketResponse_WalletBalanceInfo:
            type: object
            properties:
                balance:
                    type: string
                balanceUsd:
                    type: string
                balanceReportingCurrency:
                    type: string
        api.review.service.v1.GetOperatorTicketResponse_WalletTransactionInfo:
            type: object
            properties:
                beforeBalance:
                    type: string
                beforeBalanceUsd:
                    type: string
                beforeBalanceReportingCurrency:
                    type: string
                afterBalance:
                    type: string
                afterBalanceUsd:
                    type: string
                afterBalanceReportingCurrency:
                    type: string
                amount:
                    type: string
                amountUsd:
                    type: string
                amountReportingCurrency:
                    type: string
        api.review.service.v1.GetOperatorTicketResponse_WalletTransactionSummary:
            type: object
            properties:
                totalWithdrawUsd:
                    type: string
                totalWithdrawReportingCurrency:
                    type: string
                totalDepositUsd:
                    type: string
                totalDepositReportingCurrency:
                    type: string
                totalTransferUsd:
                    type: string
                totalTransferReportingCurrency:
                    type: string
                totalSwapOutUsd:
                    type: string
                totalSwapOutReportingCurrency:
                    type: string
                totalSwapInUsd:
                    type: string
                totalSwapInReportingCurrency:
                    type: string
                totalFreezeUsd:
                    type: string
                totalFreezeReportingCurrency:
                    type: string
                totalWriteOffUsd:
                    type: string
                totalWriteOffReportingCurrency:
                    type: string
                totalPendingUsd:
                    type: string
                totalPendingReportingCurrency:
                    type: string
        api.review.service.v1.GetTicketResponse:
            type: object
            properties:
                ticket:
                    $ref: '#/components/schemas/api.review.service.v1.GetTicketResponse_Ticket'
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.review.service.v1.GetTicketResponse_Comment'
                userInfo:
                    $ref: '#/components/schemas/api.review.service.v1.GetTicketResponse_UserInfo'
                paymentTransactionInfo:
                    $ref: '#/components/schemas/api.review.service.v1.GetTicketResponse_PaymentTransactionInfo'
                walletTransactionInfo:
                    $ref: '#/components/schemas/api.review.service.v1.GetTicketResponse_WalletTransactionInfo'
                walletTransactionSummary:
                    $ref: '#/components/schemas/api.review.service.v1.GetTicketResponse_WalletTransactionSummary'
        api.review.service.v1.GetTicketResponse_Comment:
            type: object
            properties:
                id:
                    type: string
                ticketId:
                    type: string
                authorUsername:
                    type: string
                content:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        api.review.service.v1.GetTicketResponse_PaymentTransactionInfo:
            type: object
            properties:
                currency:
                    type: string
                amount:
                    type: string
                amountUsd:
                    type: string
                amountReportingCurrency:
                    type: string
                paymentChannel:
                    type: string
                protocol:
                    type: string
                fee:
                    type: string
                feeUsd:
                    type: string
                feeReportingCurrency:
                    type: string
                extra:
                    type: object
                schema:
                    $ref: '#/components/schemas/google.protobuf.ListValue'
                createdAt:
                    type: string
                    format: date-time
        api.review.service.v1.GetTicketResponse_Ticket:
            type: object
            properties:
                id:
                    type: string
                type:
                    type: string
                status:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        api.review.service.v1.GetTicketResponse_UserInfo:
            type: object
            properties:
                userId:
                    type: string
                vipLevel:
                    type: integer
                    format: int32
                userTags:
                    type: array
                    items:
                        type: string
                linkedAccounts:
                    type: array
                    items:
                        type: string
        api.review.service.v1.GetTicketResponse_WalletTransactionInfo:
            type: object
            properties:
                transactionId:
                    type: string
                amount:
                    type: string
                amountUsd:
                    type: string
                amountReportingCurrency:
                    type: string
                beforeBalance:
                    type: string
                beforeBalanceUsd:
                    type: string
                beforeBalanceReportingCurrency:
                    type: string
                afterBalance:
                    type: string
                afterBalanceUsd:
                    type: string
                afterBalanceReportingCurrency:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        api.review.service.v1.GetTicketResponse_WalletTransactionSummary:
            type: object
            properties:
                totalDepositUsd:
                    type: string
                totalDepositReportingCurrency:
                    type: string
                totalWithdrawUsd:
                    type: string
                totalWithdrawReportingCurrency:
                    type: string
                totalDepositMinusWithdrawUsd:
                    type: string
                totalDepositMinusWithdrawReportingCurrency:
                    type: string
                validTurnoverUsd:
                    type: string
                validTurnoverReportingCurrency:
                    type: string
                totalDepositCount:
                    type: integer
                    format: int32
                totalWithdrawCount:
                    type: integer
                    format: int32
                todayWithdrawCount:
                    type: integer
                    format: int32
        api.review.service.v1.ListTicketsResponse:
            type: object
            properties:
                tickets:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.review.service.v1.ListTicketsResponse_Ticket'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                totalCount:
                    type: integer
                    format: int32
                totalAmountUsd:
                    type: string
                totalAmountReportingCurrency:
                    type: string
                totalPendingCount:
                    type: integer
                    format: int32
                totalPendingAmountUsd:
                    type: string
                totalPendingAmountReportingCurrency:
                    type: string
                totalPayingCount:
                    type: integer
                    format: int32
                totalPayingAmountUsd:
                    type: string
                totalPayingAmountReportingCurrency:
                    type: string
                totalPaidCount:
                    type: integer
                    format: int32
                totalPaidAmountUsd:
                    type: string
                totalPaidAmountReportingCurrency:
                    type: string
                totalFailedCount:
                    type: integer
                    format: int32
                totalFailedAmountUsd:
                    type: string
                totalFailedAmountReportingCurrency:
                    type: string
                totalRejectedCount:
                    type: integer
                    format: int32
                totalRejectedAmountUsd:
                    type: string
                totalRejectedAmountReportingCurrency:
                    type: string
                averageReviewTime:
                    type: integer
                    format: int32
        api.review.service.v1.ListTicketsResponse_Ticket:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                ticketId:
                    type: string
                userId:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                realOperatorName:
                    type: string
                vipLevel:
                    type: integer
                    format: int32
                userTags:
                    type: array
                    items:
                        type: string
                beforeBalance:
                    type: string
                beforeBalanceUsd:
                    type: string
                beforeBalanceReportingCurrency:
                    type: string
                amount:
                    type: string
                amountUsd:
                    type: string
                amountReportingCurrency:
                    type: string
                afterBalance:
                    type: string
                afterBalanceUsd:
                    type: string
                afterBalanceReportingCurrency:
                    type: string
                currency:
                    type: string
                paymentChannel:
                    type: string
                protocol:
                    type: string
                fee:
                    type: string
                feeUsd:
                    type: string
                feeReportingCurrency:
                    type: string
                status:
                    type: string
                reviewerUsername:
                    type: string
                reviewDuration:
                    type: integer
                    format: int32
        api.user.service.v1.AddOperatorByoDomainResponse:
            type: object
            properties:
                status:
                    type: string
                validationStatus:
                    type: string
                validationRecords:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.ValidationRecord'
        api.user.service.v1.AddRegisterLoginBlacklistResponse:
            type: object
            properties: {}
        api.user.service.v1.AddResponsibleGamblingConfigRequest:
            type: object
            properties:
                responsibleGamblingConfig:
                    $ref: '#/components/schemas/api.user.service.v1.ResponsibleGamblingConfig'
        api.user.service.v1.AddResponsibleGamblingConfigResponse:
            type: object
            properties: {}
        api.user.service.v1.AuthResponse:
            type: object
            properties:
                accessToken:
                    type: string
                    description: JWT access token for API authentication.
                refreshToken:
                    type: string
                    description: Refresh token for obtaining new access tokens.
                expiresIn:
                    type: string
                    description: Number of seconds until the access token expires.
                userInfo:
                    allOf:
                        - $ref: '#/components/schemas/api.user.service.v1.UserInfo'
                    description: Basic information about the authenticated user.
            description: AuthResponse contains the authentication tokens and user information.
        api.user.service.v1.ByoDomainInfo:
            type: object
            properties:
                byoDomain:
                    type: string
                domain:
                    type: string
                domainType:
                    type: string
                acmeChallengeType:
                    type: string
                status:
                    type: string
                validationStatus:
                    type: string
                validationRecords:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.ValidationRecord'
                targetOperatorId:
                    type: string
                targetOperatorName:
                    type: string
                targetCompanyOperatorId:
                    type: string
                targetCompanyOperatorName:
                    type: string
                targetRetailerOperatorId:
                    type: string
                targetRetailerOperatorName:
                    type: string
                targetSystemOperatorId:
                    type: string
                targetSystemOperatorName:
                    type: string
                targetRealOperatorId:
                    type: string
                targetOperatorType:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        api.user.service.v1.ClaimVipRewardRequest:
            type: object
            properties:
                rewardKind:
                    enum:
                        - VIP_REWARD_KIND_UNSPECIFIED
                        - VIP_REWARD_KIND_UPGRADE_BASE
                        - VIP_REWARD_KIND_UPGRADE_INCREMENTAL
                        - VIP_REWARD_KIND_RAKEBACK_INSTANT
                        - VIP_REWARD_KIND_RAKEBACK_DAILY
                        - VIP_REWARD_KIND_RAKEBACK_WEEKLY
                        - VIP_REWARD_KIND_RAKEBACK_MONTHLY
                    type: string
                    format: enum
        api.user.service.v1.CloseAccountRequest:
            type: object
            properties: {}
        api.user.service.v1.CloseAccountResponse:
            type: object
            properties: {}
        api.user.service.v1.ConfirmClaimVipRewardRequest:
            type: object
            properties:
                claimTransactionId:
                    type: string
                claimCurrency:
                    type: string
        api.user.service.v1.DeleteOperatorByoDomainResponse:
            type: object
            properties: {}
        api.user.service.v1.DeleteRegisterLoginBlacklistResponse:
            type: object
            properties: {}
        api.user.service.v1.DeleteResponsibleGamblingConfigRequest:
            type: object
            properties:
                userId:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                limitType:
                    type: string
                    description: '"self_exclusion", "break_in_play", "time_limits"'
        api.user.service.v1.DeleteResponsibleGamblingConfigResponse:
            type: object
            properties: {}
        api.user.service.v1.DomainInfo:
            type: object
            properties:
                domain:
                    type: string
                type:
                    type: string
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                systemOperatorId:
                    type: string
                realOperatorId:
                    type: string
                operatorType:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
        api.user.service.v1.GetClaimableVipRewardsRequest:
            type: object
            properties: {}
        api.user.service.v1.GetOperatorAccountSettingsRequest:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.user.service.v1.GetOperatorAccountSettingsResponse:
            type: object
            properties:
                accountSettings:
                    $ref: '#/components/schemas/api.user.service.v1.OperatorAccountSettings'
        api.user.service.v1.GetOperatorRegisterLimitConfigResponse:
            type: object
            properties:
                config:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/api.user.service.v1.OperatorRegisterLimitConfig'
        api.user.service.v1.GetOperatorVipSettingsRequest:
            type: object
            properties: {}
        api.user.service.v1.GetResponsibleGamblingConfigRequest:
            type: object
            properties:
                userId:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.user.service.v1.GetResponsibleGamblingConfigResponse:
            type: object
            properties:
                responsibleGamblingConfig:
                    $ref: '#/components/schemas/api.user.service.v1.ResponsibleGamblingConfig'
                responsibleGamblingStatus:
                    $ref: '#/components/schemas/api.user.service.v1.ResponsibleGamblingStatus'
                responsibleGamblingDeleteSchedule:
                    $ref: '#/components/schemas/api.user.service.v1.ResponsibleGamblingDeleteSchedule'
        api.user.service.v1.GetUserAccountSettingsStatusRequest:
            type: object
            properties:
                userId:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.user.service.v1.GetUserAccountSettingsStatusResponse:
            type: object
            properties:
                allowGame:
                    type: boolean
                allowDeposit:
                    type: boolean
                allowWithdraw:
                    type: boolean
                gameSettingsStatus:
                    $ref: '#/components/schemas/api.user.service.v1.UserAccountGameSettingsStatus'
                paymentSettingsStatus:
                    $ref: '#/components/schemas/api.user.service.v1.UserAccountPaymentSettingsStatus'
        api.user.service.v1.GetUserProfileResponse:
            type: object
            properties:
                nickname:
                    type: string
                userId:
                    type: string
                vipLevel:
                    type: integer
                    format: int32
                online:
                    type: boolean
                banWithdraw:
                    type: boolean
                banGame:
                    type: boolean
                banLogin:
                    type: boolean
                locked:
                    type: boolean
                registrationRecord:
                    $ref: '#/components/schemas/api.user.service.v1.GetUserProfileResponse_RegistrationRecord'
                loginRecords:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.GetUserProfileResponse_LoginRecord'
                tags:
                    type: array
                    items:
                        type: string
                comments:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.GetUserProfileResponse_Comment'
                totalLoginCount:
                    type: integer
                    format: int32
                loginPage:
                    type: integer
                    format: int32
                loginPageSize:
                    type: integer
                    format: int32
                registeredMobile:
                    type: string
                registeredEmail:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                kycLevel:
                    type: integer
                    format: int32
                emailVerified:
                    type: boolean
                phoneVerified:
                    type: boolean
                dob:
                    type: string
                    format: date-time
                address:
                    type: string
                userIdentity:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.UserIdentity'
                emailChangeHistory:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.GetUserProfileResponse_ChangeRecord'
                phoneChangeHistory:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.GetUserProfileResponse_ChangeRecord'
                loginEmail:
                    type: string
                    description: Email.
                loginMobile:
                    type: string
                    description: Mobile.
        api.user.service.v1.GetUserProfileResponse_ChangeRecord:
            type: object
            properties:
                changedAt:
                    type: string
                    format: date-time
                new:
                    type: string
                old:
                    type: string
                ip:
                    type: string
                reviewer:
                    type: string
        api.user.service.v1.GetUserProfileResponse_Comment:
            type: object
            properties:
                commentId:
                    type: string
                username:
                    type: string
                authorUsername:
                    type: string
                content:
                    type: string
                createdAt:
                    type: string
                    format: date-time
        api.user.service.v1.GetUserProfileResponse_IpInfo:
            type: object
            properties:
                ip:
                    type: string
                count:
                    type: integer
                    format: int32
                country:
                    type: string
        api.user.service.v1.GetUserProfileResponse_LoginRecord:
            type: object
            properties:
                loginAt:
                    type: string
                    format: date-time
                ipInfo:
                    $ref: '#/components/schemas/api.user.service.v1.GetUserProfileResponse_IpInfo'
                device:
                    type: string
                method:
                    type: string
                browser:
                    type: string
                app:
                    type: string
                email:
                    type: string
                mobile:
                    type: string
                username:
                    type: string
        api.user.service.v1.GetUserProfileResponse_RegistrationRecord:
            type: object
            properties:
                registeredAt:
                    type: string
                    format: date-time
                ipInfo:
                    $ref: '#/components/schemas/api.user.service.v1.GetUserProfileResponse_IpInfo'
                device:
                    type: string
                method:
                    type: string
                browser:
                    type: string
                app:
                    type: string
                mobile:
                    type: string
                email:
                    type: string
                username:
                    type: string
                source:
                    type: string
        api.user.service.v1.GetUserRequest:
            type: object
            properties:
                userId:
                    type: string
                    description: The userId of the user to retrieve.
            description: GetUserRequest contains the userId of the user to retrieve.
        api.user.service.v1.GetUserResponse:
            type: object
            properties:
                userInfo:
                    allOf:
                        - $ref: '#/components/schemas/api.user.service.v1.UserInfo'
                    description: Basic information about the requested user.
            description: GetUserResponse contains the requested user's information.
        api.user.service.v1.GetUserTagsRequest:
            type: object
            properties: {}
            description: GetUserTagsRequest retrieve tags for the current user.
        api.user.service.v1.GetUserTagsResponse:
            type: object
            properties:
                tags:
                    type: array
                    items:
                        type: string
                    description: List of active tags associated with the user.
            description: GetUserTagsResponse contains the list of active tags associated with the user.
        api.user.service.v1.GetUserVipLevelRequest:
            type: object
            properties: {}
        api.user.service.v1.ListOperatorByoDomainsResponse:
            type: object
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.ByoDomainInfo'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.user.service.v1.ListOperatorDomainsResponse:
            type: object
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.DomainInfo'
        api.user.service.v1.ListOperatorsByAdminEmailResponse:
            type: object
            properties:
                retailerOperatorDetailsList:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.OperatorDetails'
                companyOperatorDetailsList:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.OperatorDetails'
                operatorDetailsList:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.OperatorDetails'
        api.user.service.v1.ListRegisterLoginBlacklistResponse:
            type: object
            properties:
                registerLoginBlacklists:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.ListRegisterLoginBlacklistResponse_RegisterLoginBlacklist'
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        api.user.service.v1.ListRegisterLoginBlacklistResponse_RegisterLoginBlacklist:
            type: object
            properties:
                id:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                source:
                    type: string
        api.user.service.v1.LoginRequest:
            type: object
            properties:
                passwordProvider:
                    enum:
                        - PASSWORD_PROVIDER_UNSPECIFIED
                        - PASSWORD_PROVIDER_USERNAME
                        - PASSWORD_PROVIDER_EMAIL
                        - PASSWORD_PROVIDER_MOBILE
                    type: string
                    description: The type of identity provider to use for login.
                    format: enum
                authId:
                    type: string
                    description: The identity (username, email, or mobile) to login with.
                password:
                    type: string
                    description: The password for the account.
            description: LoginRequest contains the credentials for user login.
        api.user.service.v1.LogoutRequest:
            type: object
            properties: {}
            description: LogoutRequest is an empty message for the logout operation.
        api.user.service.v1.LogoutResponse:
            type: object
            properties: {}
            description: LogoutResponse is an empty message for the logout operation.
        api.user.service.v1.OAuthRequest:
            type: object
            properties:
                oauthProvider:
                    enum:
                        - OAUTH_PROVIDER_UNSPECIFIED
                        - OAUTH_PROVIDER_GOOGLE
                        - OAUTH_PROVIDER_FACEBOOK
                        - OAUTH_PROVIDER_TWITTER
                    type: string
                    description: The OAuth provider to use for authentication.
                    format: enum
                token:
                    type: string
                    description: The OAuth token received from the provider.
            description: OAuthRequest contains the information needed for OAuth authentication.
        api.user.service.v1.OperatorAccountGameSettings:
            type: object
            properties:
                noGameWithoutDeposit:
                    type: boolean
                minGameKycLevel:
                    type: integer
                    format: int32
        api.user.service.v1.OperatorAccountPasswordSettings:
            type: object
            properties:
                minCharacters:
                    type: integer
                    format: int32
                minUppercaseCharacters:
                    type: integer
                    format: int32
                minLowercaseCharacters:
                    type: integer
                    format: int32
                minSpecialCharacters:
                    type: integer
                    format: int32
                minDigits:
                    type: integer
                    format: int32
        api.user.service.v1.OperatorAccountPaymentSettings:
            type: object
            properties:
                minDepositKycLevel:
                    type: integer
                    format: int32
                minWithdrawKycLevel:
                    type: integer
                    format: int32
        api.user.service.v1.OperatorAccountSecuritySettings:
            type: object
            properties:
                maxPasswordRetries:
                    type: integer
                    format: int32
                passwordExpiryDays:
                    type: integer
                    format: int32
                passwordHistoryLimits:
                    type: integer
                    format: int32
        api.user.service.v1.OperatorAccountSettings:
            type: object
            properties:
                passwordSettings:
                    $ref: '#/components/schemas/api.user.service.v1.OperatorAccountPasswordSettings'
                securitySettings:
                    $ref: '#/components/schemas/api.user.service.v1.OperatorAccountSecuritySettings'
                gameSettings:
                    $ref: '#/components/schemas/api.user.service.v1.OperatorAccountGameSettings'
                paymentSettings:
                    $ref: '#/components/schemas/api.user.service.v1.OperatorAccountPaymentSettings'
        api.user.service.v1.OperatorConfig:
            type: object
            properties:
                swapFeePercentage:
                    type: string
                accountSettings:
                    $ref: '#/components/schemas/api.user.service.v1.OperatorAccountSettings'
        api.user.service.v1.OperatorDetails:
            type: object
            properties:
                id:
                    type: string
                operatorName:
                    type: string
                parentOperatorId:
                    type: string
                parentOperatorName:
                    type: string
                operatorType:
                    type: string
                externalId:
                    type: string
                apiKey:
                    type: string
                subdomain:
                    type: string
                backofficeSubdomain:
                    type: string
                backofficeChildDomain:
                    type: string
                domainPool:
                    type: array
                    items:
                        type: string
                enabled:
                    type: boolean
                mode:
                    type: string
                operatorKey:
                    type: string
                reportingCurrency:
                    type: string
                backofficeTimezone:
                    type: string
                supportedLanguages:
                    type: array
                    items:
                        type: string
                supportedCurrencies:
                    type: array
                    items:
                        type: string
                status:
                    type: string
                statusStartTime:
                    type: string
                statusEndTime:
                    type: string
                operatorId:
                    type: string
                    description: operator id in the operator hierarchy
                companyOperatorId:
                    type: string
                    description: company operator id in the operator hierarchy
                companyOperatorName:
                    type: string
                    description: company operator name in the operator hierarchy, or empty string if not exists
                retailerOperatorId:
                    type: string
                    description: retailer operator id in the operator hierarchy
                retailerOperatorName:
                    type: string
                    description: retailer operator name in the operator hierarchy, or empty string if not exists
                systemOperatorId:
                    type: string
                    description: system operator id in the operator hierarchy
                systemOperatorName:
                    type: string
                    description: system operator name in the operator hierarchy, or empty string if not exists
                config:
                    $ref: '#/components/schemas/api.user.service.v1.OperatorConfig'
                minLaunchBalance:
                    type: string
                statusLaunchWhitelist:
                    type: array
                    items:
                        type: string
        api.user.service.v1.OperatorRegisterLimitConfig:
            type: object
            properties:
                registrationLimitPerIp:
                    type: integer
                    format: int32
        api.user.service.v1.RefreshTokenRequest:
            type: object
            properties:
                refreshToken:
                    type: string
                    description: The refresh token to use for obtaining a new access token.
            description: RefreshTokenRequest contains the refresh token for obtaining a new access token.
        api.user.service.v1.RefreshTokenResponse:
            type: object
            properties:
                accessToken:
                    type: string
                    description: JWT access token for API authentication.
                refreshToken:
                    type: string
                    description: Refresh token for obtaining new access tokens.
                expiresIn:
                    type: string
                    description: Number of seconds until the access token expires.
            description: RefreshTokenResponse contains the authentication tokens.
        api.user.service.v1.RegisterRequest:
            type: object
            properties:
                passwordProvider:
                    enum:
                        - PASSWORD_PROVIDER_UNSPECIFIED
                        - PASSWORD_PROVIDER_USERNAME
                        - PASSWORD_PROVIDER_EMAIL
                        - PASSWORD_PROVIDER_MOBILE
                    type: string
                    description: The type of identity provider to use for registration.
                    format: enum
                authId:
                    type: string
                    description: The identity (username, email, or mobile) to register with.
                password:
                    type: string
                    description: The password for the new account.
                dob:
                    type: string
                    description: Date of birth of user
                    format: date-time
                idNumber:
                    type: string
                    description: User ID info
                idType:
                    type: string
                    description: User ID Type
                campaignUrl:
                    type: string
                    description: campaign url
            description: RegisterRequest contains the information needed to register a new user.
        api.user.service.v1.ResetPasswordWithCodeRequest:
            type: object
            properties:
                email:
                    type: string
                verificationCode:
                    type: string
                newPassword:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.user.service.v1.ResetPasswordWithCodeResponse:
            type: object
            properties: {}
        api.user.service.v1.ResponsibleGamblingConfig:
            type: object
            properties:
                selfExclusion:
                    $ref: '#/components/schemas/api.user.service.v1.ResponsibleGamblingConfig_SelfExclusion'
                breakInPlay:
                    $ref: '#/components/schemas/api.user.service.v1.ResponsibleGamblingConfig_BreakInPlay'
                timeLimits:
                    $ref: '#/components/schemas/api.user.service.v1.ResponsibleGamblingConfig_TimeLimits'
        api.user.service.v1.ResponsibleGamblingConfig_BreakInPlay:
            type: object
            properties:
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
        api.user.service.v1.ResponsibleGamblingConfig_SelfExclusion:
            type: object
            properties:
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
        api.user.service.v1.ResponsibleGamblingConfig_TimeLimits:
            type: object
            properties:
                timeZone:
                    type: string
                startTime:
                    type: string
                endTime:
                    type: string
        api.user.service.v1.ResponsibleGamblingDeleteSchedule:
            type: object
            properties:
                selfExclusionDeleteScheduleTime:
                    type: string
                    format: date-time
                breakInPlayDeleteScheduleTime:
                    type: string
                    format: date-time
                timeLimitsDeleteScheduleTime:
                    type: string
                    format: date-time
        api.user.service.v1.ResponsibleGamblingStatus:
            type: object
            properties:
                loginAllowed:
                    type: boolean
                depositAllowed:
                    type: boolean
                withdrawalAllowed:
                    type: boolean
                gameBetAllowed:
                    type: boolean
                selfExclusionActive:
                    type: boolean
                breakInPlayActive:
                    type: boolean
                timeLimitsActive:
                    type: boolean
                timeLimitsNextInactiveTime:
                    type: string
                    format: date-time
        api.user.service.v1.SendEmailVerificationCodeRequest:
            type: object
            properties:
                email:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                userId:
                    type: string
        api.user.service.v1.SendEmailVerificationCodeResponse:
            type: object
            properties: {}
        api.user.service.v1.SendPasswordResetCodeRequest:
            type: object
            properties:
                email:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.user.service.v1.SendPasswordResetCodeResponse:
            type: object
            properties: {}
        api.user.service.v1.SetOperatorRegisterLimitConfigResponse:
            type: object
            properties: {}
        api.user.service.v1.TelegramAuthRequest:
            type: object
            properties:
                id:
                    type: string
                    description: Telegram user Id.
                firstName:
                    type: string
                    description: User's first name.
                lastName:
                    type: string
                    description: User's last name.
                username:
                    type: string
                    description: Telegram username.
                photoUrl:
                    type: string
                    description: URL of the user's profile photo.
                authDate:
                    type: string
                    description: Unix timestamp when the authentication was performed.
                hash:
                    type: string
                    description: Hash for verifying the authentication data.
            description: TelegramAuthRequest contains the information from Telegram's login widget.
        api.user.service.v1.UpdateOperatorAccountSettingsResponse:
            type: object
            properties: {}
        api.user.service.v1.UpdateUserIdentityRequest:
            type: object
            properties:
                id:
                    type: string
                    description: User identity id
                idType:
                    type: string
                    description: User ID Type
                idNumber:
                    type: string
                    description: User ID Number
                image:
                    type: string
                    description: Image Url
        api.user.service.v1.UpdateUserIdentityResponse:
            type: object
            properties: {}
        api.user.service.v1.UpdateUserRequest:
            type: object
            properties:
                userId:
                    type: string
                nickname:
                    type: string
                avatar:
                    type: string
                banLogin:
                    type: boolean
                banGame:
                    type: boolean
                banWithdraw:
                    type: boolean
                locked:
                    type: boolean
                enabled:
                    type: boolean
                roleId:
                    type: string
                firstname:
                    type: string
                lastname:
                    type: string
                email:
                    type: string
                mobile:
                    type: string
                userIdentity:
                    $ref: '#/components/schemas/api.user.service.v1.UserIdentityRequest'
                address:
                    type: string
                dob:
                    type: string
                    format: date-time
                emailVerified:
                    type: boolean
                phoneVerified:
                    type: boolean
                operatorContext:
                    allOf:
                        - $ref: '#/components/schemas/api.common.OperatorContext'
                    description: The initial operator context.
                campaignUrl:
                    type: string
                campaignId:
                    type: string
                affiliateId:
                    type: string
        api.user.service.v1.UpdateUserResponse:
            type: object
            properties: {}
        api.user.service.v1.UpdateVipRewardSliderRequest:
            type: object
            properties:
                rackback:
                    type: string
                lossback:
                    type: string
                type:
                    type: string
        api.user.service.v1.UploadKycRequest:
            type: object
            properties:
                data:
                    type: string
                    format: bytes
                contentType:
                    type: string
                filePath:
                    type: string
                idType:
                    type: string
        api.user.service.v1.UploadKycResponse:
            type: object
            properties:
                fileUrl:
                    type: string
        api.user.service.v1.UserAccountGameSettingsStatus:
            type: object
            properties:
                noGameWithoutDeposit:
                    type: boolean
                minGameKycLevel:
                    type: integer
                    format: int32
                depositCount:
                    type: integer
                    format: int32
                kycLevel:
                    type: integer
                    format: int32
        api.user.service.v1.UserAccountPaymentSettingsStatus:
            type: object
            properties:
                minDepositKycLevel:
                    type: integer
                    format: int32
                minWithdrawKycLevel:
                    type: integer
                    format: int32
                kycLevel:
                    type: integer
                    format: int32
        api.user.service.v1.UserIdentity:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
                idType:
                    type: string
                idNumber:
                    type: string
                image:
                    type: string
                status:
                    type: string
                createdAt:
                    type: string
                    format: date-time
                auditedAt:
                    type: string
                    format: date-time
                operator:
                    type: string
                reviewer:
                    type: string
                reviewTime:
                    type: integer
                    format: int32
        api.user.service.v1.UserIdentityAuditResponse:
            type: object
            properties: {}
        api.user.service.v1.UserIdentityListResponse:
            type: object
            properties:
                userIdentity:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.UserIdentity'
                totalCount:
                    type: integer
                    format: int32
                approvedCount:
                    type: integer
                    format: int32
                declinedCount:
                    type: integer
                    format: int32
                pendingCount:
                    type: integer
                    format: int32
        api.user.service.v1.UserIdentityRequest:
            type: object
            properties:
                idType:
                    type: string
                    description: ID Type "Passport", "South African ID"
                idNumber:
                    type: string
                image:
                    type: string
        api.user.service.v1.UserInfo:
            type: object
            properties:
                userId:
                    type: string
                    description: Unique identifier for the user.
                operatorId:
                    type: string
                    description: OperatorId in the operator hierarchy.
                companyOperatorId:
                    type: string
                    description: Company OperatorId in the operator hierarchy.
                retailerOperatorId:
                    type: string
                    description: Retailer OperatorId in the operator hierarchy.
                systemOperatorId:
                    type: string
                    description: System OperatorId in the operator hierarchy.
                username:
                    type: string
                    description: Username.
                email:
                    type: string
                    description: Email.
                mobile:
                    type: string
                    description: Mobile.
                enabled:
                    type: boolean
                    description: Whether the user is enabled.
                firstname:
                    type: string
                    description: First name.
                lastname:
                    type: string
                    description: Last name.
                nickname:
                    type: string
                    description: Nickname
                avatar:
                    type: string
                    description: Avatar
                banGame:
                    type: boolean
                    description: BanGame
                banWithdraw:
                    type: boolean
                    description: BanWithdraw
                roleId:
                    type: string
                    description: role id
                registeredMobile:
                    type: string
                    description: registered mobile
                registeredEmail:
                    type: string
                    description: registered email
                kycLevel:
                    type: integer
                    description: kyc_level
                    format: int32
                address:
                    type: string
                    description: address
                userIdentity:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.user.service.v1.UserIdentity'
                    description: uesr identities
                dob:
                    type: string
                    description: user date of birth
                    format: date-time
                country:
                    type: string
                    description: user country
            description: UserInfo contains basic user information.
        api.user.service.v1.ValidationRecord:
            type: object
            properties:
                type:
                    type: string
                name:
                    type: string
                value:
                    type: string
                description:
                    type: string
        api.user.service.v1.VerifyEmailRequest:
            type: object
            properties:
                email:
                    type: string
                verificationCode:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.user.service.v1.VerifyEmailResponse:
            type: object
            properties: {}
        api.vip.service.v1.ClaimVipRewardResponse:
            type: object
            properties:
                claimableAmount:
                    type: string
                claimableAmountCurrency:
                    type: string
                claimTransactionId:
                    type: string
        api.vip.service.v1.ConfirmClaimVipRewardResponse:
            type: object
            properties: {}
        api.vip.service.v1.GetClaimableVipRewardsResponse:
            type: object
            properties:
                claimableRewards:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.vip.service.v1.GetClaimableVipRewardsResponse_ClaimableVipReward'
        api.vip.service.v1.GetClaimableVipRewardsResponse_ClaimableVipReward:
            type: object
            properties:
                rewardKind:
                    enum:
                        - VIP_REWARD_KIND_UNSPECIFIED
                        - VIP_REWARD_KIND_UPGRADE_BASE
                        - VIP_REWARD_KIND_UPGRADE_INCREMENTAL
                        - VIP_REWARD_KIND_RAKEBACK_INSTANT
                        - VIP_REWARD_KIND_RAKEBACK_DAILY
                        - VIP_REWARD_KIND_RAKEBACK_WEEKLY
                        - VIP_REWARD_KIND_RAKEBACK_MONTHLY
                    type: string
                    format: enum
                claimable:
                    type: boolean
                claimableAt:
                    type: string
        api.vip.service.v1.GetOperatorVipSettingsResponse:
            type: object
            properties:
                setting:
                    $ref: '#/components/schemas/api.vip.service.v1.VipSetting'
                vipLevelConfigTemplates:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.vip.service.v1.VipLevelConfigTemplate'
        api.vip.service.v1.GetUserVipLevelResponse:
            type: object
            properties:
                vipMember:
                    $ref: '#/components/schemas/api.vip.service.v1.VipMember'
        api.vip.service.v1.GetVipSettingResponse:
            type: object
            properties:
                defaultSetting:
                    $ref: '#/components/schemas/api.vip.service.v1.VipSetting'
                customSetting:
                    $ref: '#/components/schemas/api.vip.service.v1.VipSetting'
                followParent:
                    type: boolean
                customOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                inheritedOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                inheritedFromOperatorName:
                    type: string
                defaultTemplates:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.vip.service.v1.VipLevelConfigTemplate'
                customTemplates:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.vip.service.v1.VipLevelConfigTemplate'
        api.vip.service.v1.UpdateVipRewardSliderResponse:
            type: object
            properties: {}
        api.vip.service.v1.VipConfig:
            type: object
            properties:
                id:
                    type: string
                systemOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                companyOperatorId:
                    type: string
                operatorId:
                    type: string
                enabled:
                    type: boolean
        api.vip.service.v1.VipLevelConfigTemplate:
            type: object
            properties:
                id:
                    type: string
                systemOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                companyOperatorId:
                    type: string
                operatorId:
                    type: string
                name:
                    type: string
                startLevel:
                    type: string
                endLevel:
                    type: string
                baseLevelUpgradeXp:
                    type: string
                    description: 升级设置
                incrLevelUpgradeXp:
                    type: string
                baseUpgradeRewardAmt:
                    type: string
                incrUpgradeRewardAmt:
                    type: string
                upgradeRewardWageringX:
                    type: string
                weeklyXpLoss:
                    type: string
                    description: 等级维护要求
                monthlyXpLoss:
                    type: string
                rakebackInstantEnabled:
                    type: boolean
                    description: 即时返水
                rakebackInstantRate:
                    type: string
                rakebackInstantReq:
                    type: string
                rakebackDailyEnabled:
                    type: boolean
                    description: 每日返水
                rakebackDailyRate:
                    type: string
                rakebackDailyReq:
                    type: string
                weeklyRewardEnabled:
                    type: boolean
                    description: 每周奖励
                weeklyFixedRewardAmt:
                    type: string
                weeklyTurnoverRate:
                    type: string
                weeklyNetLossAmt:
                    type: string
                weeklyAdjustRangePct:
                    type: string
                weeklyActiveDaysReward:
                    type: integer
                    format: int32
                weeklyWageringReq:
                    type: string
                monthlyRewardEnabled:
                    type: boolean
                    description: 每月奖励
                monthlyFixedRewardAmt:
                    type: string
                monthlyTurnoverRate:
                    type: string
                monthlyNetLossAmt:
                    type: string
                monthlyAdjustRangePct:
                    type: string
                monthlyActiveDaysReward:
                    type: integer
                    format: int32
                monthlyWageringReq:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
                imageUrl:
                    type: string
                xpLossEnabled:
                    type: boolean
        api.vip.service.v1.VipMember:
            type: object
            properties:
                id:
                    type: string
                systemOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                companyOperatorId:
                    type: string
                operatorId:
                    type: string
                userId:
                    type: string
                currentLevelId:
                    type: string
                currentXp:
                    type: string
                totalXp:
                    type: string
                lastLevelUpAt:
                    type: string
                lastInstantUpgradeAt:
                    type: string
                weeklySlider:
                    type: integer
                    format: int32
                monthlySlider:
                    type: integer
                    format: int32
        api.vip.service.v1.VipSetting:
            type: object
            properties:
                id:
                    type: string
                systemOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                companyOperatorId:
                    type: string
                operatorId:
                    type: string
                baseCurrency:
                    type: string
                rewardsSlider:
                    type: boolean
                followParent:
                    type: boolean
                enabled:
                    type: boolean
                upgradePayoutType:
                    enum:
                        - VIP_PAYOUT_TYPE_UNSPECIFIED
                        - VIP_PAYOUT_TYPE_CASH
                        - VIP_PAYOUT_TYPE_BONUS
                    type: string
                    format: enum
                rakebackInstantPayoutType:
                    enum:
                        - VIP_PAYOUT_TYPE_UNSPECIFIED
                        - VIP_PAYOUT_TYPE_CASH
                        - VIP_PAYOUT_TYPE_BONUS
                    type: string
                    format: enum
                rakebackDailyPayoutType:
                    enum:
                        - VIP_PAYOUT_TYPE_UNSPECIFIED
                        - VIP_PAYOUT_TYPE_CASH
                        - VIP_PAYOUT_TYPE_BONUS
                    type: string
                    format: enum
                weeklyRewardPayoutType:
                    enum:
                        - VIP_PAYOUT_TYPE_UNSPECIFIED
                        - VIP_PAYOUT_TYPE_CASH
                        - VIP_PAYOUT_TYPE_BONUS
                    type: string
                    format: enum
                monthlyRewardPayoutType:
                    enum:
                        - VIP_PAYOUT_TYPE_UNSPECIFIED
                        - VIP_PAYOUT_TYPE_CASH
                        - VIP_PAYOUT_TYPE_BONUS
                    type: string
                    format: enum
                depositXpRate:
                    type: string
                wageringXpRate:
                    type: string
                maxHouseEdgeLimitPercent:
                    type: string
                standardXpMultiplier:
                    type: string
                timezone:
                    type: string
                dailyIssueAt:
                    type: string
                weeklyIssueDow:
                    type: integer
                    format: int32
                weeklyIssueAt:
                    type: string
                monthlyIssueDom:
                    type: integer
                    format: int32
                monthlyIssueAt:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
                upgradeBaseExpiryType:
                    enum:
                        - VIP_REWARD_EXPIRY_TYPE_DAYS_HOURS
                        - VIP_REWARD_EXPIRY_TYPE_NEVER
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_UPGRADING
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_NEXT_WEEK
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_NEXT_MONTH
                    type: string
                    description: 1. Base Upgrade Reward Expiry
                    format: enum
                upgradeBaseExpiryDays:
                    type: integer
                    format: int32
                upgradeBaseExpiryHours:
                    type: integer
                    format: int32
                upgradeIncrementalExpiryType:
                    enum:
                        - VIP_REWARD_EXPIRY_TYPE_DAYS_HOURS
                        - VIP_REWARD_EXPIRY_TYPE_NEVER
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_UPGRADING
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_NEXT_WEEK
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_NEXT_MONTH
                    type: string
                    description: 2. Incremental Upgrade Reward Expiry
                    format: enum
                upgradeIncrementalExpiryDays:
                    type: integer
                    format: int32
                upgradeIncrementalExpiryHours:
                    type: integer
                    format: int32
                rakebackInstantExpiryType:
                    enum:
                        - VIP_REWARD_EXPIRY_TYPE_DAYS_HOURS
                        - VIP_REWARD_EXPIRY_TYPE_NEVER
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_UPGRADING
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_NEXT_WEEK
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_NEXT_MONTH
                    type: string
                    description: 3. Rakeback (Instant) Expiry
                    format: enum
                rakebackInstantExpiryDays:
                    type: integer
                    format: int32
                rakebackInstantExpiryHours:
                    type: integer
                    format: int32
                rakebackDailyExpiryType:
                    enum:
                        - VIP_REWARD_EXPIRY_TYPE_DAYS_HOURS
                        - VIP_REWARD_EXPIRY_TYPE_NEVER
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_UPGRADING
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_NEXT_WEEK
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_NEXT_MONTH
                    type: string
                    description: 4. Rakeback (Daily) Expiry
                    format: enum
                rakebackDailyExpiryDays:
                    type: integer
                    format: int32
                rakebackDailyExpiryHours:
                    type: integer
                    format: int32
                weeklyRewardExpiryType:
                    enum:
                        - VIP_REWARD_EXPIRY_TYPE_DAYS_HOURS
                        - VIP_REWARD_EXPIRY_TYPE_NEVER
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_UPGRADING
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_NEXT_WEEK
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_NEXT_MONTH
                    type: string
                    description: 5. Weekly Reward Expiry
                    format: enum
                weeklyRewardExpiryDays:
                    type: integer
                    format: int32
                weeklyRewardExpiryHours:
                    type: integer
                    format: int32
                monthlyRewardExpiryType:
                    enum:
                        - VIP_REWARD_EXPIRY_TYPE_DAYS_HOURS
                        - VIP_REWARD_EXPIRY_TYPE_NEVER
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_UPGRADING
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_NEXT_WEEK
                        - VIP_REWARD_EXPIRY_TYPE_RESET_WHEN_NEXT_MONTH
                    type: string
                    description: 6. Monthly Reward Expiry
                    format: enum
                monthlyRewardExpiryDays:
                    type: integer
                    format: int32
                monthlyRewardExpiryHours:
                    type: integer
                    format: int32
        api.wallet.service.v1.AddResponsibleGamblingConfigRequest:
            type: object
            properties:
                currency:
                    type: string
                depositLimit:
                    type: string
                withdrawalLimit:
                    type: string
                dailyPlayLimit:
                    type: string
                weeklyPlayLimit:
                    type: string
                monthlyPlayLimit:
                    type: string
                dailyLossLimit:
                    type: string
                weeklyLossLimit:
                    type: string
                monthlyLossLimit:
                    type: string
        api.wallet.service.v1.AddResponsibleGamblingConfigResponse:
            type: object
            properties: {}
        api.wallet.service.v1.BonusTransferRequest:
            type: object
            properties:
                creditId:
                    type: string
                currency:
                    type: string
                transactionType:
                    type: string
        api.wallet.service.v1.BonusTransferResponse:
            type: object
            properties:
                transactionId:
                    type: string
                transferredAmount:
                    type: string
                balanceCash:
                    type: string
                balanceBonus:
                    type: string
        api.wallet.service.v1.CreditResponse:
            type: object
            properties:
                transactionId:
                    type: string
        api.wallet.service.v1.Currency:
            type: object
            properties:
                currency:
                    type: string
                enabled:
                    type: boolean
                hidden:
                    type: boolean
                type:
                    type: string
                symbol:
                    type: string
                icon:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
                thousandsSeparator:
                    type: string
                decimalSeparator:
                    type: string
                aggregatedEnabled:
                    type: boolean
                aggregatedHidden:
                    type: boolean
                parentEnabled:
                    type: boolean
                parentHidden:
                    type: boolean
        api.wallet.service.v1.DebitResponse:
            type: object
            properties:
                transactionId:
                    type: string
        api.wallet.service.v1.DeductionOrder:
            type: object
            properties:
                deductionType:
                    type: string
                cashRatio:
                    type: string
                bonusRatio:
                    type: string
        api.wallet.service.v1.DeleteDepositRewardSequencesResponse:
            type: object
            properties: {}
        api.wallet.service.v1.DeleteResponsibleGamblingConfigRequest:
            type: object
            properties:
                targetUserId:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                limitType:
                    type: string
                    description: |-
                        deposit_limit, withdrawal_limit, daily_play_limit, weekly_play_limit, monthly_play_limit
                         daily_loss_limit, weekly_loss_limit, monthly_loss_limit
                initiatorUserId:
                    type: string
        api.wallet.service.v1.DeleteResponsibleGamblingConfigResponse:
            type: object
            properties: {}
        api.wallet.service.v1.DepositRewardConfig:
            type: object
            properties:
                welcomeRewardEnabled:
                    type: boolean
                dailyRewardEnabled:
                    type: boolean
                welcomeRewardSequences:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.RewardSequence'
                dailyRewardSequences:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.RewardSequence'
                createdAt:
                    type: string
                    format: date-time
                updatedAt:
                    type: string
                    format: date-time
            description: Deposit reward config for an operator with specific currency
        api.wallet.service.v1.ExportCustomerRecordsResponse:
            type: object
            properties:
                taskId:
                    type: string
        api.wallet.service.v1.ExportFICAThresholdTransactionsResponse:
            type: object
            properties:
                taskId:
                    type: string
        api.wallet.service.v1.ExportManualJournalEntriesResponse:
            type: object
            properties:
                taskId:
                    type: string
        api.wallet.service.v1.FICAThresholdConfig:
            type: object
            properties:
                configs:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.FICAThresholdConfig_Config'
        api.wallet.service.v1.FICAThresholdConfig_Config:
            type: object
            properties:
                transactionType:
                    type: string
                thresholdAmount:
                    type: string
        api.wallet.service.v1.GetCurrenciesRequest:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
                targetOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                aggregated:
                    type: boolean
                parent:
                    type: boolean
        api.wallet.service.v1.GetCurrenciesResponse:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.Currency'
        api.wallet.service.v1.GetDepositRewardConfigResponse:
            type: object
            properties:
                customOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                currency:
                    type: string
                inheritedOperatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                inheritedFromOperatorName:
                    type: string
                followParent:
                    type: boolean
                welcomeRewardSequencesMinCount:
                    type: integer
                    format: int32
                dailyRewardSequencesMinCount:
                    type: integer
                    format: int32
                defaultDepositRewardConfig:
                    $ref: '#/components/schemas/api.wallet.service.v1.DepositRewardConfig'
                customDepositRewardConfig:
                    $ref: '#/components/schemas/api.wallet.service.v1.DepositRewardConfig'
        api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyRequest:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        type: string
                baseCurrency:
                    type: string
        api.wallet.service.v1.GetExchangeRatesWithBaseCurrencyResponse:
            type: object
            properties:
                exchangeRates:
                    type: object
                    additionalProperties:
                        type: string
                    description: map key is currency code, value is currency exchange rate
        api.wallet.service.v1.GetFICAThresholdConfigResponse:
            type: object
            properties:
                ficaThresholdConfigs:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/api.wallet.service.v1.FICAThresholdConfig'
        api.wallet.service.v1.GetGamificationCurrencyConfigResponse:
            type: object
            properties:
                deductionOrder:
                    $ref: '#/components/schemas/api.wallet.service.v1.DeductionOrder'
                operatorCurrencyConfigs:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.OperatorCurrencyConfig'
        api.wallet.service.v1.GetOperatorBalanceRequest:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.wallet.service.v1.GetOperatorBalanceResponse:
            type: object
            properties:
                operatorBalances:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.OperatorBalance'
                totalCashUsd:
                    type: string
                totalCashReportingCurrency:
                    type: string
        api.wallet.service.v1.GetUserBalanceDetailsRequest:
            type: object
            properties:
                currency:
                    type: string
        api.wallet.service.v1.GetUserBalanceDetailsResponse:
            type: object
            properties:
                detail:
                    $ref: '#/components/schemas/api.wallet.service.v1.UserBalanceDetail'
        api.wallet.service.v1.GetUserBalancesRequest:
            type: object
            properties:
                userId:
                    type: string
        api.wallet.service.v1.GetUserBalancesResponse:
            type: object
            properties:
                balances:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.GetUserBalancesResponse_Balance'
        api.wallet.service.v1.GetUserBalancesResponse_Balance:
            type: object
            properties:
                currency:
                    type: string
                cash:
                    type: string
                operatorBonus:
                    type: string
                providerBonus:
                    type: string
                withdrawableCash:
                    type: string
                transferableBonus:
                    type: string
        api.wallet.service.v1.GetUserDepositRewardSequenceRequest:
            type: object
            properties:
                currency:
                    type: string
        api.wallet.service.v1.GetUserDepositRewardSequenceResponse:
            type: object
            properties:
                currentSequenceType:
                    type: string
                welcomeRewardCount:
                    type: integer
                    format: int32
                dailyRewardCount:
                    type: integer
                    format: int32
                currentRewardSequence:
                    $ref: '#/components/schemas/api.wallet.service.v1.RewardSequence'
        api.wallet.service.v1.GetWalletsResponse:
            type: object
            properties:
                totalAssets:
                    $ref: '#/components/schemas/api.wallet.service.v1.GetWalletsResponse_TotalAssets'
                wallets:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.GetWalletsResponse_Wallet'
        api.wallet.service.v1.GetWalletsResponse_Credit:
            type: object
            properties:
                createdAt:
                    type: string
                    format: date-time
                transactionId:
                    type: string
                cash:
                    type: string
                originalCash:
                    type: string
                bonus:
                    type: string
                originalBonus:
                    type: string
                turnoverThreshold:
                    type: string
                turnover:
                    type: string
                cashTurnover:
                    type: string
                bonusTurnover:
                    type: string
                turnoverMultiplier:
                    type: string
                cashTurnoverThreshold:
                    type: string
                bonusTurnoverThreshold:
                    type: string
        api.wallet.service.v1.GetWalletsResponse_TotalAssets:
            type: object
            properties:
                balanceUsd:
                    type: string
                depositUsd:
                    type: string
                withdrawUsd:
                    type: string
                depositMinusWithdrawUsd:
                    type: string
                validTurnoverUsd:
                    type: string
                balanceReportingCurrency:
                    type: string
                depositReportingCurrency:
                    type: string
                withdrawReportingCurrency:
                    type: string
                depositMinusWithdrawReportingCurrency:
                    type: string
                validTurnoverReportingCurrency:
                    type: string
        api.wallet.service.v1.GetWalletsResponse_Wallet:
            type: object
            properties:
                currency:
                    type: string
                cash:
                    type: string
                originalCash:
                    type: string
                bonus:
                    type: string
                originalBonus:
                    type: string
                turnoverThreshold:
                    type: string
                turnover:
                    type: string
                cashTurnover:
                    type: string
                bonusTurnover:
                    type: string
                turnoverMultiplier:
                    type: string
                credits:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.GetWalletsResponse_Credit'
                cashTurnoverThreshold:
                    type: string
                bonusTurnoverThreshold:
                    type: string
                withdrawableCash:
                    type: string
                transferableBonus:
                    type: string
        api.wallet.service.v1.ListBottomOperatorBalancesResponse:
            type: object
            properties:
                operatorBalances:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.OperatorBalance'
                totalCashUsd:
                    type: string
                totalCashReportingCurrency:
                    type: string
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.wallet.service.v1.ListCurrenciesResponse:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.Currency'
                total:
                    type: integer
                    format: int32
                totalEnabled:
                    type: integer
                    format: int32
                totalHidden:
                    type: integer
                    format: int32
                totalEnabledAggregated:
                    type: integer
                    format: int32
                totalHiddenAggregated:
                    type: integer
                    format: int32
                totalEnabledParent:
                    type: integer
                    format: int32
                totalHiddenParent:
                    type: integer
                    format: int32
        api.wallet.service.v1.ListCustomerRecordsResponse:
            type: object
            properties:
                customerRecords:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.ListCustomerRecordsResponse_CustomerRecord'
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.wallet.service.v1.ListCustomerRecordsResponse_CustomerRecord:
            type: object
            properties:
                dateTime:
                    type: string
                    format: date-time
                transactionType:
                    type: string
                userId:
                    type: string
                transactionId:
                    type: string
                currency:
                    type: string
                amountChanged:
                    type: string
                beforeBalance:
                    type: string
                afterBalance:
                    type: string
                externalTransactionId:
                    type: string
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                systemOperatorId:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
        api.wallet.service.v1.ListFICAThresholdTransactionsResponse:
            type: object
            properties:
                thresholdTransactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.ListFICAThresholdTransactionsResponse_FICAThresholdTransaction'
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.wallet.service.v1.ListFICAThresholdTransactionsResponse_FICAThresholdTransaction:
            type: object
            properties:
                type:
                    type: string
                transactionTime:
                    type: string
                    format: date-time
                transactionId:
                    type: string
                currency:
                    type: string
                amount:
                    type: string
                excessAmount:
                    type: string
                userId:
                    type: string
                fullName:
                    type: string
                idType:
                    type: string
                idNumber:
                    type: string
                mobile:
                    type: string
                email:
                    type: string
                address:
                    type: string
                kycLevel:
                    type: integer
                    format: int32
                externalTransactionId:
                    type: string
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                systemOperatorId:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
        api.wallet.service.v1.ListManualJournalEntriesResponse:
            type: object
            properties:
                manualJournalEntries:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.ListManualJournalEntriesResponse_ManualJournalEntry'
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        api.wallet.service.v1.ListManualJournalEntriesResponse_ManualJournalEntry:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
                transactionTime:
                    type: string
                    format: date-time
                initiatorUserId:
                    type: string
                initiatorUserName:
                    type: string
                transactionType:
                    type: string
                description:
                    type: string
                currency:
                    type: string
                amount:
                    type: string
                amountUsd:
                    type: string
                amountReportingCurrency:
                    type: string
                beforeBalance:
                    type: string
                beforeBalanceUsd:
                    type: string
                beforeBalanceReportingCurrency:
                    type: string
                afterBalance:
                    type: string
                afterBalanceUsd:
                    type: string
                afterBalanceReportingCurrency:
                    type: string
                initiatorRealOperatorName:
                    type: string
                turnoverThreshold:
                    type: string
        api.wallet.service.v1.ListResponsibleGamblingConfigsRequest:
            type: object
            properties:
                userId:
                    type: string
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
        api.wallet.service.v1.ListResponsibleGamblingConfigsResponse:
            type: object
            properties:
                responsibleGamblingConfigs:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.ResponsibleGamblingConfig'
                responsibleGamblingStatuses:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.ResponsibleGamblingStatus'
        api.wallet.service.v1.OperatorBalance:
            type: object
            properties:
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
                retailerOperatorName:
                    type: string
                companyOperatorName:
                    type: string
                operatorName:
                    type: string
                currency:
                    type: string
                protocol:
                    type: string
                cash:
                    type: string
                cashUsd:
                    type: string
                cashReportingCurrency:
                    type: string
                enabled:
                    type: boolean
        api.wallet.service.v1.OperatorCurrencyConfig:
            type: object
            properties:
                currency:
                    type: string
                cashWithdrawalWageringRequirement:
                    type: integer
                    format: int32
                bonusEnabled:
                    type: boolean
                maximumBonusBetLimit:
                    type: string
                wageringUnlockPriority:
                    type: string
        api.wallet.service.v1.ResponsibleGamblingConfig:
            type: object
            properties:
                currency:
                    type: string
                depositLimit:
                    type: string
                withdrawalLimit:
                    type: string
                dailyPlayLimit:
                    type: string
                weeklyPlayLimit:
                    type: string
                monthlyPlayLimit:
                    type: string
                dailyLossLimit:
                    type: string
                weeklyLossLimit:
                    type: string
                monthlyLossLimit:
                    type: string
                depositLimitDeleteScheduleTime:
                    type: string
                    format: date-time
                withdrawalLimitDeleteScheduleTime:
                    type: string
                    format: date-time
                dailyPlayLimitDeleteScheduleTime:
                    type: string
                    format: date-time
                weeklyPlayLimitDeleteScheduleTime:
                    type: string
                    format: date-time
                monthlyPlayLimitDeleteScheduleTime:
                    type: string
                    format: date-time
                dailyLossLimitDeleteScheduleTime:
                    type: string
                    format: date-time
                weeklyLossLimitDeleteScheduleTime:
                    type: string
                    format: date-time
                monthlyLossLimitDeleteScheduleTime:
                    type: string
                    format: date-time
        api.wallet.service.v1.ResponsibleGamblingStatus:
            type: object
            properties:
                currency:
                    type: string
                withdrawalAllowed:
                    type: boolean
                withdrawalUsage:
                    type: string
                depositAllowed:
                    type: boolean
                depositUsage:
                    type: string
                gameBetAllowed:
                    type: boolean
                dailyPlayUsage:
                    type: string
                weeklyPlayUsage:
                    type: string
                monthlyPlayUsage:
                    type: string
                dailyLossUsage:
                    type: string
                weeklyLossUsage:
                    type: string
                monthlyLossUsage:
                    type: string
        api.wallet.service.v1.RewardSequence:
            type: object
            properties:
                serialNumber:
                    type: integer
                    format: int32
                name:
                    type: string
                enabled:
                    type: boolean
                rewardType:
                    type: string
                wageringRequirement:
                    type: integer
                    format: int32
                rewardValidity:
                    type: string
                tierConfigs:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.RewardSequence_TierConfig'
                startTime:
                    type: string
                    format: date-time
                endTime:
                    type: string
                    format: date-time
        api.wallet.service.v1.RewardSequence_TierConfig:
            type: object
            properties:
                minDepositAmount:
                    type: string
                maxDepositAmount:
                    type: string
                rewardPercentage:
                    type: string
                maxRewardAmount:
                    type: string
                maxWithdrawalAmount:
                    type: string
        api.wallet.service.v1.SetDepositRewardSequencesResponse:
            type: object
            properties: {}
        api.wallet.service.v1.SetFICAThresholdConfigResponse:
            type: object
            properties: {}
        api.wallet.service.v1.UpdateDeductionOrderResponse:
            type: object
            properties: {}
        api.wallet.service.v1.UpdateOperatorCurrencyConfigResponse:
            type: object
            properties: {}
        api.wallet.service.v1.UpdateOperatorCurrencyResponse:
            type: object
            properties: {}
        api.wallet.service.v1.UserBalanceDetail:
            type: object
            properties:
                currency:
                    type: string
                totalCash:
                    type: string
                totalOperatorBonus:
                    type: string
                totalProviderBonus:
                    type: string
                totalWithdrawableCash:
                    type: string
                totalTransferableOperatorBonus:
                    type: string
                credits:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.wallet.service.v1.UserBalanceDetail_Credit'
        api.wallet.service.v1.UserBalanceDetail_Credit:
            type: object
            properties:
                creditId:
                    type: string
                cash:
                    type: string
                operatorBonus:
                    type: string
                providerBonus:
                    type: string
                withdrawableCash:
                    type: string
                transferableOperatorBonus:
                    type: string
                cashTurnover:
                    type: string
                cashTurnoverThreshold:
                    type: string
                operatorBonusTurnover:
                    type: string
                operatorBonusTurnoverThreshold:
                    type: string
        google.protobuf.ListValue:
            type: object
            properties:
                values:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Value'
                    description: Repeated field of dynamically typed values.
            description: |-
                `ListValue` is a wrapper around a repeated field of values.

                 The JSON representation for `ListValue` is JSON array.
        google.protobuf.Value:
            description: Represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values.
        payment.service.v1.AddBankCardRequest:
            type: object
            properties:
                currency:
                    type: string
                country:
                    type: string
                bankCard:
                    type: object
        payment.service.v1.AddBankCardResponse:
            type: object
            properties: {}
        payment.service.v1.BankCard:
            type: object
            properties:
                id:
                    type: string
                cardAccount:
                    type: string
                cardAccountFirstname:
                    type: string
                cardAccountLastname:
                    type: string
                cardIban:
                    type: string
                currency:
                    type: string
                country:
                    type: string
                enabled:
                    type: boolean
                cardDetail:
                    type: object
        payment.service.v1.BuyCryptoViaFiatCurrentListRequest:
            type: object
            properties: {}
        payment.service.v1.BuyCryptoViaFiatCurrentListResponse:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.Currency'
                    description: repeated currency list
                crypto:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.PaymentChannelInfo'
                    description: repeated crypto list
        payment.service.v1.BuyCryptoViaFiatPriceQueryRequest:
            type: object
            properties:
                amount:
                    type: string
                fiat:
                    type: string
                payWayCode:
                    type: string
                channelId:
                    type: string
        payment.service.v1.BuyCryptoViaFiatPriceQueryResponse:
            type: object
            properties:
                crypto:
                    type: string
                cryptoPrice:
                    type: string
                cryptoQuantity:
                    type: string
                fiat:
                    type: string
                rampFee:
                    type: string
                networkFee:
                    type: string
        payment.service.v1.BuyCryptoViaFiatRequest:
            type: object
            properties:
                amount:
                    type: string
                fiatCurrency:
                    type: string
                payWayCode:
                    type: string
                channelId:
                    type: string
        payment.service.v1.BuyCryptoViaFiatResponse:
            type: object
            properties:
                payUrl:
                    type: string
        payment.service.v1.CreatePaymentChannelResponse:
            type: object
            properties:
                channelId:
                    type: string
                    description: Unique identifier for the created channel
            description: |-
                Response for channel creation
                 Returns the ID of the newly created payment channel
        payment.service.v1.CreatePaymentMethodResponse:
            type: object
            properties:
                paymentMethod:
                    $ref: '#/components/schemas/payment.service.v1.PaymentMethodInfo'
        payment.service.v1.Currency:
            type: object
            properties:
                currency:
                    type: string
                country:
                    type: string
                payWayCode:
                    type: string
                payWayName:
                    type: string
                payMin:
                    type: number
                    format: float
                payMax:
                    type: number
                    format: float
        payment.service.v1.DeleteBankCardRequest:
            type: object
            properties:
                bankCardId:
                    type: string
        payment.service.v1.DeleteBankCardResponse:
            type: object
            properties: {}
        payment.service.v1.DepositCallbackRequest:
            type: object
            properties:
                transactionNo:
                    type: string
                    description: Transaction number from the payment aggregator
                gatewayOrderNo:
                    type: string
                    description: Order number from the payment gateway
                operatorOrderNo:
                    type: string
                    description: Transaction number from the operator
                orderStatus:
                    type: string
                    description: Current status of the order (e.g., SUCCESS, FAILED)
                payTime:
                    type: string
                    description: 'Time when payment was completed. Format: yyyy-MM-dd HH:mm:ss'
                createTime:
                    type: string
                    description: 'Time when order was created. Format: yyyy-MM-dd HH:mm:ss'
                amount:
                    type: string
                    description: Original amount of the order
                money:
                    type: string
                    description: Actual amount paid
                address:
                    type: string
                    description: Actual address
                sign:
                    type: string
                    description: HMAC-SHA256 signature to verify request authenticity
                timestamp:
                    type: string
                    description: Request timestamp to prevent replay attacks
                nonce:
                    type: string
                    description: Random string to ensure each request is unique
            description: |-
                Request for deposit callback
                 Used by payment gateways to notify about deposit status changes
        payment.service.v1.DepositCallbackResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Whether the callback was processed successfully
                message:
                    type: string
                    description: Optional message, returns error reason on failure
            description: |-
                Response for deposit callback
                 Confirms receipt of callback notification
        payment.service.v1.GetAddressRequest:
            type: object
            properties:
                channelId:
                    type: string
                    description: ID of the channel to use for this deposit
                extra:
                    type: object
                    description: |-
                        Additional information needed for the deposit
                         May include clientOrderId, productId, userInfo, etc.
            description: |-
                Request to get address
                 Used to get DC address
        payment.service.v1.GetAddressResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/payment.service.v1.GetAddressResponse_Data'
            description: |-
                Response for deposit initiation
                 Contains details about the initiated deposit transaction
        payment.service.v1.GetAddressResponse_Data:
            type: object
            properties:
                currency:
                    type: string
                    description: Crypto like btc, eth...
                protocol:
                    type: string
                    description: Crypto protocol
                network:
                    type: string
                    description: Crypto chain
                address:
                    type: string
                    description: Digital Currency address
        payment.service.v1.GetBankCardListRequest:
            type: object
            properties: {}
        payment.service.v1.GetBankCardListResponse:
            type: object
            properties:
                bankCardLsit:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.BankCard'
        payment.service.v1.GetBankSchemaRequest:
            type: object
            properties:
                currency:
                    type: string
        payment.service.v1.GetBankSchemaResponse:
            type: object
            properties:
                schema:
                    $ref: '#/components/schemas/google.protobuf.ListValue'
        payment.service.v1.GetOperatorAddressResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/payment.service.v1.GetOperatorAddressResponse_Data'
            description: |-
                Response for deposit initiation
                 Contains details about the initiated deposit transaction
        payment.service.v1.GetOperatorAddressResponse_Data:
            type: object
            properties:
                currency:
                    type: string
                    description: Crypto like btc, eth...
                protocol:
                    type: string
                    description: Crypto protocol
                network:
                    type: string
                    description: Crypto chain
                address:
                    type: string
                    description: Digital Currency address
        payment.service.v1.GetPaymentChannelPageRequest:
            type: object
            properties:
                page:
                    type: integer
                    description: Page number to retrieve (1-based)
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                operatorId:
                    type: string
                    description: Optional operator ID filter
                type:
                    enum:
                        - CHANNEL_TYPE_ALL
                        - CHANNEL_TYPE_DEPOSIT
                        - CHANNEL_TYPE_WITHDRAW
                    type: string
                    description: Optional channel type filter
                    format: enum
                category:
                    type: string
                    description: Optional category filter
                paymentMethod:
                    type: string
                    description: Optional payment method filter
                currency:
                    type: string
                    description: Optional currency filter
                protocol:
                    type: string
                    description: Optional crypto protocol
                network:
                    type: string
                    description: Optional crypto network filter
                country:
                    type: string
                    description: Optional country filter
                source:
                    type: string
                    description: Source of operator type
                enabled:
                    type: boolean
                    description: Status ture or false
                sort:
                    enum:
                        - DESC
                        - ASC
                    type: string
                    description: Optional sort direction
                    format: enum
            description: |-
                Request to get payment channel page
                 Used to retrieve a paginated list of payment channels with optional filters
        payment.service.v1.GetPaymentChannelPageResponse:
            type: object
            properties:
                paymentChannels:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.PaymentChannelInfo'
                    description: List of payment channels matching the filter criteria
                totalCount:
                    type: integer
                    description: Total number of channels matching the filter criteria
                    format: int32
                page:
                    type: integer
                    description: Current page number
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                totalPages:
                    type: integer
                    description: Total number of pages available
                    format: int32
                totalEnableColnt:
                    type: integer
                    format: int32
                totalDisableCount:
                    type: integer
                    format: int32
            description: |-
                Response for payment channel page
                 Contains paginated list of payment channels and pagination metadata
        payment.service.v1.GetPaymentMethodListResponse:
            type: object
            properties:
                paymentMethods:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.PaymentMethodInfo'
                    description: List of payment methods available
                page:
                    type: integer
                    description: Current page number
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                totalPages:
                    type: integer
                    description: Total number of pages available
                    format: int32
                totalOn:
                    type: integer
                    description: |-
                        The following fields are only populated for admin requests
                         Total number of successful transactions
                    format: int32
                totalOff:
                    type: integer
                    description: Total number of processing transactions
                    format: int32
            description: |-
                Response for payment method list
                 Contains a list of all available payment methods
        payment.service.v1.GetSupportedPaymentMethodListRequest:
            type: object
            properties:
                currency:
                    type: array
                    items:
                        type: string
                    description: Currency code supported by this payment method (e.g., USD, EUR, CNY)
            description: |-
                Request to get payment method list
                 This message is used to retrieve all available payment methods
        payment.service.v1.GetSupportedPaymentMethodListResponse:
            type: object
            properties:
                paymentMethods:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.PaymentMethodInfo'
                    description: List of payment methods available
            description: |-
                Response for payment method list
                 Contains a list of all available payment methods
        payment.service.v1.GetTransactionDetailByIdRequest:
            type: object
            properties:
                transactionId:
                    type: string
                    description: Unique identifier for the transaction
            description: |-
                Request to get transaction detail by ID
                 Used to retrieve detailed information about a specific transaction
        payment.service.v1.GetTransactionDetailByIdResponse:
            type: object
            properties:
                detail:
                    allOf:
                        - $ref: '#/components/schemas/payment.service.v1.TransactionDetail'
                    description: Detailed transaction information including channel data
            description: |-
                Response for transaction detail
                 Contains detailed information about the requested transaction
        payment.service.v1.GetTransactionPageRequest:
            type: object
            properties:
                page:
                    type: integer
                    description: Page number to retrieve (1-based)
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                transactionId:
                    type: string
                    description: Optional transaction ID filter
                currency:
                    type: string
                    description: Optional currency filter
                paymentMethod:
                    type: string
                    description: Optional payment method filter
                paymentChannel:
                    type: string
                    description: Optional payment channel filter
                protocol:
                    type: string
                    description: Optional crypto protocol filter
                network:
                    type: string
                    description: Optional crypto network filter
                type:
                    enum:
                        - TRANSACTION_TYPE_UNSPECIFIED
                        - TRANSACTION_TYPE_DEPOSIT
                        - TRANSACTION_TYPE_WITHDRAW
                    type: string
                    description: Optional transaction type filter
                    format: enum
                status:
                    enum:
                        - TRANSACTION_STATUS_UNSPECIFIED
                        - TRANSACTION_STATUS_PROCESSING
                        - TRANSACTION_STATUS_SUCCESSFUL
                        - TRANSACTION_STATUS_FAILED
                    type: string
                    description: Optional status filter
                    format: enum
                agent:
                    type: string
                    description: Optional agent filter
                startTime:
                    type: string
                    description: Optional start time for date range filter
                    format: date-time
                endTime:
                    type: string
                    description: Optional end time for date range filter
                    format: date-time
                sort:
                    enum:
                        - DESC
                        - ASC
                    type: string
                    description: Optional sort direction
                    format: enum
                minAmount:
                    type: string
                    description: Optional minimum amount filter
                maxAmount:
                    type: string
                    description: Optional maximum amount filter
                userId:
                    type: string
                operatorContextFilters:
                    $ref: '#/components/schemas/api.common.OperatorContextFilters'
                operatorContext:
                    $ref: '#/components/schemas/api.common.OperatorContext'
            description: |-
                Request to get transaction page
                 Used to retrieve a paginated list of transactions with optional filters
        payment.service.v1.GetTransactionPageResponse:
            type: object
            properties:
                transactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/payment.service.v1.TransactionInfo'
                    description: List of transactions matching the filter criteria
                totalCount:
                    type: integer
                    description: Total number of transactions matching the filter criteria
                    format: int32
                page:
                    type: integer
                    description: Current page number
                    format: int32
                pageSize:
                    type: integer
                    description: Number of items per page
                    format: int32
                totalPages:
                    type: integer
                    description: Total number of pages available
                    format: int32
                totalSuccessful:
                    type: integer
                    description: |-
                        The following fields are only populated for admin requests
                         Total number of successful transactions
                    format: int32
                totalProcessing:
                    type: integer
                    description: Total number of processing transactions
                    format: int32
                totalFailed:
                    type: integer
                    description: Total number of failed transactions
                    format: int32
            description: |-
                Response for transaction page
                 Contains paginated list of transactions and pagination metadata
        payment.service.v1.InitiateDepositRequest:
            type: object
            properties:
                amount:
                    type: string
                    description: Amount to deposit in smallest currency unit (e.g., cents)
                currency:
                    type: string
                    description: Currency code for the transaction
                channelId:
                    type: string
                    description: ID of the channel to use for this deposit
                extra:
                    type: object
                    description: |-
                        Additional information needed for the deposit
                         May include clientOrderId, productId, userInfo, etc.
            description: |-
                Request to initiate a deposit
                 Used to start a deposit transaction
        payment.service.v1.InitiateDepositResponse:
            type: object
            properties:
                transactionId:
                    type: string
                    description: Unique identifier for the transaction
                amount:
                    type: string
                    description: Amount to be deposited in smallest currency unit
                currency:
                    type: string
                    description: Currency code for the transaction
                status:
                    type: string
                    description: Current status of the transaction
                payUrl:
                    type: string
                    description: URL to direct the user to for payment completion
                qrCode:
                    type: string
                    description: QR code image (typically base64 encoded) for mobile payment
                createdAt:
                    type: string
                    description: Timestamp when the transaction was created
                    format: date-time
                extra:
                    type: object
                    description: Additional transaction information returned by payment provider
            description: |-
                Response for deposit initiation
                 Contains details about the initiated deposit transaction
        payment.service.v1.PaymentChannelInfo:
            type: object
            properties:
                channelId:
                    type: string
                    description: Unique identifier for the channel
                supportType:
                    type: string
                    description: Type of the channel (e.g., online, offline)
                psp:
                    type: string
                    description: Services Prvider
                category:
                    type: string
                    description: Category of the channel (e.g., bank, e-wallet)
                paymentMethod:
                    type: string
                    description: Payment method used in this channel
                tag:
                    type: string
                    description: Tag for categorization or filtering
                name:
                    type: string
                    description: Display name of the channel
                paymentMethodId:
                    type: string
                    description: ID of the payment method used
                currency:
                    type: string
                    description: Currency supported by this channel
                currencyType:
                    type: string
                    description: Currency type (e.g., Crypto, Fiat)
                protocol:
                    type: string
                    description: Crypto protocol supported by this channel
                network:
                    type: string
                    description: Crypto chian supported by this channel
                country:
                    type: string
                    description: Country where this channel is available
                method:
                    type: string
                    description: Specific method used (might be more detailed than payment_method)
                logo:
                    type: string
                    description: URL to the logo image for this payment channel
                minAmount:
                    type: string
                    description: Minimum amount allowed for deposit transactions
                maxAmount:
                    type: string
                    description: Maximum amount allowed for deposit transactions
                fixedFee:
                    type: string
                    description: Fixed Fee on the Amount
                feeRate:
                    type: string
                    description: Rate Fee
                minFee:
                    type: string
                    description: Minimum Fee
                pspMinAmount:
                    type: string
                    description: Minimum amount allowed for deposit transactions
                pspMaxAmount:
                    type: string
                    description: Maximum amount allowed for deposit transactions
                pspFixedFee:
                    type: string
                    description: Fixed Fee on the Amount
                pspFeeRate:
                    type: string
                    description: Rate Fee
                pspMinFee:
                    type: string
                    description: Minimum Fee
                sysMinAmount:
                    type: string
                    description: Minimum amount allowed for deposit transactions
                sysMaxAmount:
                    type: string
                    description: Maximum amount allowed for deposit transactions
                sysFixedFee:
                    type: string
                    description: Fixed Fee on the Amount
                sysFeeRate:
                    type: string
                    description: Rate Fee
                sysMinFee:
                    type: string
                    description: Minimum Fee
                userFixedFee:
                    type: string
                    description: Fixed Fee on the Amount
                userFeeRate:
                    type: string
                    description: Rate Fee
                userMinFee:
                    type: string
                    description: Minimum Fee
                schema:
                    allOf:
                        - $ref: '#/components/schemas/google.protobuf.ListValue'
                    description: JSON schema defining deposit form fields required by this channel
                enable:
                    type: boolean
                    description: Status bool
                contact:
                    type: string
                    description: Contact
                eat:
                    type: integer
                    format: int32
                operatorId:
                    type: string
                companyOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                systemOperatorId:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                operatorType:
                    type: string
                pspId:
                    type: string
            description: |-
                Payment channel information
                 Detailed information about a specific payment channel
        payment.service.v1.PaymentMethodInfo:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for the payment method
                psp:
                    type: string
                    description: Currency code supported by this payment method (e.g., USD, EUR, CNY)
                supportedType:
                    type: string
                    description: Payin or Payout
                currency:
                    type: string
                    description: Currency like USD, VND
                currencyType:
                    type: string
                    description: Currency type (e.g., Crypto, Fiat)
                contact:
                    type: string
                    description: Contact
                country:
                    type: string
                    description: Country code where this payment method is available
                paymentMethod:
                    type: string
                    description: Name of the payment method (e.g., CreditCard, AliPay, WeChatPay)
                sysFixedFee:
                    type: string
                    description: Fixed Fee on the Amount
                sysFeeRate:
                    type: string
                    description: Rate Fee
                sysMinAmount:
                    type: string
                    description: Min Amount
                sysMaxAmount:
                    type: string
                    description: Max Amount
                sysMinFee:
                    type: string
                    description: Minmum Fee
                pspFixedFee:
                    type: string
                    description: Fixed Fee on the Amount
                pspFeeRate:
                    type: string
                    description: Rate Fee
                pspMinAmount:
                    type: string
                    description: Min Amount
                pspMaxAmount:
                    type: string
                    description: Max Amount
                pspMinFee:
                    type: string
                    description: Minmum Fee
                enable:
                    type: boolean
                    description: Status bool
                network:
                    type: string
                    description: Crypto network
                protocol:
                    type: string
                    description: Crypto protocol
                source:
                    type: string
                    description: Source operator
                averageTime:
                    type: integer
                    description: Average Time
                    format: int32
                successRate:
                    type: string
                    description: Success Rate
                keySchema:
                    allOf:
                        - $ref: '#/components/schemas/google.protobuf.ListValue'
                    description: JSON schema defining the required fields for this payment method
                pspId:
                    type: string
            description: |-
                Details of a single payment method
                 Contains information about a specific payment method including its ID, currency, and required fields schema
        payment.service.v1.TransactionDetail:
            type: object
            properties:
                transaction:
                    allOf:
                        - $ref: '#/components/schemas/payment.service.v1.TransactionInfo'
                    description: Transaction information
                channel:
                    allOf:
                        - $ref: '#/components/schemas/payment.service.v1.PaymentChannelInfo'
                    description: Channel information
        payment.service.v1.TransactionInfo:
            type: object
            properties:
                transactionId:
                    type: string
                    description: Unique identifier for the transaction
                paTransactionId:
                    type: string
                    description: Transaction ID from the operator's system
                gatewayTransactionId:
                    type: string
                    description: Transaction ID from the payment gateway
                operatorId:
                    type: string
                    description: Operator ID associated with the transaction
                companyOperatorId:
                    type: string
                retailerOperatorId:
                    type: string
                systemOperatorId:
                    type: string
                operatorName:
                    type: string
                companyOperatorName:
                    type: string
                retailerOperatorName:
                    type: string
                systemOperatorName:
                    type: string
                userId:
                    type: string
                    description: ID of the user who initiated the transaction
                vip:
                    type: integer
                    description: VIP level of the user
                    format: int32
                amount:
                    type: string
                    description: Transaction amount in smallest currency unit
                currency:
                    type: string
                    description: Currency code for the transaction
                processingFee:
                    type: string
                    description: Transaction fee in smallest currency unit
                paymentMethod:
                    type: string
                    description: Payment method used for the transaction
                paymentChannel:
                    type: string
                    description: Payment channel used for the transaction
                protocol:
                    type: string
                    description: Crypto Protocol used for the transaction
                network:
                    type: string
                    description: Crypto Network used for the transaction
                address:
                    type: string
                    description: Crypto Address
                type:
                    enum:
                        - TRANSACTION_TYPE_UNSPECIFIED
                        - TRANSACTION_TYPE_DEPOSIT
                        - TRANSACTION_TYPE_WITHDRAW
                    type: string
                    description: Type of transaction (deposit or withdrawal)
                    format: enum
                status:
                    enum:
                        - TRANSACTION_STATUS_UNSPECIFIED
                        - TRANSACTION_STATUS_PROCESSING
                        - TRANSACTION_STATUS_SUCCESSFUL
                        - TRANSACTION_STATUS_FAILED
                    type: string
                    description: Current status of the transaction
                    format: enum
                createdAt:
                    type: string
                    description: Timestamp when the transaction was created
                    format: date-time
                updatedAt:
                    type: string
                    description: Timestamp when the transaction was last updated
                    format: date-time
                amountUsd:
                    type: string
                    description: Transaction amount in USD
                amountSent:
                    type: string
                    description: Transaction amount actually sent through
                gas:
                    type: string
                reportingCurrency:
                    type: string
                amountReportingCurrency:
                    type: string
                amountSentReportingCurrency:
                    type: string
                processingFeeReportingCurrency:
                    type: string
                amountSentUsd:
                    type: string
                processingFeeUsd:
                    type: string
            description: |-
                Transaction information
                 Detailed information about a specific transaction
        payment.service.v1.UpdateBankCardRequest:
            type: object
            properties:
                id:
                    type: string
                currency:
                    type: string
                country:
                    type: string
                enabled:
                    type: boolean
                bankCard:
                    type: object
        payment.service.v1.UpdateBankCardResponse:
            type: object
            properties: {}
        payment.service.v1.UpdatePaymentChannelRequest:
            type: object
            properties:
                paymentChannelId:
                    type: string
                    description: ID of the payment channel to be used
                contact:
                    type: string
                    description: Contact Info email
                fixedFee:
                    type: string
                    description: PSP Fixed Fee on the Amount
                feeRate:
                    type: string
                    description: PSP Rate Fee
                minFee:
                    type: string
                    description: PSP Min Fee
                userFixedFee:
                    type: string
                    description: User Fixed Fee on the Amount
                userFeeRate:
                    type: string
                    description: User Rate Fee
                userMinFee:
                    type: string
                    description: User Min Fee
                minAmount:
                    type: string
                    description: Min Amount
                maxAmount:
                    type: string
                    description: Max Amount
                enable:
                    type: boolean
                    description: enable status
                key:
                    type: object
                    description: Configuration fields for the payment channel in JSON format
            description: |-
                Request to create a payment channel
                 Used to create a new payment channel with specified merchant and method
        payment.service.v1.UpdatePaymentChannelResponse:
            type: object
            properties:
                paymentMethods:
                    $ref: '#/components/schemas/payment.service.v1.PaymentChannelInfo'
        payment.service.v1.UpdatePaymentMethodRequest:
            type: object
            properties:
                paymentMethodId:
                    type: string
                status:
                    type: boolean
        payment.service.v1.WithdrawCallbackRequest:
            type: object
            properties:
                transactionNo:
                    type: string
                    description: Transaction number from the payment aggregator
                gatewayOrderNo:
                    type: string
                    description: Order number from the payment gateway
                operatorOrderNo:
                    type: string
                    description: Transaction number from the operator
                orderStatus:
                    type: string
                    description: Current status of the order (e.g., SUCCESS, FAILED)
                payTime:
                    type: string
                    description: 'Time when withdrawal was processed. Format: yyyy-MM-dd HH:mm:ss'
                createTime:
                    type: string
                    description: 'Time when order was created. Format: yyyy-MM-dd HH:mm:ss'
                amount:
                    type: string
                    description: Original amount of the withdrawal order
                fee:
                    type: string
                    description: Service fee applied to the withdrawal
                realMoney:
                    type: string
                    description: Actual amount withdrawn after fees
                sign:
                    type: string
                    description: HMAC-SHA256 signature to verify request authenticity
                timestamp:
                    type: string
                    description: Request timestamp to prevent replay attacks
                nonce:
                    type: string
                    description: Random string to ensure each request is unique
            description: |-
                Request for withdraw callback
                 Used by payment gateways to notify about withdrawal status changes
        payment.service.v1.WithdrawCallbackResponse:
            type: object
            properties:
                success:
                    type: boolean
                    description: Whether the callback was processed successfully
                message:
                    type: string
                    description: Optional message, returns error reason on failure
            description: |-
                Response for withdraw callback
                 Confirms receipt of callback notification
        system.service.v1.ExportSevResponse:
            type: object
            properties:
                taskId:
                    type: string
        system.service.v1.FileInfo:
            type: object
            properties:
                filePath:
                    type: string
                hash:
                    type: string
        system.service.v1.IntegrityStatus_FileInfo:
            type: object
            properties:
                filePath:
                    type: string
                hash:
                    type: string
                expectedHash:
                    type: string
                isMatch:
                    type: boolean
        system.service.v1.ListIntegrityStatusResponse:
            type: object
            properties:
                integrityStatuses:
                    type: array
                    items:
                        $ref: '#/components/schemas/system.service.v1.ListIntegrityStatusResponse_IntegrityStatus'
        system.service.v1.ListIntegrityStatusResponse_IntegrityStatus:
            type: object
            properties:
                labelApp:
                    type: string
                podName:
                    type: string
                podNamespace:
                    type: string
                fileInfos:
                    type: array
                    items:
                        $ref: '#/components/schemas/system.service.v1.IntegrityStatus_FileInfo'
                createdAt:
                    type: string
                    format: date-time
        system.service.v1.ListReportExportResponse:
            type: object
            properties:
                tasks:
                    type: array
                    items:
                        $ref: '#/components/schemas/system.service.v1.ListReportExportResponse_ReportExport'
                statistic:
                    $ref: '#/components/schemas/system.service.v1.ListReportExportResponse_Statistic'
                totalCount:
                    type: integer
                    format: int32
        system.service.v1.ListReportExportResponse_ReportExport:
            type: object
            properties:
                taskId:
                    type: string
                userName:
                    type: string
                staskName:
                    type: string
                type:
                    type: string
                status:
                    type: string
                fileUrl:
                    type: string
                fileSize:
                    type: string
                fileFormat:
                    type: string
                createAt:
                    type: string
                    format: date-time
                userId:
                    type: string
        system.service.v1.ListReportExportResponse_Statistic:
            type: object
            properties:
                totalCount:
                    type: integer
                    format: int32
                totalCompleted:
                    type: integer
                    format: int32
                totalGenerating:
                    type: integer
                    format: int32
                totalPending:
                    type: integer
                    format: int32
                totalFailed:
                    type: integer
                    format: int32
        system.service.v1.ListSevResponse:
            type: object
            properties:
                sevs:
                    type: array
                    items:
                        $ref: '#/components/schemas/system.service.v1.Sev'
                total:
                    type: integer
                    format: int32
                page:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
        system.service.v1.SetIntegrityConfigResponse:
            type: object
            properties: {}
        system.service.v1.Sev:
            type: object
            properties:
                id:
                    type: string
                severity:
                    type: string
                category:
                    type: string
                component:
                    type: string
                userId:
                    type: string
                timestamp:
                    type: string
                    format: date-time
                description:
                    type: string
tags:
    - name: BackofficeAccount
    - name: BackofficeAffiliate
    - name: BackofficeAudit
    - name: BackofficeBcpay
      description: |-
        BackofficeBcpay service
         Provides methods for backoffice bcpay management
    - name: BackofficeCompany
    - name: BackofficeDashboard
    - name: BackofficeDns
    - name: BackofficeFileStore
    - name: BackofficeFinance
    - name: BackofficeGame
    - name: BackofficeOperator
    - name: BackofficePayment
      description: |-
        BackofficePayment service
         Provides methods for backoffice payment management
    - name: BackofficeReport
    - name: BackofficeReview
    - name: BackofficeSystem
    - name: BackofficeUser
    - name: BackofficeVip
      description: VIP系统服务
    - name: BackofficeWallet
    - name: Bcpay
      description: User service provides authentication and user management functionality.
    - name: Game
    - name: Payment
      description: |-
        Payment Service
         Provides methods for managing payment methods, channels, and transactions
    - name: Review
      description: Review service provides review functionality.
    - name: User
      description: User service provides authentication and user management functionality.
    - name: UserFileStore
    - name: Wallet
