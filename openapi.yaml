# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /v1/payment/healthcheck:
        get:
            tags:
                - Payment
            operationId: Payment_HealthCheck
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/payment.service.v1.HealthCheckResponse'
    /v1/system/currencies/add:
        post:
            tags:
                - System
            operationId: System_AddCurrency
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/system.service.v1.AddCurrencyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.AddCurrencyResponse'
    /v1/system/currencies/get:
        post:
            tags:
                - System
            operationId: System_GetCurrencies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/system.service.v1.GetCurrenciesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.GetCurrenciesResponse'
    /v1/system/currencies/list:
        post:
            tags:
                - System
            operationId: System_ListCurrencies
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/system.service.v1.ListCurrenciesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.ListCurrenciesResponse'
    /v1/system/healthcheck:
        get:
            tags:
                - System
            operationId: System_HealthCheck
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/system.service.v1.HealthCheckResponse'
    /v1/user/auth/login:
        post:
            tags:
                - User
            operationId: User_LoginWithCredentials
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/oauth:
        post:
            tags:
                - User
            operationId: User_RegisterOrLoginWithOAuth
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.OAuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/refresh:
        post:
            tags:
                - User
            operationId: User_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.RefreshTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/register:
        post:
            tags:
                - User
            operationId: User_RegisterWithCredentials
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/auth/telegram:
        post:
            tags:
                - User
            operationId: User_RegisterOrLoginWithTelegram
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.TelegramAuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.AuthResponse'
    /v1/user/logout:
        post:
            tags:
                - User
            operationId: User_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.user.service.v1.LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.LogoutResponse'
    /v1/user/{id}:
        get:
            tags:
                - User
            operationId: User_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.user.service.v1.GetUserResponse'
    /v1/wallet/balance/{userId}:
        get:
            tags:
                - Wallet
            operationId: Wallet_GetUserBalance
            parameters:
                - name: userId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.GetUserBalanceResponse'
    /v1/wallet/healthcheck:
        get:
            tags:
                - Wallet
            operationId: Wallet_HealthCheck
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.wallet.service.v1.HealthCheckResponse'
components:
    schemas:
        api.user.service.v1.AuthResponse:
            type: object
            properties:
                accessToken:
                    type: string
                refreshToken:
                    type: string
                expiresIn:
                    type: string
                userInfo:
                    $ref: '#/components/schemas/api.user.service.v1.UserInfo'
        api.user.service.v1.GetUserResponse:
            type: object
            properties:
                userInfo:
                    $ref: '#/components/schemas/api.user.service.v1.UserInfo'
        api.user.service.v1.LoginRequest:
            type: object
            properties:
                identifierType:
                    type: integer
                    format: enum
                identifier:
                    type: string
                password:
                    type: string
        api.user.service.v1.LogoutRequest:
            type: object
            properties: {}
        api.user.service.v1.LogoutResponse:
            type: object
            properties: {}
        api.user.service.v1.OAuthRequest:
            type: object
            properties:
                authType:
                    type: integer
                    format: enum
                token:
                    type: string
        api.user.service.v1.RefreshTokenRequest:
            type: object
            properties:
                refreshToken:
                    type: string
        api.user.service.v1.RegisterRequest:
            type: object
            properties:
                identifierType:
                    type: integer
                    format: enum
                identifier:
                    type: string
                password:
                    type: string
        api.user.service.v1.TelegramAuthRequest:
            type: object
            properties:
                id:
                    type: string
                firstName:
                    type: string
                lastName:
                    type: string
                username:
                    type: string
                photoUrl:
                    type: string
                authDate:
                    type: string
                hash:
                    type: string
        api.user.service.v1.UserInfo:
            type: object
            properties:
                userId:
                    type: string
        api.wallet.service.v1.GetUserBalanceResponse:
            type: object
            properties:
                cash:
                    type: string
                operatorBonus:
                    type: string
                providerBonus:
                    type: string
        api.wallet.service.v1.HealthCheckResponse:
            type: object
            properties:
                status:
                    type: string
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        payment.service.v1.HealthCheckResponse:
            type: object
            properties:
                status:
                    type: string
        system.service.v1.AddCurrencyRequest:
            type: object
            properties:
                currency:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
        system.service.v1.AddCurrencyResponse:
            type: object
            properties:
                currency:
                    $ref: '#/components/schemas/system.service.v1.Currency'
        system.service.v1.Currency:
            type: object
            properties:
                currency:
                    type: string
                decimalPlaces:
                    type: integer
                    format: int32
        system.service.v1.GetCurrenciesRequest:
            type: object
            properties:
                currency:
                    type: string
        system.service.v1.GetCurrenciesResponse:
            type: object
            properties:
                currencies:
                    $ref: '#/components/schemas/system.service.v1.Currency'
        system.service.v1.HealthCheckResponse:
            type: object
            properties:
                status:
                    type: string
        system.service.v1.ListCurrenciesRequest:
            type: object
            properties: {}
        system.service.v1.ListCurrenciesResponse:
            type: object
            properties:
                currencies:
                    type: array
                    items:
                        $ref: '#/components/schemas/system.service.v1.Currency'
tags:
    - name: Greeter
      description: The greeting service definition.
    - name: Payment
    - name: System
    - name: User
    - name: Wallet
